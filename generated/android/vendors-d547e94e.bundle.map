{"version":3,"file":"vendors-d547e94e.bundle","mappings":"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","sources":["webpack:///./node_modules/@react-navigation/native-stack/src/index.tsx","webpack:///./node_modules/@react-navigation/native-stack/src/navigators/createNativeStackNavigator.tsx","webpack:///./node_modules/@react-navigation/native-stack/src/utils/useDismissedRouteError.tsx","webpack:///./node_modules/@react-navigation/native-stack/src/utils/useInvalidPreventRemoveError.tsx","webpack:///./node_modules/@react-navigation/native-stack/src/views/DebugContainer.native.tsx","webpack:///./node_modules/@react-navigation/native-stack/src/views/FontProcessor.native.tsx","webpack:///./node_modules/@react-navigation/native-stack/src/views/HeaderConfig.tsx","webpack:///./node_modules/@react-navigation/native-stack/src/views/NativeStackView.native.tsx","webpack:///./node_modules/@react-navigation/native/src/Link.tsx","webpack:///./node_modules/@react-navigation/native/src/LinkingContext.tsx","webpack:///./node_modules/@react-navigation/native/src/NavigationContainer.tsx","webpack:///./node_modules/@react-navigation/native/src/ServerContainer.tsx","webpack:///./node_modules/@react-navigation/native/src/ServerContext.tsx","webpack:///./node_modules/@react-navigation/native/src/extractPathFromURL.tsx","webpack:///./node_modules/@react-navigation/native/src/index.tsx","webpack:///./node_modules/@react-navigation/native/src/theming/DarkTheme.tsx","webpack:///./node_modules/@react-navigation/native/src/theming/DefaultTheme.tsx","webpack:///./node_modules/@react-navigation/native/src/theming/ThemeContext.tsx","webpack:///./node_modules/@react-navigation/native/src/theming/ThemeProvider.tsx","webpack:///./node_modules/@react-navigation/native/src/theming/useTheme.tsx","webpack:///./node_modules/@react-navigation/native/src/useBackButton.native.tsx","webpack:///./node_modules/@react-navigation/native/src/useDocumentTitle.native.tsx","webpack:///./node_modules/@react-navigation/native/src/useLinkBuilder.tsx","webpack:///./node_modules/@react-navigation/native/src/useLinkProps.tsx","webpack:///./node_modules/@react-navigation/native/src/useLinkTo.tsx","webpack:///./node_modules/@react-navigation/native/src/useLinking.native.tsx","webpack:///./node_modules/@react-navigation/native/src/useScrollToTop.tsx","webpack:///./node_modules/@react-navigation/native/src/useThenable.tsx","webpack:///./node_modules/@react-navigation/routers/src/BaseRouter.tsx","webpack:///./node_modules/@react-navigation/routers/src/CommonActions.tsx","webpack:///./node_modules/@react-navigation/routers/src/DrawerRouter.tsx","webpack:///./node_modules/@react-navigation/routers/src/StackRouter.tsx","webpack:///./node_modules/@react-navigation/routers/src/TabRouter.tsx","webpack:///./node_modules/@react-navigation/routers/src/index.tsx","webpack:///./node_modules/react-qr-code/lib/QRCodeSvg/index.native.js","webpack:///./node_modules/react-qr-code/lib/index.js"],"sourcesContent":["/**\n * Navigators\n */\nexport { default as createNativeStackNavigator } from './navigators/createNativeStackNavigator';\n\n/**\n * Views\n */\nexport { default as NativeStackView } from './views/NativeStackView';\n\n/**\n * Types\n */\nexport type {\n  NativeStackHeaderProps,\n  NativeStackNavigationEventMap,\n  NativeStackNavigationOptions,\n  NativeStackNavigationProp,\n  NativeStackScreenProps,\n} from './types';\n","import {\n  createNavigatorFactory,\n  EventArg,\n  ParamListBase,\n  StackActionHelpers,\n  StackActions,\n  StackNavigationState,\n  StackRouter,\n  StackRouterOptions,\n  useNavigationBuilder,\n} from '@react-navigation/native';\nimport * as React from 'react';\n\nimport type {\n  NativeStackNavigationEventMap,\n  NativeStackNavigationOptions,\n  NativeStackNavigatorProps,\n} from '../types';\nimport NativeStackView from '../views/NativeStackView';\n\nfunction NativeStackNavigator({\n  id,\n  initialRouteName,\n  children,\n  screenListeners,\n  screenOptions,\n  ...rest\n}: NativeStackNavigatorProps) {\n  const { state, descriptors, navigation, NavigationContent } =\n    useNavigationBuilder<\n      StackNavigationState<ParamListBase>,\n      StackRouterOptions,\n      StackActionHelpers<ParamListBase>,\n      NativeStackNavigationOptions,\n      NativeStackNavigationEventMap\n    >(StackRouter, {\n      id,\n      initialRouteName,\n      children,\n      screenListeners,\n      screenOptions,\n    });\n\n  React.useEffect(\n    () =>\n      // @ts-expect-error: there may not be a tab navigator in parent\n      navigation?.addListener?.('tabPress', (e: any) => {\n        const isFocused = navigation.isFocused();\n\n        // Run the operation in the next frame so we're sure all listeners have been run\n        // This is necessary to know if preventDefault() has been called\n        requestAnimationFrame(() => {\n          if (\n            state.index > 0 &&\n            isFocused &&\n            !(e as EventArg<'tabPress', true>).defaultPrevented\n          ) {\n            // When user taps on already focused tab and we're inside the tab,\n            // reset the stack to replicate native behaviour\n            navigation.dispatch({\n              ...StackActions.popToTop(),\n              target: state.key,\n            });\n          }\n        });\n      }),\n    [navigation, state.index, state.key]\n  );\n\n  return (\n    <NavigationContent>\n      <NativeStackView\n        {...rest}\n        state={state}\n        navigation={navigation}\n        descriptors={descriptors}\n      />\n    </NavigationContent>\n  );\n}\n\nexport default createNavigatorFactory<\n  StackNavigationState<ParamListBase>,\n  NativeStackNavigationOptions,\n  NativeStackNavigationEventMap,\n  typeof NativeStackNavigator\n>(NativeStackNavigator);\n","import type {\n  ParamListBase,\n  StackNavigationState,\n} from '@react-navigation/native';\nimport * as React from 'react';\n\nexport default function useInvalidPreventRemoveError(\n  state: StackNavigationState<ParamListBase>\n) {\n  const [nextDismissedKey, setNextDismissedKey] = React.useState<string | null>(\n    null\n  );\n\n  const dismissedRouteName = nextDismissedKey\n    ? state.routes.find((route) => route.key === nextDismissedKey)?.name\n    : null;\n\n  React.useEffect(() => {\n    if (dismissedRouteName) {\n      const message =\n        `The screen '${dismissedRouteName}' was removed natively but didn't get removed from JS state. ` +\n        `This can happen if the action was prevented in a 'beforeRemove' listener, which is not fully supported in native-stack.\\n\\n` +\n        `Consider using a 'usePreventRemove' hook with 'headerBackButtonMenuEnabled: false' to prevent users from natively going back multiple screens.`;\n\n      console.error(message);\n    }\n  }, [dismissedRouteName]);\n\n  return { setNextDismissedKey };\n}\n","import { usePreventRemoveContext } from '@react-navigation/native';\nimport * as React from 'react';\n\nimport type { NativeStackDescriptorMap } from '../types';\n\nexport default function useInvalidPreventRemoveError(\n  descriptors: NativeStackDescriptorMap\n) {\n  const { preventedRoutes } = usePreventRemoveContext();\n  const preventedRouteKey = Object.keys(preventedRoutes)[0];\n  const preventedDescriptor = descriptors[preventedRouteKey];\n  const isHeaderBackButtonMenuEnabledOnPreventedScreen =\n    preventedDescriptor?.options?.headerBackButtonMenuEnabled;\n  const preventedRouteName = preventedDescriptor?.route?.name;\n\n  React.useEffect(() => {\n    if (\n      preventedRouteKey != null &&\n      isHeaderBackButtonMenuEnabledOnPreventedScreen\n    ) {\n      const message =\n        `The screen ${preventedRouteName} uses 'usePreventRemove' hook alongside 'headerBackButtonMenuEnabled: true', which is not supported. \\n\\n` +\n        `Consider removing 'headerBackButtonMenuEnabled: true' from ${preventedRouteName} screen to get rid of this error.`;\n      console.error(message);\n    }\n  }, [\n    preventedRouteKey,\n    isHeaderBackButtonMenuEnabledOnPreventedScreen,\n    preventedRouteName,\n  ]);\n}\n","import * as React from 'react';\nimport { Platform, View, ViewProps } from 'react-native';\n// @ts-ignore Getting private component\nimport AppContainer from 'react-native/Libraries/ReactNative/AppContainer';\nimport type { StackPresentationTypes } from 'react-native-screens';\n\ntype ContainerProps = ViewProps & {\n  stackPresentation: StackPresentationTypes;\n  children: React.ReactNode;\n};\n\n/**\n * This view must *not* be flattened.\n * See https://github.com/software-mansion/react-native-screens/pull/1825\n * for detailed explanation.\n */\nlet DebugContainer = (props: ContainerProps) => {\n  return <View {...props} collapsable={false} />;\n};\n\nif (process.env.NODE_ENV !== 'production') {\n  DebugContainer = (props: ContainerProps) => {\n    const { stackPresentation, ...rest } = props;\n\n    if (Platform.OS === 'ios' && stackPresentation !== 'push') {\n      // This is necessary for LogBox\n      return (\n        <AppContainer>\n          <View {...rest} collapsable={false} />\n        </AppContainer>\n      );\n    }\n\n    return <View {...rest} collapsable={false} />;\n  };\n}\n\nexport default DebugContainer;\n","// @ts-ignore: No declaration available\nimport ReactNativeStyleAttributes from 'react-native/Libraries/Components/View/ReactNativeStyleAttributes';\n\nexport function processFonts(\n  fontFamilies: (string | undefined)[]\n): (string | undefined)[] {\n  // @ts-ignore: React Native types are incorrect here and don't consider fontFamily a style value\n  const fontFamilyProcessor = ReactNativeStyleAttributes.fontFamily?.process;\n  if (typeof fontFamilyProcessor === 'function') {\n    return fontFamilies.map(fontFamilyProcessor);\n  }\n  return fontFamilies;\n}\n","import { getHeaderTitle, HeaderTitle } from '@react-navigation/elements';\nimport { Route, useTheme } from '@react-navigation/native';\nimport * as React from 'react';\nimport {\n  I18nManager,\n  Platform,\n  StyleSheet,\n  TextStyle,\n  View,\n} from 'react-native';\nimport {\n  // @ts-expect-error: Available since react-native-screens v3.21\n  isNewBackTitleImplementation,\n  isSearchBarAvailableForCurrentPlatform,\n  ScreenStackHeaderBackButtonImage,\n  ScreenStackHeaderCenterView,\n  ScreenStackHeaderConfig,\n  ScreenStackHeaderLeftView,\n  ScreenStackHeaderRightView,\n  ScreenStackHeaderSearchBarView,\n  SearchBar,\n} from 'react-native-screens';\n\nimport type { NativeStackNavigationOptions } from '../types';\nimport { processFonts } from './FontProcessor';\n\ntype Props = NativeStackNavigationOptions & {\n  headerTopInsetEnabled: boolean;\n  headerHeight: number;\n  route: Route<string>;\n  canGoBack: boolean;\n};\n\nexport default function HeaderConfig({\n  headerBackImageSource,\n  headerBackButtonMenuEnabled,\n  headerBackTitle,\n  headerBackTitleStyle,\n  headerBackTitleVisible = true,\n  headerBackVisible,\n  headerShadowVisible,\n  headerLargeStyle,\n  headerLargeTitle,\n  headerLargeTitleShadowVisible,\n  headerLargeTitleStyle,\n  headerBackground,\n  headerLeft,\n  headerRight,\n  headerShown,\n  headerStyle,\n  headerBlurEffect,\n  headerTintColor,\n  headerTitle,\n  headerTitleAlign,\n  headerTitleStyle,\n  headerTransparent,\n  headerSearchBarOptions,\n  headerTopInsetEnabled,\n  route,\n  title,\n  canGoBack,\n}: Props): JSX.Element {\n  const { colors } = useTheme();\n  const tintColor =\n    headerTintColor ?? (Platform.OS === 'ios' ? colors.primary : colors.text);\n\n  const headerBackTitleStyleFlattened =\n    StyleSheet.flatten(headerBackTitleStyle) || {};\n  const headerLargeTitleStyleFlattened =\n    StyleSheet.flatten(headerLargeTitleStyle) || {};\n  const headerTitleStyleFlattened = StyleSheet.flatten(headerTitleStyle) || {};\n  const headerStyleFlattened = StyleSheet.flatten(headerStyle) || {};\n  const headerLargeStyleFlattened = StyleSheet.flatten(headerLargeStyle) || {};\n\n  const [backTitleFontFamily, largeTitleFontFamily, titleFontFamily] =\n    processFonts([\n      headerBackTitleStyleFlattened.fontFamily,\n      headerLargeTitleStyleFlattened.fontFamily,\n      headerTitleStyleFlattened.fontFamily,\n    ]);\n\n  const titleText = getHeaderTitle({ title, headerTitle }, route.name);\n  const titleColor =\n    headerTitleStyleFlattened.color ?? headerTintColor ?? colors.text;\n  const titleFontSize = headerTitleStyleFlattened.fontSize;\n  const titleFontWeight = headerTitleStyleFlattened.fontWeight;\n\n  const headerTitleStyleSupported: TextStyle = { color: titleColor };\n\n  if (headerTitleStyleFlattened.fontFamily != null) {\n    headerTitleStyleSupported.fontFamily = headerTitleStyleFlattened.fontFamily;\n  }\n\n  if (titleFontSize != null) {\n    headerTitleStyleSupported.fontSize = titleFontSize;\n  }\n\n  if (titleFontWeight != null) {\n    headerTitleStyleSupported.fontWeight = titleFontWeight;\n  }\n\n  const headerLeftElement = headerLeft?.({\n    tintColor,\n    canGoBack,\n    label: headerBackTitle,\n  });\n  const headerRightElement = headerRight?.({\n    tintColor,\n    canGoBack,\n  });\n  const headerTitleElement =\n    typeof headerTitle === 'function'\n      ? headerTitle({\n          tintColor,\n          children: titleText,\n        })\n      : null;\n\n  const supportsHeaderSearchBar =\n    typeof isSearchBarAvailableForCurrentPlatform === 'boolean'\n      ? isSearchBarAvailableForCurrentPlatform\n      : // Fallback for older versions of react-native-screens\n        Platform.OS === 'ios' && SearchBar != null;\n\n  const hasHeaderSearchBar =\n    supportsHeaderSearchBar && headerSearchBarOptions != null;\n\n  if (headerSearchBarOptions != null && !supportsHeaderSearchBar) {\n    throw new Error(\n      `The current version of 'react-native-screens' doesn't support SearchBar in the header. Please update to the latest version to use this option.`\n    );\n  }\n\n  /**\n   * We need to set this in if:\n   * - Back button should stay visible when `headerLeft` is specified\n   * - If `headerTitle` for Android is specified, so we only need to remove the title and keep the back button\n   */\n  const backButtonInCustomView = headerBackVisible\n    ? headerLeftElement != null\n    : Platform.OS === 'android' && headerTitleElement != null;\n\n  const translucent =\n    headerBackground != null ||\n    headerTransparent ||\n    // When using a SearchBar or large title, the header needs to be translucent for it to work on iOS\n    ((hasHeaderSearchBar || headerLargeTitle) &&\n      Platform.OS === 'ios' &&\n      headerTransparent !== false);\n\n  return (\n    <ScreenStackHeaderConfig\n      backButtonInCustomView={backButtonInCustomView}\n      backgroundColor={\n        headerStyleFlattened.backgroundColor ??\n        (headerBackground != null || headerTransparent\n          ? 'transparent'\n          : colors.card)\n      }\n      backTitle={\n        isNewBackTitleImplementation || headerBackTitleVisible\n          ? headerBackTitle\n          : ' '\n      }\n      // @ts-expect-error: Available since react-native-screens v3.21\n      backTitleVisible={headerBackTitleVisible}\n      backTitleFontFamily={backTitleFontFamily}\n      backTitleFontSize={headerBackTitleStyleFlattened.fontSize}\n      blurEffect={headerBlurEffect}\n      color={tintColor}\n      direction={I18nManager.getConstants().isRTL ? 'rtl' : 'ltr'}\n      disableBackButtonMenu={headerBackButtonMenuEnabled === false}\n      hidden={headerShown === false}\n      hideBackButton={headerBackVisible === false}\n      hideShadow={\n        headerShadowVisible === false ||\n        headerBackground != null ||\n        (headerTransparent && headerShadowVisible !== true)\n      }\n      largeTitle={headerLargeTitle}\n      largeTitleBackgroundColor={headerLargeStyleFlattened.backgroundColor}\n      largeTitleColor={headerLargeTitleStyleFlattened.color}\n      largeTitleFontFamily={largeTitleFontFamily}\n      largeTitleFontSize={headerLargeTitleStyleFlattened.fontSize}\n      largeTitleFontWeight={headerLargeTitleStyleFlattened.fontWeight}\n      largeTitleHideShadow={headerLargeTitleShadowVisible === false}\n      title={titleText}\n      titleColor={titleColor}\n      titleFontFamily={titleFontFamily}\n      titleFontSize={titleFontSize}\n      titleFontWeight={titleFontWeight}\n      topInsetEnabled={headerTopInsetEnabled}\n      translucent={\n        // This defaults to `true`, so we can't pass `undefined`\n        translucent === true\n      }\n    >\n      {Platform.OS === 'ios' ? (\n        <>\n          {headerLeftElement != null ? (\n            <ScreenStackHeaderLeftView>\n              {headerLeftElement}\n            </ScreenStackHeaderLeftView>\n          ) : null}\n          {headerTitleElement != null ? (\n            <ScreenStackHeaderCenterView>\n              {headerTitleElement}\n            </ScreenStackHeaderCenterView>\n          ) : null}\n        </>\n      ) : (\n        <>\n          {headerLeftElement != null || typeof headerTitle === 'function' ? (\n            <ScreenStackHeaderLeftView>\n              <View style={styles.row}>\n                {headerLeftElement}\n                {headerTitleAlign !== 'center' ? (\n                  typeof headerTitle === 'function' ? (\n                    headerTitleElement\n                  ) : (\n                    <HeaderTitle\n                      tintColor={tintColor}\n                      style={headerTitleStyleSupported}\n                    >\n                      {titleText}\n                    </HeaderTitle>\n                  )\n                ) : null}\n              </View>\n            </ScreenStackHeaderLeftView>\n          ) : null}\n          {headerTitleAlign === 'center' ? (\n            <ScreenStackHeaderCenterView>\n              {typeof headerTitle === 'function' ? (\n                headerTitleElement\n              ) : (\n                <HeaderTitle\n                  tintColor={tintColor}\n                  style={headerTitleStyleSupported}\n                >\n                  {titleText}\n                </HeaderTitle>\n              )}\n            </ScreenStackHeaderCenterView>\n          ) : null}\n        </>\n      )}\n      {headerBackImageSource !== undefined ? (\n        <ScreenStackHeaderBackButtonImage source={headerBackImageSource} />\n      ) : null}\n      {headerRightElement != null ? (\n        <ScreenStackHeaderRightView>\n          {headerRightElement}\n        </ScreenStackHeaderRightView>\n      ) : null}\n      {hasHeaderSearchBar ? (\n        <ScreenStackHeaderSearchBarView>\n          <SearchBar {...headerSearchBarOptions} />\n        </ScreenStackHeaderSearchBarView>\n      ) : null}\n    </ScreenStackHeaderConfig>\n  );\n}\n\nconst styles = StyleSheet.create({\n  row: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n});\n","import {\n  getDefaultHeaderHeight,\n  getHeaderTitle,\n  HeaderBackContext,\n  HeaderHeightContext,\n  HeaderShownContext,\n  SafeAreaProviderCompat,\n} from '@react-navigation/elements';\nimport {\n  NavigationContext,\n  NavigationRouteContext,\n  ParamListBase,\n  Route,\n  StackActions,\n  StackNavigationState,\n  usePreventRemoveContext,\n  useTheme,\n} from '@react-navigation/native';\nimport * as React from 'react';\nimport { Platform, StyleSheet, View } from 'react-native';\nimport {\n  useSafeAreaFrame,\n  useSafeAreaInsets,\n} from 'react-native-safe-area-context';\nimport type { ScreenProps } from 'react-native-screens';\nimport {\n  Screen,\n  ScreenStack,\n  StackPresentationTypes,\n} from 'react-native-screens';\nimport warnOnce from 'warn-once';\n\nimport type {\n  NativeStackDescriptor,\n  NativeStackDescriptorMap,\n  NativeStackNavigationHelpers,\n  NativeStackNavigationOptions,\n} from '../types';\nimport useDismissedRouteError from '../utils/useDismissedRouteError';\nimport useInvalidPreventRemoveError from '../utils/useInvalidPreventRemoveError';\nimport DebugContainer from './DebugContainer';\nimport HeaderConfig from './HeaderConfig';\n\nconst isAndroid = Platform.OS === 'android';\n\nconst MaybeNestedStack = ({\n  options,\n  route,\n  presentation,\n  headerHeight,\n  headerTopInsetEnabled,\n  children,\n}: {\n  options: NativeStackNavigationOptions;\n  route: Route<string>;\n  presentation: Exclude<StackPresentationTypes, 'push'> | 'card';\n  headerHeight: number;\n  headerTopInsetEnabled: boolean;\n  children: React.ReactNode;\n}) => {\n  const { colors } = useTheme();\n  const { header, headerShown = true, contentStyle } = options;\n\n  const isHeaderInModal = isAndroid\n    ? false\n    : presentation !== 'card' && headerShown === true && header === undefined;\n\n  const headerShownPreviousRef = React.useRef(headerShown);\n\n  React.useEffect(() => {\n    warnOnce(\n      !isAndroid &&\n        presentation !== 'card' &&\n        headerShownPreviousRef.current !== headerShown,\n      `Dynamically changing 'headerShown' in modals will result in remounting the screen and losing all local state. See options for the screen '${route.name}'.`\n    );\n\n    headerShownPreviousRef.current = headerShown;\n  }, [headerShown, presentation, route.name]);\n\n  const content = (\n    <DebugContainer\n      style={[\n        styles.container,\n        presentation !== 'transparentModal' &&\n          presentation !== 'containedTransparentModal' && {\n            backgroundColor: colors.background,\n          },\n        contentStyle,\n      ]}\n      stackPresentation={presentation === 'card' ? 'push' : presentation}\n    >\n      {children}\n    </DebugContainer>\n  );\n\n  if (isHeaderInModal) {\n    return (\n      <ScreenStack style={styles.container}>\n        <Screen enabled style={StyleSheet.absoluteFill}>\n          {content}\n          <HeaderConfig\n            {...options}\n            route={route}\n            headerHeight={headerHeight}\n            headerTopInsetEnabled={headerTopInsetEnabled}\n            canGoBack\n          />\n        </Screen>\n      </ScreenStack>\n    );\n  }\n\n  return content;\n};\n\ntype SceneViewProps = {\n  index: number;\n  focused: boolean;\n  descriptor: NativeStackDescriptor;\n  previousDescriptor?: NativeStackDescriptor;\n  nextDescriptor?: NativeStackDescriptor;\n  onWillDisappear: () => void;\n  onAppear: () => void;\n  onDisappear: () => void;\n  onDismissed: ScreenProps['onDismissed'];\n  onHeaderBackButtonClicked: ScreenProps['onHeaderBackButtonClicked'];\n  onNativeDismissCancelled: ScreenProps['onDismissed'];\n};\n\nconst SceneView = ({\n  index,\n  focused,\n  descriptor,\n  previousDescriptor,\n  nextDescriptor,\n  onWillDisappear,\n  onAppear,\n  onDisappear,\n  onDismissed,\n  onHeaderBackButtonClicked,\n  onNativeDismissCancelled,\n}: SceneViewProps) => {\n  const { route, navigation, options, render } = descriptor;\n  const {\n    animationDuration,\n    animationTypeForReplace = 'push',\n    gestureEnabled,\n    header,\n    headerBackButtonMenuEnabled,\n    headerShown,\n    headerBackground,\n    headerTransparent,\n    autoHideHomeIndicator,\n    navigationBarColor,\n    navigationBarHidden,\n    orientation,\n    statusBarAnimation,\n    statusBarHidden,\n    statusBarStyle,\n    statusBarTranslucent,\n    statusBarColor,\n    freezeOnBlur,\n  } = options;\n\n  let {\n    animation,\n    customAnimationOnGesture,\n    fullScreenGestureEnabled,\n    presentation = 'card',\n    gestureDirection = presentation === 'card' ? 'horizontal' : 'vertical',\n  } = options;\n\n  if (gestureDirection === 'vertical' && Platform.OS === 'ios') {\n    // for `vertical` direction to work, we need to set `fullScreenGestureEnabled` to `true`\n    // so the screen can be dismissed from any point on screen.\n    // `customAnimationOnGesture` needs to be set to `true` so the `animation` set by user can be used,\n    // otherwise `simple_push` will be used.\n    // Also, the default animation for this direction seems to be `slide_from_bottom`.\n    if (fullScreenGestureEnabled === undefined) {\n      fullScreenGestureEnabled = true;\n    }\n    if (customAnimationOnGesture === undefined) {\n      customAnimationOnGesture = true;\n    }\n    if (animation === undefined) {\n      animation = 'slide_from_bottom';\n    }\n  }\n\n  // workaround for rn-screens where gestureDirection has to be set on both\n  // current and previous screen - software-mansion/react-native-screens/pull/1509\n  const nextGestureDirection = nextDescriptor?.options.gestureDirection;\n  const gestureDirectionOverride =\n    nextGestureDirection != null ? nextGestureDirection : gestureDirection;\n\n  if (index === 0) {\n    // first screen should always be treated as `card`, it resolves problems with no header animation\n    // for navigator with first screen as `modal` and the next as `card`\n    presentation = 'card';\n  }\n\n  const insets = useSafeAreaInsets();\n  const frame = useSafeAreaFrame();\n\n  // `modal` and `formSheet` presentations do not take whole screen, so should not take the inset.\n  const isModal = presentation === 'modal' || presentation === 'formSheet';\n\n  // Modals are fullscreen in landscape only on iPhone\n  const isIPhone = Platform.OS === 'ios' && !(Platform.isPad || Platform.isTV);\n  const isLandscape = frame.width > frame.height;\n\n  const isParentHeaderShown = React.useContext(HeaderShownContext);\n  const parentHeaderHeight = React.useContext(HeaderHeightContext);\n  const parentHeaderBack = React.useContext(HeaderBackContext);\n\n  const topInset =\n    isParentHeaderShown ||\n    (Platform.OS === 'ios' && isModal) ||\n    (isIPhone && isLandscape)\n      ? 0\n      : insets.top;\n\n  // On models with Dynamic Island the status bar height is smaller than the safe area top inset.\n  const hasDynamicIsland = Platform.OS === 'ios' && topInset > 50;\n  const statusBarHeight = hasDynamicIsland ? topInset - 5 : topInset;\n\n  const { preventedRoutes } = usePreventRemoveContext();\n\n  const defaultHeaderHeight = getDefaultHeaderHeight(\n    frame,\n    isModal,\n    statusBarHeight\n  );\n\n  const [customHeaderHeight, setCustomHeaderHeight] =\n    React.useState(defaultHeaderHeight);\n\n  const headerTopInsetEnabled = topInset !== 0;\n  const headerHeight = header ? customHeaderHeight : defaultHeaderHeight;\n  const headerBack = previousDescriptor\n    ? {\n        title: getHeaderTitle(\n          previousDescriptor.options,\n          previousDescriptor.route.name\n        ),\n      }\n    : parentHeaderBack;\n\n  const isRemovePrevented = preventedRoutes[route.key]?.preventRemove;\n\n  return (\n    <Screen\n      key={route.key}\n      enabled\n      style={StyleSheet.absoluteFill}\n      customAnimationOnSwipe={customAnimationOnGesture}\n      fullScreenSwipeEnabled={fullScreenGestureEnabled}\n      gestureEnabled={\n        isAndroid\n          ? // This prop enables handling of system back gestures on Android\n            // Since we handle them in JS side, we disable this\n            false\n          : gestureEnabled\n      }\n      homeIndicatorHidden={autoHideHomeIndicator}\n      navigationBarColor={navigationBarColor}\n      navigationBarHidden={navigationBarHidden}\n      replaceAnimation={animationTypeForReplace}\n      stackPresentation={presentation === 'card' ? 'push' : presentation}\n      stackAnimation={animation}\n      screenOrientation={orientation}\n      statusBarAnimation={statusBarAnimation}\n      statusBarHidden={statusBarHidden}\n      statusBarStyle={statusBarStyle}\n      statusBarColor={statusBarColor}\n      statusBarTranslucent={statusBarTranslucent}\n      swipeDirection={gestureDirectionOverride}\n      transitionDuration={animationDuration}\n      onWillDisappear={onWillDisappear}\n      onAppear={onAppear}\n      onDisappear={onDisappear}\n      onDismissed={onDismissed}\n      isNativeStack\n      nativeBackButtonDismissalEnabled={false} // on Android\n      onHeaderBackButtonClicked={onHeaderBackButtonClicked}\n      // @ts-ignore props not exported from rn-screens\n      preventNativeDismiss={isRemovePrevented} // on iOS\n      onNativeDismissCancelled={onNativeDismissCancelled}\n      // this prop is available since rn-screens 3.16\n      freezeOnBlur={freezeOnBlur}\n    >\n      <NavigationContext.Provider value={navigation}>\n        <NavigationRouteContext.Provider value={route}>\n          <HeaderShownContext.Provider\n            value={isParentHeaderShown || headerShown !== false}\n          >\n            <HeaderHeightContext.Provider\n              value={\n                headerShown !== false ? headerHeight : parentHeaderHeight ?? 0\n              }\n            >\n              {headerBackground != null ? (\n                /**\n                 * To show a custom header background, we render it at the top of the screen below the header\n                 * The header also needs to be positioned absolutely (with `translucent` style)\n                 */\n                <View\n                  style={[\n                    styles.background,\n                    headerTransparent ? styles.translucent : null,\n                    { height: headerHeight },\n                  ]}\n                >\n                  {headerBackground()}\n                </View>\n              ) : null}\n              <View\n                accessibilityElementsHidden={!focused}\n                importantForAccessibility={\n                  focused ? 'auto' : 'no-hide-descendants'\n                }\n                style={styles.scene}\n              >\n                <MaybeNestedStack\n                  options={options}\n                  route={route}\n                  presentation={presentation}\n                  headerHeight={headerHeight}\n                  headerTopInsetEnabled={headerTopInsetEnabled}\n                >\n                  <HeaderBackContext.Provider value={headerBack}>\n                    {render()}\n                  </HeaderBackContext.Provider>\n                </MaybeNestedStack>\n                {header !== undefined && headerShown !== false ? (\n                  <View\n                    onLayout={(e) => {\n                      setCustomHeaderHeight(e.nativeEvent.layout.height);\n                    }}\n                    style={headerTransparent ? styles.absolute : null}\n                  >\n                    {header({\n                      back: headerBack,\n                      options,\n                      route,\n                      navigation,\n                    })}\n                  </View>\n                ) : null}\n              </View>\n              {/**\n               * `HeaderConfig` needs to be the direct child of `Screen` without any intermediate `View`\n               * We don't render it conditionally to make it possible to dynamically render a custom `header`\n               * Otherwise dynamically rendering a custom `header` leaves the native header visible\n               *\n               * https://github.com/software-mansion/react-native-screens/blob/main/guides/GUIDE_FOR_LIBRARY_AUTHORS.md#screenstackheaderconfig\n               *\n               * HeaderConfig must not be first child of a Screen.\n               * See https://github.com/software-mansion/react-native-screens/pull/1825\n               * for detailed explanation\n               */}\n              <HeaderConfig\n                {...options}\n                route={route}\n                headerBackButtonMenuEnabled={\n                  isRemovePrevented !== undefined\n                    ? !isRemovePrevented\n                    : headerBackButtonMenuEnabled\n                }\n                headerShown={header !== undefined ? false : headerShown}\n                headerHeight={headerHeight}\n                headerBackTitle={\n                  options.headerBackTitle !== undefined\n                    ? options.headerBackTitle\n                    : undefined\n                }\n                headerTopInsetEnabled={headerTopInsetEnabled}\n                canGoBack={headerBack !== undefined}\n              />\n            </HeaderHeightContext.Provider>\n          </HeaderShownContext.Provider>\n        </NavigationRouteContext.Provider>\n      </NavigationContext.Provider>\n    </Screen>\n  );\n};\n\ntype Props = {\n  state: StackNavigationState<ParamListBase>;\n  navigation: NativeStackNavigationHelpers;\n  descriptors: NativeStackDescriptorMap;\n};\n\nfunction NativeStackViewInner({ state, navigation, descriptors }: Props) {\n  const { setNextDismissedKey } = useDismissedRouteError(state);\n\n  useInvalidPreventRemoveError(descriptors);\n\n  return (\n    <ScreenStack style={styles.container}>\n      {state.routes.map((route, index) => {\n        const descriptor = descriptors[route.key];\n        const isFocused = state.index === index;\n        const previousKey = state.routes[index - 1]?.key;\n        const nextKey = state.routes[index + 1]?.key;\n        const previousDescriptor = previousKey\n          ? descriptors[previousKey]\n          : undefined;\n        const nextDescriptor = nextKey ? descriptors[nextKey] : undefined;\n\n        return (\n          <SceneView\n            key={route.key}\n            index={index}\n            focused={isFocused}\n            descriptor={descriptor}\n            previousDescriptor={previousDescriptor}\n            nextDescriptor={nextDescriptor}\n            onWillDisappear={() => {\n              navigation.emit({\n                type: 'transitionStart',\n                data: { closing: true },\n                target: route.key,\n              });\n            }}\n            onAppear={() => {\n              navigation.emit({\n                type: 'transitionEnd',\n                data: { closing: false },\n                target: route.key,\n              });\n            }}\n            onDisappear={() => {\n              navigation.emit({\n                type: 'transitionEnd',\n                data: { closing: true },\n                target: route.key,\n              });\n            }}\n            onDismissed={(event) => {\n              navigation.dispatch({\n                ...StackActions.pop(event.nativeEvent.dismissCount),\n                source: route.key,\n                target: state.key,\n              });\n\n              setNextDismissedKey(route.key);\n            }}\n            onHeaderBackButtonClicked={() => {\n              navigation.dispatch({\n                ...StackActions.pop(),\n                source: route.key,\n                target: state.key,\n              });\n            }}\n            onNativeDismissCancelled={(event) => {\n              navigation.dispatch({\n                ...StackActions.pop(event.nativeEvent.dismissCount),\n                source: route.key,\n                target: state.key,\n              });\n            }}\n          />\n        );\n      })}\n    </ScreenStack>\n  );\n}\n\nexport default function NativeStackView(props: Props) {\n  return (\n    <SafeAreaProviderCompat>\n      <NativeStackViewInner {...props} />\n    </SafeAreaProviderCompat>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  scene: {\n    flex: 1,\n    flexDirection: 'column-reverse',\n  },\n  absolute: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n  },\n  translucent: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    zIndex: 1,\n    elevation: 1,\n  },\n  background: {\n    overflow: 'hidden',\n  },\n});\n","import type { NavigationAction } from '@react-navigation/core';\nimport * as React from 'react';\nimport { GestureResponderEvent, Platform, Text, TextProps } from 'react-native';\n\nimport useLinkProps from './useLinkProps';\nimport type { To } from './useLinkTo';\n\ntype Props<ParamList extends ReactNavigation.RootParamList> = {\n  to: To<ParamList>;\n  action?: NavigationAction;\n  target?: string;\n  onPress?: (\n    e: React.MouseEvent<HTMLAnchorElement, MouseEvent> | GestureResponderEvent\n  ) => void;\n} & (Omit<TextProps, 'disabled'> & {\n  disabled?: boolean | null;\n  children: React.ReactNode;\n});\n\n/**\n * Component to render link to another screen using a path.\n * Uses an anchor tag on the web.\n *\n * @param props.to Absolute path to screen (e.g. `/feeds/hot`).\n * @param props.action Optional action to use for in-page navigation. By default, the path is parsed to an action based on linking config.\n * @param props.children Child elements to render the content.\n */\nexport default function Link<ParamList extends ReactNavigation.RootParamList>({\n  to,\n  action,\n  ...rest\n}: Props<ParamList>) {\n  const props = useLinkProps<ParamList>({ to, action });\n\n  const onPress = (\n    e: React.MouseEvent<HTMLAnchorElement, MouseEvent> | GestureResponderEvent\n  ) => {\n    if ('onPress' in rest) {\n      rest.onPress?.(e);\n    }\n\n    props.onPress(e);\n  };\n\n  return React.createElement(Text, {\n    ...props,\n    ...rest,\n    ...Platform.select({\n      web: { onClick: onPress } as any,\n      default: { onPress },\n    }),\n  });\n}\n","import type { ParamListBase } from '@react-navigation/core';\nimport * as React from 'react';\n\nimport type { LinkingOptions } from './types';\n\nconst LinkingContext = React.createContext<{\n  options: LinkingOptions<ParamListBase> | undefined;\n}>({ options: undefined });\n\nLinkingContext.displayName = 'LinkingContext';\n\nexport default LinkingContext;\n","import {\n  BaseNavigationContainer,\n  getActionFromState,\n  getPathFromState,\n  getStateFromPath,\n  NavigationContainerProps,\n  NavigationContainerRef,\n  ParamListBase,\n  validatePathConfig,\n} from '@react-navigation/core';\nimport * as React from 'react';\n\nimport LinkingContext from './LinkingContext';\nimport DefaultTheme from './theming/DefaultTheme';\nimport ThemeProvider from './theming/ThemeProvider';\nimport type { DocumentTitleOptions, LinkingOptions, Theme } from './types';\nimport useBackButton from './useBackButton';\nimport useDocumentTitle from './useDocumentTitle';\nimport useLinking from './useLinking';\nimport useThenable from './useThenable';\n\ndeclare global {\n  var REACT_NAVIGATION_DEVTOOLS: WeakMap<\n    NavigationContainerRef<any>,\n    { readonly linking: LinkingOptions<any> }\n  >;\n}\n\nglobal.REACT_NAVIGATION_DEVTOOLS = new WeakMap();\n\ntype Props<ParamList extends {}> = NavigationContainerProps & {\n  theme?: Theme;\n  linking?: LinkingOptions<ParamList>;\n  fallback?: React.ReactNode;\n  documentTitle?: DocumentTitleOptions;\n  onReady?: () => void;\n};\n\n/**\n * Container component which holds the navigation state designed for React Native apps.\n * This should be rendered at the root wrapping the whole app.\n *\n * @param props.initialState Initial state object for the navigation tree. When deep link handling is enabled, this will override deep links when specified. Make sure that you don't specify an `initialState` when there's a deep link (`Linking.getInitialURL()`).\n * @param props.onReady Callback which is called after the navigation tree mounts.\n * @param props.onStateChange Callback which is called with the latest navigation state when it changes.\n * @param props.theme Theme object for the navigators.\n * @param props.linking Options for deep linking. Deep link handling is enabled when this prop is provided, unless `linking.enabled` is `false`.\n * @param props.fallback Fallback component to render until we have finished getting initial state when linking is enabled. Defaults to `null`.\n * @param props.documentTitle Options to configure the document title on Web. Updating document title is handled by default unless `documentTitle.enabled` is `false`.\n * @param props.children Child elements to render the content.\n * @param props.ref Ref object which refers to the navigation object containing helper methods.\n */\nfunction NavigationContainerInner(\n  {\n    theme = DefaultTheme,\n    linking,\n    fallback = null,\n    documentTitle,\n    onReady,\n    ...rest\n  }: Props<ParamListBase>,\n  ref?: React.Ref<NavigationContainerRef<ParamListBase> | null>\n) {\n  const isLinkingEnabled = linking ? linking.enabled !== false : false;\n\n  if (linking?.config) {\n    validatePathConfig(linking.config);\n  }\n\n  const refContainer =\n    React.useRef<NavigationContainerRef<ParamListBase>>(null);\n\n  useBackButton(refContainer);\n  useDocumentTitle(refContainer, documentTitle);\n\n  const { getInitialState } = useLinking(refContainer, {\n    independent: rest.independent,\n    enabled: isLinkingEnabled,\n    prefixes: [],\n    ...linking,\n  });\n\n  // Add additional linking related info to the ref\n  // This will be used by the devtools\n  React.useEffect(() => {\n    if (refContainer.current) {\n      REACT_NAVIGATION_DEVTOOLS.set(refContainer.current, {\n        get linking() {\n          return {\n            ...linking,\n            enabled: isLinkingEnabled,\n            prefixes: linking?.prefixes ?? [],\n            getStateFromPath: linking?.getStateFromPath ?? getStateFromPath,\n            getPathFromState: linking?.getPathFromState ?? getPathFromState,\n            getActionFromState:\n              linking?.getActionFromState ?? getActionFromState,\n          };\n        },\n      });\n    }\n  });\n\n  const [isResolved, initialState] = useThenable(getInitialState);\n\n  React.useImperativeHandle(ref, () => refContainer.current);\n\n  const linkingContext = React.useMemo(() => ({ options: linking }), [linking]);\n\n  const isReady = rest.initialState != null || !isLinkingEnabled || isResolved;\n\n  const onReadyRef = React.useRef(onReady);\n\n  React.useEffect(() => {\n    onReadyRef.current = onReady;\n  });\n\n  React.useEffect(() => {\n    if (isReady) {\n      onReadyRef.current?.();\n    }\n  }, [isReady]);\n\n  if (!isReady) {\n    // This is temporary until we have Suspense for data-fetching\n    // Then the fallback will be handled by a parent `Suspense` component\n    return fallback as React.ReactElement;\n  }\n\n  return (\n    <LinkingContext.Provider value={linkingContext}>\n      <ThemeProvider value={theme}>\n        <BaseNavigationContainer\n          {...rest}\n          initialState={\n            rest.initialState == null ? initialState : rest.initialState\n          }\n          ref={refContainer}\n        />\n      </ThemeProvider>\n    </LinkingContext.Provider>\n  );\n}\n\nconst NavigationContainer = React.forwardRef(NavigationContainerInner) as <\n  RootParamList extends {} = ReactNavigation.RootParamList\n>(\n  props: Props<RootParamList> & {\n    ref?: React.Ref<NavigationContainerRef<RootParamList>>;\n  }\n) => React.ReactElement;\n\nexport default NavigationContainer;\n","import { CurrentRenderContext } from '@react-navigation/core';\nimport * as React from 'react';\n\nimport ServerContext, { ServerContextType } from './ServerContext';\nimport type { ServerContainerRef } from './types';\n\ntype Props = ServerContextType & {\n  children: React.ReactNode;\n};\n\n/**\n * Container component for server rendering.\n *\n * @param props.location Location object to base the initial URL for SSR.\n * @param props.children Child elements to render the content.\n * @param props.ref Ref object which contains helper methods.\n */\nexport default React.forwardRef(function ServerContainer(\n  { children, location }: Props,\n  ref: React.Ref<ServerContainerRef>\n) {\n  React.useEffect(() => {\n    console.error(\n      \"'ServerContainer' should only be used on the server with 'react-dom/server' for SSR.\"\n    );\n  }, []);\n\n  const current: { options?: object } = {};\n\n  if (ref) {\n    const value = {\n      getCurrentOptions() {\n        return current.options;\n      },\n    };\n\n    // We write to the `ref` during render instead of `React.useImperativeHandle`\n    // This is because `useImperativeHandle` will update the ref after 'commit',\n    // and there's no 'commit' phase during SSR.\n    // Mutating ref during render is unsafe in concurrent mode, but we don't care about it for SSR.\n    if (typeof ref === 'function') {\n      ref(value);\n    } else {\n      // @ts-expect-error: the TS types are incorrect and say that ref.current is readonly\n      ref.current = value;\n    }\n  }\n\n  return (\n    <ServerContext.Provider value={{ location }}>\n      <CurrentRenderContext.Provider value={current}>\n        {children}\n      </CurrentRenderContext.Provider>\n    </ServerContext.Provider>\n  );\n});\n","import * as React from 'react';\n\nexport type ServerContextType = {\n  location?: {\n    pathname: string;\n    search: string;\n  };\n};\n\nconst ServerContext = React.createContext<ServerContextType | undefined>(\n  undefined\n);\n\nexport default ServerContext;\n","import escapeStringRegexp from 'escape-string-regexp';\n\nexport default function extractPathFromURL(prefixes: string[], url: string) {\n  for (const prefix of prefixes) {\n    const protocol = prefix.match(/^[^:]+:/)?.[0] ?? '';\n    const host = prefix\n      .replace(new RegExp(`^${escapeStringRegexp(protocol)}`), '')\n      .replace(/\\/+/g, '/') // Replace multiple slash (//) with single ones\n      .replace(/^\\//, ''); // Remove extra leading slash\n\n    const prefixRegex = new RegExp(\n      `^${escapeStringRegexp(protocol)}(/)*${host\n        .split('.')\n        .map((it) => (it === '*' ? '[^/]+' : escapeStringRegexp(it)))\n        .join('\\\\.')}`\n    );\n\n    const [originAndPath, searchParams] = url.split('?');\n    const normalizedURL = originAndPath\n      .replace(/\\/+/g, '/')\n      .concat(searchParams ? `?${searchParams}` : '');\n\n    if (prefixRegex.test(normalizedURL)) {\n      return normalizedURL.replace(prefixRegex, '');\n    }\n  }\n\n  return undefined;\n}\n","export { default as Link } from './Link';\nexport { default as LinkingContext } from './LinkingContext';\nexport { default as NavigationContainer } from './NavigationContainer';\nexport { default as ServerContainer } from './ServerContainer';\nexport { default as DarkTheme } from './theming/DarkTheme';\nexport { default as DefaultTheme } from './theming/DefaultTheme';\nexport { default as ThemeProvider } from './theming/ThemeProvider';\nexport { default as useTheme } from './theming/useTheme';\nexport * from './types';\nexport { default as useLinkBuilder } from './useLinkBuilder';\nexport { default as useLinkProps } from './useLinkProps';\nexport { default as useLinkTo } from './useLinkTo';\nexport { default as useScrollToTop } from './useScrollToTop';\nexport * from '@react-navigation/core';\n","import type { Theme } from '../types';\n\nconst DarkTheme: Theme = {\n  dark: true,\n  colors: {\n    primary: 'rgb(10, 132, 255)',\n    background: 'rgb(1, 1, 1)',\n    card: 'rgb(18, 18, 18)',\n    text: 'rgb(229, 229, 231)',\n    border: 'rgb(39, 39, 41)',\n    notification: 'rgb(255, 69, 58)',\n  },\n};\n\nexport default DarkTheme;\n","import type { Theme } from '../types';\n\nconst DefaultTheme: Theme = {\n  dark: false,\n  colors: {\n    primary: 'rgb(0, 122, 255)',\n    background: 'rgb(242, 242, 242)',\n    card: 'rgb(255, 255, 255)',\n    text: 'rgb(28, 28, 30)',\n    border: 'rgb(216, 216, 216)',\n    notification: 'rgb(255, 59, 48)',\n  },\n};\n\nexport default DefaultTheme;\n","import * as React from 'react';\n\nimport type { Theme } from '../types';\nimport DefaultTheme from './DefaultTheme';\n\nconst ThemeContext = React.createContext<Theme>(DefaultTheme);\n\nThemeContext.displayName = 'ThemeContext';\n\nexport default ThemeContext;\n","import * as React from 'react';\n\nimport type { Theme } from '../types';\nimport ThemeContext from './ThemeContext';\n\ntype Props = {\n  value: Theme;\n  children: React.ReactNode;\n};\n\nexport default function ThemeProvider({ value, children }: Props) {\n  return (\n    <ThemeContext.Provider value={value}>{children}</ThemeContext.Provider>\n  );\n}\n","import * as React from 'react';\n\nimport ThemeContext from './ThemeContext';\n\nexport default function useTheme() {\n  const theme = React.useContext(ThemeContext);\n\n  return theme;\n}\n","import type {\n  NavigationContainerRef,\n  ParamListBase,\n} from '@react-navigation/core';\nimport * as React from 'react';\nimport { BackHandler } from 'react-native';\n\nexport default function useBackButton(\n  ref: React.RefObject<NavigationContainerRef<ParamListBase>>\n) {\n  React.useEffect(() => {\n    const subscription = BackHandler.addEventListener(\n      'hardwareBackPress',\n      () => {\n        const navigation = ref.current;\n\n        if (navigation == null) {\n          return false;\n        }\n\n        if (navigation.canGoBack()) {\n          navigation.goBack();\n\n          return true;\n        }\n\n        return false;\n      }\n    );\n\n    return () => subscription.remove();\n  }, [ref]);\n}\n","export default function useDocumentTitle() {\n  // Noop for React Native\n}\n","import {\n  getPathFromState,\n  NavigationHelpers,\n  NavigationHelpersContext,\n  NavigationProp,\n  ParamListBase,\n} from '@react-navigation/core';\nimport * as React from 'react';\n\nimport LinkingContext from './LinkingContext';\n\ntype NavigationObject =\n  | NavigationHelpers<ParamListBase>\n  | NavigationProp<ParamListBase>;\n\ntype MinimalState = {\n  index: number;\n  routes: { name: string; params?: object; state?: MinimalState }[];\n};\n\nconst getRootStateForNavigate = (\n  navigation: NavigationObject,\n  state: MinimalState\n): MinimalState => {\n  const parent = navigation.getParent();\n\n  if (parent) {\n    const parentState = parent.getState();\n\n    return getRootStateForNavigate(parent, {\n      index: 0,\n      routes: [\n        {\n          ...parentState.routes[parentState.index],\n          state: state,\n        },\n      ],\n    });\n  }\n\n  return state;\n};\n\n/**\n * Build destination link for a navigate action.\n * Useful for showing anchor tags on the web for buttons that perform navigation.\n */\nexport default function useLinkBuilder() {\n  const navigation = React.useContext(NavigationHelpersContext);\n  const linking = React.useContext(LinkingContext);\n\n  const buildLink = React.useCallback(\n    (name: string, params?: object) => {\n      const { options } = linking;\n\n      if (options?.enabled === false) {\n        return undefined;\n      }\n\n      const state = navigation\n        ? getRootStateForNavigate(navigation, {\n            index: 0,\n            routes: [{ name, params }],\n          })\n        : // If we couldn't find a navigation object in context, we're at root\n          // So we'll construct a basic state object to use\n          {\n            index: 0,\n            routes: [{ name, params }],\n          };\n\n      const path = options?.getPathFromState\n        ? options.getPathFromState(state, options?.config)\n        : getPathFromState(state, options?.config);\n\n      return path;\n    },\n    [linking, navigation]\n  );\n\n  return buildLink;\n}\n","import {\n  getPathFromState,\n  NavigationAction,\n  NavigationContainerRefContext,\n  NavigationHelpersContext,\n  NavigatorScreenParams,\n  ParamListBase,\n} from '@react-navigation/core';\nimport type { NavigationState, PartialState } from '@react-navigation/routers';\nimport * as React from 'react';\nimport { GestureResponderEvent, Platform } from 'react-native';\n\nimport LinkingContext from './LinkingContext';\nimport useLinkTo, { To } from './useLinkTo';\n\ntype Props<ParamList extends ReactNavigation.RootParamList> = {\n  to: To<ParamList>;\n  action?: NavigationAction;\n};\n\nconst getStateFromParams = (\n  params: NavigatorScreenParams<ParamListBase, NavigationState> | undefined\n): PartialState<NavigationState> | NavigationState | undefined => {\n  if (params?.state) {\n    return params.state;\n  }\n\n  if (params?.screen) {\n    return {\n      routes: [\n        {\n          name: params.screen,\n          params: params.params,\n          // @ts-expect-error\n          state: params.screen\n            ? getStateFromParams(\n                params.params as\n                  | NavigatorScreenParams<ParamListBase, NavigationState>\n                  | undefined\n              )\n            : undefined,\n        },\n      ],\n    };\n  }\n\n  return undefined;\n};\n\n/**\n * Hook to get props for an anchor tag so it can work with in page navigation.\n *\n * @param props.to Absolute path to screen (e.g. `/feeds/hot`).\n * @param props.action Optional action to use for in-page navigation. By default, the path is parsed to an action based on linking config.\n */\nexport default function useLinkProps<\n  ParamList extends ReactNavigation.RootParamList\n>({ to, action }: Props<ParamList>) {\n  const root = React.useContext(NavigationContainerRefContext);\n  const navigation = React.useContext(NavigationHelpersContext);\n  const { options } = React.useContext(LinkingContext);\n  const linkTo = useLinkTo<ParamList>();\n\n  const onPress = (\n    e?: React.MouseEvent<HTMLAnchorElement, MouseEvent> | GestureResponderEvent\n  ) => {\n    let shouldHandle = false;\n\n    if (Platform.OS !== 'web' || !e) {\n      shouldHandle = e ? !e.defaultPrevented : true;\n    } else if (\n      !e.defaultPrevented && // onPress prevented default\n      // @ts-expect-error: these properties exist on web, but not in React Native\n      !(e.metaKey || e.altKey || e.ctrlKey || e.shiftKey) && // ignore clicks with modifier keys\n      // @ts-expect-error: these properties exist on web, but not in React Native\n      (e.button == null || e.button === 0) && // ignore everything but left clicks\n      // @ts-expect-error: these properties exist on web, but not in React Native\n      [undefined, null, '', 'self'].includes(e.currentTarget?.target) // let browser handle \"target=_blank\" etc.\n    ) {\n      e.preventDefault();\n      shouldHandle = true;\n    }\n\n    if (shouldHandle) {\n      if (action) {\n        if (navigation) {\n          navigation.dispatch(action);\n        } else if (root) {\n          root.dispatch(action);\n        } else {\n          throw new Error(\n            \"Couldn't find a navigation object. Is your component inside NavigationContainer?\"\n          );\n        }\n      } else {\n        linkTo(to);\n      }\n    }\n  };\n\n  const getPathFromStateHelper = options?.getPathFromState ?? getPathFromState;\n\n  const href =\n    typeof to === 'string'\n      ? to\n      : getPathFromStateHelper(\n          {\n            routes: [\n              {\n                name: to.screen,\n                // @ts-expect-error\n                params: to.params,\n                // @ts-expect-error\n                state: getStateFromParams(to.params),\n              },\n            ],\n          },\n          options?.config\n        );\n\n  return {\n    href,\n    accessibilityRole: 'link' as const,\n    onPress,\n  };\n}\n","import {\n  getActionFromState,\n  getStateFromPath,\n  NavigationContainerRefContext,\n} from '@react-navigation/core';\nimport * as React from 'react';\n\nimport LinkingContext from './LinkingContext';\n\nexport type To<\n  ParamList extends ReactNavigation.RootParamList = ReactNavigation.RootParamList,\n  RouteName extends keyof ParamList = keyof ParamList\n> =\n  | string\n  | (undefined extends ParamList[RouteName]\n      ? {\n          screen: Extract<RouteName, string>;\n          params?: ParamList[RouteName];\n        }\n      : {\n          screen: Extract<RouteName, string>;\n          params: ParamList[RouteName];\n        });\n\nexport default function useLinkTo<\n  ParamList extends ReactNavigation.RootParamList\n>() {\n  const navigation = React.useContext(NavigationContainerRefContext);\n  const linking = React.useContext(LinkingContext);\n\n  const linkTo = React.useCallback(\n    (to: To<ParamList>) => {\n      if (navigation === undefined) {\n        throw new Error(\n          \"Couldn't find a navigation object. Is your component inside NavigationContainer?\"\n        );\n      }\n\n      if (typeof to !== 'string') {\n        // @ts-expect-error: This is fine\n        navigation.navigate(to.screen, to.params);\n        return;\n      }\n\n      if (!to.startsWith('/')) {\n        throw new Error(`The path must start with '/' (${to}).`);\n      }\n\n      const { options } = linking;\n\n      const state = options?.getStateFromPath\n        ? options.getStateFromPath(to, options.config)\n        : getStateFromPath(to, options?.config);\n\n      if (state) {\n        const action = getActionFromState(state, options?.config);\n\n        if (action !== undefined) {\n          navigation.dispatch(action);\n        } else {\n          navigation.reset(state);\n        }\n      } else {\n        throw new Error('Failed to parse the path to a navigation state.');\n      }\n    },\n    [linking, navigation]\n  );\n\n  return linkTo;\n}\n","import {\n  getActionFromState as getActionFromStateDefault,\n  getStateFromPath as getStateFromPathDefault,\n  NavigationContainerRef,\n  ParamListBase,\n} from '@react-navigation/core';\nimport * as React from 'react';\nimport { Linking, Platform } from 'react-native';\n\nimport extractPathFromURL from './extractPathFromURL';\nimport type { LinkingOptions } from './types';\n\ntype ResultState = ReturnType<typeof getStateFromPathDefault>;\n\ntype Options = LinkingOptions<ParamListBase> & {\n  independent?: boolean;\n};\n\nlet linkingHandlers: Symbol[] = [];\n\nexport default function useLinking(\n  ref: React.RefObject<NavigationContainerRef<ParamListBase>>,\n  {\n    independent,\n    enabled = true,\n    prefixes,\n    filter,\n    config,\n    getInitialURL = () =>\n      Promise.race([\n        Linking.getInitialURL(),\n        new Promise<undefined>((resolve) =>\n          // Timeout in 150ms if `getInitialState` doesn't resolve\n          // Workaround for https://github.com/facebook/react-native/issues/25675\n          setTimeout(resolve, 150)\n        ),\n      ]),\n    subscribe = (listener) => {\n      const callback = ({ url }: { url: string }) => listener(url);\n\n      const subscription = Linking.addEventListener('url', callback) as\n        | { remove(): void }\n        | undefined;\n\n      // Storing this in a local variable stops Jest from complaining about import after teardown\n      // @ts-expect-error: removeEventListener is not present in newer RN versions\n      const removeEventListener = Linking.removeEventListener?.bind(Linking);\n\n      return () => {\n        // https://github.com/facebook/react-native/commit/6d1aca806cee86ad76de771ed3a1cc62982ebcd7\n        if (subscription?.remove) {\n          subscription.remove();\n        } else {\n          removeEventListener?.('url', callback);\n        }\n      };\n    },\n    getStateFromPath = getStateFromPathDefault,\n    getActionFromState = getActionFromStateDefault,\n  }: Options\n) {\n  React.useEffect(() => {\n    if (process.env.NODE_ENV === 'production') {\n      return undefined;\n    }\n\n    if (independent) {\n      return undefined;\n    }\n\n    if (enabled !== false && linkingHandlers.length) {\n      console.error(\n        [\n          'Looks like you have configured linking in multiple places. This is likely an error since deep links should only be handled in one place to avoid conflicts. Make sure that:',\n          \"- You don't have multiple NavigationContainers in the app each with 'linking' enabled\",\n          '- Only a single instance of the root component is rendered',\n          Platform.OS === 'android'\n            ? \"- You have set 'android:launchMode=singleTask' in the '<activity />' section of the 'AndroidManifest.xml' file to avoid launching multiple instances\"\n            : '',\n        ]\n          .join('\\n')\n          .trim()\n      );\n    }\n\n    const handler = Symbol();\n\n    if (enabled !== false) {\n      linkingHandlers.push(handler);\n    }\n\n    return () => {\n      const index = linkingHandlers.indexOf(handler);\n\n      if (index > -1) {\n        linkingHandlers.splice(index, 1);\n      }\n    };\n  }, [enabled, independent]);\n\n  // We store these options in ref to avoid re-creating getInitialState and re-subscribing listeners\n  // This lets user avoid wrapping the items in `React.useCallback` or `React.useMemo`\n  // Not re-creating `getInitialState` is important coz it makes it easier for the user to use in an effect\n  const enabledRef = React.useRef(enabled);\n  const prefixesRef = React.useRef(prefixes);\n  const filterRef = React.useRef(filter);\n  const configRef = React.useRef(config);\n  const getInitialURLRef = React.useRef(getInitialURL);\n  const getStateFromPathRef = React.useRef(getStateFromPath);\n  const getActionFromStateRef = React.useRef(getActionFromState);\n\n  React.useEffect(() => {\n    enabledRef.current = enabled;\n    prefixesRef.current = prefixes;\n    filterRef.current = filter;\n    configRef.current = config;\n    getInitialURLRef.current = getInitialURL;\n    getStateFromPathRef.current = getStateFromPath;\n    getActionFromStateRef.current = getActionFromState;\n  });\n\n  const getStateFromURL = React.useCallback(\n    (url: string | null | undefined) => {\n      if (!url || (filterRef.current && !filterRef.current(url))) {\n        return undefined;\n      }\n\n      const path = extractPathFromURL(prefixesRef.current, url);\n\n      return path !== undefined\n        ? getStateFromPathRef.current(path, configRef.current)\n        : undefined;\n    },\n    []\n  );\n\n  const getInitialState = React.useCallback(() => {\n    let state: ResultState | undefined;\n\n    if (enabledRef.current) {\n      const url = getInitialURLRef.current();\n\n      if (url != null && typeof url !== 'string') {\n        return url.then((url) => {\n          const state = getStateFromURL(url);\n\n          return state;\n        });\n      }\n\n      state = getStateFromURL(url);\n    }\n\n    const thenable = {\n      then(onfulfilled?: (state: ResultState | undefined) => void) {\n        return Promise.resolve(onfulfilled ? onfulfilled(state) : state);\n      },\n      catch() {\n        return thenable;\n      },\n    };\n\n    return thenable as PromiseLike<ResultState | undefined>;\n  }, [getStateFromURL]);\n\n  React.useEffect(() => {\n    const listener = (url: string) => {\n      if (!enabled) {\n        return;\n      }\n\n      const navigation = ref.current;\n      const state = navigation ? getStateFromURL(url) : undefined;\n\n      if (navigation && state) {\n        // Make sure that the routes in the state exist in the root navigator\n        // Otherwise there's an error in the linking configuration\n        const rootState = navigation.getRootState();\n\n        if (state.routes.some((r) => !rootState?.routeNames.includes(r.name))) {\n          console.warn(\n            \"The navigation state parsed from the URL contains routes not present in the root navigator. This usually means that the linking configuration doesn't match the navigation structure. See https://reactnavigation.org/docs/configuring-links for more details on how to specify a linking configuration.\"\n          );\n          return;\n        }\n\n        const action = getActionFromStateRef.current(state, configRef.current);\n\n        if (action !== undefined) {\n          try {\n            navigation.dispatch(action);\n          } catch (e) {\n            // Ignore any errors from deep linking.\n            // This could happen in case of malformed links, navigation object not being initialized etc.\n            console.warn(\n              `An error occurred when trying to handle the link '${url}': ${\n                typeof e === 'object' && e != null && 'message' in e\n                  ? e.message\n                  : e\n              }`\n            );\n          }\n        } else {\n          navigation.resetRoot(state);\n        }\n      }\n    };\n\n    return subscribe(listener);\n  }, [enabled, getStateFromURL, ref, subscribe]);\n\n  return {\n    getInitialState,\n  };\n}\n","import {\n  EventArg,\n  NavigationContext,\n  NavigationProp,\n  ParamListBase,\n  useRoute,\n} from '@react-navigation/core';\nimport * as React from 'react';\nimport type { ScrollView } from 'react-native';\n\ntype ScrollOptions = { x?: number; y?: number; animated?: boolean };\n\ntype ScrollableView =\n  | { scrollToTop(): void }\n  | { scrollTo(options: ScrollOptions): void }\n  | { scrollToOffset(options: { offset?: number; animated?: boolean }): void }\n  | { scrollResponderScrollTo(options: ScrollOptions): void };\n\ntype ScrollableWrapper =\n  | { getScrollResponder(): React.ReactNode | ScrollView }\n  | { getNode(): ScrollableView }\n  | ScrollableView;\n\nfunction getScrollableNode(ref: React.RefObject<ScrollableWrapper>) {\n  if (ref.current == null) {\n    return null;\n  }\n\n  if (\n    'scrollToTop' in ref.current ||\n    'scrollTo' in ref.current ||\n    'scrollToOffset' in ref.current ||\n    'scrollResponderScrollTo' in ref.current\n  ) {\n    // This is already a scrollable node.\n    return ref.current;\n  } else if ('getScrollResponder' in ref.current) {\n    // If the view is a wrapper like FlatList, SectionList etc.\n    // We need to use `getScrollResponder` to get access to the scroll responder\n    return ref.current.getScrollResponder();\n  } else if ('getNode' in ref.current) {\n    // When a `ScrollView` is wraped in `Animated.createAnimatedComponent`\n    // we need to use `getNode` to get the ref to the actual scrollview.\n    // Note that `getNode` is deprecated in newer versions of react-native\n    // this is why we check if we already have a scrollable node above.\n    return ref.current.getNode();\n  } else {\n    return ref.current;\n  }\n}\n\nexport default function useScrollToTop(\n  ref: React.RefObject<ScrollableWrapper>\n) {\n  const navigation = React.useContext(NavigationContext);\n  const route = useRoute();\n\n  if (navigation === undefined) {\n    throw new Error(\n      \"Couldn't find a navigation object. Is your component inside NavigationContainer?\"\n    );\n  }\n\n  React.useEffect(() => {\n    const tabNavigations: NavigationProp<ParamListBase>[] = [];\n    let currentNavigation = navigation;\n    // If the screen is nested inside multiple tab navigators, we should scroll to top for any of them\n    // So we need to find all the parent tab navigators and add the listeners there\n    while (currentNavigation) {\n      if (currentNavigation.getState().type === 'tab') {\n        tabNavigations.push(currentNavigation);\n      }\n\n      currentNavigation = currentNavigation.getParent();\n    }\n\n    if (tabNavigations.length === 0) {\n      return;\n    }\n\n    const unsubscribers = tabNavigations.map((tab) => {\n      return tab.addListener(\n        // We don't wanna import tab types here to avoid extra deps\n        // in addition, there are multiple tab implementations\n        // @ts-expect-error\n        'tabPress',\n        (e: EventArg<'tabPress', true>) => {\n          // We should scroll to top only when the screen is focused\n          const isFocused = navigation.isFocused();\n\n          // In a nested stack navigator, tab press resets the stack to first screen\n          // So we should scroll to top only when we are on first screen\n          const isFirst =\n            tabNavigations.includes(navigation) ||\n            navigation.getState().routes[0].key === route.key;\n\n          // Run the operation in the next frame so we're sure all listeners have been run\n          // This is necessary to know if preventDefault() has been called\n          requestAnimationFrame(() => {\n            const scrollable = getScrollableNode(ref) as ScrollableWrapper;\n\n            if (isFocused && isFirst && scrollable && !e.defaultPrevented) {\n              if ('scrollToTop' in scrollable) {\n                scrollable.scrollToTop();\n              } else if ('scrollTo' in scrollable) {\n                scrollable.scrollTo({ y: 0, animated: true });\n              } else if ('scrollToOffset' in scrollable) {\n                scrollable.scrollToOffset({ offset: 0, animated: true });\n              } else if ('scrollResponderScrollTo' in scrollable) {\n                scrollable.scrollResponderScrollTo({ y: 0, animated: true });\n              }\n            }\n          });\n        }\n      );\n    });\n\n    return () => {\n      unsubscribers.forEach((unsubscribe) => unsubscribe());\n    };\n  }, [navigation, ref, route.key]);\n}\n","import * as React from 'react';\n\nexport default function useThenable<T>(create: () => PromiseLike<T>) {\n  const [promise] = React.useState(create);\n\n  let initialState: [boolean, T | undefined] = [false, undefined];\n\n  // Check if our thenable is synchronous\n  promise.then((result) => {\n    initialState = [true, result];\n  });\n\n  const [state, setState] = React.useState(initialState);\n  const [resolved] = state;\n\n  React.useEffect(() => {\n    let cancelled = false;\n\n    const resolve = async () => {\n      let result;\n\n      try {\n        result = await promise;\n      } finally {\n        if (!cancelled) {\n          setState([true, result]);\n        }\n      }\n    };\n\n    if (!resolved) {\n      resolve();\n    }\n\n    return () => {\n      cancelled = true;\n    };\n  }, [promise, resolved]);\n\n  return state;\n}\n","import { nanoid } from 'nanoid/non-secure';\n\nimport type {\n  CommonNavigationAction,\n  NavigationState,\n  PartialState,\n} from './types';\n\n/**\n * Base router object that can be used when writing custom routers.\n * This provides few helper methods to handle common actions such as `RESET`.\n */\nconst BaseRouter = {\n  getStateForAction<State extends NavigationState>(\n    state: State,\n    action: CommonNavigationAction\n  ): State | PartialState<State> | null {\n    switch (action.type) {\n      case 'SET_PARAMS': {\n        const index = action.source\n          ? state.routes.findIndex((r) => r.key === action.source)\n          : state.index;\n\n        if (index === -1) {\n          return null;\n        }\n\n        return {\n          ...state,\n          routes: state.routes.map((r, i) =>\n            i === index\n              ? { ...r, params: { ...r.params, ...action.payload.params } }\n              : r\n          ),\n        };\n      }\n\n      case 'RESET': {\n        const nextState = action.payload as State | PartialState<State>;\n\n        if (\n          nextState.routes.length === 0 ||\n          nextState.routes.some(\n            (route: { name: string }) => !state.routeNames.includes(route.name)\n          )\n        ) {\n          return null;\n        }\n\n        if (nextState.stale === false) {\n          if (\n            state.routeNames.length !== nextState.routeNames.length ||\n            nextState.routeNames.some(\n              (name) => !state.routeNames.includes(name)\n            )\n          ) {\n            return null;\n          }\n\n          return {\n            ...nextState,\n            routes: nextState.routes.map((route) =>\n              route.key ? route : { ...route, key: `${route.name}-${nanoid()}` }\n            ),\n          };\n        }\n\n        return nextState;\n      }\n\n      default:\n        return null;\n    }\n  },\n\n  shouldActionChangeFocus(action: CommonNavigationAction) {\n    return action.type === 'NAVIGATE';\n  },\n};\n\nexport default BaseRouter;\n","import type { NavigationState, PartialState, Route } from './types';\n\ntype ResetState =\n  | PartialState<NavigationState>\n  | NavigationState\n  | (Omit<NavigationState, 'routes'> & {\n      routes: Omit<Route<string>, 'key'>[];\n    });\n\nexport type Action =\n  | {\n      type: 'GO_BACK';\n      source?: string;\n      target?: string;\n    }\n  | {\n      type: 'NAVIGATE';\n      payload:\n        | {\n            key: string;\n            name?: undefined;\n            params?: object;\n            path?: string;\n            merge?: boolean;\n          }\n        | {\n            name: string;\n            key?: string;\n            params?: object;\n            path?: string;\n            merge?: boolean;\n          };\n      source?: string;\n      target?: string;\n    }\n  | {\n      type: 'RESET';\n      payload: ResetState | undefined;\n      source?: string;\n      target?: string;\n    }\n  | {\n      type: 'SET_PARAMS';\n      payload: { params?: object };\n      source?: string;\n      target?: string;\n    };\n\nexport function goBack(): Action {\n  return { type: 'GO_BACK' };\n}\n\nexport function navigate(\n  options:\n    | { key: string; params?: object; path?: string; merge?: boolean }\n    | {\n        name: string;\n        key?: string;\n        params?: object;\n        path?: string;\n        merge?: boolean;\n      }\n): Action;\n// eslint-disable-next-line no-redeclare\nexport function navigate(name: string, params?: object): Action;\n// eslint-disable-next-line no-redeclare\nexport function navigate(...args: any): Action {\n  if (typeof args[0] === 'string') {\n    return { type: 'NAVIGATE', payload: { name: args[0], params: args[1] } };\n  } else {\n    const payload = args[0] || {};\n\n    if (!payload.hasOwnProperty('key') && !payload.hasOwnProperty('name')) {\n      throw new Error(\n        'You need to specify name or key when calling navigate with an object as the argument. See https://reactnavigation.org/docs/navigation-actions#navigate for usage.'\n      );\n    }\n\n    return { type: 'NAVIGATE', payload };\n  }\n}\n\nexport function reset(state: ResetState | undefined): Action {\n  return { type: 'RESET', payload: state };\n}\n\nexport function setParams(params: object): Action {\n  return { type: 'SET_PARAMS', payload: { params } };\n}\n","import { nanoid } from 'nanoid/non-secure';\n\nimport TabRouter, {\n  TabActionHelpers,\n  TabActions,\n  TabActionType,\n  TabNavigationState,\n  TabRouterOptions,\n} from './TabRouter';\nimport type {\n  CommonNavigationAction,\n  ParamListBase,\n  PartialState,\n  Router,\n} from './types';\nexport type DrawerStatus = 'open' | 'closed';\n\nexport type DrawerActionType =\n  | TabActionType\n  | {\n      type: 'OPEN_DRAWER' | 'CLOSE_DRAWER' | 'TOGGLE_DRAWER';\n      source?: string;\n      target?: string;\n    };\n\nexport type DrawerRouterOptions = TabRouterOptions & {\n  defaultStatus?: DrawerStatus;\n};\n\nexport type DrawerNavigationState<ParamList extends ParamListBase> = Omit<\n  TabNavigationState<ParamList>,\n  'type' | 'history'\n> & {\n  /**\n   * Type of the router, in this case, it's drawer.\n   */\n  type: 'drawer';\n  /**\n   * Default status of the drawer.\n   */\n  default: DrawerStatus;\n  /**\n   * List of previously visited route keys and drawer open status.\n   */\n  history: (\n    | { type: 'route'; key: string }\n    | { type: 'drawer'; status: DrawerStatus }\n  )[];\n};\n\nexport type DrawerActionHelpers<ParamList extends ParamListBase> =\n  TabActionHelpers<ParamList> & {\n    /**\n     * Open the drawer sidebar.\n     */\n    openDrawer(): void;\n\n    /**\n     * Close the drawer sidebar.\n     */\n    closeDrawer(): void;\n\n    /**\n     * Open the drawer sidebar if closed, or close if opened.\n     */\n    toggleDrawer(): void;\n  };\n\nexport const DrawerActions = {\n  ...TabActions,\n  openDrawer(): DrawerActionType {\n    return { type: 'OPEN_DRAWER' };\n  },\n  closeDrawer(): DrawerActionType {\n    return { type: 'CLOSE_DRAWER' };\n  },\n  toggleDrawer(): DrawerActionType {\n    return { type: 'TOGGLE_DRAWER' };\n  },\n};\n\nexport default function DrawerRouter({\n  defaultStatus = 'closed',\n  ...rest\n}: DrawerRouterOptions): Router<\n  DrawerNavigationState<ParamListBase>,\n  DrawerActionType | CommonNavigationAction\n> {\n  const router = TabRouter(rest) as unknown as Router<\n    DrawerNavigationState<ParamListBase>,\n    TabActionType | CommonNavigationAction\n  >;\n\n  const isDrawerInHistory = (\n    state:\n      | DrawerNavigationState<ParamListBase>\n      | PartialState<DrawerNavigationState<ParamListBase>>\n  ) => Boolean(state.history?.some((it) => it.type === 'drawer'));\n\n  const addDrawerToHistory = (\n    state: DrawerNavigationState<ParamListBase>\n  ): DrawerNavigationState<ParamListBase> => {\n    if (isDrawerInHistory(state)) {\n      return state;\n    }\n\n    return {\n      ...state,\n      history: [\n        ...state.history,\n        {\n          type: 'drawer',\n          status: defaultStatus === 'open' ? 'closed' : 'open',\n        },\n      ],\n    };\n  };\n\n  const removeDrawerFromHistory = (\n    state: DrawerNavigationState<ParamListBase>\n  ): DrawerNavigationState<ParamListBase> => {\n    if (!isDrawerInHistory(state)) {\n      return state;\n    }\n\n    return {\n      ...state,\n      history: state.history.filter((it) => it.type !== 'drawer'),\n    };\n  };\n\n  const openDrawer = (\n    state: DrawerNavigationState<ParamListBase>\n  ): DrawerNavigationState<ParamListBase> => {\n    if (defaultStatus === 'open') {\n      return removeDrawerFromHistory(state);\n    }\n\n    return addDrawerToHistory(state);\n  };\n\n  const closeDrawer = (\n    state: DrawerNavigationState<ParamListBase>\n  ): DrawerNavigationState<ParamListBase> => {\n    if (defaultStatus === 'open') {\n      return addDrawerToHistory(state);\n    }\n\n    return removeDrawerFromHistory(state);\n  };\n\n  return {\n    ...router,\n\n    type: 'drawer',\n\n    getInitialState({ routeNames, routeParamList, routeGetIdList }) {\n      const state = router.getInitialState({\n        routeNames,\n        routeParamList,\n        routeGetIdList,\n      });\n\n      return {\n        ...state,\n        default: defaultStatus,\n        stale: false,\n        type: 'drawer',\n        key: `drawer-${nanoid()}`,\n      };\n    },\n\n    getRehydratedState(\n      partialState,\n      { routeNames, routeParamList, routeGetIdList }\n    ) {\n      if (partialState.stale === false) {\n        return partialState;\n      }\n\n      let state = router.getRehydratedState(partialState, {\n        routeNames,\n        routeParamList,\n        routeGetIdList,\n      });\n\n      if (isDrawerInHistory(partialState)) {\n        // Re-sync the drawer entry in history to correct it if it was wrong\n        state = removeDrawerFromHistory(state);\n        state = addDrawerToHistory(state);\n      }\n\n      return {\n        ...state,\n        default: defaultStatus,\n        type: 'drawer',\n        key: `drawer-${nanoid()}`,\n      };\n    },\n\n    getStateForRouteFocus(state, key) {\n      const result = router.getStateForRouteFocus(state, key);\n\n      return closeDrawer(result);\n    },\n\n    getStateForAction(state, action, options) {\n      switch (action.type) {\n        case 'OPEN_DRAWER':\n          return openDrawer(state);\n\n        case 'CLOSE_DRAWER':\n          return closeDrawer(state);\n\n        case 'TOGGLE_DRAWER':\n          if (isDrawerInHistory(state)) {\n            return removeDrawerFromHistory(state);\n          }\n\n          return addDrawerToHistory(state);\n\n        case 'JUMP_TO':\n        case 'NAVIGATE': {\n          const result = router.getStateForAction(state, action, options);\n\n          if (result != null && result.index !== state.index) {\n            return closeDrawer(result as DrawerNavigationState<ParamListBase>);\n          }\n\n          return result;\n        }\n\n        case 'GO_BACK':\n          if (isDrawerInHistory(state)) {\n            return removeDrawerFromHistory(state);\n          }\n\n          return router.getStateForAction(state, action, options);\n\n        default:\n          return router.getStateForAction(state, action, options);\n      }\n    },\n\n    actionCreators: DrawerActions,\n  };\n}\n","import { nanoid } from 'nanoid/non-secure';\n\nimport BaseRouter from './BaseRouter';\nimport type {\n  CommonNavigationAction,\n  DefaultRouterOptions,\n  NavigationState,\n  ParamListBase,\n  Route,\n  Router,\n} from './types';\n\nexport type StackActionType =\n  | {\n      type: 'REPLACE';\n      payload: { name: string; key?: string | undefined; params?: object };\n      source?: string;\n      target?: string;\n    }\n  | {\n      type: 'PUSH';\n      payload: { name: string; params?: object };\n      source?: string;\n      target?: string;\n    }\n  | {\n      type: 'POP';\n      payload: { count: number };\n      source?: string;\n      target?: string;\n    }\n  | {\n      type: 'POP_TO_TOP';\n      source?: string;\n      target?: string;\n    };\n\nexport type StackRouterOptions = DefaultRouterOptions;\n\nexport type StackNavigationState<ParamList extends ParamListBase> =\n  NavigationState<ParamList> & {\n    /**\n     * Type of the router, in this case, it's stack.\n     */\n    type: 'stack';\n  };\n\nexport type StackActionHelpers<ParamList extends ParamListBase> = {\n  /**\n   * Replace the current route with a new one.\n   *\n   * @param name Route name of the new route.\n   * @param [params] Params object for the new route.\n   */\n  replace<RouteName extends keyof ParamList>(\n    ...args: undefined extends ParamList[RouteName]\n      ? [screen: RouteName] | [screen: RouteName, params: ParamList[RouteName]]\n      : [screen: RouteName, params: ParamList[RouteName]]\n  ): void;\n\n  /**\n   * Push a new screen onto the stack.\n   *\n   * @param name Name of the route for the tab.\n   * @param [params] Params object for the route.\n   */\n  push<RouteName extends keyof ParamList>(\n    ...args: undefined extends ParamList[RouteName]\n      ? [screen: RouteName] | [screen: RouteName, params: ParamList[RouteName]]\n      : [screen: RouteName, params: ParamList[RouteName]]\n  ): void;\n\n  /**\n   * Pop a screen from the stack.\n   */\n  pop(count?: number): void;\n\n  /**\n   * Pop to the first route in the stack, dismissing all other screens.\n   */\n  popToTop(): void;\n};\n\nexport const StackActions = {\n  replace(name: string, params?: object): StackActionType {\n    return { type: 'REPLACE', payload: { name, params } };\n  },\n  push(name: string, params?: object): StackActionType {\n    return { type: 'PUSH', payload: { name, params } };\n  },\n  pop(count: number = 1): StackActionType {\n    return { type: 'POP', payload: { count } };\n  },\n  popToTop(): StackActionType {\n    return { type: 'POP_TO_TOP' };\n  },\n};\n\nexport default function StackRouter(options: StackRouterOptions) {\n  const router: Router<\n    StackNavigationState<ParamListBase>,\n    CommonNavigationAction | StackActionType\n  > = {\n    ...BaseRouter,\n\n    type: 'stack',\n\n    getInitialState({ routeNames, routeParamList }) {\n      const initialRouteName =\n        options.initialRouteName !== undefined &&\n        routeNames.includes(options.initialRouteName)\n          ? options.initialRouteName\n          : routeNames[0];\n\n      return {\n        stale: false,\n        type: 'stack',\n        key: `stack-${nanoid()}`,\n        index: 0,\n        routeNames,\n        routes: [\n          {\n            key: `${initialRouteName}-${nanoid()}`,\n            name: initialRouteName,\n            params: routeParamList[initialRouteName],\n          },\n        ],\n      };\n    },\n\n    getRehydratedState(partialState, { routeNames, routeParamList }) {\n      let state = partialState;\n\n      if (state.stale === false) {\n        return state;\n      }\n\n      const routes = state.routes\n        .filter((route) => routeNames.includes(route.name))\n        .map(\n          (route) =>\n            ({\n              ...route,\n              key: route.key || `${route.name}-${nanoid()}`,\n              params:\n                routeParamList[route.name] !== undefined\n                  ? {\n                      ...routeParamList[route.name],\n                      ...route.params,\n                    }\n                  : route.params,\n            } as Route<string>)\n        );\n\n      if (routes.length === 0) {\n        const initialRouteName =\n          options.initialRouteName !== undefined\n            ? options.initialRouteName\n            : routeNames[0];\n\n        routes.push({\n          key: `${initialRouteName}-${nanoid()}`,\n          name: initialRouteName,\n          params: routeParamList[initialRouteName],\n        });\n      }\n\n      return {\n        stale: false,\n        type: 'stack',\n        key: `stack-${nanoid()}`,\n        index: routes.length - 1,\n        routeNames,\n        routes,\n      };\n    },\n\n    getStateForRouteNamesChange(\n      state,\n      { routeNames, routeParamList, routeKeyChanges }\n    ) {\n      const routes = state.routes.filter(\n        (route) =>\n          routeNames.includes(route.name) &&\n          !routeKeyChanges.includes(route.name)\n      );\n\n      if (routes.length === 0) {\n        const initialRouteName =\n          options.initialRouteName !== undefined &&\n          routeNames.includes(options.initialRouteName)\n            ? options.initialRouteName\n            : routeNames[0];\n\n        routes.push({\n          key: `${initialRouteName}-${nanoid()}`,\n          name: initialRouteName,\n          params: routeParamList[initialRouteName],\n        });\n      }\n\n      return {\n        ...state,\n        routeNames,\n        routes,\n        index: Math.min(state.index, routes.length - 1),\n      };\n    },\n\n    getStateForRouteFocus(state, key) {\n      const index = state.routes.findIndex((r) => r.key === key);\n\n      if (index === -1 || index === state.index) {\n        return state;\n      }\n\n      return {\n        ...state,\n        index,\n        routes: state.routes.slice(0, index + 1),\n      };\n    },\n\n    getStateForAction(state, action, options) {\n      const { routeParamList } = options;\n\n      switch (action.type) {\n        case 'REPLACE': {\n          const index =\n            action.target === state.key && action.source\n              ? state.routes.findIndex((r) => r.key === action.source)\n              : state.index;\n\n          if (index === -1) {\n            return null;\n          }\n\n          const { name, key, params } = action.payload;\n\n          if (!state.routeNames.includes(name)) {\n            return null;\n          }\n\n          return {\n            ...state,\n            routes: state.routes.map((route, i) =>\n              i === index\n                ? {\n                    key: key !== undefined ? key : `${name}-${nanoid()}`,\n                    name,\n                    params:\n                      routeParamList[name] !== undefined\n                        ? {\n                            ...routeParamList[name],\n                            ...params,\n                          }\n                        : params,\n                  }\n                : route\n            ),\n          };\n        }\n\n        case 'PUSH':\n          if (state.routeNames.includes(action.payload.name)) {\n            const getId = options.routeGetIdList[action.payload.name];\n            const id = getId?.({ params: action.payload.params });\n\n            const route = id\n              ? state.routes.find(\n                  (route) =>\n                    route.name === action.payload.name &&\n                    id === getId?.({ params: route.params })\n                )\n              : undefined;\n\n            let routes: Route<string>[];\n\n            if (route) {\n              routes = state.routes.filter((r) => r.key !== route.key);\n              routes.push({\n                ...route,\n                params:\n                  routeParamList[action.payload.name] !== undefined\n                    ? {\n                        ...routeParamList[action.payload.name],\n                        ...action.payload.params,\n                      }\n                    : action.payload.params,\n              });\n            } else {\n              routes = [\n                ...state.routes,\n                {\n                  key: `${action.payload.name}-${nanoid()}`,\n                  name: action.payload.name,\n                  params:\n                    routeParamList[action.payload.name] !== undefined\n                      ? {\n                          ...routeParamList[action.payload.name],\n                          ...action.payload.params,\n                        }\n                      : action.payload.params,\n                },\n              ];\n            }\n\n            return {\n              ...state,\n              index: routes.length - 1,\n              routes,\n            };\n          }\n\n          return null;\n\n        case 'POP': {\n          const index =\n            action.target === state.key && action.source\n              ? state.routes.findIndex((r) => r.key === action.source)\n              : state.index;\n\n          if (index > 0) {\n            const count = Math.max(index - action.payload.count + 1, 1);\n            const routes = state.routes\n              .slice(0, count)\n              .concat(state.routes.slice(index + 1));\n\n            return {\n              ...state,\n              index: routes.length - 1,\n              routes,\n            };\n          }\n\n          return null;\n        }\n\n        case 'POP_TO_TOP':\n          return router.getStateForAction(\n            state,\n            {\n              type: 'POP',\n              payload: { count: state.routes.length - 1 },\n            },\n            options\n          );\n\n        case 'NAVIGATE':\n          if (\n            action.payload.name !== undefined &&\n            !state.routeNames.includes(action.payload.name)\n          ) {\n            return null;\n          }\n\n          if (action.payload.key || action.payload.name) {\n            // If the route already exists, navigate to that\n            let index = -1;\n\n            const getId =\n              // `getId` and `key` can't be used together\n              action.payload.key === undefined &&\n              action.payload.name !== undefined\n                ? options.routeGetIdList[action.payload.name]\n                : undefined;\n            const id = getId?.({ params: action.payload.params });\n\n            if (id) {\n              index = state.routes.findIndex(\n                (route) =>\n                  route.name === action.payload.name &&\n                  id === getId?.({ params: route.params })\n              );\n            } else if (\n              (state.routes[state.index].name === action.payload.name &&\n                action.payload.key === undefined) ||\n              state.routes[state.index].key === action.payload.key\n            ) {\n              index = state.index;\n            } else {\n              for (let i = state.routes.length - 1; i >= 0; i--) {\n                if (\n                  (state.routes[i].name === action.payload.name &&\n                    action.payload.key === undefined) ||\n                  state.routes[i].key === action.payload.key\n                ) {\n                  index = i;\n                  break;\n                }\n              }\n            }\n\n            if (\n              index === -1 &&\n              action.payload.key &&\n              action.payload.name === undefined\n            ) {\n              return null;\n            }\n\n            if (index === -1 && action.payload.name !== undefined) {\n              const routes = [\n                ...state.routes,\n                {\n                  key:\n                    action.payload.key ?? `${action.payload.name}-${nanoid()}`,\n                  name: action.payload.name,\n                  path: action.payload.path,\n                  params:\n                    routeParamList[action.payload.name] !== undefined\n                      ? {\n                          ...routeParamList[action.payload.name],\n                          ...action.payload.params,\n                        }\n                      : action.payload.params,\n                },\n              ];\n\n              return {\n                ...state,\n                routes,\n                index: routes.length - 1,\n              };\n            }\n\n            const route = state.routes[index];\n\n            let params;\n\n            if (action.payload.merge) {\n              params =\n                action.payload.params !== undefined ||\n                routeParamList[route.name] !== undefined\n                  ? {\n                      ...routeParamList[route.name],\n                      ...route.params,\n                      ...action.payload.params,\n                    }\n                  : route.params;\n            } else {\n              params =\n                routeParamList[route.name] !== undefined\n                  ? {\n                      ...routeParamList[route.name],\n                      ...action.payload.params,\n                    }\n                  : action.payload.params;\n            }\n\n            return {\n              ...state,\n              index,\n              routes: [\n                ...state.routes.slice(0, index),\n                params !== route.params ||\n                (action.payload.path && action.payload.path !== route.path)\n                  ? {\n                      ...route,\n                      path: action.payload.path ?? route.path,\n                      params,\n                    }\n                  : state.routes[index],\n              ],\n            };\n          }\n\n          return null;\n\n        case 'GO_BACK':\n          if (state.index > 0) {\n            return router.getStateForAction(\n              state,\n              {\n                type: 'POP',\n                payload: { count: 1 },\n                target: action.target,\n                source: action.source,\n              },\n              options\n            );\n          }\n\n          return null;\n\n        default:\n          return BaseRouter.getStateForAction(state, action);\n      }\n    },\n\n    actionCreators: StackActions,\n  };\n\n  return router;\n}\n","import { nanoid } from 'nanoid/non-secure';\n\nimport BaseRouter from './BaseRouter';\nimport type {\n  CommonNavigationAction,\n  DefaultRouterOptions,\n  NavigationState,\n  ParamListBase,\n  PartialState,\n  Route,\n  Router,\n} from './types';\n\nexport type TabActionType = {\n  type: 'JUMP_TO';\n  payload: { name: string; params?: object };\n  source?: string;\n  target?: string;\n};\n\nexport type BackBehavior =\n  | 'initialRoute'\n  | 'firstRoute'\n  | 'history'\n  | 'order'\n  | 'none';\n\nexport type TabRouterOptions = DefaultRouterOptions & {\n  backBehavior?: BackBehavior;\n};\n\nexport type TabNavigationState<ParamList extends ParamListBase> = Omit<\n  NavigationState<ParamList>,\n  'history'\n> & {\n  /**\n   * Type of the router, in this case, it's tab.\n   */\n  type: 'tab';\n  /**\n   * List of previously visited route keys.\n   */\n  history: { type: 'route'; key: string }[];\n};\n\nexport type TabActionHelpers<ParamList extends ParamListBase> = {\n  /**\n   * Jump to an existing tab.\n   *\n   * @param name Name of the route for the tab.\n   * @param [params] Params object for the route.\n   */\n  jumpTo<RouteName extends Extract<keyof ParamList, string>>(\n    ...args: undefined extends ParamList[RouteName]\n      ? [screen: RouteName] | [screen: RouteName, params: ParamList[RouteName]]\n      : [screen: RouteName, params: ParamList[RouteName]]\n  ): void;\n};\n\nconst TYPE_ROUTE = 'route' as const;\n\nexport const TabActions = {\n  jumpTo(name: string, params?: object): TabActionType {\n    return { type: 'JUMP_TO', payload: { name, params } };\n  },\n};\n\nconst getRouteHistory = (\n  routes: Route<string>[],\n  index: number,\n  backBehavior: BackBehavior,\n  initialRouteName: string | undefined\n) => {\n  const history = [{ type: TYPE_ROUTE, key: routes[index].key }];\n  let initialRouteIndex;\n\n  switch (backBehavior) {\n    case 'order':\n      for (let i = index; i > 0; i--) {\n        history.unshift({ type: TYPE_ROUTE, key: routes[i - 1].key });\n      }\n      break;\n    case 'firstRoute':\n      if (index !== 0) {\n        history.unshift({\n          type: TYPE_ROUTE,\n          key: routes[0].key,\n        });\n      }\n      break;\n    case 'initialRoute':\n      initialRouteIndex = routes.findIndex(\n        (route) => route.name === initialRouteName\n      );\n      initialRouteIndex = initialRouteIndex === -1 ? 0 : initialRouteIndex;\n\n      if (index !== initialRouteIndex) {\n        history.unshift({\n          type: TYPE_ROUTE,\n          key: routes[initialRouteIndex].key,\n        });\n      }\n      break;\n    case 'history':\n      // The history will fill up on navigation\n      break;\n  }\n\n  return history;\n};\n\nconst changeIndex = (\n  state: TabNavigationState<ParamListBase>,\n  index: number,\n  backBehavior: BackBehavior,\n  initialRouteName: string | undefined\n) => {\n  let history;\n\n  if (backBehavior === 'history') {\n    const currentKey = state.routes[index].key;\n\n    history = state.history\n      .filter((it) => (it.type === 'route' ? it.key !== currentKey : false))\n      .concat({ type: TYPE_ROUTE, key: currentKey });\n  } else {\n    history = getRouteHistory(\n      state.routes,\n      index,\n      backBehavior,\n      initialRouteName\n    );\n  }\n\n  return {\n    ...state,\n    index,\n    history,\n  };\n};\n\nexport default function TabRouter({\n  initialRouteName,\n  backBehavior = 'firstRoute',\n}: TabRouterOptions) {\n  const router: Router<\n    TabNavigationState<ParamListBase>,\n    TabActionType | CommonNavigationAction\n  > = {\n    ...BaseRouter,\n\n    type: 'tab',\n\n    getInitialState({ routeNames, routeParamList }) {\n      const index =\n        initialRouteName !== undefined && routeNames.includes(initialRouteName)\n          ? routeNames.indexOf(initialRouteName)\n          : 0;\n\n      const routes = routeNames.map((name) => ({\n        name,\n        key: `${name}-${nanoid()}`,\n        params: routeParamList[name],\n      }));\n\n      const history = getRouteHistory(\n        routes,\n        index,\n        backBehavior,\n        initialRouteName\n      );\n\n      return {\n        stale: false,\n        type: 'tab',\n        key: `tab-${nanoid()}`,\n        index,\n        routeNames,\n        history,\n        routes,\n      };\n    },\n\n    getRehydratedState(partialState, { routeNames, routeParamList }) {\n      let state = partialState;\n\n      if (state.stale === false) {\n        return state;\n      }\n\n      const routes = routeNames.map((name) => {\n        const route = (\n          state as PartialState<TabNavigationState<ParamListBase>>\n        ).routes.find((r) => r.name === name);\n\n        return {\n          ...route,\n          name,\n          key:\n            route && route.name === name && route.key\n              ? route.key\n              : `${name}-${nanoid()}`,\n          params:\n            routeParamList[name] !== undefined\n              ? {\n                  ...routeParamList[name],\n                  ...(route ? route.params : undefined),\n                }\n              : route\n              ? route.params\n              : undefined,\n        } as Route<string>;\n      });\n\n      const index = Math.min(\n        Math.max(routeNames.indexOf(state.routes[state?.index ?? 0]?.name), 0),\n        routes.length - 1\n      );\n\n      const history =\n        state.history?.filter((it) => routes.find((r) => r.key === it.key)) ??\n        [];\n\n      return changeIndex(\n        {\n          stale: false,\n          type: 'tab',\n          key: `tab-${nanoid()}`,\n          index,\n          routeNames,\n          history,\n          routes,\n        },\n        index,\n        backBehavior,\n        initialRouteName\n      );\n    },\n\n    getStateForRouteNamesChange(\n      state,\n      { routeNames, routeParamList, routeKeyChanges }\n    ) {\n      const routes = routeNames.map(\n        (name) =>\n          state.routes.find(\n            (r) => r.name === name && !routeKeyChanges.includes(r.name)\n          ) || {\n            name,\n            key: `${name}-${nanoid()}`,\n            params: routeParamList[name],\n          }\n      );\n\n      const index = Math.max(\n        0,\n        routeNames.indexOf(state.routes[state.index].name)\n      );\n\n      let history = state.history.filter(\n        // Type will always be 'route' for tabs, but could be different in a router extending this (e.g. drawer)\n        (it) => it.type !== 'route' || routes.find((r) => r.key === it.key)\n      );\n\n      if (!history.length) {\n        history = getRouteHistory(\n          routes,\n          index,\n          backBehavior,\n          initialRouteName\n        );\n      }\n\n      return {\n        ...state,\n        history,\n        routeNames,\n        routes,\n        index,\n      };\n    },\n\n    getStateForRouteFocus(state, key) {\n      const index = state.routes.findIndex((r) => r.key === key);\n\n      if (index === -1 || index === state.index) {\n        return state;\n      }\n\n      return changeIndex(state, index, backBehavior, initialRouteName);\n    },\n\n    getStateForAction(state, action, { routeParamList, routeGetIdList }) {\n      switch (action.type) {\n        case 'JUMP_TO':\n        case 'NAVIGATE': {\n          let index = -1;\n\n          if (action.type === 'NAVIGATE' && action.payload.key) {\n            index = state.routes.findIndex(\n              (route) => route.key === action.payload.key\n            );\n          } else {\n            index = state.routes.findIndex(\n              (route) => route.name === action.payload.name\n            );\n          }\n\n          if (index === -1) {\n            return null;\n          }\n\n          return changeIndex(\n            {\n              ...state,\n              routes: state.routes.map((route, i) => {\n                if (i !== index) {\n                  return route;\n                }\n\n                const getId = routeGetIdList[route.name];\n\n                const currentId = getId?.({ params: route.params });\n                const nextId = getId?.({ params: action.payload.params });\n\n                const key =\n                  currentId === nextId\n                    ? route.key\n                    : `${route.name}-${nanoid()}`;\n\n                let params;\n\n                if (\n                  action.type === 'NAVIGATE' &&\n                  action.payload.merge &&\n                  currentId === nextId\n                ) {\n                  params =\n                    action.payload.params !== undefined ||\n                    routeParamList[route.name] !== undefined\n                      ? {\n                          ...routeParamList[route.name],\n                          ...route.params,\n                          ...action.payload.params,\n                        }\n                      : route.params;\n                } else {\n                  params =\n                    routeParamList[route.name] !== undefined\n                      ? {\n                          ...routeParamList[route.name],\n                          ...action.payload.params,\n                        }\n                      : action.payload.params;\n                }\n\n                const path =\n                  action.type === 'NAVIGATE' && action.payload.path != null\n                    ? action.payload.path\n                    : route.path;\n\n                return params !== route.params || path !== route.path\n                  ? { ...route, key, path, params }\n                  : route;\n              }),\n            },\n            index,\n            backBehavior,\n            initialRouteName\n          );\n        }\n\n        case 'GO_BACK': {\n          if (state.history.length === 1) {\n            return null;\n          }\n\n          const previousKey = state.history[state.history.length - 2].key;\n          const index = state.routes.findIndex(\n            (route) => route.key === previousKey\n          );\n\n          if (index === -1) {\n            return null;\n          }\n\n          return {\n            ...state,\n            history: state.history.slice(0, -1),\n            index,\n          };\n        }\n\n        default:\n          return BaseRouter.getStateForAction(state, action);\n      }\n    },\n\n    shouldActionChangeFocus(action) {\n      return action.type === 'NAVIGATE';\n    },\n\n    actionCreators: TabActions,\n  };\n\n  return router;\n}\n","import * as CommonActions from './CommonActions';\n\nexport { CommonActions };\n\nexport { default as BaseRouter } from './BaseRouter';\nexport type {\n  DrawerActionHelpers,\n  DrawerActionType,\n  DrawerNavigationState,\n  DrawerRouterOptions,\n  DrawerStatus,\n} from './DrawerRouter';\nexport { DrawerActions, default as DrawerRouter } from './DrawerRouter';\nexport type {\n  StackActionHelpers,\n  StackActionType,\n  StackNavigationState,\n  StackRouterOptions,\n} from './StackRouter';\nexport { StackActions, default as StackRouter } from './StackRouter';\nexport type {\n  TabActionHelpers,\n  TabActionType,\n  TabNavigationState,\n  TabRouterOptions,\n} from './TabRouter';\nexport { TabActions, default as TabRouter } from './TabRouter';\nexport * from './types';\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactNativeSvg = require(\"react-native-svg\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nvar propTypes = {\n  bgColor: _propTypes2.default.oneOfType([_propTypes2.default.object, _propTypes2.default.string]).isRequired,\n  bgD: _propTypes2.default.string.isRequired,\n  fgColor: _propTypes2.default.oneOfType([_propTypes2.default.object, _propTypes2.default.string]).isRequired,\n  fgD: _propTypes2.default.string.isRequired,\n  size: _propTypes2.default.number.isRequired,\n  viewBoxSize: _propTypes2.default.number.isRequired\n};\n\nvar QRCodeSvg = (0, _react.forwardRef)(function (_ref, ref) {\n  var bgColor = _ref.bgColor,\n      bgD = _ref.bgD,\n      fgD = _ref.fgD,\n      fgColor = _ref.fgColor,\n      size = _ref.size,\n      viewBoxSize = _ref.viewBoxSize,\n      props = _objectWithoutProperties(_ref, [\"bgColor\", \"bgD\", \"fgD\", \"fgColor\", \"size\", \"viewBoxSize\"]);\n\n  return _react2.default.createElement(\n    _reactNativeSvg.Svg,\n    _extends({}, props, { height: size, ref: ref, style: { height: size, width: size }, viewBox: \"0 0 \" + viewBoxSize + \" \" + viewBoxSize, width: size }),\n    _react2.default.createElement(_reactNativeSvg.Path, { d: bgD, fill: bgColor }),\n    _react2.default.createElement(_reactNativeSvg.Path, { d: fgD, fill: fgColor })\n  );\n});\n\nQRCodeSvg.displayName = \"QRCodeSvg\";\nQRCodeSvg.propTypes = propTypes;\n\nexports.default = QRCodeSvg;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.QRCode = undefined;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _ErrorCorrectLevel = require(\"qr.js/lib/ErrorCorrectLevel\");\n\nvar _ErrorCorrectLevel2 = _interopRequireDefault(_ErrorCorrectLevel);\n\nvar _QRCode = require(\"qr.js/lib/QRCode\");\n\nvar _QRCode2 = _interopRequireDefault(_QRCode);\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _QRCodeSvg = require(\"./QRCodeSvg\");\n\nvar _QRCodeSvg2 = _interopRequireDefault(_QRCodeSvg);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n// A `qr.js` doesn't handle error level of zero (M) so we need to do it right, thus the deep require.\n\n\nvar propTypes = {\n  bgColor: _propTypes2.default.oneOfType([_propTypes2.default.object, _propTypes2.default.string]),\n  fgColor: _propTypes2.default.oneOfType([_propTypes2.default.object, _propTypes2.default.string]),\n  level: _propTypes2.default.string,\n  size: _propTypes2.default.number,\n  value: _propTypes2.default.string.isRequired\n};\n\nvar QRCode = (0, _react.forwardRef)(function (_ref, ref) {\n  var _ref$bgColor = _ref.bgColor,\n      bgColor = _ref$bgColor === undefined ? \"#FFFFFF\" : _ref$bgColor,\n      _ref$fgColor = _ref.fgColor,\n      fgColor = _ref$fgColor === undefined ? \"#000000\" : _ref$fgColor,\n      _ref$level = _ref.level,\n      level = _ref$level === undefined ? \"L\" : _ref$level,\n      _ref$size = _ref.size,\n      size = _ref$size === undefined ? 256 : _ref$size,\n      value = _ref.value,\n      props = _objectWithoutProperties(_ref, [\"bgColor\", \"fgColor\", \"level\", \"size\", \"value\"]);\n\n  // Use type === -1 to automatically pick the best type.\n  var qrcode = new _QRCode2.default(-1, _ErrorCorrectLevel2.default[level]);\n  qrcode.addData(value);\n  qrcode.make();\n  var cells = qrcode.modules;\n  return _react2.default.createElement(_QRCodeSvg2.default, _extends({}, props, {\n    bgColor: bgColor,\n    bgD: cells.map(function (row, rowIndex) {\n      return row.map(function (cell, cellIndex) {\n        return !cell ? \"M \" + cellIndex + \" \" + rowIndex + \" l 1 0 0 1 -1 0 Z\" : \"\";\n      }).join(\" \");\n    }).join(\" \"),\n    fgColor: fgColor,\n    fgD: cells.map(function (row, rowIndex) {\n      return row.map(function (cell, cellIndex) {\n        return cell ? \"M \" + cellIndex + \" \" + rowIndex + \" l 1 0 0 1 -1 0 Z\" : \"\";\n      }).join(\" \");\n    }).join(\" \"),\n    ref: ref,\n    size: size,\n    viewBoxSize: cells.length\n  }));\n});\n\nexports.QRCode = QRCode;\nQRCode.displayName = \"QRCode\";\nQRCode.propTypes = propTypes;\n\nexports.default = QRCode;"],"names":["_createNativeStackNavigator","_interopRequireDefault","require","_NativeStackView","_native","React","e","r","__esModule","default","t","_getRequireWildcardCache","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","_interopRequireWildcard","_jsxRuntime","_excluded","WeakMap","exports","createNavigatorFactory","_ref","id","initialRouteName","children","screenListeners","screenOptions","rest","_objectWithoutProperties2","_useNavigationBuilder","useNavigationBuilder","StackRouter","state","descriptors","navigation","NavigationContent","useEffect","addListener","isFocused","requestAnimationFrame","index","defaultPrevented","dispatch","assign","StackActions","popToTop","target","key","jsx","_state$routes$find","_React$useState","useState","_React$useState2","_slicedToArray2","nextDismissedKey","setNextDismissedKey","dismissedRouteName","routes","find","route","name","message","console","error","_preventedDescriptor$","_preventedDescriptor$2","preventedRoutes","usePreventRemoveContext","preventedRouteKey","keys","preventedDescriptor","isHeaderBackButtonMenuEnabledOnPreventedScreen","options","headerBackButtonMenuEnabled","preventedRouteName","_reactNative","props","View","collapsable","fontFamilies","_ReactNativeStyleAttr","fontFamilyProcessor","ReactNativeStyleAttributes","fontFamily","process","map","_ReactNativeStyleAttributes","_ref2","_headerTitleStyleFlat","_headerStyleFlattened","headerBackImageSource","headerBackTitle","headerBackTitleStyle","_ref$headerBackTitleV","headerBackTitleVisible","headerBackVisible","headerShadowVisible","headerLargeStyle","headerLargeTitle","headerLargeTitleShadowVisible","headerLargeTitleStyle","headerBackground","headerLeft","headerRight","headerShown","headerStyle","headerBlurEffect","headerTintColor","headerTitle","headerTitleAlign","headerTitleStyle","headerTransparent","headerSearchBarOptions","headerTopInsetEnabled","title","canGoBack","colors","useTheme","tintColor","Platform","OS","primary","text","headerBackTitleStyleFlattened","StyleSheet","flatten","headerLargeTitleStyleFlattened","headerTitleStyleFlattened","headerStyleFlattened","headerLargeStyleFlattened","_processFonts","processFonts","_processFonts2","backTitleFontFamily","largeTitleFontFamily","titleFontFamily","titleText","getHeaderTitle","titleColor","color","titleFontSize","fontSize","titleFontWeight","fontWeight","headerTitleStyleSupported","headerLeftElement","label","headerRightElement","headerTitleElement","supportsHeaderSearchBar","isSearchBarAvailableForCurrentPlatform","SearchBar","hasHeaderSearchBar","Error","backButtonInCustomView","translucent","jsxs","_reactNativeScreens","ScreenStackHeaderConfig","backgroundColor","card","backTitle","isNewBackTitleImplementation","backTitleVisible","backTitleFontSize","blurEffect","direction","I18nManager","getConstants","isRTL","disableBackButtonMenu","hidden","hideBackButton","hideShadow","largeTitle","largeTitleBackgroundColor","largeTitleColor","largeTitleFontSize","largeTitleFontWeight","largeTitleHideShadow","topInsetEnabled","Fragment","ScreenStackHeaderLeftView","ScreenStackHeaderCenterView","style","styles","row","_elements","HeaderTitle","undefined","ScreenStackHeaderBackButtonImage","source","ScreenStackHeaderRightView","ScreenStackHeaderSearchBarView","_FontProcessor","create","flexDirection","alignItems","SafeAreaProviderCompat","NativeStackViewInner","_reactNativeSafeAreaContext","_warnOnce","_useDismissedRouteError","_useInvalidPreventRemoveError","_DebugContainer","_HeaderConfig","isAndroid","MaybeNestedStack","presentation","headerHeight","header","_options$headerShown","contentStyle","isHeaderInModal","headerShownPreviousRef","useRef","warnOnce","current","content","container","background","stackPresentation","ScreenStack","Screen","enabled","absoluteFill","SceneView","_preventedRoutes$rout","focused","descriptor","previousDescriptor","nextDescriptor","onWillDisappear","onAppear","onDisappear","onDismissed","onHeaderBackButtonClicked","onNativeDismissCancelled","render","animationDuration","_options$animationTyp","animationTypeForReplace","gestureEnabled","autoHideHomeIndicator","navigationBarColor","navigationBarHidden","orientation","statusBarAnimation","statusBarHidden","statusBarStyle","statusBarTranslucent","statusBarColor","freezeOnBlur","animation","customAnimationOnGesture","fullScreenGestureEnabled","_options$presentation","_options$gestureDirec","gestureDirection","nextGestureDirection","gestureDirectionOverride","insets","useSafeAreaInsets","frame","useSafeAreaFrame","isModal","isIPhone","isPad","isTV","isLandscape","width","height","isParentHeaderShown","useContext","HeaderShownContext","parentHeaderHeight","HeaderHeightContext","parentHeaderBack","HeaderBackContext","topInset","top","statusBarHeight","defaultHeaderHeight","getDefaultHeaderHeight","customHeaderHeight","setCustomHeaderHeight","headerBack","isRemovePrevented","preventRemove","customAnimationOnSwipe","fullScreenSwipeEnabled","homeIndicatorHidden","replaceAnimation","stackAnimation","screenOrientation","swipeDirection","transitionDuration","isNativeStack","nativeBackButtonDismissalEnabled","preventNativeDismiss","NavigationContext","Provider","value","NavigationRouteContext","accessibilityElementsHidden","importantForAccessibility","scene","onLayout","nativeEvent","layout","absolute","back","_ref3","useDismissedRouteError","useInvalidPreventRemoveError","_state$routes","_state$routes2","previousKey","nextKey","emit","type","data","closing","event","pop","dismissCount","flex","position","left","right","zIndex","elevation","overflow","to","action","useLinkProps","onPress","createElement","Text","select","web","onClick","_useLinkProps","LinkingContext","createContext","displayName","_core","_LinkingContext","_DefaultTheme","_ThemeProvider","_useBackButton","_useDocumentTitle","_useLinking2","_useThenable3","global","REACT_NAVIGATION_DEVTOOLS","NavigationContainer","forwardRef","ref","_ref$theme","theme","DefaultTheme","linking","_ref$fallback","fallback","documentTitle","onReady","isLinkingEnabled","config","validatePathConfig","refContainer","useBackButton","useDocumentTitle","getInitialState","useLinking","independent","prefixes","_linking$prefixes","_linking$getStateFrom","_linking$getPathFromS","_linking$getActionFro","getStateFromPath","getPathFromState","getActionFromState","_useThenable","useThenable","_useThenable2","isResolved","initialState","useImperativeHandle","linkingContext","useMemo","isReady","onReadyRef","BaseNavigationContainer","_ServerContext","location","getCurrentOptions","CurrentRenderContext","ServerContext","url","prefix","_prefix$match$","_prefix$match","protocol","match","host","replace","RegExp","escapeStringRegexp","prefixRegex","split","it","join","_url$split","_url$split2","originAndPath","searchParams","normalizedURL","concat","test","_escapeStringRegexp","_Link","_NavigationContainer","_ServerContainer","_DarkTheme","_useTheme","_types","forEach","prototype","_exportNames","enumerable","_useLinkBuilder","_useLinkTo","_useScrollToTop","dark","border","notification","ThemeContext","_ThemeContext","subscription","BackHandler","addEventListener","goBack","remove","NavigationHelpersContext","useCallback","params","getRootStateForNavigate","parent","getParent","parentState","getState","_options$getPathFromS","root","NavigationContainerRefContext","linkTo","useLinkTo","getPathFromStateHelper","href","screen","getStateFromParams","accessibilityRole","_e$currentTarget","shouldHandle","metaKey","altKey","ctrlKey","shiftKey","button","includes","currentTarget","preventDefault","startsWith","reset","navigate","_ref$enabled","filter","_ref$getInitialURL","getInitialURL","Promise","race","Linking","resolve","setTimeout","_ref$subscribe","subscribe","listener","_Linking$removeEventL","callback","removeEventListener","bind","_ref$getStateFromPath","getStateFromPathDefault","_ref$getActionFromSta","getActionFromStateDefault","enabledRef","prefixesRef","filterRef","configRef","getInitialURLRef","getStateFromPathRef","getActionFromStateRef","getStateFromURL","path","extractPathFromURL","then","thenable","onfulfilled","catch","rootState","getRootState","some","routeNames","warn","resetRoot","_extractPathFromURL","useRoute","tabNavigations","currentNavigation","push","length","unsubscribers","tab","isFirst","scrollable","getScrollResponder","getNode","getScrollableNode","scrollToTop","scrollTo","y","animated","scrollToOffset","offset","scrollResponderScrollTo","unsubscribe","promise","result","_React$useState3","_React$useState4","setState","resolved","cancelled","_asyncToGenerator2","apply","arguments","_nonSecure","BaseRouter","getStateForAction","findIndex","payload","nextState","stale","nanoid","shouldActionChangeFocus","_ref$defaultStatus","defaultStatus","router","TabRouter","isDrawerInHistory","_state$history","Boolean","history","addDrawerToHistory","_toConsumableArray2","status","removeDrawerFromHistory","closeDrawer","routeParamList","routeGetIdList","getRehydratedState","partialState","getStateForRouteFocus","openDrawer","actionCreators","DrawerActions","_TabRouter","TabActions","toggleDrawer","getStateForRouteNamesChange","routeKeyChanges","Math","min","slice","_action$payload","getId","count","max","_action$payload$path","_action$payload$key","merge","_BaseRouter","_ref$backBehavior","backBehavior","indexOf","getRouteHistory","_state$index","_state$history$filter","changeIndex","_ref4","_ref5","currentId","nextId","TYPE_ROUTE","jumpTo","initialRouteIndex","unshift","currentKey","CommonActions","_DrawerRouter","_StackRouter","_extends","_propTypes2","_react","_react2","_reactNativeSvg","obj","propTypes","bgColor","oneOfType","object","string","isRequired","bgD","fgColor","fgD","size","number","viewBoxSize","QRCodeSvg","_objectWithoutProperties","Svg","viewBox","Path","d","fill","QRCode","_ErrorCorrectLevel2","_QRCode2","_QRCodeSvg2","level","_ref$bgColor","_ref$fgColor","_ref$level","_ref$size","qrcode","addData","make","cells","modules","rowIndex","cell","cellIndex"],"sourceRoot":""}