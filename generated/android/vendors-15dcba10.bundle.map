{"version":3,"file":"vendors-15dcba10.bundle","mappings":"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","sources":["webpack:///./node_modules/react-native-toast-message/lib/index.js","webpack:///./node_modules/react-native-toast-message/lib/src/Toast.js","webpack:///./node_modules/react-native-toast-message/lib/src/ToastUI.js","webpack:///./node_modules/react-native-toast-message/lib/src/components/AnimatedContainer.js","webpack:///./node_modules/react-native-toast-message/lib/src/components/AnimatedContainer.styles.js","webpack:///./node_modules/react-native-toast-message/lib/src/components/BaseToast.js","webpack:///./node_modules/react-native-toast-message/lib/src/components/BaseToast.styles.js","webpack:///./node_modules/react-native-toast-message/lib/src/components/ErrorToast.js","webpack:///./node_modules/react-native-toast-message/lib/src/components/InfoToast.js","webpack:///./node_modules/react-native-toast-message/lib/src/components/SuccessToast.js","webpack:///./node_modules/react-native-toast-message/lib/src/contexts/LoggerContext.js","webpack:///./node_modules/react-native-toast-message/lib/src/contexts/index.js","webpack:///./node_modules/react-native-toast-message/lib/src/hooks/index.js","webpack:///./node_modules/react-native-toast-message/lib/src/hooks/useKeyboard.js","webpack:///./node_modules/react-native-toast-message/lib/src/hooks/usePanResponder.js","webpack:///./node_modules/react-native-toast-message/lib/src/hooks/useSlideAnimation.js","webpack:///./node_modules/react-native-toast-message/lib/src/hooks/useTimeout.js","webpack:///./node_modules/react-native-toast-message/lib/src/hooks/useViewDimensions.js","webpack:///./node_modules/react-native-toast-message/lib/src/useToast.js","webpack:///./node_modules/react-native-toast-message/lib/src/utils/array.js","webpack:///./node_modules/react-native-toast-message/lib/src/utils/func.js","webpack:///./node_modules/react-native-toast-message/lib/src/utils/number.js","webpack:///./node_modules/react-native-toast-message/lib/src/utils/obj.js","webpack:///./node_modules/react-native-toast-message/lib/src/utils/platform.js","webpack:///./node_modules/react-native-toast-message/lib/src/utils/test-id.js","webpack:///./node_modules/react-native-vector-icons/MaterialCommunityIcons.js","webpack:///./node_modules/react-native-vector-icons/lib/NativeRNVectorIcons.js","webpack:///./node_modules/react-native-vector-icons/lib/create-icon-set.js","webpack:///./node_modules/react-native-vector-icons/lib/create-icon-source-cache.js","webpack:///./node_modules/react-native-vector-icons/lib/ensure-native-module-available.js","webpack:///./node_modules/react-native-vector-icons/lib/icon-button.js","webpack:///./node_modules/react-native-vector-icons/lib/object-utils.js","webpack:///./node_modules/react-native-video/src/Video.tsx","webpack:///./node_modules/react-native-video/src/VideoDecoderProperties.ts","webpack:///./node_modules/react-native-video/src/index.ts","webpack:///./node_modules/react-native-video/src/specs/NativeVideoDecoderInfoModule.ts","webpack:///./node_modules/react-native-video/src/specs/NativeVideoManager.ts","webpack:///./node_modules/react-native-video/src/specs/VideoNativeComponent.ts","webpack:///./node_modules/react-native-video/src/types/Ads.ts","webpack:///./node_modules/react-native-video/src/types/FilterType.ts","webpack:///./node_modules/react-native-video/src/types/Orientation.ts","webpack:///./node_modules/react-native-video/src/types/ResizeMode.ts","webpack:///./node_modules/react-native-video/src/types/TextTrackType.ts","webpack:///./node_modules/react-native-video/src/types/ViewType.ts","webpack:///./node_modules/react-native-video/src/types/index.ts","webpack:///./node_modules/react-native-video/src/types/video.ts","webpack:///./node_modules/react-native-video/src/utils.ts"],"sourcesContent":["export { Toast as default } from './src/Toast';\nexport { BaseToast } from './src/components/BaseToast';\nexport { SuccessToast } from './src/components/SuccessToast';\nexport { ErrorToast } from './src/components/ErrorToast';\nexport { InfoToast } from './src/components/InfoToast';\nexport * from './src/types';\n","import React from 'react';\nimport { LoggerProvider } from './contexts';\nimport { ToastUI } from './ToastUI';\nimport { useToast } from './useToast';\nconst ToastRoot = React.forwardRef((props, ref) => {\n    const { config, ...defaultOptions } = props;\n    const { show, hide, isVisible, options, data } = useToast({\n        defaultOptions\n    });\n    // This must use useCallback to ensure the ref doesn't get set to null and then a new ref every render.\n    React.useImperativeHandle(ref, React.useCallback(() => ({\n        show,\n        hide\n    }), [hide, show]));\n    return (<ToastUI isVisible={isVisible} options={options} data={data} hide={hide} show={show} config={config}/>);\n});\nlet refs = [];\n/**\n * Adds a ref to the end of the array, which will be used to show the toasts until its ref becomes null.\n *\n * @param newRef the new ref, which must be stable for the life of the Toast instance.\n */\nfunction addNewRef(newRef) {\n    refs.push({\n        current: newRef\n    });\n}\n/**\n * Removes the passed in ref from the file-level refs array using a strict equality check.\n *\n * @param oldRef the exact ref object to remove from the refs array.\n */\nfunction removeOldRef(oldRef) {\n    refs = refs.filter((r) => r.current !== oldRef);\n}\nexport function Toast(props) {\n    const toastRef = React.useRef(null);\n    /*\n      This must use `useCallback` to ensure the ref doesn't get set to null and then a new ref every render.\n      Failure to do so will cause whichever Toast *renders or re-renders* last to be the instance that is used,\n      rather than being the Toast that was *mounted* last.\n    */\n    const setRef = React.useCallback((ref) => {\n        // Since we know there's a ref, we'll update `refs` to use it.\n        if (ref) {\n            // store the ref in this toast instance to be able to remove it from the array later when the ref becomes null.\n            toastRef.current = ref;\n            addNewRef(ref);\n        }\n        else {\n            // remove the this toast's ref, wherever it is in the array.\n            removeOldRef(toastRef.current);\n        }\n    }, []);\n    return (<LoggerProvider enableLogs={false}>\n      <ToastRoot ref={setRef} {...props}/>\n    </LoggerProvider>);\n}\n/**\n * Get the active Toast instance `ref`, by priority.\n * The \"highest\" Toast in the `View` hierarchy has the highest priority.\n *\n * For example, a Toast inside a `Modal`, would have had its ref set later than a Toast inside App's Root.\n * Therefore, the library knows that it is currently visible on top of the App's Root\n * and will thus use the `Modal`'s Toast when showing/hiding.\n *\n * ```js\n * <>\n *  <Toast />\n *  <Modal>\n *    <Toast />\n *  </Modal>\n * </>\n * ```\n */\nfunction getRef() {\n    const reversePriority = [...refs].reverse();\n    const activeRef = reversePriority.find((ref) => ref?.current !== null);\n    if (!activeRef) {\n        return null;\n    }\n    return activeRef.current;\n}\nToast.show = (params) => {\n    getRef()?.show(params);\n};\nToast.hide = (params) => {\n    getRef()?.hide(params);\n};\n","import React from 'react';\nimport { AnimatedContainer } from './components/AnimatedContainer';\nimport { ErrorToast } from './components/ErrorToast';\nimport { InfoToast } from './components/InfoToast';\nimport { SuccessToast } from './components/SuccessToast';\nconst defaultToastConfig = {\n    success: (props) => <SuccessToast {...props}/>,\n    error: (props) => <ErrorToast {...props}/>,\n    info: (props) => <InfoToast {...props}/>\n};\nfunction renderComponent({ data, options, config, isVisible, show, hide }) {\n    const { text1, text2 } = data;\n    const { type, onPress, text1Style, text2Style, position, props } = options;\n    const toastConfig = {\n        ...defaultToastConfig,\n        ...config\n    };\n    const ToastComponent = toastConfig[type];\n    if (!ToastComponent) {\n        throw new Error(`Toast type: '${type}' does not exist. You can add it via the 'config' prop on the Toast instance. Learn more: https://github.com/calintamas/react-native-toast-message/blob/master/README.md`);\n    }\n    return ToastComponent({\n        position,\n        type,\n        isVisible,\n        text1,\n        text2,\n        text1Style,\n        text2Style,\n        show,\n        hide,\n        onPress,\n        props\n    });\n}\nexport function ToastUI(props) {\n    const { isVisible, options, hide } = props;\n    const { position, topOffset, bottomOffset, keyboardOffset, swipeable } = options;\n    return (<AnimatedContainer isVisible={isVisible} position={position} topOffset={topOffset} bottomOffset={bottomOffset} keyboardOffset={keyboardOffset} swipeable={swipeable} onHide={hide}>\n      {renderComponent(props)}\n    </AnimatedContainer>);\n}\n","import React from 'react';\nimport { Animated, Dimensions } from 'react-native';\nimport { useLogger } from '../contexts';\nimport { usePanResponder, useSlideAnimation, useViewDimensions } from '../hooks';\nimport { noop } from '../utils/func';\nimport { bound } from '../utils/number';\nimport { getTestId } from '../utils/test-id';\nimport { styles } from './AnimatedContainer.styles';\n/**\n * Produces a positive damping value.\n *\n * To note: `moveY` becomes negative when going off-screen. By making sure the value\n * produced is always positive, we avoid issues like: https://github.com/calintamas/react-native-toast-message/issues/280\n */\nexport function dampingFor(gesture, position) {\n    const { moveY } = gesture;\n    switch (position) {\n        case 'bottom': {\n            const { height: screenHeight } = Dimensions.get('screen');\n            return Math.abs(screenHeight - moveY);\n        }\n        case 'top':\n            return Math.abs(moveY);\n        default:\n            throw new Error(`Toast position: ${position} not implemented`);\n    }\n}\nexport function animatedValueFor(gesture, position, damping) {\n    const boundValue = (val) => bound(val, 0, 2);\n    const { dy } = gesture;\n    switch (position) {\n        case 'bottom':\n            return boundValue(1 - dy / damping);\n        case 'top':\n            return boundValue(1 + dy / damping);\n        default:\n            throw new Error(`Toast position: ${position} not implemented`);\n    }\n}\nexport function AnimatedContainer({ children, isVisible, position, topOffset, bottomOffset, keyboardOffset, onHide, onRestorePosition = noop, swipeable }) {\n    const { log } = useLogger();\n    const { computeViewDimensions, height } = useViewDimensions();\n    const { animatedValue, animate, animationStyles } = useSlideAnimation({\n        position,\n        height,\n        topOffset,\n        bottomOffset,\n        keyboardOffset\n    });\n    const onDismiss = React.useCallback(() => {\n        log('Swipe, dismissing');\n        animate(0);\n        onHide();\n    }, [animate, log, onHide]);\n    const onRestore = React.useCallback(() => {\n        log('Swipe, restoring to original position');\n        animate(1);\n        onRestorePosition();\n    }, [animate, log, onRestorePosition]);\n    const computeNewAnimatedValueForGesture = React.useCallback((gesture) => {\n        const damping = dampingFor(gesture, position);\n        const newAnimatedValue = animatedValueFor(gesture, position, damping);\n        return newAnimatedValue;\n    }, [position]);\n    const { panResponder } = usePanResponder({\n        animatedValue,\n        computeNewAnimatedValueForGesture,\n        onDismiss,\n        onRestore,\n        disable: !swipeable\n    });\n    React.useLayoutEffect(() => {\n        const newAnimationValue = isVisible ? 1 : 0;\n        animate(newAnimationValue);\n    }, [animate, isVisible]);\n    return (<Animated.View testID={getTestId('AnimatedContainer')} onLayout={computeViewDimensions} style={[styles.base, styles[position], animationStyles]} \n    // This container View is never the target of touch events but its subviews can be.\n    // By doing this, tapping buttons behind the Toast is allowed\n    pointerEvents={isVisible ? 'box-none' : 'none'} {...panResponder.panHandlers}>\n      {children}\n    </Animated.View>);\n}\n","import { StyleSheet } from 'react-native';\nexport const styles = StyleSheet.create({\n    base: {\n        position: 'absolute',\n        left: 0,\n        right: 0,\n        alignItems: 'center',\n        justifyContent: 'center'\n    },\n    top: {\n        top: 0\n    },\n    bottom: {\n        bottom: 0\n    }\n});\n","import React from 'react';\nimport { Text, View, TouchableOpacity } from 'react-native';\nimport { getTestId } from '../utils/test-id';\nimport { styles } from './BaseToast.styles';\nexport function BaseToast({ text1, text2, onPress, activeOpacity = 1, style, touchableContainerProps, contentContainerStyle, contentContainerProps, text1Style, text1NumberOfLines = 1, text1Props, text2Style, text2NumberOfLines = 1, text2Props, renderLeadingIcon, renderTrailingIcon }) {\n    return (<TouchableOpacity testID={getTestId('TouchableContainer')} onPress={onPress} activeOpacity={activeOpacity} style={[styles.base, styles.leadingBorder, style]} {...touchableContainerProps}>\n      {renderLeadingIcon && renderLeadingIcon()}\n      <View testID={getTestId('ContentContainer')} style={[styles.contentContainer, contentContainerStyle]} {...contentContainerProps}>\n        {(text1?.length ?? 0) > 0 && (<Text testID={getTestId('Text1')} style={[styles.text1, text1Style]} numberOfLines={text1NumberOfLines} ellipsizeMode='tail' {...text1Props}>\n            {text1}\n          </Text>)}\n        {(text2?.length ?? 0) > 0 && (<Text testID={getTestId('Text2')} style={[styles.text2, text2Style]} numberOfLines={text2NumberOfLines} ellipsizeMode='tail' {...text2Props}>\n            {text2}\n          </Text>)}\n      </View>\n      {renderTrailingIcon && renderTrailingIcon()}\n    </TouchableOpacity>);\n}\n","import { StyleSheet } from 'react-native';\nexport const HEIGHT = 60;\nexport const WIDTH = 340;\nexport const BORDER_RADIUS = 6;\nexport const styles = StyleSheet.create({\n    base: {\n        flexDirection: 'row',\n        height: HEIGHT,\n        width: WIDTH,\n        borderRadius: BORDER_RADIUS,\n        shadowOffset: { width: 0, height: 0 },\n        shadowOpacity: 0.1,\n        shadowRadius: BORDER_RADIUS,\n        elevation: 2,\n        backgroundColor: '#FFF'\n    },\n    leadingBorder: {\n        borderLeftWidth: 5,\n        borderLeftColor: '#D8D8D8'\n    },\n    contentContainer: {\n        paddingHorizontal: 25,\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'flex-start' // In case of RTL, the text will start from the right\n    },\n    text1: {\n        fontSize: 12,\n        fontWeight: 'bold',\n        marginBottom: 2,\n        color: '#000',\n        width: '100%' // Fixes: https://github.com/calintamas/react-native-toast-message/issues/130\n    },\n    text2: {\n        fontSize: 10,\n        color: '#979797',\n        width: '100%' // Fixes: https://github.com/calintamas/react-native-toast-message/issues/130\n    }\n});\n","import React from 'react';\nimport { BaseToast } from './BaseToast';\nexport function ErrorToast(props) {\n    return <BaseToast style={{ borderLeftColor: '#FE6301' }} {...props}/>;\n}\n","import React from 'react';\nimport { BaseToast } from './BaseToast';\nexport function InfoToast(props) {\n    return <BaseToast style={{ borderLeftColor: '#87CEFA' }} {...props}/>;\n}\n","import React from 'react';\nimport { BaseToast } from './BaseToast';\nexport function SuccessToast(props) {\n    return <BaseToast style={{ borderLeftColor: '#69C779' }} {...props}/>;\n}\n","import React from 'react';\nimport { noop } from '../utils/func';\nconst LoggerContext = React.createContext({\n    log: noop\n});\nfunction LoggerProvider({ children, enableLogs = false }) {\n    const log = React.useCallback((...args) => {\n        if (enableLogs) {\n            // eslint-disable-next-line no-console\n            console.log('Toast:', ...args);\n        }\n    }, [enableLogs]);\n    const value = {\n        log\n    };\n    return (<LoggerContext.Provider value={value}>{children}</LoggerContext.Provider>);\n}\nfunction useLogger() {\n    const ctx = React.useContext(LoggerContext);\n    return ctx;\n}\nexport { LoggerProvider, useLogger };\n","export * from './LoggerContext';\n","export * from './useViewDimensions';\nexport * from './useSlideAnimation';\nexport * from './useTimeout';\nexport * from './usePanResponder';\nexport * from './useKeyboard';\n","import React from 'react';\nimport { Keyboard } from 'react-native';\nimport { isIOS } from '../utils/platform';\nexport function useKeyboard() {\n    const [keyboardHeight, setKeyboardHeight] = React.useState(0);\n    const [isKeyboardVisible, setIsKeyboardVisible] = React.useState(false);\n    const onShow = React.useCallback((event) => {\n        const { height } = event.endCoordinates;\n        setKeyboardHeight(height);\n        setIsKeyboardVisible(true);\n    }, []);\n    const onHide = React.useCallback(() => {\n        setKeyboardHeight(0);\n        setIsKeyboardVisible(false);\n    }, []);\n    React.useEffect(() => {\n        if (!isIOS()) {\n            return () => { };\n        }\n        const didShowListener = Keyboard.addListener('keyboardDidShow', onShow);\n        const didHideListener = Keyboard.addListener('keyboardDidHide', onHide);\n        return () => {\n            didShowListener.remove();\n            didHideListener.remove();\n        };\n    }, [onHide, onShow]);\n    return {\n        keyboardHeight,\n        isKeyboardVisible\n    };\n}\n","import React from 'react';\nimport { PanResponder } from 'react-native';\nexport function shouldSetPanResponder(_event, gesture) {\n    const { dx, dy } = gesture;\n    // Fixes onPress handler\n    // https://github.com/calintamas/react-native-toast-message/issues/113\n    const offset = 2;\n    return Math.abs(dx) > offset || Math.abs(dy) > offset;\n}\nexport function shouldDismissView(newAnimatedValue, gesture) {\n    const dismissThreshold = 0.65;\n    const { vy, dy } = gesture;\n    return (newAnimatedValue <= dismissThreshold ||\n        (Math.abs(vy) >= dismissThreshold && dy < 0));\n}\nexport function usePanResponder({ animatedValue, computeNewAnimatedValueForGesture, onDismiss, onRestore, disable }) {\n    const onMove = React.useCallback((_event, gesture) => {\n        if (disable) {\n            return;\n        }\n        const newAnimatedValue = computeNewAnimatedValueForGesture(gesture);\n        animatedValue.current?.setValue(newAnimatedValue);\n    }, [animatedValue, computeNewAnimatedValueForGesture, disable]);\n    const onRelease = React.useCallback((_event, gesture) => {\n        if (disable) {\n            return;\n        }\n        const newAnimatedValue = computeNewAnimatedValueForGesture(gesture);\n        if (shouldDismissView(newAnimatedValue, gesture)) {\n            onDismiss();\n        }\n        else {\n            onRestore();\n        }\n    }, [computeNewAnimatedValueForGesture, onDismiss, onRestore, disable]);\n    const panResponder = React.useMemo(() => PanResponder.create({\n        onMoveShouldSetPanResponder: shouldSetPanResponder,\n        onMoveShouldSetPanResponderCapture: shouldSetPanResponder,\n        onPanResponderMove: onMove,\n        onPanResponderRelease: onRelease\n    }), [onMove, onRelease]);\n    return {\n        panResponder,\n        onMove,\n        onRelease\n    };\n}\n","import React from 'react';\nimport { Animated, Platform } from 'react-native';\nimport { additiveInverseArray } from '../utils/array';\nimport { useKeyboard } from './useKeyboard';\nexport function translateYOutputRangeFor({ position, height, topOffset, bottomOffset, keyboardHeight, keyboardOffset }) {\n    const offset = position === 'bottom' ? bottomOffset : topOffset;\n    const keyboardAwareOffset = position === 'bottom' ? keyboardHeight + keyboardOffset : 0;\n    const range = [-(height * 2), Math.max(offset, keyboardAwareOffset)];\n    const outputRange = position === 'bottom' ? additiveInverseArray(range) : range;\n    return outputRange;\n}\nconst useNativeDriver = Platform.select({\n    ios: true,\n    default: false\n});\nexport function useSlideAnimation({ position, height, topOffset, bottomOffset, keyboardOffset }) {\n    const animatedValue = React.useRef(new Animated.Value(0));\n    const { keyboardHeight } = useKeyboard();\n    const animate = React.useCallback((toValue) => {\n        Animated.spring(animatedValue.current, {\n            toValue,\n            useNativeDriver,\n            friction: 8\n        }).start();\n    }, []);\n    const translateY = React.useMemo(() => animatedValue.current.interpolate({\n        inputRange: [0, 1],\n        outputRange: translateYOutputRangeFor({\n            position,\n            height,\n            topOffset,\n            bottomOffset,\n            keyboardHeight,\n            keyboardOffset\n        })\n    }), [position, height, topOffset, bottomOffset, keyboardHeight, keyboardOffset]);\n    const opacity = animatedValue.current.interpolate({\n        inputRange: [0, 0.7, 1],\n        outputRange: [0, 1, 1]\n    });\n    return {\n        animatedValue,\n        animate,\n        animationStyles: {\n            opacity,\n            transform: [\n                {\n                    translateY\n                }\n            ]\n        }\n    };\n}\n","import React from 'react';\nimport { useLogger } from '../contexts';\nfunction useTimeout(cb, delayMs = 0) {\n    const { log } = useLogger();\n    const ref = React.useRef();\n    const clearTimer = React.useCallback(() => {\n        if (ref.current) {\n            log('Clearing timer', ref.current);\n            clearTimeout(ref.current);\n            ref.current = undefined;\n        }\n    }, [log]);\n    const startTimer = React.useCallback(() => {\n        clearTimer();\n        ref.current = setTimeout(() => {\n            cb();\n            log('Running timer', ref.current);\n            ref.current = undefined;\n        }, delayMs);\n        log('Starting timer', ref.current);\n    }, [clearTimer, delayMs, log, cb]);\n    React.useEffect(() => () => clearTimer(), [clearTimer]);\n    return {\n        startTimer,\n        clearTimer,\n        isActive: ref.current !== undefined\n    };\n}\nexport { useTimeout };\n","import React from 'react';\nconst getLayoutValue = (key) => (event) => event?.nativeEvent?.layout?.[key] ?? 0;\n/**\n * Retrieves View dimensions (height, width) from a LayoutChangeEvent and sets them on state\n */\nexport function useViewDimensions({ heightOffset = 0, widthOffset = 0 } = {}) {\n    const [height, setHeight] = React.useState(0);\n    const [width, setWidth] = React.useState(0);\n    const computeViewDimensions = React.useCallback((event) => {\n        const h = getLayoutValue('height')(event);\n        const w = getLayoutValue('width')(event);\n        setHeight(h + heightOffset);\n        setWidth(w + widthOffset);\n    }, [heightOffset, widthOffset]);\n    return {\n        computeViewDimensions,\n        height,\n        width\n    };\n}\n","import React from 'react';\nimport { useLogger } from './contexts';\nimport { useTimeout } from './hooks';\nimport { noop } from './utils/func';\nimport { mergeIfDefined } from './utils/obj';\nexport const DEFAULT_DATA = {\n    text1: undefined,\n    text2: undefined\n};\nexport const DEFAULT_OPTIONS = {\n    type: 'success',\n    text1Style: null,\n    text2Style: null,\n    position: 'top',\n    autoHide: true,\n    swipeable: true,\n    visibilityTime: 4000,\n    topOffset: 40,\n    bottomOffset: 40,\n    keyboardOffset: 10,\n    onShow: noop,\n    onHide: noop,\n    onPress: noop,\n    props: {}\n};\nexport function useToast({ defaultOptions }) {\n    const { log } = useLogger();\n    const [isVisible, setIsVisible] = React.useState(false);\n    const [data, setData] = React.useState(DEFAULT_DATA);\n    const initialOptions = mergeIfDefined(DEFAULT_OPTIONS, defaultOptions);\n    const [options, setOptions] = React.useState(initialOptions);\n    const onAutoHide = React.useCallback(() => {\n        log('Auto hiding');\n        setIsVisible(false);\n        options.onHide();\n    }, [log, options]);\n    const { startTimer, clearTimer } = useTimeout(onAutoHide, options.visibilityTime);\n    const hide = React.useCallback(() => {\n        log('Hiding');\n        setIsVisible(false);\n        clearTimer();\n        options.onHide();\n    }, [clearTimer, log, options]);\n    const show = React.useCallback((params) => {\n        log(`Showing with params: ${JSON.stringify(params)}`);\n        const { text1 = DEFAULT_DATA.text1, text2 = DEFAULT_DATA.text2, type = initialOptions.type, text1Style = initialOptions.text1Style, text2Style = initialOptions.text2Style, position = initialOptions.position, autoHide = initialOptions.autoHide, visibilityTime = initialOptions.visibilityTime, topOffset = initialOptions.topOffset, bottomOffset = initialOptions.bottomOffset, keyboardOffset = initialOptions.keyboardOffset, onShow = initialOptions.onShow, onHide = initialOptions.onHide, onPress = initialOptions.onPress, swipeable = initialOptions.swipeable, props = initialOptions.props } = params;\n        setData({\n            text1,\n            text2\n        });\n        setOptions(mergeIfDefined(initialOptions, {\n            type,\n            text1Style,\n            text2Style,\n            position,\n            autoHide,\n            visibilityTime,\n            topOffset,\n            bottomOffset,\n            keyboardOffset,\n            onShow,\n            onHide,\n            onPress,\n            swipeable,\n            props\n        }));\n        // TODO: validate input\n        // TODO: use a queue when Toast is already visible\n        setIsVisible(true);\n        onShow();\n    }, [initialOptions, log]);\n    React.useEffect(() => {\n        const { autoHide } = options;\n        if (isVisible) {\n            if (autoHide) {\n                startTimer();\n            }\n            else {\n                clearTimer();\n            }\n        }\n    }, [isVisible, options, startTimer, clearTimer]);\n    return {\n        isVisible,\n        data,\n        options,\n        show,\n        hide\n    };\n}\n","function additiveInverseArray(arr) {\n    return arr.map((i) => -i);\n}\nexport { additiveInverseArray };\n","export const noop = () => undefined;\n","export function upperBound(n, max) {\n    return n > max ? max : n;\n}\nexport function lowerBound(n, min) {\n    return n < min ? min : n;\n}\nexport function bound(n, min, max) {\n    return upperBound(lowerBound(n, min), max);\n}\n","export function mergeIfDefined(obj1, obj2) {\n    const newObj = {\n        ...obj1\n    };\n    Object.entries(obj2).forEach(([key, value]) => {\n        if (value !== null && value !== undefined) {\n            newObj[key] = value;\n        }\n    });\n    return newObj;\n}\n","import { Platform } from 'react-native';\nexport function isIOS() {\n    return Platform.OS === 'ios';\n}\n","export function getTestId(elementName) {\n    return `toast${elementName}`;\n}\n","/**\n * MaterialCommunityIcons icon set component.\n * Usage: <MaterialCommunityIcons name=\"icon-name\" size={20} color=\"#4F8EF7\" />\n */\n\nimport createIconSet from './lib/create-icon-set';\nimport glyphMap from './glyphmaps/MaterialCommunityIcons.json';\n\nconst iconSet = createIconSet(glyphMap, 'Material Design Icons', 'MaterialCommunityIcons.ttf');\n\nexport default iconSet;\nexport const {\n  Button,\n  getImageSource,\n  getImageSourceSync,\n} = iconSet;\n","// @flow\n// eslint-disable-next-line import/no-unresolved\nimport type { TurboModule } from 'react-native/Libraries/TurboModule/RCTExport';\nimport { TurboModuleRegistry } from 'react-native';\n\nexport interface Spec extends TurboModule {\n  getImageForFont(\n    fontName: string,\n    glyph: string,\n    fontSize: number,\n    color: number\n  ): Promise<string>;\n  getImageForFontSync(\n    fontName: string,\n    glyph: string,\n    fontSize: number,\n    color: number\n  ): string;\n  loadFontWithFileName(fontFileName: string, extension: string): Promise<void>;\n}\nexport default (TurboModuleRegistry.get<Spec>('RNVectorIcons'): ?Spec);\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { Platform, PixelRatio, processColor, Text } from 'react-native';\n\nimport ensureNativeModuleAvailable from './ensure-native-module-available';\nimport createIconSourceCache from './create-icon-source-cache';\nimport createIconButtonComponent from './icon-button';\nimport NativeIconAPI from './NativeRNVectorIcons';\n\nexport const DEFAULT_ICON_SIZE = 12;\nexport const DEFAULT_ICON_COLOR = 'black';\n\nexport default function createIconSet(\n  glyphMap,\n  fontFamily,\n  fontFile,\n  fontStyle\n) {\n  // Android doesn't care about actual fontFamily name, it will only look in fonts folder.\n  const fontBasename = fontFile\n    ? fontFile.replace(/\\.(otf|ttf)$/, '')\n    : fontFamily;\n\n  const fontReference = Platform.select({\n    windows: `/Assets/${fontFile}#${fontFamily}`,\n    android: fontBasename,\n    web: fontBasename,\n    default: fontFamily,\n  });\n\n  const IconNamePropType = PropTypes.oneOf(Object.keys(glyphMap));\n\n  class Icon extends PureComponent {\n    static propTypes = {\n      allowFontScaling: PropTypes.bool,\n      name: IconNamePropType,\n      size: PropTypes.number,\n      color: PropTypes.any, // eslint-disable-line react/forbid-prop-types\n      children: PropTypes.node,\n      style: PropTypes.any, // eslint-disable-line react/forbid-prop-types\n    };\n\n    static defaultProps = {\n      size: DEFAULT_ICON_SIZE,\n      allowFontScaling: false,\n    };\n\n    render() {\n      const { name, size, color, style, children, ...props } = this.props;\n\n      let glyph = name ? glyphMap[name] || '?' : '';\n      if (typeof glyph === 'number') {\n        glyph = String.fromCodePoint(glyph);\n      }\n\n      const styleDefaults = {\n        fontSize: size,\n        color,\n      };\n\n      const styleOverrides = {\n        fontFamily: fontReference,\n        fontWeight: 'normal',\n        fontStyle: 'normal',\n      };\n\n      props.style = [styleDefaults, style, styleOverrides, fontStyle || {}];\n\n      return (\n        <Text selectable={false} {...props}>\n          {glyph}\n          {children}\n        </Text>\n      );\n    }\n  }\n\n  const imageSourceCache = createIconSourceCache();\n\n  function resolveGlyph(name) {\n    const glyph = glyphMap[name] || '?';\n    if (typeof glyph === 'number') {\n      return String.fromCodePoint(glyph);\n    }\n    return glyph;\n  }\n\n  function getImageSourceSync(\n    name,\n    size = DEFAULT_ICON_SIZE,\n    color = DEFAULT_ICON_COLOR\n  ) {\n    ensureNativeModuleAvailable();\n\n    const glyph = resolveGlyph(name);\n    const processedColor = processColor(color);\n    const cacheKey = `${glyph}:${size}:${processedColor}`;\n\n    if (imageSourceCache.has(cacheKey)) {\n      return imageSourceCache.get(cacheKey);\n    }\n    try {\n      const imagePath = NativeIconAPI.getImageForFontSync(\n        fontReference,\n        glyph,\n        size,\n        processedColor\n      );\n      const value = { uri: imagePath, scale: PixelRatio.get() };\n      imageSourceCache.setValue(cacheKey, value);\n      return value;\n    } catch (error) {\n      imageSourceCache.setError(cacheKey, error);\n      throw error;\n    }\n  }\n\n  async function getImageSource(\n    name,\n    size = DEFAULT_ICON_SIZE,\n    color = DEFAULT_ICON_COLOR\n  ) {\n    ensureNativeModuleAvailable();\n\n    const glyph = resolveGlyph(name);\n    const processedColor = processColor(color);\n    const cacheKey = `${glyph}:${size}:${processedColor}`;\n\n    if (imageSourceCache.has(cacheKey)) {\n      return imageSourceCache.get(cacheKey);\n    }\n    try {\n      const imagePath = await NativeIconAPI.getImageForFont(\n        fontReference,\n        glyph,\n        size,\n        processedColor\n      );\n      const value = { uri: imagePath, scale: PixelRatio.get() };\n      imageSourceCache.setValue(cacheKey, value);\n      return value;\n    } catch (error) {\n      imageSourceCache.setError(cacheKey, error);\n      throw error;\n    }\n  }\n\n  async function loadFont(file = fontFile) {\n    if (Platform.OS === 'ios') {\n      ensureNativeModuleAvailable();\n      if (!file) {\n        throw new Error('Unable to load font, because no file was specified. ');\n      }\n      await NativeIconAPI.loadFontWithFileName(...file.split('.'));\n    }\n  }\n\n  function hasIcon(name) {\n    return Object.prototype.hasOwnProperty.call(glyphMap, name);\n  }\n\n  function getRawGlyphMap() {\n    return glyphMap;\n  }\n\n  function getFontFamily() {\n    return fontReference;\n  }\n\n  Icon.Button = createIconButtonComponent(Icon);\n  Icon.getImageSource = getImageSource;\n  Icon.getImageSourceSync = getImageSourceSync;\n  Icon.loadFont = loadFont;\n  Icon.hasIcon = hasIcon;\n  Icon.getRawGlyphMap = getRawGlyphMap;\n  Icon.getFontFamily = getFontFamily;\n\n  return Icon;\n}\n","const TYPE_VALUE = 'value';\nconst TYPE_ERROR = 'error';\n\nexport default function createIconSourceCache() {\n  const cache = new Map();\n\n  const setValue = (key, value) =>\n    cache.set(key, { type: TYPE_VALUE, data: value });\n\n  const setError = (key, error) =>\n    cache.set(key, { type: TYPE_ERROR, data: error });\n\n  const has = key => cache.has(key);\n\n  const get = key => {\n    if (!cache.has(key)) {\n      return undefined;\n    }\n    const { type, data } = cache.get(key);\n    if (type === TYPE_ERROR) {\n      throw data;\n    }\n    return data;\n  };\n\n  return { setValue, setError, has, get };\n}\n","import NativeIconAPI from './NativeRNVectorIcons';\n\nexport default function ensureNativeModuleAvailable() {\n  if (!NativeIconAPI) {\n    throw new Error(\n      'The native RNVectorIcons API is not available, did you properly integrate the module? Please verify your autolinking setup and recompile.'\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { StyleSheet, Text, TouchableHighlight, View } from 'react-native';\nimport { pick, omit } from './object-utils';\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    padding: 8,\n  },\n  touchable: {\n    overflow: 'hidden',\n  },\n  icon: {\n    marginRight: 10,\n  },\n  text: {\n    fontWeight: '600',\n    backgroundColor: 'transparent',\n  },\n});\n\nconst IOS7_BLUE = '#007AFF';\n\nconst TEXT_PROP_NAMES = [\n  'ellipsizeMode',\n  'numberOfLines',\n  'textBreakStrategy',\n  'selectable',\n  'suppressHighlighting',\n  'allowFontScaling',\n  'adjustsFontSizeToFit',\n  'minimumFontScale',\n];\n\nconst TOUCHABLE_PROP_NAMES = [\n  'accessible',\n  'accessibilityLabel',\n  'accessibilityHint',\n  'accessibilityComponentType',\n  'accessibilityRole',\n  'accessibilityStates',\n  'accessibilityTraits',\n  'onFocus',\n  'onBlur',\n  'disabled',\n  'onPress',\n  'onPressIn',\n  'onPressOut',\n  'onLayout',\n  'onLongPress',\n  'nativeID',\n  'testID',\n  'delayPressIn',\n  'delayPressOut',\n  'delayLongPress',\n  'activeOpacity',\n  'underlayColor',\n  'selectionColor',\n  'onShowUnderlay',\n  'onHideUnderlay',\n  'hasTVPreferredFocus',\n  'tvParallaxProperties',\n];\n\nexport default function createIconButtonComponent(Icon) {\n  return class IconButton extends PureComponent {\n    static propTypes = {\n      backgroundColor: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n      ]),\n      borderRadius: PropTypes.number,\n      color: PropTypes.any, // eslint-disable-line react/forbid-prop-types\n      size: PropTypes.number,\n      iconStyle: PropTypes.any, // eslint-disable-line react/forbid-prop-types\n      style: PropTypes.any, // eslint-disable-line react/forbid-prop-types\n      children: PropTypes.node,\n    };\n\n    static defaultProps = {\n      backgroundColor: IOS7_BLUE,\n      borderRadius: 5,\n      color: 'white',\n      size: 20,\n    };\n\n    render() {\n      const { style, iconStyle, children, ...restProps } = this.props;\n\n      const iconProps = pick(\n        restProps,\n        TEXT_PROP_NAMES,\n        'style',\n        'name',\n        'size',\n        'color'\n      );\n      const touchableProps = pick(restProps, TOUCHABLE_PROP_NAMES);\n      const props = omit(\n        restProps,\n        Object.keys(iconProps),\n        Object.keys(touchableProps),\n        'iconStyle',\n        'borderRadius',\n        'backgroundColor'\n      );\n      iconProps.style = iconStyle ? [styles.icon, iconStyle] : styles.icon;\n\n      const colorStyle = pick(this.props, 'color');\n      const blockStyle = pick(this.props, 'backgroundColor', 'borderRadius');\n\n      return (\n        <TouchableHighlight\n          style={[styles.touchable, blockStyle]}\n          {...touchableProps}\n        >\n          <View style={[styles.container, blockStyle, style]} {...props}>\n            <Icon {...iconProps} />\n            {typeof children === 'string' ? (\n              <Text style={[styles.text, colorStyle]} selectable={false}>\n                {children}\n              </Text>\n            ) : (\n              children\n            )}\n          </View>\n        </TouchableHighlight>\n      );\n    }\n  };\n}\n","const pick = (obj, ...keys) =>\n  keys\n    .flat()\n    .filter(key => Object.prototype.hasOwnProperty.call(obj, key))\n    .reduce((acc, key) => {\n      acc[key] = obj[key];\n      return acc;\n    }, {});\n\nconst omit = (obj, ...keysToOmit) => {\n  const keysToOmitSet = new Set(keysToOmit.flat());\n  return Object.getOwnPropertyNames(obj)\n    .filter(key => !keysToOmitSet.has(key))\n    .reduce((acc, key) => {\n      acc[key] = obj[key];\n      return acc;\n    }, {});\n};\n\nmodule.exports = { pick, omit };\n","import React, {\n  useState,\n  useCallback,\n  useMemo,\n  useRef,\n  forwardRef,\n  useImperativeHandle,\n} from 'react';\nimport type {ElementRef} from 'react';\nimport {View, StyleSheet, Image, Platform, processColor} from 'react-native';\nimport type {\n  StyleProp,\n  ImageStyle,\n  NativeSyntheticEvent,\n  ViewStyle,\n  ImageResizeMode,\n} from 'react-native';\n\nimport NativeVideoComponent, {\n  NativeCmcdConfiguration,\n} from './specs/VideoNativeComponent';\nimport type {\n  OnAudioFocusChangedData,\n  OnAudioTracksData,\n  OnBandwidthUpdateData,\n  OnBufferData,\n  OnControlsVisibilityChange,\n  OnExternalPlaybackChangeData,\n  OnGetLicenseData,\n  OnLoadStartData,\n  OnPictureInPictureStatusChangedData,\n  OnPlaybackStateChangedData,\n  OnProgressData,\n  OnSeekData,\n  OnTextTrackDataChangedData,\n  OnTimedMetadataData,\n  OnVideoAspectRatioData,\n  OnVideoErrorData,\n  OnVideoTracksData,\n  VideoSrc,\n} from './specs/VideoNativeComponent';\nimport {\n  generateHeaderForNative,\n  getReactTag,\n  resolveAssetSourceForVideo,\n} from './utils';\nimport NativeVideoManager from './specs/NativeVideoManager';\nimport {ViewType, CmcdMode, VideoRef} from './types';\nimport type {\n  OnLoadData,\n  OnTextTracksData,\n  OnReceiveAdEventData,\n  ReactVideoProps,\n  CmcdData,\n  ReactVideoSource,\n} from './types';\n\nconst Video = forwardRef<VideoRef, ReactVideoProps>(\n  (\n    {\n      source,\n      style,\n      resizeMode,\n      poster,\n      posterResizeMode,\n      renderLoader,\n      contentStartTime,\n      drm,\n      textTracks,\n      selectedVideoTrack,\n      selectedAudioTrack,\n      selectedTextTrack,\n      useTextureView,\n      useSecureView,\n      viewType,\n      shutterColor,\n      adTagUrl,\n      adLanguage,\n      onLoadStart,\n      onLoad,\n      onError,\n      onProgress,\n      onSeek,\n      onEnd,\n      onBuffer,\n      onBandwidthUpdate,\n      onControlsVisibilityChange,\n      onExternalPlaybackChange,\n      onFullscreenPlayerWillPresent,\n      onFullscreenPlayerDidPresent,\n      onFullscreenPlayerWillDismiss,\n      onFullscreenPlayerDidDismiss,\n      onReadyForDisplay,\n      onPlaybackRateChange,\n      onVolumeChange,\n      onAudioBecomingNoisy,\n      onPictureInPictureStatusChanged,\n      onRestoreUserInterfaceForPictureInPictureStop,\n      onReceiveAdEvent,\n      onPlaybackStateChanged,\n      onAudioFocusChanged,\n      onIdle,\n      onTimedMetadata,\n      onAudioTracks,\n      onTextTracks,\n      onTextTrackDataChanged,\n      onVideoTracks,\n      onAspectRatio,\n      localSourceEncryptionKeyScheme,\n      minLoadRetryCount,\n      ...rest\n    },\n    ref,\n  ) => {\n    const nativeRef = useRef<ElementRef<typeof NativeVideoComponent>>(null);\n\n    const isPosterDeprecated = typeof poster === 'string';\n\n    const _renderLoader = useMemo(\n      () =>\n        !renderLoader\n          ? undefined\n          : renderLoader instanceof Function\n          ? renderLoader\n          : () => renderLoader,\n      [renderLoader],\n    );\n\n    const hasPoster = useMemo(() => {\n      if (_renderLoader) {\n        return true;\n      }\n\n      if (isPosterDeprecated) {\n        return !!poster;\n      }\n\n      return !!poster?.source;\n    }, [isPosterDeprecated, poster, _renderLoader]);\n\n    const [showPoster, setShowPoster] = useState(hasPoster);\n\n    const [\n      _restoreUserInterfaceForPIPStopCompletionHandler,\n      setRestoreUserInterfaceForPIPStopCompletionHandler,\n    ] = useState<boolean | undefined>();\n\n    const sourceToUnternalSource = useCallback(\n      (_source?: ReactVideoSource) => {\n        if (!_source) {\n          return undefined;\n        }\n        const resolvedSource = resolveAssetSourceForVideo(_source);\n        let uri = resolvedSource.uri || '';\n        if (uri && uri.match(/^\\//)) {\n          uri = `file://${uri}`;\n        }\n        if (!uri) {\n          console.log('Trying to load empty source');\n        }\n        const isNetwork = !!(uri && uri.match(/^(rtp|rtsp|http|https):/));\n        const isAsset = !!(\n          uri &&\n          uri.match(\n            /^(assets-library|ipod-library|file|content|ms-appx|ms-appdata):/,\n          )\n        );\n\n        const selectedDrm = _source.drm || drm;\n        const _textTracks = _source.textTracks || textTracks;\n        const _drm = !selectedDrm\n          ? undefined\n          : {\n              type: selectedDrm.type,\n              licenseServer: selectedDrm.licenseServer,\n              headers: generateHeaderForNative(selectedDrm.headers),\n              contentId: selectedDrm.contentId,\n              certificateUrl: selectedDrm.certificateUrl,\n              base64Certificate: selectedDrm.base64Certificate,\n              useExternalGetLicense: !!selectedDrm.getLicense,\n              multiDrm: selectedDrm.multiDrm,\n              localSourceEncryptionKeyScheme:\n                selectedDrm.localSourceEncryptionKeyScheme ||\n                localSourceEncryptionKeyScheme,\n            };\n\n        let _cmcd: NativeCmcdConfiguration | undefined;\n        if (Platform.OS === 'android' && source?.cmcd) {\n          const cmcd = source.cmcd;\n\n          if (typeof cmcd === 'boolean') {\n            _cmcd = cmcd ? {mode: CmcdMode.MODE_QUERY_PARAMETER} : undefined;\n          } else if (typeof cmcd === 'object' && !Array.isArray(cmcd)) {\n            const createCmcdHeader = (property?: CmcdData) =>\n              property ? generateHeaderForNative(property) : undefined;\n\n            _cmcd = {\n              mode: cmcd.mode ?? CmcdMode.MODE_QUERY_PARAMETER,\n              request: createCmcdHeader(cmcd.request),\n              session: createCmcdHeader(cmcd.session),\n              object: createCmcdHeader(cmcd.object),\n              status: createCmcdHeader(cmcd.status),\n            };\n          } else {\n            throw new Error(\n              'Invalid CMCD configuration: Expected a boolean or an object.',\n            );\n          }\n        }\n\n        const selectedContentStartTime =\n          _source.contentStartTime || contentStartTime;\n\n        const _ad =\n          _source.ad ||\n          (adTagUrl || adLanguage\n            ? {adTagUrl: adTagUrl, adLanguage: adLanguage}\n            : undefined);\n\n        const _minLoadRetryCount =\n          _source.minLoadRetryCount || minLoadRetryCount;\n        return {\n          uri,\n          isNetwork,\n          isAsset,\n          shouldCache: resolvedSource.shouldCache || false,\n          type: resolvedSource.type || '',\n          mainVer: resolvedSource.mainVer || 0,\n          patchVer: resolvedSource.patchVer || 0,\n          requestHeaders: generateHeaderForNative(resolvedSource.headers),\n          startPosition: resolvedSource.startPosition ?? -1,\n          cropStart: resolvedSource.cropStart || 0,\n          cropEnd: resolvedSource.cropEnd,\n          contentStartTime: selectedContentStartTime,\n          metadata: resolvedSource.metadata,\n          drm: _drm,\n          ad: _ad,\n          cmcd: _cmcd,\n          textTracks: _textTracks,\n          textTracksAllowChunklessPreparation:\n            resolvedSource.textTracksAllowChunklessPreparation,\n          minLoadRetryCount: _minLoadRetryCount,\n        };\n      },\n      [\n        adLanguage,\n        adTagUrl,\n        contentStartTime,\n        drm,\n        localSourceEncryptionKeyScheme,\n        minLoadRetryCount,\n        source?.cmcd,\n        textTracks,\n      ],\n    );\n\n    const src = useMemo<VideoSrc | undefined>(() => {\n      return sourceToUnternalSource(source);\n    }, [sourceToUnternalSource, source]);\n\n    const _selectedTextTrack = useMemo(() => {\n      if (!selectedTextTrack) {\n        return;\n      }\n      const typeOfValueProp = typeof selectedTextTrack.value;\n      if (\n        typeOfValueProp !== 'number' &&\n        typeOfValueProp !== 'string' &&\n        typeOfValueProp !== 'undefined'\n      ) {\n        console.warn(\n          'invalid type provided to selectedTextTrack.value: ',\n          typeOfValueProp,\n        );\n        return;\n      }\n      return {\n        type: selectedTextTrack?.type,\n        value: `${selectedTextTrack.value}`,\n      };\n    }, [selectedTextTrack]);\n\n    const _selectedAudioTrack = useMemo(() => {\n      if (!selectedAudioTrack) {\n        return;\n      }\n      const typeOfValueProp = typeof selectedAudioTrack.value;\n      if (\n        typeOfValueProp !== 'number' &&\n        typeOfValueProp !== 'string' &&\n        typeOfValueProp !== 'undefined'\n      ) {\n        console.warn(\n          'invalid type provided to selectedAudioTrack.value: ',\n          typeOfValueProp,\n        );\n        return;\n      }\n\n      return {\n        type: selectedAudioTrack?.type,\n        value: `${selectedAudioTrack.value}`,\n      };\n    }, [selectedAudioTrack]);\n\n    const _selectedVideoTrack = useMemo(() => {\n      if (!selectedVideoTrack) {\n        return;\n      }\n      const typeOfValueProp = typeof selectedVideoTrack.value;\n      if (\n        typeOfValueProp !== 'number' &&\n        typeOfValueProp !== 'string' &&\n        typeOfValueProp !== 'undefined'\n      ) {\n        console.warn(\n          'invalid type provided to selectedVideoTrack.value: ',\n          typeOfValueProp,\n        );\n        return;\n      }\n      return {\n        type: selectedVideoTrack?.type,\n        value: `${selectedVideoTrack.value}`,\n      };\n    }, [selectedVideoTrack]);\n\n    const seek = useCallback(async (time: number, tolerance?: number) => {\n      if (isNaN(time) || time === null) {\n        throw new Error(\"Specified time is not a number: '\" + time + \"'\");\n      }\n\n      if (!nativeRef.current) {\n        console.warn('Video Component is not mounted');\n        return;\n      }\n\n      const callSeekFunction = () => {\n        NativeVideoManager.seekCmd(\n          getReactTag(nativeRef),\n          time,\n          tolerance || 0,\n        );\n      };\n\n      Platform.select({\n        ios: callSeekFunction,\n        android: callSeekFunction,\n        default: () => {\n          // TODO: Implement VideoManager.seekCmd for windows\n          nativeRef.current?.setNativeProps({seek: time});\n        },\n      })();\n    }, []);\n\n    const pause = useCallback(() => {\n      return NativeVideoManager.setPlayerPauseStateCmd(\n        getReactTag(nativeRef),\n        true,\n      );\n    }, []);\n\n    const resume = useCallback(() => {\n      return NativeVideoManager.setPlayerPauseStateCmd(\n        getReactTag(nativeRef),\n        false,\n      );\n    }, []);\n\n    const setVolume = useCallback((volume: number) => {\n      return NativeVideoManager.setVolumeCmd(getReactTag(nativeRef), volume);\n    }, []);\n\n    const setFullScreen = useCallback((fullScreen: boolean) => {\n      return NativeVideoManager.setFullScreenCmd(\n        getReactTag(nativeRef),\n        fullScreen,\n      );\n    }, []);\n\n    const setSource = useCallback(\n      (_source?: ReactVideoSource) => {\n        return NativeVideoManager.setSourceCmd(\n          getReactTag(nativeRef),\n          sourceToUnternalSource(_source),\n        );\n      },\n      [sourceToUnternalSource],\n    );\n\n    const presentFullscreenPlayer = useCallback(\n      () => setFullScreen(true),\n      [setFullScreen],\n    );\n\n    const dismissFullscreenPlayer = useCallback(\n      () => setFullScreen(false),\n      [setFullScreen],\n    );\n\n    const save = useCallback((options: object) => {\n      // VideoManager.save can be null on android & windows\n      if (Platform.OS !== 'ios') {\n        return;\n      }\n      // @todo Must implement it in a different way.\n      return NativeVideoManager.save?.(getReactTag(nativeRef), options);\n    }, []);\n\n    const getCurrentPosition = useCallback(() => {\n      // @todo Must implement it in a different way.\n      return NativeVideoManager.getCurrentPosition(getReactTag(nativeRef));\n    }, []);\n\n    const restoreUserInterfaceForPictureInPictureStopCompleted = useCallback(\n      (restored: boolean) => {\n        setRestoreUserInterfaceForPIPStopCompletionHandler(restored);\n      },\n      [setRestoreUserInterfaceForPIPStopCompletionHandler],\n    );\n\n    const onVideoLoadStart = useCallback(\n      (e: NativeSyntheticEvent<OnLoadStartData>) => {\n        hasPoster && setShowPoster(true);\n        onLoadStart?.(e.nativeEvent);\n      },\n      [hasPoster, onLoadStart],\n    );\n\n    const onVideoLoad = useCallback(\n      (e: NativeSyntheticEvent<OnLoadData>) => {\n        if (Platform.OS === 'windows') {\n          hasPoster && setShowPoster(false);\n        }\n        onLoad?.(e.nativeEvent);\n      },\n      [onLoad, hasPoster, setShowPoster],\n    );\n\n    const onVideoError = useCallback(\n      (e: NativeSyntheticEvent<OnVideoErrorData>) => {\n        onError?.(e.nativeEvent);\n      },\n      [onError],\n    );\n\n    const onVideoProgress = useCallback(\n      (e: NativeSyntheticEvent<OnProgressData>) => {\n        onProgress?.(e.nativeEvent);\n      },\n      [onProgress],\n    );\n\n    const onVideoSeek = useCallback(\n      (e: NativeSyntheticEvent<OnSeekData>) => {\n        onSeek?.(e.nativeEvent);\n      },\n      [onSeek],\n    );\n\n    const onVideoPlaybackStateChanged = useCallback(\n      (e: NativeSyntheticEvent<OnPlaybackStateChangedData>) => {\n        onPlaybackStateChanged?.(e.nativeEvent);\n      },\n      [onPlaybackStateChanged],\n    );\n\n    const _shutterColor = useMemo(() => {\n      const color = processColor(shutterColor);\n      return typeof color === 'number' ? color : undefined;\n    }, [shutterColor]);\n\n    // android only\n    const _onTimedMetadata = useCallback(\n      (e: NativeSyntheticEvent<OnTimedMetadataData>) => {\n        onTimedMetadata?.(e.nativeEvent);\n      },\n      [onTimedMetadata],\n    );\n\n    const _onAudioTracks = useCallback(\n      (e: NativeSyntheticEvent<OnAudioTracksData>) => {\n        onAudioTracks?.(e.nativeEvent);\n      },\n      [onAudioTracks],\n    );\n\n    const _onTextTracks = useCallback(\n      (e: NativeSyntheticEvent<OnTextTracksData>) => {\n        onTextTracks?.(e.nativeEvent);\n      },\n      [onTextTracks],\n    );\n\n    const _onTextTrackDataChanged = useCallback(\n      (\n        e: NativeSyntheticEvent<OnTextTrackDataChangedData & {target?: number}>,\n      ) => {\n        const {...eventData} = e.nativeEvent;\n        delete eventData.target;\n        onTextTrackDataChanged?.(eventData as OnTextTrackDataChangedData);\n      },\n      [onTextTrackDataChanged],\n    );\n\n    const _onVideoTracks = useCallback(\n      (e: NativeSyntheticEvent<OnVideoTracksData>) => {\n        onVideoTracks?.(e.nativeEvent);\n      },\n      [onVideoTracks],\n    );\n\n    const _onPlaybackRateChange = useCallback(\n      (e: NativeSyntheticEvent<Readonly<{playbackRate: number}>>) => {\n        onPlaybackRateChange?.(e.nativeEvent);\n      },\n      [onPlaybackRateChange],\n    );\n\n    const _onVolumeChange = useCallback(\n      (e: NativeSyntheticEvent<Readonly<{volume: number}>>) => {\n        onVolumeChange?.(e.nativeEvent);\n      },\n      [onVolumeChange],\n    );\n\n    const _onReadyForDisplay = useCallback(() => {\n      hasPoster && setShowPoster(false);\n      onReadyForDisplay?.();\n    }, [setShowPoster, hasPoster, onReadyForDisplay]);\n\n    const _onPictureInPictureStatusChanged = useCallback(\n      (e: NativeSyntheticEvent<OnPictureInPictureStatusChangedData>) => {\n        onPictureInPictureStatusChanged?.(e.nativeEvent);\n      },\n      [onPictureInPictureStatusChanged],\n    );\n\n    const _onAudioFocusChanged = useCallback(\n      (e: NativeSyntheticEvent<OnAudioFocusChangedData>) => {\n        onAudioFocusChanged?.(e.nativeEvent);\n      },\n      [onAudioFocusChanged],\n    );\n\n    const onVideoBuffer = useCallback(\n      (e: NativeSyntheticEvent<OnBufferData>) => {\n        onBuffer?.(e.nativeEvent);\n      },\n      [onBuffer],\n    );\n\n    const onVideoExternalPlaybackChange = useCallback(\n      (e: NativeSyntheticEvent<OnExternalPlaybackChangeData>) => {\n        onExternalPlaybackChange?.(e.nativeEvent);\n      },\n      [onExternalPlaybackChange],\n    );\n\n    const _onBandwidthUpdate = useCallback(\n      (e: NativeSyntheticEvent<OnBandwidthUpdateData>) => {\n        onBandwidthUpdate?.(e.nativeEvent);\n      },\n      [onBandwidthUpdate],\n    );\n\n    const _onReceiveAdEvent = useCallback(\n      (e: NativeSyntheticEvent<OnReceiveAdEventData>) => {\n        onReceiveAdEvent?.(e.nativeEvent);\n      },\n      [onReceiveAdEvent],\n    );\n\n    const _onVideoAspectRatio = useCallback(\n      (e: NativeSyntheticEvent<OnVideoAspectRatioData>) => {\n        onAspectRatio?.(e.nativeEvent);\n      },\n      [onAspectRatio],\n    );\n\n    const _onControlsVisibilityChange = useCallback(\n      (e: NativeSyntheticEvent<OnControlsVisibilityChange>) => {\n        onControlsVisibilityChange?.(e.nativeEvent);\n      },\n      [onControlsVisibilityChange],\n    );\n\n    const selectedDrm = source?.drm || drm;\n    const usingExternalGetLicense = selectedDrm?.getLicense instanceof Function;\n\n    const onGetLicense = useCallback(\n      async (event: NativeSyntheticEvent<OnGetLicenseData>) => {\n        if (!usingExternalGetLicense) {\n          return;\n        }\n        const data = event.nativeEvent;\n        try {\n          if (!data?.spcBase64) {\n            throw new Error('No spc received');\n          }\n          // Handles both scenarios, getLicenseOverride being a promise and not.\n          const license = await Promise.resolve(\n            selectedDrm.getLicense(\n              data.spcBase64,\n              data.contentId,\n              data.licenseUrl,\n              data.loadedLicenseUrl,\n            ),\n          ).catch(() => {\n            throw new Error('fetch error');\n          });\n          if (typeof license !== 'string') {\n            throw Error('Empty license result');\n          }\n          if (nativeRef.current) {\n            NativeVideoManager.setLicenseResultCmd(\n              getReactTag(nativeRef),\n              license,\n              data.loadedLicenseUrl,\n            );\n          }\n        } catch (e) {\n          const msg = e instanceof Error ? e.message : 'fetch error';\n          if (nativeRef.current) {\n            NativeVideoManager.setLicenseResultErrorCmd(\n              getReactTag(nativeRef),\n              msg,\n              data.loadedLicenseUrl,\n            );\n          }\n        }\n      },\n      [selectedDrm, usingExternalGetLicense],\n    );\n\n    useImperativeHandle(\n      ref,\n      () => ({\n        seek,\n        presentFullscreenPlayer,\n        dismissFullscreenPlayer,\n        save,\n        pause,\n        resume,\n        restoreUserInterfaceForPictureInPictureStopCompleted,\n        setVolume,\n        getCurrentPosition,\n        setFullScreen,\n        setSource,\n      }),\n      [\n        seek,\n        presentFullscreenPlayer,\n        dismissFullscreenPlayer,\n        save,\n        pause,\n        resume,\n        restoreUserInterfaceForPictureInPictureStopCompleted,\n        setVolume,\n        getCurrentPosition,\n        setFullScreen,\n        setSource,\n      ],\n    );\n\n    const _viewType = useMemo(() => {\n      const hasValidDrmProp =\n        drm !== undefined && Object.keys(drm).length !== 0;\n\n      const shallForceViewType =\n        hasValidDrmProp && (viewType === ViewType.TEXTURE || useTextureView);\n\n      if (useSecureView && useTextureView) {\n        console.warn(\n          'cannot use SecureView on texture view. please set useTextureView={false}',\n        );\n      }\n\n      if (shallForceViewType) {\n        console.warn(\n          'cannot use DRM on texture view. please set useTextureView={false}',\n        );\n        return useSecureView ? ViewType.SURFACE_SECURE : ViewType.SURFACE;\n      }\n\n      if (viewType !== undefined && viewType !== null) {\n        return viewType;\n      }\n\n      if (useSecureView) {\n        return ViewType.SURFACE_SECURE;\n      }\n\n      if (useTextureView) {\n        return ViewType.TEXTURE;\n      }\n\n      return ViewType.SURFACE;\n    }, [drm, useSecureView, useTextureView, viewType]);\n\n    const _renderPoster = useCallback(() => {\n      if (!hasPoster || !showPoster) {\n        return null;\n      }\n\n      // poster resize mode\n      let _posterResizeMode: ImageResizeMode = 'contain';\n\n      if (!isPosterDeprecated && poster?.resizeMode) {\n        _posterResizeMode = poster.resizeMode;\n      } else if (posterResizeMode && posterResizeMode !== 'none') {\n        _posterResizeMode = posterResizeMode;\n      }\n\n      // poster style\n      const baseStyle: StyleProp<ImageStyle> = {\n        ...StyleSheet.absoluteFillObject,\n        resizeMode: _posterResizeMode,\n      };\n\n      let posterStyle: StyleProp<ImageStyle> = baseStyle;\n\n      if (!isPosterDeprecated && poster?.style) {\n        const styles = Array.isArray(poster.style)\n          ? poster.style\n          : [poster.style];\n        posterStyle = [baseStyle, ...styles];\n      }\n\n      // render poster\n      if (_renderLoader && (poster || posterResizeMode)) {\n        console.warn(\n          'You provided both `renderLoader` and `poster` or `posterResizeMode` props. `renderLoader` will be used.',\n        );\n      }\n\n      // render loader\n      if (_renderLoader) {\n        return (\n          <View style={StyleSheet.absoluteFill}>\n            {_renderLoader({\n              source: source,\n              style: posterStyle,\n              resizeMode: resizeMode,\n            })}\n          </View>\n        );\n      }\n\n      return (\n        <Image\n          {...(isPosterDeprecated ? {} : poster)}\n          source={isPosterDeprecated ? {uri: poster} : poster?.source}\n          style={posterStyle}\n        />\n      );\n    }, [\n      hasPoster,\n      isPosterDeprecated,\n      poster,\n      posterResizeMode,\n      _renderLoader,\n      showPoster,\n      source,\n      resizeMode,\n    ]);\n\n    const _style: StyleProp<ViewStyle> = useMemo(\n      () => ({\n        ...StyleSheet.absoluteFillObject,\n        ...(showPoster ? {display: 'none'} : {}),\n      }),\n      [showPoster],\n    );\n\n    return (\n      <View style={style}>\n        <NativeVideoComponent\n          ref={nativeRef}\n          {...rest}\n          src={src}\n          style={_style}\n          resizeMode={resizeMode}\n          restoreUserInterfaceForPIPStopCompletionHandler={\n            _restoreUserInterfaceForPIPStopCompletionHandler\n          }\n          selectedTextTrack={_selectedTextTrack}\n          selectedAudioTrack={_selectedAudioTrack}\n          selectedVideoTrack={_selectedVideoTrack}\n          shutterColor={_shutterColor}\n          onGetLicense={usingExternalGetLicense ? onGetLicense : undefined}\n          onVideoLoad={\n            onLoad || hasPoster\n              ? (onVideoLoad as (e: NativeSyntheticEvent<object>) => void)\n              : undefined\n          }\n          onVideoLoadStart={\n            onLoadStart || hasPoster ? onVideoLoadStart : undefined\n          }\n          onVideoError={onError ? onVideoError : undefined}\n          onVideoProgress={onProgress ? onVideoProgress : undefined}\n          onVideoSeek={onSeek ? onVideoSeek : undefined}\n          onVideoEnd={onEnd}\n          onVideoBuffer={onBuffer ? onVideoBuffer : undefined}\n          onVideoPlaybackStateChanged={\n            onPlaybackStateChanged ? onVideoPlaybackStateChanged : undefined\n          }\n          onVideoBandwidthUpdate={\n            onBandwidthUpdate ? _onBandwidthUpdate : undefined\n          }\n          onTimedMetadata={onTimedMetadata ? _onTimedMetadata : undefined}\n          onAudioTracks={onAudioTracks ? _onAudioTracks : undefined}\n          onTextTracks={onTextTracks ? _onTextTracks : undefined}\n          onTextTrackDataChanged={\n            onTextTrackDataChanged ? _onTextTrackDataChanged : undefined\n          }\n          onVideoTracks={onVideoTracks ? _onVideoTracks : undefined}\n          onVideoFullscreenPlayerDidDismiss={onFullscreenPlayerDidDismiss}\n          onVideoFullscreenPlayerDidPresent={onFullscreenPlayerDidPresent}\n          onVideoFullscreenPlayerWillDismiss={onFullscreenPlayerWillDismiss}\n          onVideoFullscreenPlayerWillPresent={onFullscreenPlayerWillPresent}\n          onVideoExternalPlaybackChange={\n            onExternalPlaybackChange ? onVideoExternalPlaybackChange : undefined\n          }\n          onVideoIdle={onIdle}\n          onAudioFocusChanged={\n            onAudioFocusChanged ? _onAudioFocusChanged : undefined\n          }\n          onReadyForDisplay={\n            onReadyForDisplay || hasPoster ? _onReadyForDisplay : undefined\n          }\n          onPlaybackRateChange={\n            onPlaybackRateChange ? _onPlaybackRateChange : undefined\n          }\n          onVolumeChange={onVolumeChange ? _onVolumeChange : undefined}\n          onVideoAudioBecomingNoisy={onAudioBecomingNoisy}\n          onPictureInPictureStatusChanged={\n            onPictureInPictureStatusChanged\n              ? _onPictureInPictureStatusChanged\n              : undefined\n          }\n          onRestoreUserInterfaceForPictureInPictureStop={\n            onRestoreUserInterfaceForPictureInPictureStop\n          }\n          onVideoAspectRatio={onAspectRatio ? _onVideoAspectRatio : undefined}\n          onReceiveAdEvent={\n            onReceiveAdEvent\n              ? (_onReceiveAdEvent as (e: NativeSyntheticEvent<object>) => void)\n              : undefined\n          }\n          onControlsVisibilityChange={\n            onControlsVisibilityChange ? _onControlsVisibilityChange : undefined\n          }\n          viewType={_viewType}\n        />\n        {_renderPoster()}\n      </View>\n    );\n  },\n);\n\nVideo.displayName = 'Video';\nexport default Video;\n","import {Platform} from 'react-native';\n\nimport NativeVideoDecoderInfoModule from './specs/NativeVideoDecoderInfoModule';\n\nconst errMsgGen = (moduleName: string, propertyName: string) =>\n  `The method or property ${moduleName}.${propertyName} is not available on ${Platform.OS}.`;\n\nexport const VideoDecoderProperties = {\n  async getWidevineLevel() {\n    if (Platform.OS !== 'android') {\n      throw new Error(errMsgGen('VideoDecoderProperties', 'getWidevineLevel'));\n    }\n    return NativeVideoDecoderInfoModule.getWidevineLevel();\n  },\n  async isCodecSupported(\n    ...args: Parameters<typeof NativeVideoDecoderInfoModule.isCodecSupported>\n  ) {\n    if (Platform.OS !== 'android') {\n      throw new Error(errMsgGen('VideoDecoderProperties', 'isCodecSupported'));\n    }\n    return NativeVideoDecoderInfoModule.isCodecSupported(...args);\n  },\n  async isHEVCSupported() {\n    if (Platform.OS !== 'android') {\n      throw new Error(errMsgGen('VideoDecoderProperties', 'isHEVCSupported'));\n    }\n    return NativeVideoDecoderInfoModule.isHEVCSupported();\n  },\n};\n","import Video from './Video';\nexport {VideoDecoderProperties} from './VideoDecoderProperties';\nexport * from './types';\nexport {Video};\nexport default Video;\n","import {NativeModules} from 'react-native';\nimport type {Int32} from 'react-native/Libraries/Types/CodegenTypes';\n\n// @TODO rename to \"Spec\" when applying new arch\nexport interface VideoDecoderInfoModuleType {\n  getWidevineLevel: () => Promise<Int32>;\n  isCodecSupported: (\n    mimeType: string,\n    width: Int32,\n    height: Int32,\n  ) => Promise<'unsupported' | 'hardware' | 'software'>;\n  isHEVCSupported: () => Promise<'unsupported' | 'hardware' | 'software'>;\n}\n\nexport default NativeModules.VideoDecoderInfoModule as VideoDecoderInfoModuleType;\n","import {NativeModules} from 'react-native';\nimport type {\n  Int32,\n  Float,\n  UnsafeObject,\n} from 'react-native/Libraries/Types/CodegenTypes';\nimport type {VideoSaveData} from '../types/video-ref';\n\n// @TODO rename to \"Spec\" when applying new arch\nexport interface VideoManagerType {\n  seekCmd: (reactTag: Int32, time: Float, tolerance?: Float) => Promise<void>;\n  setPlayerPauseStateCmd: (reactTag: Int32, paused: boolean) => Promise<void>;\n  setLicenseResultCmd: (\n    reactTag: Int32,\n    result: string,\n    licenseUrl: string,\n  ) => Promise<void>;\n  setLicenseResultErrorCmd: (\n    reactTag: Int32,\n    error: string,\n    licenseUrl: string,\n  ) => Promise<void>;\n  setFullScreenCmd: (reactTag: Int32, fullScreen: boolean) => Promise<void>;\n  setSourceCmd: (reactTag: Int32, source?: UnsafeObject) => Promise<void>;\n  setVolumeCmd: (reactTag: Int32, volume: number) => Promise<void>;\n  save: (reactTag: Int32, option: UnsafeObject) => Promise<VideoSaveData>;\n  getCurrentPosition: (reactTag: Int32) => Promise<Int32>;\n}\n\nexport default NativeModules.VideoManager as VideoManagerType;\n","/* eslint-disable @typescript-eslint/ban-types */\nimport type {HostComponent, ViewProps} from 'react-native';\nimport {requireNativeComponent} from 'react-native';\nimport type {\n  DirectEventHandler,\n  Double,\n  Float,\n  Int32,\n  WithDefault,\n} from 'react-native/Libraries/Types/CodegenTypes';\n\n// -------- There are types for native component (future codegen) --------\n// if you are looking for types for react component, see src/types/video.ts\n\ntype Headers = ReadonlyArray<\n  Readonly<{\n    key: string;\n    value: string;\n  }>\n>;\n\ntype VideoMetadata = Readonly<{\n  title?: string;\n  subtitle?: string;\n  description?: string;\n  imageUri?: string;\n}>;\n\nexport type AdsConfig = Readonly<{\n  adTagUrl?: string;\n  adLanguage?: string;\n}>;\n\nexport type VideoSrc = Readonly<{\n  uri?: string;\n  isNetwork?: boolean;\n  isAsset?: boolean;\n  shouldCache?: boolean;\n  type?: string;\n  mainVer?: Int32;\n  patchVer?: Int32;\n  requestHeaders?: Headers;\n  startPosition?: Float;\n  cropStart?: Float;\n  cropEnd?: Float;\n  contentStartTime?: Int32; // Android\n  metadata?: VideoMetadata;\n  drm?: Drm;\n  cmcd?: NativeCmcdConfiguration; // android\n  textTracksAllowChunklessPreparation?: boolean; // android\n  textTracks?: TextTracks;\n  ad?: AdsConfig;\n  minLoadRetryCount?: Int32; // Android\n}>;\n\ntype DRMType = WithDefault<string, 'widevine'>;\n\ntype DebugConfig = Readonly<{\n  enable?: boolean;\n  thread?: boolean;\n}>;\n\ntype Drm = Readonly<{\n  type?: DRMType;\n  licenseServer?: string;\n  headers?: Headers;\n  contentId?: string; // ios\n  certificateUrl?: string; // ios\n  base64Certificate?: boolean; // ios default: false\n  useExternalGetLicense?: boolean; // ios\n  multiDrm?: WithDefault<boolean, false>; // android\n  localSourceEncryptionKeyScheme?: string; // ios\n}>;\n\ntype CmcdMode = WithDefault<Int32, 1>;\nexport type NativeCmcdConfiguration = Readonly<{\n  mode?: CmcdMode; // default: MODE_QUERY_PARAMETER\n  request?: Headers;\n  session?: Headers;\n  object?: Headers;\n  status?: Headers;\n}>;\n\ntype TextTracks = ReadonlyArray<\n  Readonly<{\n    title: string;\n    language: string;\n    type: string;\n    uri: string;\n  }>\n>;\n\ntype SelectedTextTrackType = WithDefault<string, 'system'>;\n\ntype SelectedAudioTrackType = WithDefault<string, 'system'>;\n\ntype SelectedTextTrack = Readonly<{\n  type?: SelectedTextTrackType;\n  value?: string;\n}>;\n\ntype SelectedAudioTrack = Readonly<{\n  type?: SelectedAudioTrackType;\n  value?: string;\n}>;\n\ntype SelectedVideoTrackType = WithDefault<string, 'auto'>;\n\ntype SelectedVideoTrack = Readonly<{\n  type?: SelectedVideoTrackType;\n  value?: string;\n}>;\n\ntype BufferConfigLive = Readonly<{\n  maxPlaybackSpeed?: Float;\n  minPlaybackSpeed?: Float;\n  maxOffsetMs?: Int32;\n  minOffsetMs?: Int32;\n  targetOffsetMs?: Int32;\n}>;\n\ntype BufferingStrategyType = WithDefault<string, 'Default'>;\n\ntype BufferConfig = Readonly<{\n  minBufferMs?: Float;\n  maxBufferMs?: Float;\n  bufferForPlaybackMs?: Float;\n  bufferForPlaybackAfterRebufferMs?: Float;\n  maxHeapAllocationPercent?: Float;\n  backBufferDurationMs?: Float; // Android\n  minBackBufferMemoryReservePercent?: Float;\n  minBufferMemoryReservePercent?: Float;\n  cacheSizeMB?: Float;\n  live?: BufferConfigLive;\n}>;\n\ntype SubtitleStyle = Readonly<{\n  fontSize?: Float;\n  paddingTop?: WithDefault<Float, 0>;\n  paddingBottom?: WithDefault<Float, 0>;\n  paddingLeft?: WithDefault<Float, 0>;\n  paddingRight?: WithDefault<Float, 0>;\n  opacity?: WithDefault<Float, 1>;\n  subtitlesFollowVideo?: WithDefault<boolean, true>;\n}>;\n\ntype OnLoadData = Readonly<{\n  currentTime: Float;\n  duration: Float;\n  naturalSize: Readonly<{\n    width: Float;\n    height: Float;\n    orientation: WithDefault<string, 'landscape'>;\n  }>;\n  audioTracks: {\n    index: Int32;\n    title?: string;\n    language?: string;\n    bitrate?: Float;\n    type?: string;\n    selected?: boolean;\n  }[];\n  textTracks: {\n    index: Int32;\n    title?: string;\n    language?: string;\n    /**\n     * iOS only supports VTT, Android supports all 3\n     */\n    type?: WithDefault<string, 'srt'>;\n    selected?: boolean;\n  }[];\n}>;\n\nexport type OnLoadStartData = Readonly<{\n  isNetwork: boolean;\n  type: string;\n  uri: string;\n}>;\n\nexport type OnVideoAspectRatioData = Readonly<{\n  width: Float;\n  height: Float;\n}>;\n\nexport type OnBufferData = Readonly<{isBuffering: boolean}>;\n\nexport type OnProgressData = Readonly<{\n  currentTime: Float;\n  playableDuration: Float;\n  seekableDuration: Float;\n}>;\n\nexport type OnBandwidthUpdateData = Readonly<{\n  bitrate: Int32;\n  width?: Float;\n  height?: Float;\n  trackId?: Int32;\n}>;\n\nexport type OnSeekData = Readonly<{\n  currentTime: Float;\n  seekTime: Float;\n}>;\n\nexport type OnPlaybackStateChangedData = Readonly<{\n  isPlaying: boolean;\n  isSeeking: boolean;\n}>;\n\nexport type OnTimedMetadataData = Readonly<{\n  metadata: {\n    value?: string;\n    identifier: string;\n  }[];\n}>;\n\nexport type OnAudioTracksData = Readonly<{\n  audioTracks: {\n    index: Int32;\n    title?: string;\n    language?: string;\n    bitrate?: Float;\n    type?: string;\n    selected?: boolean;\n  }[];\n}>;\n\ntype OnTextTracksData = Readonly<{\n  textTracks: {\n    index: Int32;\n    title?: string;\n    language?: string;\n    /**\n     * iOS only supports VTT, Android supports all 3\n     */\n    type?: WithDefault<string, 'srt'>;\n    selected?: boolean;\n  }[];\n}>;\n\nexport type OnTextTrackDataChangedData = Readonly<{\n  subtitleTracks: string;\n}>;\n\nexport type OnVideoTracksData = Readonly<{\n  videoTracks: {\n    index: Int32;\n    tracksId?: string;\n    codecs?: string;\n    width?: Float;\n    height?: Float;\n    bitrate?: Float;\n    selected?: boolean;\n  }[];\n}>;\n\nexport type OnPlaybackRateChangeData = Readonly<{\n  playbackRate: Float;\n}>;\n\nexport type OnVolumeChangeData = Readonly<{\n  volume: Float;\n}>;\n\nexport type OnExternalPlaybackChangeData = Readonly<{\n  isExternalPlaybackActive: boolean;\n}>;\n\nexport type OnGetLicenseData = Readonly<{\n  licenseUrl: string;\n  loadedLicenseUrl: string;\n  contentId: string;\n  spcBase64: string;\n}>;\n\nexport type OnPictureInPictureStatusChangedData = Readonly<{\n  isActive: boolean;\n}>;\n\ntype OnReceiveAdEventData = Readonly<{\n  data?: {};\n  event: WithDefault<string, 'AD_BREAK_ENDED'>;\n}>;\n\nexport type OnVideoErrorData = Readonly<{\n  error: Readonly<{\n    errorString?: string; // android | web\n    errorException?: string; // android\n    errorStackTrace?: string; // android\n    errorCode?: string; // android\n    error?: string; // ios\n    code?: Int32; // ios | web\n    localizedDescription?: string; // ios\n    localizedFailureReason?: string; // ios\n    localizedRecoverySuggestion?: string; // ios\n    domain?: string; // ios\n  }>;\n  target?: Int32; // ios\n}>;\n\nexport type OnAudioFocusChangedData = Readonly<{\n  hasAudioFocus: boolean;\n}>;\n\ntype ControlsStyles = Readonly<{\n  hidePosition?: WithDefault<boolean, false>;\n  hidePlayPause?: WithDefault<boolean, false>;\n  hideForward?: WithDefault<boolean, false>;\n  hideRewind?: WithDefault<boolean, false>;\n  hideNext?: WithDefault<boolean, false>;\n  hidePrevious?: WithDefault<boolean, false>;\n  hideFullscreen?: WithDefault<boolean, false>;\n  hideSeekBar?: WithDefault<boolean, false>;\n  hideDuration?: WithDefault<boolean, false>;\n  hideNavigationBarOnFullScreenMode?: WithDefault<boolean, true>;\n  hideNotificationBarOnFullScreenMode?: WithDefault<boolean, true>;\n  hideSettingButton?: WithDefault<boolean, true>;\n  seekIncrementMS?: Int32;\n  liveLabel?: string;\n}>;\n\nexport type OnControlsVisibilityChange = Readonly<{\n  isVisible: boolean;\n}>;\n\nexport interface VideoNativeProps extends ViewProps {\n  src?: VideoSrc;\n  allowsExternalPlayback?: boolean; // ios, true\n  disableFocus?: boolean; // android\n  maxBitRate?: Float;\n  resizeMode?: WithDefault<string, 'none'>;\n  repeat?: boolean;\n  automaticallyWaitsToMinimizeStalling?: boolean;\n  shutterColor?: Int32;\n  audioOutput?: WithDefault<string, 'speaker'>;\n  selectedTextTrack?: SelectedTextTrack;\n  selectedAudioTrack?: SelectedAudioTrack;\n  selectedVideoTrack?: SelectedVideoTrack; // android\n  paused?: boolean;\n  muted?: boolean;\n  controls?: boolean;\n  filter?: WithDefault<string, ''>;\n  filterEnabled?: boolean;\n  volume?: Float; // default 1.0\n  playInBackground?: boolean;\n  preventsDisplaySleepDuringVideoPlayback?: boolean;\n  preferredForwardBufferDuration?: Float; //ios, 0\n  playWhenInactive?: boolean; // ios, false\n  pictureInPicture?: boolean; // ios, false\n  ignoreSilentSwitch?: WithDefault<string, 'inherit'>; // ios, 'inherit'\n  mixWithOthers?: WithDefault<string, 'inherit'>; // ios, 'inherit'\n  rate?: Float;\n  fullscreen?: boolean; // ios, false\n  fullscreenAutorotate?: boolean;\n  fullscreenOrientation?: WithDefault<string, 'all'>;\n  progressUpdateInterval?: Float;\n  restoreUserInterfaceForPIPStopCompletionHandler?: boolean;\n  debug?: DebugConfig;\n  showNotificationControls?: WithDefault<boolean, false>; // Android, iOS\n  bufferConfig?: BufferConfig; // Android\n  currentPlaybackTime?: Double; // Android\n  disableDisconnectError?: boolean; // Android\n  focusable?: boolean; // Android\n  hideShutterView?: boolean; //\tAndroid\n  reportBandwidth?: boolean; //Android\n  subtitleStyle?: SubtitleStyle; // android\n  viewType?: Int32; // Android\n  bufferingStrategy?: BufferingStrategyType; // Android\n  controlsStyles?: ControlsStyles; // Android\n  onControlsVisibilityChange?: DirectEventHandler<OnControlsVisibilityChange>;\n  onVideoLoad?: DirectEventHandler<OnLoadData>;\n  onVideoLoadStart?: DirectEventHandler<OnLoadStartData>;\n  onVideoAspectRatio?: DirectEventHandler<OnVideoAspectRatioData>;\n  onVideoBuffer?: DirectEventHandler<OnBufferData>;\n  onVideoError?: DirectEventHandler<OnVideoErrorData>;\n  onVideoProgress?: DirectEventHandler<OnProgressData>;\n  onVideoBandwidthUpdate?: DirectEventHandler<OnBandwidthUpdateData>;\n  onVideoSeek?: DirectEventHandler<OnSeekData>;\n  onVideoEnd?: DirectEventHandler<{}>; // all\n  onVideoAudioBecomingNoisy?: DirectEventHandler<{}>;\n  onVideoFullscreenPlayerWillPresent?: DirectEventHandler<{}>; // ios, android\n  onVideoFullscreenPlayerDidPresent?: DirectEventHandler<{}>; // ios, android\n  onVideoFullscreenPlayerWillDismiss?: DirectEventHandler<{}>; // ios, android\n  onVideoFullscreenPlayerDidDismiss?: DirectEventHandler<{}>; // ios, android\n  onReadyForDisplay?: DirectEventHandler<{}>;\n  onPlaybackRateChange?: DirectEventHandler<OnPlaybackRateChangeData>; // all\n  onVolumeChange?: DirectEventHandler<OnVolumeChangeData>; // android, ios\n  onVideoExternalPlaybackChange?: DirectEventHandler<OnExternalPlaybackChangeData>;\n  onGetLicense?: DirectEventHandler<OnGetLicenseData>;\n  onPictureInPictureStatusChanged?: DirectEventHandler<OnPictureInPictureStatusChangedData>;\n  onRestoreUserInterfaceForPictureInPictureStop?: DirectEventHandler<{}>;\n  onReceiveAdEvent?: DirectEventHandler<OnReceiveAdEventData>;\n  onVideoPlaybackStateChanged?: DirectEventHandler<OnPlaybackStateChangedData>; // android only\n  onVideoIdle?: DirectEventHandler<{}>; // android only (nowhere in document, so do not use as props. just type declaration)\n  onAudioFocusChanged?: DirectEventHandler<OnAudioFocusChangedData>; // android only (nowhere in document, so do not use as props. just type declaration)\n  onTimedMetadata?: DirectEventHandler<OnTimedMetadataData>; // ios, android\n  onAudioTracks?: DirectEventHandler<OnAudioTracksData>; // android\n  onTextTracks?: DirectEventHandler<OnTextTracksData>; // android\n  onTextTrackDataChanged?: DirectEventHandler<OnTextTrackDataChangedData>; // iOS\n  onVideoTracks?: DirectEventHandler<OnVideoTracksData>; // android\n}\n\ntype NativeVideoComponentType = HostComponent<VideoNativeProps>;\n\nexport default requireNativeComponent<VideoNativeProps>(\n  'RCTVideo',\n) as NativeVideoComponentType;\n","export enum AdEvent {\n  /**\n   * iOS only: Fired the first time each ad break ends. Applications must reenable seeking when this occurs (only used for dynamic ad insertion).\n   */\n  AD_BREAK_ENDED = 'AD_BREAK_ENDED',\n  /**\n   * Fires when an ad rule or a VMAP ad break would have played if autoPlayAdBreaks is false.\n   */\n  AD_BREAK_READY = 'AD_BREAK_READY',\n  /**\n   * iOS only: Fired first time each ad break begins playback. If an ad break is watched subsequent times this will not be fired. Applications must disable seeking when this occurs (only used for dynamic ad insertion).\n   */\n  AD_BREAK_STARTED = 'AD_BREAK_STARTED',\n  /**\n   * Android only: Fires when the ad has stalled playback to buffer.\n   */\n  AD_BUFFERING = 'AD_BUFFERING',\n  /**\n   * Android only: Fires when the ad is ready to play without buffering, either at the beginning of the ad or after buffering completes.\n   */\n  AD_CAN_PLAY = 'AD_CAN_PLAY',\n  /**\n   * Android only: Fires when an ads list is loaded.\n   */\n  AD_METADATA = 'AD_METADATA',\n  /**\n   * iOS only: Fired every time the stream switches from advertising or slate to content. This will be fired even when an ad is played a second time or when seeking into an ad (only used for dynamic ad insertion).\n   */\n  AD_PERIOD_ENDED = 'AD_PERIOD_ENDED',\n  /**\n   * iOS only: Fired every time the stream switches from content to advertising or slate. This will be fired even when an ad is played a second time or when seeking into an ad (only used for dynamic ad insertion).\n   */\n  AD_PERIOD_STARTED = 'AD_PERIOD_STARTED',\n  /**\n   * Android only: Fires when the ad's current time value changes. The event `data` will be populated with an AdProgressData object.\n   */\n  AD_PROGRESS = 'AD_PROGRESS',\n  /**\n   * Fires when the ads manager is done playing all the valid ads in the ads response, or when the response doesn't return any valid ads.\n   */\n  ALL_ADS_COMPLETED = 'ALL_ADS_COMPLETED',\n  /**\n   * Fires when the ad is clicked.\n   */\n  CLICK = 'CLICK',\n  /**\n   * Fires when the ad completes playing.\n   */\n  COMPLETED = 'COMPLETED',\n  /**\n   * Android only: Fires when content should be paused. This usually happens right before an ad is about to cover the content.\n   */\n  CONTENT_PAUSE_REQUESTED = 'CONTENT_PAUSE_REQUESTED',\n  /**\n   * Android only: Fires when content should be resumed. This usually happens when an ad finishes or collapses.\n   */\n  CONTENT_RESUME_REQUESTED = 'CONTENT_RESUME_REQUESTED',\n  /**\n   * iOS only: Cuepoints changed for VOD stream (only used for dynamic ad insertion).\n   */\n  CUEPOINTS_CHANGED = 'CUEPOINTS_CHANGED',\n  /**\n   * Android only: Fires when the ad's duration changes.\n   */\n  DURATION_CHANGE = 'DURATION_CHANGE',\n  /**\n   * Fires when an error is encountered and the ad can't be played.\n   */\n  ERROR = 'ERROR',\n  /**\n   * Fires when the ad playhead crosses first quartile.\n   */\n  FIRST_QUARTILE = 'FIRST_QUARTILE',\n  /**\n   * Android only: Fires when the impression URL has been pinged.\n   */\n  IMPRESSION = 'IMPRESSION',\n  /**\n   * Android only: Fires when an ad triggers the interaction callback. Ad interactions contain an interaction ID string in the ad data.\n   */\n  INTERACTION = 'INTERACTION',\n  /**\n   * Android only: Fires when the displayed ad changes from linear to nonlinear, or the reverse.\n   */\n  LINEAR_CHANGED = 'LINEAR_CHANGED',\n  /**\n   * Fires when ad data is available.\n   */\n  LOADED = 'LOADED',\n  /**\n   * Fires when a non-fatal error is encountered. The user need not take any action since the SDK will continue with the same or next ad playback depending on the error situation.\n   */\n  LOG = 'LOG',\n  /**\n   * Fires when the ad playhead crosses midpoint.\n   */\n  MIDPOINT = 'MIDPOINT',\n  /**\n   * Fires when the ad is paused.\n   */\n  PAUSED = 'PAUSED',\n  /**\n   * Fires when the ad is resumed.\n   */\n  RESUMED = 'RESUMED',\n  /**\n   * Android only: Fires when the displayed ads skippable state is changed.\n   */\n  SKIPPABLE_STATE_CHANGED = 'SKIPPABLE_STATE_CHANGED',\n  /**\n   * Fires when the ad is skipped by the user.\n   */\n  SKIPPED = 'SKIPPED',\n  /**\n   * Fires when the ad starts playing.\n   */\n  STARTED = 'STARTED',\n  /**\n   * iOS only: Stream request has loaded (only used for dynamic ad insertion).\n   */\n  STREAM_LOADED = 'STREAM_LOADED',\n  /**\n   * iOS only: Fires when the ad is tapped.\n   */\n  TAPPED = 'TAPPED',\n  /**\n   * Fires when the ad playhead crosses third quartile.\n   */\n  THIRD_QUARTILE = 'THIRD_QUARTILE',\n  /**\n   * iOS only: An unknown event has fired\n   */\n  UNKNOWN = 'UNKNOWN',\n  /**\n   * Android only: Fires when the ad is closed by the user.\n   */\n  USER_CLOSE = 'USER_CLOSE',\n  /**\n   * Android only: Fires when the non-clickthrough portion of a video ad is clicked.\n   */\n  VIDEO_CLICKED = 'VIDEO_CLICKED',\n  /**\n   * Android only: Fires when a user clicks a video icon.\n   */\n  VIDEO_ICON_CLICKED = 'VIDEO_ICON_CLICKED',\n  /**\n   * Android only: Fires when the ad volume has changed.\n   */\n  VOLUME_CHANGED = 'VOLUME_CHANGED',\n  /**\n   * Android only: Fires when the ad volume has been muted.\n   */\n  VOLUME_MUTED = 'VOLUME_MUTED',\n}\n","enum FilterType {\n  NONE = '',\n  INVERT = 'CIColorInvert',\n  MONOCHROME = 'CIColorMonochrome',\n  POSTERIZE = 'CIColorPosterize',\n  FALSE = 'CIFalseColor',\n  MAXIMUMCOMPONENT = 'CIMaximumComponent',\n  MINIMUMCOMPONENT = 'CIMinimumComponent',\n  CHROME = 'CIPhotoEffectChrome',\n  FADE = 'CIPhotoEffectFade',\n  INSTANT = 'CIPhotoEffectInstant',\n  MONO = 'CIPhotoEffectMono',\n  NOIR = 'CIPhotoEffectNoir',\n  PROCESS = 'CIPhotoEffectProcess',\n  TONAL = 'CIPhotoEffectTonal',\n  TRANSFER = 'CIPhotoEffectTransfer',\n  SEPIA = 'CISepiaTone',\n}\n\nexport default FilterType;\n","enum Orientation {\n  PORTRAIT = 'portrait',\n  LANDSCAPE = 'landscape',\n}\n\nexport default Orientation;\n","enum ResizeMode {\n  NONE = 'none',\n  CONTAIN = 'contain',\n  COVER = 'cover',\n  STRETCH = 'stretch',\n}\n\nexport default ResizeMode;\n","enum TextTrackType {\n  SUBRIP = 'application/x-subrip',\n  TTML = 'application/ttml+xml',\n  VTT = 'text/vtt',\n}\n\nexport default TextTrackType;\n","/**\n * Define Available view type for android\n * these values shall match android spec, see ViewType.kt\n */\nenum ViewType {\n  TEXTURE = 0,\n  SURFACE = 1,\n  SURFACE_SECURE = 2,\n}\n\nexport default ViewType;\n","export * from './Ads';\nexport * from './events';\nexport {default as FilterType} from './FilterType';\nexport * from './language';\nexport {default as Orientation} from './Orientation';\nexport {default as ResizeMode} from './ResizeMode';\nexport {default as TextTrackType} from './TextTrackType';\nexport {default as ViewType} from './ViewType';\nexport * from './video';\nexport * from './video-ref';\n","import type {ISO639_1} from './language';\nimport type {ReactVideoEvents} from './events';\nimport type {\n  ImageProps,\n  StyleProp,\n  ViewProps,\n  ViewStyle,\n  ImageRequireSource,\n  ImageURISource,\n  ImageStyle,\n} from 'react-native';\nimport type {ReactNode} from 'react';\nimport type VideoResizeMode from './ResizeMode';\nimport type FilterType from './FilterType';\nimport type ViewType from './ViewType';\n\nexport type Headers = Record<string, string>;\n\nexport type EnumValues<T extends string | number> = T extends string\n  ? `${T}` | T\n  : T;\n\nexport type ReactVideoSourceProperties = {\n  uri?: string;\n  isNetwork?: boolean;\n  isAsset?: boolean;\n  shouldCache?: boolean;\n  type?: string;\n  mainVer?: number;\n  patchVer?: number;\n  headers?: Headers;\n  startPosition?: number;\n  cropStart?: number;\n  cropEnd?: number;\n  contentStartTime?: number; // Android\n  metadata?: VideoMetadata;\n  drm?: Drm;\n  cmcd?: Cmcd; // android\n  textTracksAllowChunklessPreparation?: boolean;\n  textTracks?: TextTracks;\n  ad?: AdConfig;\n  minLoadRetryCount?: number; // Android\n};\n\nexport type ReactVideoSource = Readonly<\n  Omit<ReactVideoSourceProperties, 'uri'> & {\n    uri?: string | NodeRequire;\n  }\n>;\n\nexport type ReactVideoPosterSource = ImageURISource | ImageRequireSource;\n\nexport type ReactVideoPoster = Omit<ImageProps, 'source'> & {\n  // prevents giving source in the array\n  source?: ReactVideoPosterSource;\n};\n\nexport type VideoMetadata = Readonly<{\n  title?: string;\n  subtitle?: string;\n  description?: string;\n  artist?: string;\n  imageUri?: string;\n}>;\n\nexport type DebugConfig = Readonly<{\n  enable?: boolean;\n  thread?: boolean;\n}>;\n\nexport enum DRMType {\n  WIDEVINE = 'widevine',\n  PLAYREADY = 'playready',\n  CLEARKEY = 'clearkey',\n  FAIRPLAY = 'fairplay',\n}\n\nexport type AdConfig = Readonly<{\n  adTagUrl?: string;\n  adLanguage?: ISO639_1;\n}>;\n\nexport type Drm = Readonly<{\n  type?: DRMType;\n  licenseServer?: string;\n  headers?: Headers;\n  contentId?: string; // ios\n  certificateUrl?: string; // ios\n  base64Certificate?: boolean; // ios default: false\n  multiDrm?: boolean; // android\n  localSourceEncryptionKeyScheme?: string; // ios\n  /* eslint-disable @typescript-eslint/no-unused-vars */\n  getLicense?: (\n    spcBase64: string,\n    contentId: string,\n    licenseUrl: string,\n    loadedLicenseUrl: string,\n  ) => string | Promise<string>; // ios\n  /* eslint-enable @typescript-eslint/no-unused-vars */\n}>;\n\nexport enum CmcdMode {\n  MODE_REQUEST_HEADER = 0,\n  MODE_QUERY_PARAMETER = 1,\n}\n/**\n * Custom key names MUST carry a hyphenated prefix to ensure that there will not be a\n * namespace collision with future revisions to this specification. Clients SHOULD\n * use a reverse-DNS syntax when defining their own prefix.\n *\n * @see https://cdn.cta.tech/cta/media/media/resources/standards/pdfs/cta-5004-final.pdf CTA-5004 Specification (Page 6, Section 3.1)\n */\nexport type CmcdData = Record<`${string}-${string}`, string | number>;\nexport type CmcdConfiguration = Readonly<{\n  mode?: CmcdMode; // default: MODE_QUERY_PARAMETER\n  request?: CmcdData;\n  session?: CmcdData;\n  object?: CmcdData;\n  status?: CmcdData;\n}>;\nexport type Cmcd = boolean | CmcdConfiguration;\n\nexport enum BufferingStrategyType {\n  DEFAULT = 'Default',\n  DISABLE_BUFFERING = 'DisableBuffering',\n  DEPENDING_ON_MEMORY = 'DependingOnMemory',\n}\n\nexport type BufferConfigLive = {\n  maxPlaybackSpeed?: number;\n  minPlaybackSpeed?: number;\n  maxOffsetMs?: number;\n  minOffsetMs?: number;\n  targetOffsetMs?: number;\n};\n\nexport type BufferConfig = {\n  minBufferMs?: number;\n  maxBufferMs?: number;\n  bufferForPlaybackMs?: number;\n  bufferForPlaybackAfterRebufferMs?: number;\n  backBufferDurationMs?: number; // Android\n  maxHeapAllocationPercent?: number;\n  minBackBufferMemoryReservePercent?: number;\n  minBufferMemoryReservePercent?: number;\n  cacheSizeMB?: number;\n  live?: BufferConfigLive;\n};\n\nexport enum SelectedTrackType {\n  SYSTEM = 'system',\n  DISABLED = 'disabled',\n  TITLE = 'title',\n  LANGUAGE = 'language',\n  INDEX = 'index',\n}\n\nexport type SelectedTrack = {\n  type: SelectedTrackType;\n  value?: string | number;\n};\n\nexport enum SelectedVideoTrackType {\n  AUTO = 'auto',\n  DISABLED = 'disabled',\n  RESOLUTION = 'resolution',\n  INDEX = 'index',\n}\n\nexport type SelectedVideoTrack = {\n  type: SelectedVideoTrackType;\n  value?: string | number;\n};\n\nexport type SubtitleStyle = {\n  fontSize?: number;\n  paddingTop?: number;\n  paddingBottom?: number;\n  paddingLeft?: number;\n  paddingRight?: number;\n  opacity?: number;\n  subtitlesFollowVideo?: boolean;\n};\n\nexport enum TextTrackType {\n  SUBRIP = 'application/x-subrip',\n  TTML = 'application/ttml+xml',\n  VTT = 'text/vtt',\n}\n\nexport type TextTracks = {\n  title: string;\n  language: ISO639_1;\n  type: TextTrackType;\n  uri: string;\n}[];\n\nexport type TextTrackSelectionType =\n  | 'system'\n  | 'disabled'\n  | 'title'\n  | 'language'\n  | 'index';\n\nexport type SelectedTextTrack = Readonly<{\n  type: TextTrackSelectionType;\n  value?: string | number;\n}>;\n\nexport type AudioTrackSelectionType =\n  | 'system'\n  | 'disabled'\n  | 'title'\n  | 'language'\n  | 'index';\n\nexport type SelectedAudioTrack = Readonly<{\n  type: AudioTrackSelectionType;\n  value?: string | number;\n}>;\n\nexport type Chapters = {\n  title: string;\n  startTime: number;\n  endTime: number;\n  uri?: string;\n};\n\nexport enum FullscreenOrientationType {\n  ALL = 'all',\n  LANDSCAPE = 'landscape',\n  PORTRAIT = 'portrait',\n}\n\nexport enum IgnoreSilentSwitchType {\n  INHERIT = 'inherit',\n  IGNORE = 'ignore',\n  OBEY = 'obey',\n}\n\nexport enum MixWithOthersType {\n  INHERIT = 'inherit',\n  MIX = 'mix',\n  DUCK = 'duck',\n}\n\nexport enum PosterResizeModeType {\n  CONTAIN = 'contain',\n  CENTER = 'center',\n  COVER = 'cover',\n  NONE = 'none',\n  REPEAT = 'repeat',\n  STRETCH = 'stretch',\n}\n\nexport type AudioOutput = 'speaker' | 'earpiece';\n\nexport type ControlsStyles = {\n  hideSeekBar?: boolean;\n  hideDuration?: boolean;\n  hidePosition?: boolean;\n  hidePlayPause?: boolean;\n  hideForward?: boolean;\n  hideRewind?: boolean;\n  hideNext?: boolean;\n  hidePrevious?: boolean;\n  hideFullscreen?: boolean;\n  hideNavigationBarOnFullScreenMode?: boolean;\n  hideNotificationBarOnFullScreenMode?: boolean;\n  hideSettingButton?: boolean;\n  seekIncrementMS?: number;\n  liveLabel?: string;\n};\n\nexport interface ReactVideoRenderLoaderProps {\n  source?: ReactVideoSource;\n  style?: StyleProp<ImageStyle>;\n  resizeMode?: EnumValues<VideoResizeMode>;\n}\n\nexport interface ReactVideoProps extends ReactVideoEvents, ViewProps {\n  source?: ReactVideoSource;\n  /** @deprecated Use source.drm */\n  drm?: Drm;\n  style?: StyleProp<ViewStyle>;\n  /** @deprecated Use source.ad.adTagUrl */\n  adTagUrl?: string;\n  /** @deprecated Use source.ad.adLanguage */\n  adLanguage?: ISO639_1;\n  audioOutput?: AudioOutput; // Mobile\n  automaticallyWaitsToMinimizeStalling?: boolean; // iOS\n  bufferConfig?: BufferConfig; // Android\n  bufferingStrategy?: BufferingStrategyType;\n  chapters?: Chapters[]; // iOS\n  /** @deprecated Use source.contentStartTime */\n  contentStartTime?: number; // Android\n  controls?: boolean;\n  currentPlaybackTime?: number; // Android\n  disableFocus?: boolean;\n  disableDisconnectError?: boolean; // Android\n  filter?: EnumValues<FilterType>; // iOS\n  filterEnabled?: boolean; // iOS\n  focusable?: boolean; // Android\n  fullscreen?: boolean; // iOS\n  fullscreenAutorotate?: boolean; // iOS\n  fullscreenOrientation?: EnumValues<FullscreenOrientationType>; // iOS\n  hideShutterView?: boolean; //\tAndroid\n  ignoreSilentSwitch?: EnumValues<IgnoreSilentSwitchType>; // iOS\n  /** @deprecated Use source.minLoadRetryCount */\n  minLoadRetryCount?: number; // Android\n  maxBitRate?: number;\n  mixWithOthers?: EnumValues<MixWithOthersType>; // iOS\n  muted?: boolean;\n  paused?: boolean;\n  pictureInPicture?: boolean; // iOS\n  playInBackground?: boolean;\n  playWhenInactive?: boolean; // iOS\n  poster?: string | ReactVideoPoster; // string is deprecated\n  /** @deprecated use **resizeMode** key in **poster** props instead */\n  posterResizeMode?: EnumValues<PosterResizeModeType>;\n  preferredForwardBufferDuration?: number; // iOS\n  preventsDisplaySleepDuringVideoPlayback?: boolean;\n  progressUpdateInterval?: number;\n  rate?: number;\n  renderLoader?: ReactNode | ((arg0: ReactVideoRenderLoaderProps) => ReactNode);\n  repeat?: boolean;\n  reportBandwidth?: boolean; //Android\n  resizeMode?: EnumValues<VideoResizeMode>;\n  showNotificationControls?: boolean; // Android, iOS\n  selectedAudioTrack?: SelectedTrack;\n  selectedTextTrack?: SelectedTrack;\n  selectedVideoTrack?: SelectedVideoTrack; // android\n  subtitleStyle?: SubtitleStyle; // android\n  shutterColor?: string; // Android\n  /** @deprecated Use source.textTracks */\n  textTracks?: TextTracks;\n  testID?: string;\n  viewType?: ViewType;\n  /** @deprecated Use viewType */\n  useTextureView?: boolean; // Android\n  /** @deprecated Use viewType*/\n  useSecureView?: boolean; // Android\n  volume?: number;\n  /** @deprecated use **localSourceEncryptionKeyScheme** key in **drm** props instead */\n  localSourceEncryptionKeyScheme?: string;\n  debug?: DebugConfig;\n  allowsExternalPlayback?: boolean; // iOS\n  controlsStyles?: ControlsStyles; // Android\n}\n","import type {Component, RefObject, ComponentClass} from 'react';\nimport {Image, findNodeHandle, type ImageSourcePropType} from 'react-native';\nimport type {ReactVideoSource, ReactVideoSourceProperties} from './types/video';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function generateHeaderForNative(obj?: Record<string, any>) {\n  if (!obj) {\n    return [];\n  }\n  return Object.entries(obj).map(([key, value]) => ({key, value}));\n}\n\ntype Source = ImageSourcePropType | ReactVideoSource;\n\nexport function resolveAssetSourceForVideo(\n  source: Source,\n): ReactVideoSourceProperties {\n  // will convert source id to uri\n  const convertToUri = (sourceItem: number): string | undefined => {\n    const resolveItem = Image.resolveAssetSource(sourceItem);\n    if (resolveItem) {\n      return resolveItem.uri;\n    } else {\n      console.warn('cannot resolve item ', sourceItem);\n      return undefined;\n    }\n  };\n\n  // This is deprecated, but we need to support it for backward compatibility\n  if (typeof source === 'number') {\n    return {\n      uri: convertToUri(source),\n    };\n  }\n\n  if ('uri' in source && typeof source.uri === 'number') {\n    return {\n      ...source,\n      uri: convertToUri(source.uri),\n    };\n  }\n\n  return source as ReactVideoSourceProperties;\n}\n\n/**\n * @deprecated\n * Do not use this fn anymore. \"findNodeHandle\" will be deprecated.\n * */\nexport function getReactTag(\n  ref: RefObject<\n    | Component<unknown, unknown, unknown>\n    | ComponentClass<unknown, unknown>\n    | null\n  >,\n): number {\n  if (!ref.current) {\n    throw new Error('Video Component is not mounted');\n  }\n\n  const reactTag = findNodeHandle(ref.current);\n\n  if (!reactTag) {\n    throw new Error(\n      'Cannot find reactTag for Video Component in components tree',\n    );\n  }\n\n  return reactTag;\n}\n"],"names":["_Toast","require","_BaseToast","_SuccessToast","_ErrorToast","_InfoToast","_types","Object","keys","forEach","key","prototype","hasOwnProperty","call","_exportNames","exports","defineProperty","enumerable","get","_react","_interopRequireDefault","_contexts","_ToastUI","_useToast2","_jsxRuntime","_excluded","ToastRoot","React","forwardRef","props","ref","config","defaultOptions","_objectWithoutProperties2","default","_useToast","useToast","show","hide","isVisible","options","data","useImperativeHandle","useCallback","jsx","ToastUI","refs","Toast","toastRef","useRef","setRef","oldRef","newRef","current","push","filter","r","LoggerProvider","enableLogs","children","assign","getRef","activeRef","_toConsumableArray2","reverse","find","params","_getRef","_getRef2","position","topOffset","bottomOffset","keyboardOffset","swipeable","_AnimatedContainer","AnimatedContainer","onHide","renderComponent","defaultToastConfig","success","SuccessToast","error","ErrorToast","info","InfoToast","_ref","text1","text2","type","onPress","text1Style","text2Style","ToastComponent","Error","_ref$onRestorePositio","onRestorePosition","noop","log","useLogger","_useViewDimensions","useViewDimensions","computeViewDimensions","height","_useSlideAnimation","useSlideAnimation","animatedValue","animate","animationStyles","onDismiss","onRestore","computeNewAnimatedValueForGesture","gesture","damping","dampingFor","animatedValueFor","panResponder","usePanResponder","disable","useLayoutEffect","_reactNative","Animated","View","testID","getTestId","onLayout","style","styles","base","pointerEvents","panHandlers","_hooks","_func","_number","_testId","moveY","screenHeight","Dimensions","Math","abs","boundValue","val","bound","dy","StyleSheet","create","left","right","alignItems","justifyContent","top","bottom","_text1$length","_text2$length","_ref$activeOpacity","activeOpacity","touchableContainerProps","contentContainerStyle","contentContainerProps","_ref$text1NumberOfLin","text1NumberOfLines","text1Props","_ref$text2NumberOfLin","text2NumberOfLines","text2Props","renderLeadingIcon","renderTrailingIcon","jsxs","TouchableOpacity","leadingBorder","contentContainer","length","Text","numberOfLines","ellipsizeMode","HEIGHT","WIDTH","BORDER_RADIUS","flexDirection","width","borderRadius","shadowOffset","shadowOpacity","shadowRadius","elevation","backgroundColor","borderLeftWidth","borderLeftColor","paddingHorizontal","flex","fontSize","fontWeight","marginBottom","color","BaseToast","_ref$enableLogs","_console","_len","arguments","args","Array","_key","console","apply","concat","value","LoggerContext","Provider","useContext","createContext","_LoggerContext","_useTimeout","_usePanResponder","_useKeyboard","_React$useState","useState","_React$useState2","_slicedToArray2","keyboardHeight","setKeyboardHeight","_React$useState3","_React$useState4","isKeyboardVisible","setIsKeyboardVisible","onShow","event","endCoordinates","useEffect","isIOS","didShowListener","Keyboard","addListener","didHideListener","remove","_platform","onMove","_event","_animatedValue$curren","newAnimatedValue","setValue","onRelease","shouldDismissView","useMemo","PanResponder","onMoveShouldSetPanResponder","shouldSetPanResponder","onMoveShouldSetPanResponderCapture","onPanResponderMove","onPanResponderRelease","dx","vy","_ref2","Value","useKeyboard","toValue","spring","useNativeDriver","friction","start","translateY","interpolate","inputRange","outputRange","translateYOutputRangeFor","opacity","transform","_array","_useKeyboard2","offset","keyboardAwareOffset","range","max","additiveInverseArray","Platform","select","ios","cb","delayMs","undefined","clearTimer","clearTimeout","startTimer","setTimeout","isActive","_ref$heightOffset","heightOffset","_ref$widthOffset","widthOffset","setHeight","setWidth","h","getLayoutValue","w","_event$nativeEvent$la","_event$nativeEvent","_event$nativeEvent$la2","nativeEvent","layout","setIsVisible","DEFAULT_DATA","setData","initialOptions","mergeIfDefined","DEFAULT_OPTIONS","_React$useState5","_React$useState6","setOptions","onAutoHide","useTimeout","visibilityTime","JSON","stringify","_params$text","_params$text2","_params$type","_params$text1Style","_params$text2Style","_params$position","_params$autoHide","autoHide","_params$visibilityTim","_params$topOffset","_params$bottomOffset","_params$keyboardOffse","_params$onShow","_params$onHide","_params$onPress","_params$swipeable","_params$props","_obj","arr","map","i","upperBound","n","lowerBound","min","obj1","obj2","newObj","entries","OS","elementName","_createIconSet","_MaterialCommunityIcons","iconSet","createIconSet","glyphMap","Button","getImageSource","getImageSourceSync","TurboModuleRegistry","fontFamily","fontFile","fontStyle","fontBasename","replace","fontReference","windows","android","web","IconNamePropType","PropTypes","oneOf","Icon","_PureComponent","_classCallCheck2","t","o","e","_getPrototypeOf2","_possibleConstructorReturn2","_isNativeReflectConstruct","Reflect","construct","constructor","_inherits2","_createClass2","_this$props","this","name","size","glyph","String","fromCodePoint","styleDefaults","styleOverrides","selectable","PureComponent","propTypes","allowFontScaling","bool","number","any","node","defaultProps","DEFAULT_ICON_SIZE","imageSourceCache","createIconSourceCache","resolveGlyph","_getImageSource","_asyncToGenerator2","DEFAULT_ICON_COLOR","ensureNativeModuleAvailable","processedColor","processColor","cacheKey","has","uri","NativeIconAPI","getImageForFont","scale","PixelRatio","setError","_loadFont","file","loadFontWithFileName","split","createIconButtonComponent","_x","getImageForFontSync","loadFont","hasIcon","getRawGlyphMap","getFontFamily","__esModule","_getRequireWildcardCache","__proto__","a","getOwnPropertyDescriptor","u","set","_interopRequireWildcard","_propTypes","_ensureNativeModuleAvailable","_createIconSourceCache","_iconButton","_NativeRNVectorIcons","WeakMap","Boolean","valueOf","cache","Map","TYPE_VALUE","TYPE_ERROR","_cache$get","_IconButton","IconButton","iconStyle","restProps","iconProps","pick","TEXT_PROP_NAMES","touchableProps","TOUCHABLE_PROP_NAMES","omit","icon","colorStyle","blockStyle","TouchableHighlight","touchable","container","text","oneOfType","string","IOS7_BLUE","_objectUtils","padding","overflow","marginRight","module","obj","flat","reduce","acc","_len2","keysToOmit","_key2","keysToOmitSet","Set","getOwnPropertyNames","_VideoNativeComponent","_utils","_NativeVideoManager","Video","_ref3","source","resizeMode","poster","posterResizeMode","renderLoader","contentStartTime","drm","textTracks","selectedVideoTrack","selectedAudioTrack","selectedTextTrack","useTextureView","useSecureView","viewType","shutterColor","adTagUrl","adLanguage","onLoadStart","onLoad","onError","onProgress","onSeek","onEnd","onBuffer","onBandwidthUpdate","onControlsVisibilityChange","onExternalPlaybackChange","onFullscreenPlayerWillPresent","onFullscreenPlayerDidPresent","onFullscreenPlayerWillDismiss","onFullscreenPlayerDidDismiss","onReadyForDisplay","onPlaybackRateChange","onVolumeChange","onAudioBecomingNoisy","onPictureInPictureStatusChanged","onRestoreUserInterfaceForPictureInPictureStop","onReceiveAdEvent","onPlaybackStateChanged","onAudioFocusChanged","onIdle","onTimedMetadata","onAudioTracks","onTextTracks","onTextTrackDataChanged","onVideoTracks","onAspectRatio","localSourceEncryptionKeyScheme","minLoadRetryCount","rest","nativeRef","isPosterDeprecated","_renderLoader","Function","hasPoster","_useState","_useState2","showPoster","setShowPoster","_useState3","_useState4","_restoreUserInterfaceForPIPStopCompletionHandler","setRestoreUserInterfaceForPIPStopCompletionHandler","sourceToUnternalSource","_source","_resolvedSource$start","resolvedSource","resolveAssetSourceForVideo","match","_cmcd","isNetwork","isAsset","selectedDrm","_textTracks","_drm","licenseServer","headers","generateHeaderForNative","contentId","certificateUrl","base64Certificate","useExternalGetLicense","getLicense","multiDrm","cmcd","mode","CmcdMode","MODE_QUERY_PARAMETER","isArray","_cmcd$mode","createCmcdHeader","property","request","session","object","status","selectedContentStartTime","_ad","ad","_minLoadRetryCount","shouldCache","mainVer","patchVer","requestHeaders","startPosition","cropStart","cropEnd","metadata","textTracksAllowChunklessPreparation","src","_selectedTextTrack","typeOfValueProp","warn","_selectedAudioTrack","_selectedVideoTrack","seek","time","tolerance","isNaN","callSeekFunction","NativeVideoManager","seekCmd","getReactTag","_nativeRef$current","setNativeProps","_x2","pause","setPlayerPauseStateCmd","resume","setVolume","volume","setVolumeCmd","setFullScreen","fullScreen","setFullScreenCmd","setSource","setSourceCmd","presentFullscreenPlayer","dismissFullscreenPlayer","save","getCurrentPosition","restoreUserInterfaceForPictureInPictureStopCompleted","restored","onVideoLoadStart","onVideoLoad","onVideoError","onVideoProgress","onVideoSeek","onVideoPlaybackStateChanged","_shutterColor","_onTimedMetadata","_onAudioTracks","_onTextTracks","_onTextTrackDataChanged","eventData","_objectDestructuringEmpty2","target","_onVideoTracks","_onPlaybackRateChange","_onVolumeChange","_onReadyForDisplay","_onPictureInPictureStatusChanged","_onAudioFocusChanged","onVideoBuffer","onVideoExternalPlaybackChange","_onBandwidthUpdate","_onReceiveAdEvent","_onVideoAspectRatio","_onControlsVisibilityChange","usingExternalGetLicense","onGetLicense","spcBase64","license","Promise","resolve","licenseUrl","loadedLicenseUrl","catch","setLicenseResultCmd","msg","message","setLicenseResultErrorCmd","_x3","_viewType","shallForceViewType","ViewType","TEXTURE","SURFACE_SECURE","SURFACE","_renderPoster","_posterResizeMode","baseStyle","absoluteFillObject","posterStyle","absoluteFill","Image","_style","display","restoreUserInterfaceForPIPStopCompletionHandler","onVideoEnd","onVideoBandwidthUpdate","onVideoFullscreenPlayerDidDismiss","onVideoFullscreenPlayerDidPresent","onVideoFullscreenPlayerWillDismiss","onVideoFullscreenPlayerWillPresent","onVideoIdle","onVideoAudioBecomingNoisy","onVideoAspectRatio","displayName","_isHEVCSupported","_isCodecSupported","_getWidevineLevel","_NativeVideoDecoderInfoModule","errMsgGen","moduleName","propertyName","getWidevineLevel","NativeVideoDecoderInfoModule","isCodecSupported","isHEVCSupported","_Video","_VideoDecoderProperties","NativeModules","VideoDecoderInfoModule","VideoManager","requireNativeComponent","AdEvent","FilterType","Orientation","ResizeMode","TextTrackType","_Ads","_events","_FilterType","_language","_Orientation","_ResizeMode","_TextTrackType","_ViewType","_video","_videoRef","DRMType","BufferingStrategyType","SelectedTrackType","SelectedVideoTrackType","FullscreenOrientationType","IgnoreSilentSwitchType","MixWithOthersType","PosterResizeModeType","reactTag","findNodeHandle","convertToUri","sourceItem","resolveItem","resolveAssetSource"],"sourceRoot":""}