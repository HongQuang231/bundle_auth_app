{"version":3,"file":"vendors-node_modules_react-native_Libraries_Components_TextInput_TextInputState_js-node_modul-684fd5.chunk.bundle","mappings":"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","sources":["webpack:///./node_modules/react-native/Libraries/Components/TextInput/AndroidTextInputNativeComponent.js","webpack:///./node_modules/react-native/Libraries/Components/TextInput/RCTSingelineTextInputNativeComponent.js","webpack:///./node_modules/react-native/Libraries/Components/TextInput/RCTTextInputViewConfig.js","webpack:///./node_modules/react-native/Libraries/Components/TextInput/TextInputState.js","webpack:///./node_modules/react-native/Libraries/Utilities/differ/deepDiffer.js","webpack:///./node_modules/react-native/src/private/featureflags/NativeReactNativeFeatureFlags.js","webpack:///./node_modules/react-native/src/private/featureflags/ReactNativeFeatureFlags.js","webpack:///./node_modules/react-native/src/private/featureflags/ReactNativeFeatureFlagsBase.js","webpack:///./node_modules/scheduler/cjs/scheduler.native.production.min.js","webpack:///./node_modules/scheduler/index.native.js","webpack:///./node_modules/@babel/runtime/helpers/get.js","webpack:///./node_modules/@babel/runtime/helpers/superPropBase.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport type {\n  HostComponent,\n  PartialViewConfig,\n} from '../../Renderer/shims/ReactNativeTypes';\nimport type {\n  ColorValue,\n  TextStyleProp,\n  ViewStyleProp,\n} from '../../StyleSheet/StyleSheet';\nimport type {\n  BubblingEventHandler,\n  DirectEventHandler,\n  Double,\n  Float,\n  Int32,\n  WithDefault,\n} from '../../Types/CodegenTypes';\nimport type {ViewProps} from '../View/ViewPropTypes';\nimport type {TextInputNativeCommands} from './TextInputNativeCommands';\n\nimport * as NativeComponentRegistry from '../../NativeComponent/NativeComponentRegistry';\nimport codegenNativeCommands from '../../Utilities/codegenNativeCommands';\n\nexport type KeyboardType =\n  // Cross Platform\n  | 'default'\n  | 'email-address'\n  | 'numeric'\n  | 'phone-pad'\n  | 'number-pad'\n  | 'decimal-pad'\n  | 'url'\n  // iOS-only\n  | 'ascii-capable'\n  | 'numbers-and-punctuation'\n  | 'name-phone-pad'\n  | 'twitter'\n  | 'web-search'\n  // Android-only\n  | 'visible-password';\n\nexport type ReturnKeyType =\n  // Cross Platform\n  | 'done'\n  | 'go'\n  | 'next'\n  | 'search'\n  | 'send'\n  // Android-only\n  | 'none'\n  | 'previous'\n  // iOS-only\n  | 'default'\n  | 'emergency-call'\n  | 'google'\n  | 'join'\n  | 'route'\n  | 'yahoo';\n\nexport type SubmitBehavior = 'submit' | 'blurAndSubmit' | 'newline';\n\nexport type NativeProps = $ReadOnly<{|\n  // This allows us to inherit everything from ViewProps except for style (see below)\n  // This must be commented for Fabric codegen to work.\n  ...$Diff<ViewProps, $ReadOnly<{|style: ?ViewStyleProp|}>>,\n\n  /**\n   * Android props after this\n   */\n  /**\n   * Specifies autocomplete hints for the system, so it can provide autofill. On Android, the system will always attempt to offer autofill by using heuristics to identify the type of content.\n   * To disable autocomplete, set `autoComplete` to `off`.\n   *\n   * *Android Only*\n   *\n   * Possible values for `autoComplete` are:\n   *\n   * - `birthdate-day`\n   * - `birthdate-full`\n   * - `birthdate-month`\n   * - `birthdate-year`\n   * - `cc-csc`\n   * - `cc-exp`\n   * - `cc-exp-day`\n   * - `cc-exp-month`\n   * - `cc-exp-year`\n   * - `cc-number`\n   * - `email`\n   * - `gender`\n   * - `name`\n   * - `name-family`\n   * - `name-given`\n   * - `name-middle`\n   * - `name-middle-initial`\n   * - `name-prefix`\n   * - `name-suffix`\n   * - `password`\n   * - `password-new`\n   * - `postal-address`\n   * - `postal-address-country`\n   * - `postal-address-extended`\n   * - `postal-address-extended-postal-code`\n   * - `postal-address-locality`\n   * - `postal-address-region`\n   * - `postal-code`\n   * - `street-address`\n   * - `sms-otp`\n   * - `tel`\n   * - `tel-country-code`\n   * - `tel-national`\n   * - `tel-device`\n   * - `username`\n   * - `username-new`\n   * - `off`\n   *\n   * @platform android\n   */\n  autoComplete?: WithDefault<\n    | 'birthdate-day'\n    | 'birthdate-full'\n    | 'birthdate-month'\n    | 'birthdate-year'\n    | 'cc-csc'\n    | 'cc-exp'\n    | 'cc-exp-day'\n    | 'cc-exp-month'\n    | 'cc-exp-year'\n    | 'cc-number'\n    | 'email'\n    | 'gender'\n    | 'name'\n    | 'name-family'\n    | 'name-given'\n    | 'name-middle'\n    | 'name-middle-initial'\n    | 'name-prefix'\n    | 'name-suffix'\n    | 'password'\n    | 'password-new'\n    | 'postal-address'\n    | 'postal-address-country'\n    | 'postal-address-extended'\n    | 'postal-address-extended-postal-code'\n    | 'postal-address-locality'\n    | 'postal-address-region'\n    | 'postal-code'\n    | 'street-address'\n    | 'sms-otp'\n    | 'tel'\n    | 'tel-country-code'\n    | 'tel-national'\n    | 'tel-device'\n    | 'username'\n    | 'username-new'\n    | 'off',\n    'off',\n  >,\n\n  /**\n   * Sets the return key to the label. Use it instead of `returnKeyType`.\n   * @platform android\n   */\n  returnKeyLabel?: ?string,\n\n  /**\n   * Sets the number of lines for a `TextInput`. Use it with multiline set to\n   * `true` to be able to fill the lines.\n   * @platform android\n   */\n  numberOfLines?: ?Int32,\n\n  /**\n   * When `false`, if there is a small amount of space available around a text input\n   * (e.g. landscape orientation on a phone), the OS may choose to have the user edit\n   * the text inside of a full screen text input mode. When `true`, this feature is\n   * disabled and users will always edit the text directly inside of the text input.\n   * Defaults to `false`.\n   * @platform android\n   */\n  disableFullscreenUI?: ?boolean,\n\n  /**\n   * Set text break strategy on Android API Level 23+, possible values are `simple`, `highQuality`, `balanced`\n   * The default value is `simple`.\n   * @platform android\n   */\n  textBreakStrategy?: WithDefault<\n    'simple' | 'highQuality' | 'balanced',\n    'simple',\n  >,\n\n  /**\n   * The color of the `TextInput` underline.\n   * @platform android\n   */\n  underlineColorAndroid?: ?ColorValue,\n\n  /**\n   * If defined, the provided image resource will be rendered on the left.\n   * The image resource must be inside `/android/app/src/main/res/drawable` and referenced\n   * like\n   * ```\n   * <TextInput\n   *  inlineImageLeft='search_icon'\n   * />\n   * ```\n   * @platform android\n   */\n  inlineImageLeft?: ?string,\n\n  /**\n   * Padding between the inline image, if any, and the text input itself.\n   * @platform android\n   */\n  inlineImagePadding?: ?Int32,\n\n  importantForAutofill?: string /*?(\n    | 'auto'\n    | 'no'\n    | 'noExcludeDescendants'\n    | 'yes'\n    | 'yesExcludeDescendants'\n  ),*/,\n\n  /**\n   * When `false`, it will prevent the soft keyboard from showing when the field is focused.\n   * Defaults to `true`.\n   */\n  showSoftInputOnFocus?: ?boolean,\n\n  /**\n   * TextInput props after this\n   */\n  /**\n   * Can tell `TextInput` to automatically capitalize certain characters.\n   *\n   * - `characters`: all characters.\n   * - `words`: first letter of each word.\n   * - `sentences`: first letter of each sentence (*default*).\n   * - `none`: don't auto capitalize anything.\n   */\n  autoCapitalize?: WithDefault<\n    'none' | 'sentences' | 'words' | 'characters',\n    'none',\n  >,\n\n  /**\n   * If `false`, disables auto-correct. The default value is `true`.\n   */\n  autoCorrect?: ?boolean,\n\n  /**\n   * If `true`, focuses the input on `componentDidMount`.\n   * The default value is `false`.\n   */\n  autoFocus?: ?boolean,\n\n  /**\n   * Specifies whether fonts should scale to respect Text Size accessibility settings. The\n   * default is `true`.\n   */\n  allowFontScaling?: ?boolean,\n\n  /**\n   * Specifies largest possible scale a font can reach when `allowFontScaling` is enabled.\n   * Possible values:\n   * `null/undefined` (default): inherit from the parent node or the global default (0)\n   * `0`: no max, ignore parent/global default\n   * `>= 1`: sets the maxFontSizeMultiplier of this node to this value\n   */\n  maxFontSizeMultiplier?: ?Float,\n\n  /**\n   * If `false`, text is not editable. The default value is `true`.\n   */\n  editable?: ?boolean,\n\n  /**\n   * Determines which keyboard to open, e.g.`numeric`.\n   *\n   * The following values work across platforms:\n   *\n   * - `default`\n   * - `numeric`\n   * - `number-pad`\n   * - `decimal-pad`\n   * - `email-address`\n   * - `phone-pad`\n   * - `url`\n   *\n   * *Android Only*\n   *\n   * The following values work on Android only:\n   *\n   * - `visible-password`\n   */\n  keyboardType?: WithDefault<KeyboardType, 'default'>,\n\n  /**\n   * Determines how the return key should look. On Android you can also use\n   * `returnKeyLabel`.\n   *\n   * *Cross platform*\n   *\n   * The following values work across platforms:\n   *\n   * - `done`\n   * - `go`\n   * - `next`\n   * - `search`\n   * - `send`\n   *\n   * *Android Only*\n   *\n   * The following values work on Android only:\n   *\n   * - `none`\n   * - `previous`\n   */\n  returnKeyType?: WithDefault<ReturnKeyType, 'done'>,\n\n  /**\n   * Limits the maximum number of characters that can be entered. Use this\n   * instead of implementing the logic in JS to avoid flicker.\n   */\n  maxLength?: ?Int32,\n\n  /**\n   * If `true`, the text input can be multiple lines.\n   * The default value is `false`.\n   */\n  multiline?: ?boolean,\n\n  /**\n   * Callback that is called when the text input is blurred.\n   * `target` is the reactTag of the element\n   */\n  onBlur?: ?BubblingEventHandler<$ReadOnly<{|target: Int32|}>>,\n\n  /**\n   * Callback that is called when the text input is focused.\n   * `target` is the reactTag of the element\n   */\n  onFocus?: ?BubblingEventHandler<$ReadOnly<{|target: Int32|}>>,\n\n  /**\n   * Callback that is called when the text input's text changes.\n   * `target` is the reactTag of the element\n   * TODO: differentiate between onChange and onChangeText\n   */\n  onChange?: ?BubblingEventHandler<\n    $ReadOnly<{|target: Int32, eventCount: Int32, text: string|}>,\n  >,\n\n  /**\n   * Callback that is called when the text input's text changes.\n   * Changed text is passed as an argument to the callback handler.\n   * TODO: differentiate between onChange and onChangeText\n   */\n  onChangeText?: ?BubblingEventHandler<\n    $ReadOnly<{|target: Int32, eventCount: Int32, text: string|}>,\n  >,\n\n  /**\n   * Callback that is called when the text input's content size changes.\n   * This will be called with\n   * `{ nativeEvent: { contentSize: { width, height } } }`.\n   *\n   * Only called for multiline text inputs.\n   */\n  onContentSizeChange?: ?DirectEventHandler<\n    $ReadOnly<{|\n      target: Int32,\n      contentSize: $ReadOnly<{|width: Double, height: Double|}>,\n    |}>,\n  >,\n\n  onTextInput?: ?BubblingEventHandler<\n    $ReadOnly<{|\n      target: Int32,\n      text: string,\n      previousText: string,\n      range: $ReadOnly<{|start: Double, end: Double|}>,\n    |}>,\n  >,\n\n  /**\n   * Callback that is called when text input ends.\n   */\n  onEndEditing?: ?BubblingEventHandler<\n    $ReadOnly<{|target: Int32, text: string|}>,\n  >,\n\n  /**\n   * Callback that is called when the text input selection is changed.\n   * This will be called with\n   * `{ nativeEvent: { selection: { start, end } } }`.\n   */\n  onSelectionChange?: ?DirectEventHandler<\n    $ReadOnly<{|\n      target: Int32,\n      selection: $ReadOnly<{|start: Double, end: Double|}>,\n    |}>,\n  >,\n\n  /**\n   * Callback that is called when the text input's submit button is pressed.\n   * Invalid if `multiline={true}` is specified.\n   */\n  onSubmitEditing?: ?BubblingEventHandler<\n    $ReadOnly<{|target: Int32, text: string|}>,\n  >,\n\n  /**\n   * Callback that is called when a key is pressed.\n   * This will be called with `{ nativeEvent: { key: keyValue } }`\n   * where `keyValue` is `'Enter'` or `'Backspace'` for respective keys and\n   * the typed-in character otherwise including `' '` for space.\n   * Fires before `onChange` callbacks.\n   */\n  onKeyPress?: ?BubblingEventHandler<$ReadOnly<{|target: Int32, key: string|}>>,\n\n  /**\n   * Invoked on content scroll with `{ nativeEvent: { contentOffset: { x, y } } }`.\n   * May also contain other properties from ScrollEvent but on Android contentSize\n   * is not provided for performance reasons.\n   */\n  onScroll?: ?DirectEventHandler<\n    $ReadOnly<{|\n      target: Int32,\n      responderIgnoreScroll: boolean,\n      contentInset: $ReadOnly<{|\n        top: Double, // always 0 on Android\n        bottom: Double, // always 0 on Android\n        left: Double, // always 0 on Android\n        right: Double, // always 0 on Android\n      |}>,\n      contentOffset: $ReadOnly<{|\n        x: Double,\n        y: Double,\n      |}>,\n      contentSize: $ReadOnly<{|\n        width: Double, // always 0 on Android\n        height: Double, // always 0 on Android\n      |}>,\n      layoutMeasurement: $ReadOnly<{|\n        width: Double,\n        height: Double,\n      |}>,\n      velocity: $ReadOnly<{|\n        x: Double, // always 0 on Android\n        y: Double, // always 0 on Android\n      |}>,\n    |}>,\n  >,\n\n  /**\n   * The string that will be rendered before text input has been entered.\n   */\n  placeholder?: ?Stringish,\n\n  /**\n   * The text color of the placeholder string.\n   */\n  placeholderTextColor?: ?ColorValue,\n\n  /**\n   * If `true`, the text input obscures the text entered so that sensitive text\n   * like passwords stay secure. The default value is `false`. Does not work with 'multiline={true}'.\n   */\n  secureTextEntry?: ?boolean,\n\n  /**\n   * The highlight and cursor color of the text input.\n   */\n  selectionColor?: ?ColorValue,\n\n  /**\n   * The text selection handle color.\n   */\n  selectionHandleColor?: ?ColorValue,\n\n  /**\n   * The start and end of the text input's selection. Set start and end to\n   * the same value to position the cursor.\n   */\n  selection?: ?$ReadOnly<{|\n    start: Int32,\n    end?: ?Int32,\n  |}>,\n\n  /**\n   * The value to show for the text input. `TextInput` is a controlled\n   * component, which means the native value will be forced to match this\n   * value prop if provided. For most uses, this works great, but in some\n   * cases this may cause flickering - one common cause is preventing edits\n   * by keeping value the same. In addition to simply setting the same value,\n   * either set `editable={false}`, or set/update `maxLength` to prevent\n   * unwanted edits without flicker.\n   */\n  value?: ?string,\n\n  /**\n   * Provides an initial value that will change when the user starts typing.\n   * Useful for simple use-cases where you do not want to deal with listening\n   * to events and updating the value prop to keep the controlled state in sync.\n   */\n  defaultValue?: ?string,\n\n  /**\n   * If `true`, all text will automatically be selected on focus.\n   */\n  selectTextOnFocus?: ?boolean,\n\n  /**\n   * If `true`, the text field will blur when submitted.\n   * The default value is true for single-line fields and false for\n   * multiline fields. Note that for multiline fields, setting `blurOnSubmit`\n   * to `true` means that pressing return will blur the field and trigger the\n   * `onSubmitEditing` event instead of inserting a newline into the field.\n   *\n   * @deprecated\n   * Note that `submitBehavior` now takes the place of `blurOnSubmit` and will\n   * override any behavior defined by `blurOnSubmit`.\n   * @see submitBehavior\n   */\n  blurOnSubmit?: ?boolean,\n\n  /**\n   * When the return key is pressed,\n   *\n   * For single line inputs:\n   *\n   * - `'newline`' defaults to `'blurAndSubmit'`\n   * - `undefined` defaults to `'blurAndSubmit'`\n   *\n   * For multiline inputs:\n   *\n   * - `'newline'` adds a newline\n   * - `undefined` defaults to `'newline'`\n   *\n   * For both single line and multiline inputs:\n   *\n   * - `'submit'` will only send a submit event and not blur the input\n   * - `'blurAndSubmit`' will both blur the input and send a submit event\n   */\n  submitBehavior?: ?SubmitBehavior,\n\n  /**\n   * Note that not all Text styles are supported, an incomplete list of what is not supported includes:\n   *\n   * - `borderLeftWidth`\n   * - `borderTopWidth`\n   * - `borderRightWidth`\n   * - `borderBottomWidth`\n   * - `borderTopLeftRadius`\n   * - `borderTopRightRadius`\n   * - `borderBottomRightRadius`\n   * - `borderBottomLeftRadius`\n   *\n   * see [Issue#7070](https://github.com/facebook/react-native/issues/7070)\n   * for more detail.\n   *\n   * [Styles](docs/style.html)\n   */\n  // TODO: figure out what to do with this style prop for codegen/Fabric purposes\n  // This must be commented for Fabric codegen to work; it's currently not possible\n  // to override the default View style prop in codegen.\n  style?: ?TextStyleProp,\n\n  /**\n   * If `true`, caret is hidden. The default value is `false`.\n   * This property is supported only for single-line TextInput component on iOS.\n   */\n  caretHidden?: ?boolean,\n\n  /*\n   * If `true`, contextMenuHidden is hidden. The default value is `false`.\n   */\n  contextMenuHidden?: ?boolean,\n\n  /**\n   * The following are props that `BaseTextShadowNode` takes. It is unclear if they\n   * are used by TextInput.\n   */\n  textShadowColor?: ?ColorValue,\n  textShadowRadius?: ?Float,\n  textDecorationLine?: ?string,\n  fontStyle?: ?string,\n  textShadowOffset?: ?$ReadOnly<{|width?: ?Double, height?: ?Double|}>,\n  lineHeight?: ?Float,\n  textTransform?: ?string,\n  color?: ?Int32,\n  letterSpacing?: ?Float,\n  fontSize?: ?Float,\n  textAlign?: ?string,\n  includeFontPadding?: ?boolean,\n  fontWeight?: ?string,\n  fontFamily?: ?string,\n\n  /**\n   * I cannot find where these are defined but JS complains without them.\n   */\n  textAlignVertical?: ?string,\n  cursorColor?: ?ColorValue,\n\n  /**\n   * \"Private\" fields used by TextInput.js and not users of this component directly\n   */\n  mostRecentEventCount: Int32,\n  text?: ?string,\n|}>;\n\ntype NativeType = HostComponent<NativeProps>;\n\ntype NativeCommands = TextInputNativeCommands<NativeType>;\n\nexport const Commands: NativeCommands = codegenNativeCommands<NativeCommands>({\n  supportedCommands: ['focus', 'blur', 'setTextAndSelection'],\n});\n\nexport const __INTERNAL_VIEW_CONFIG: PartialViewConfig = {\n  uiViewClassName: 'AndroidTextInput',\n  bubblingEventTypes: {\n    topBlur: {\n      phasedRegistrationNames: {\n        bubbled: 'onBlur',\n        captured: 'onBlurCapture',\n      },\n    },\n    topEndEditing: {\n      phasedRegistrationNames: {\n        bubbled: 'onEndEditing',\n        captured: 'onEndEditingCapture',\n      },\n    },\n    topFocus: {\n      phasedRegistrationNames: {\n        bubbled: 'onFocus',\n        captured: 'onFocusCapture',\n      },\n    },\n    topKeyPress: {\n      phasedRegistrationNames: {\n        bubbled: 'onKeyPress',\n        captured: 'onKeyPressCapture',\n      },\n    },\n    topSubmitEditing: {\n      phasedRegistrationNames: {\n        bubbled: 'onSubmitEditing',\n        captured: 'onSubmitEditingCapture',\n      },\n    },\n    topTextInput: {\n      phasedRegistrationNames: {\n        bubbled: 'onTextInput',\n        captured: 'onTextInputCapture',\n      },\n    },\n  },\n  directEventTypes: {\n    topScroll: {\n      registrationName: 'onScroll',\n    },\n  },\n  validAttributes: {\n    maxFontSizeMultiplier: true,\n    adjustsFontSizeToFit: true,\n    minimumFontScale: true,\n    autoFocus: true,\n    placeholder: true,\n    inlineImagePadding: true,\n    contextMenuHidden: true,\n    textShadowColor: {\n      process: require('../../StyleSheet/processColor').default,\n    },\n    maxLength: true,\n    selectTextOnFocus: true,\n    textShadowRadius: true,\n    underlineColorAndroid: {\n      process: require('../../StyleSheet/processColor').default,\n    },\n    textDecorationLine: true,\n    submitBehavior: true,\n    textAlignVertical: true,\n    fontStyle: true,\n    textShadowOffset: true,\n    selectionColor: {process: require('../../StyleSheet/processColor').default},\n    selectionHandleColor: {\n      process: require('../../StyleSheet/processColor').default,\n    },\n    placeholderTextColor: {\n      process: require('../../StyleSheet/processColor').default,\n    },\n    importantForAutofill: true,\n    lineHeight: true,\n    textTransform: true,\n    returnKeyType: true,\n    keyboardType: true,\n    multiline: true,\n    color: {process: require('../../StyleSheet/processColor').default},\n    autoComplete: true,\n    numberOfLines: true,\n    letterSpacing: true,\n    returnKeyLabel: true,\n    fontSize: true,\n    onKeyPress: true,\n    cursorColor: {process: require('../../StyleSheet/processColor').default},\n    text: true,\n    showSoftInputOnFocus: true,\n    textAlign: true,\n    autoCapitalize: true,\n    autoCorrect: true,\n    caretHidden: true,\n    secureTextEntry: true,\n    textBreakStrategy: true,\n    onScroll: true,\n    onContentSizeChange: true,\n    disableFullscreenUI: true,\n    includeFontPadding: true,\n    fontWeight: true,\n    fontFamily: true,\n    allowFontScaling: true,\n    onSelectionChange: true,\n    mostRecentEventCount: true,\n    inlineImageLeft: true,\n    editable: true,\n    fontVariant: true,\n    borderBottomRightRadius: true,\n    borderBottomColor: {\n      process: require('../../StyleSheet/processColor').default,\n    },\n    borderRadius: true,\n    borderRightColor: {\n      process: require('../../StyleSheet/processColor').default,\n    },\n    borderColor: {process: require('../../StyleSheet/processColor').default},\n    borderTopRightRadius: true,\n    borderStyle: true,\n    borderBottomLeftRadius: true,\n    borderLeftColor: {\n      process: require('../../StyleSheet/processColor').default,\n    },\n    borderTopLeftRadius: true,\n    borderTopColor: {process: require('../../StyleSheet/processColor').default},\n  },\n};\n\nlet AndroidTextInputNativeComponent = NativeComponentRegistry.get<NativeProps>(\n  'AndroidTextInput',\n  () => __INTERNAL_VIEW_CONFIG,\n);\n\n// flowlint-next-line unclear-type:off\nexport default ((AndroidTextInputNativeComponent: any): HostComponent<NativeProps>);\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport type {\n  HostComponent,\n  PartialViewConfig,\n} from '../../Renderer/shims/ReactNativeTypes';\nimport type {TextInputNativeCommands} from './TextInputNativeCommands';\n\nimport * as NativeComponentRegistry from '../../NativeComponent/NativeComponentRegistry';\nimport codegenNativeCommands from '../../Utilities/codegenNativeCommands';\nimport RCTTextInputViewConfig from './RCTTextInputViewConfig';\n\ntype NativeType = HostComponent<mixed>;\n\ntype NativeCommands = TextInputNativeCommands<NativeType>;\n\nexport const Commands: NativeCommands = codegenNativeCommands<NativeCommands>({\n  supportedCommands: ['focus', 'blur', 'setTextAndSelection'],\n});\n\nexport const __INTERNAL_VIEW_CONFIG: PartialViewConfig = {\n  uiViewClassName: 'RCTSinglelineTextInputView',\n  ...RCTTextInputViewConfig,\n};\n\nconst SinglelineTextInputNativeComponent: HostComponent<mixed> =\n  NativeComponentRegistry.get<mixed>(\n    'RCTSinglelineTextInputView',\n    () => __INTERNAL_VIEW_CONFIG,\n  );\n\n// flowlint-next-line unclear-type:off\nexport default ((SinglelineTextInputNativeComponent: any): HostComponent<mixed>);\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport type {PartialViewConfig} from '../../Renderer/shims/ReactNativeTypes';\n\nimport {ConditionallyIgnoredEventHandlers} from '../../NativeComponent/ViewConfigIgnore';\n\ntype PartialViewConfigWithoutName = $Rest<\n  PartialViewConfig,\n  {uiViewClassName: string},\n>;\n\nconst RCTTextInputViewConfig = {\n  bubblingEventTypes: {\n    topBlur: {\n      phasedRegistrationNames: {\n        bubbled: 'onBlur',\n        captured: 'onBlurCapture',\n      },\n    },\n    topChange: {\n      phasedRegistrationNames: {\n        bubbled: 'onChange',\n        captured: 'onChangeCapture',\n      },\n    },\n    topEndEditing: {\n      phasedRegistrationNames: {\n        bubbled: 'onEndEditing',\n        captured: 'onEndEditingCapture',\n      },\n    },\n    topFocus: {\n      phasedRegistrationNames: {\n        bubbled: 'onFocus',\n        captured: 'onFocusCapture',\n      },\n    },\n    topKeyPress: {\n      phasedRegistrationNames: {\n        bubbled: 'onKeyPress',\n        captured: 'onKeyPressCapture',\n      },\n    },\n    topSubmitEditing: {\n      phasedRegistrationNames: {\n        bubbled: 'onSubmitEditing',\n        captured: 'onSubmitEditingCapture',\n      },\n    },\n    topTouchCancel: {\n      phasedRegistrationNames: {\n        bubbled: 'onTouchCancel',\n        captured: 'onTouchCancelCapture',\n      },\n    },\n    topTouchEnd: {\n      phasedRegistrationNames: {\n        bubbled: 'onTouchEnd',\n        captured: 'onTouchEndCapture',\n      },\n    },\n\n    topTouchMove: {\n      phasedRegistrationNames: {\n        bubbled: 'onTouchMove',\n        captured: 'onTouchMoveCapture',\n      },\n    },\n  },\n  directEventTypes: {\n    topTextInput: {\n      registrationName: 'onTextInput',\n    },\n    topKeyPressSync: {\n      registrationName: 'onKeyPressSync',\n    },\n    topScroll: {\n      registrationName: 'onScroll',\n    },\n    topSelectionChange: {\n      registrationName: 'onSelectionChange',\n    },\n    topChangeSync: {\n      registrationName: 'onChangeSync',\n    },\n    topContentSizeChange: {\n      registrationName: 'onContentSizeChange',\n    },\n  },\n  validAttributes: {\n    fontSize: true,\n    fontWeight: true,\n    fontVariant: true,\n    // flowlint-next-line untyped-import:off\n    textShadowOffset: {diff: require('../../Utilities/differ/sizesDiffer')},\n    allowFontScaling: true,\n    fontStyle: true,\n    textTransform: true,\n    textAlign: true,\n    fontFamily: true,\n    lineHeight: true,\n    isHighlighted: true,\n    writingDirection: true,\n    textDecorationLine: true,\n    textShadowRadius: true,\n    letterSpacing: true,\n    textDecorationStyle: true,\n    textDecorationColor: {\n      process: require('../../StyleSheet/processColor').default,\n    },\n    color: {process: require('../../StyleSheet/processColor').default},\n    maxFontSizeMultiplier: true,\n    textShadowColor: {\n      process: require('../../StyleSheet/processColor').default,\n    },\n    editable: true,\n    inputAccessoryViewID: true,\n    caretHidden: true,\n    enablesReturnKeyAutomatically: true,\n    placeholderTextColor: {\n      process: require('../../StyleSheet/processColor').default,\n    },\n    clearButtonMode: true,\n    keyboardType: true,\n    selection: true,\n    returnKeyType: true,\n    submitBehavior: true,\n    mostRecentEventCount: true,\n    scrollEnabled: true,\n    selectionColor: {process: require('../../StyleSheet/processColor').default},\n    contextMenuHidden: true,\n    secureTextEntry: true,\n    placeholder: true,\n    autoCorrect: true,\n    multiline: true,\n    textContentType: true,\n    maxLength: true,\n    autoCapitalize: true,\n    keyboardAppearance: true,\n    passwordRules: true,\n    spellCheck: true,\n    selectTextOnFocus: true,\n    text: true,\n    clearTextOnFocus: true,\n    showSoftInputOnFocus: true,\n    autoFocus: true,\n    lineBreakStrategyIOS: true,\n    smartInsertDelete: true,\n    ...ConditionallyIgnoredEventHandlers({\n      onChange: true,\n      onSelectionChange: true,\n      onContentSizeChange: true,\n      onScroll: true,\n      onChangeSync: true,\n      onKeyPressSync: true,\n      onTextInput: true,\n    }),\n  },\n};\n\nmodule.exports = (RCTTextInputViewConfig: PartialViewConfigWithoutName);\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\n// This class is responsible for coordinating the \"focused\" state for\n// TextInputs. All calls relating to the keyboard should be funneled\n// through here.\n\nimport type {\n  HostComponent,\n  MeasureInWindowOnSuccessCallback,\n  MeasureLayoutOnSuccessCallback,\n  MeasureOnSuccessCallback,\n} from '../../Renderer/shims/ReactNativeTypes';\n\nimport {Commands as AndroidTextInputCommands} from '../../Components/TextInput/AndroidTextInputNativeComponent';\nimport {Commands as iOSTextInputCommands} from '../../Components/TextInput/RCTSingelineTextInputNativeComponent';\n\nconst {findNodeHandle} = require('../../ReactNative/RendererProxy');\nconst Platform = require('../../Utilities/Platform');\nconst React = require('react');\ntype ComponentRef = React.ElementRef<HostComponent<mixed>>;\n\nlet currentlyFocusedInputRef: ?ComponentRef = null;\nconst inputs = new Set<{\n  blur(): void,\n  focus(): void,\n  measure(callback: MeasureOnSuccessCallback): void,\n  measureInWindow(callback: MeasureInWindowOnSuccessCallback): void,\n  measureLayout(\n    relativeToNativeNode: number | React.ElementRef<HostComponent<mixed>>,\n    onSuccess: MeasureLayoutOnSuccessCallback,\n    onFail?: () => void,\n  ): void,\n  setNativeProps(nativeProps: {...}): void,\n}>();\n\nfunction currentlyFocusedInput(): ?ComponentRef {\n  return currentlyFocusedInputRef;\n}\n\n/**\n * Returns the ID of the currently focused text field, if one exists\n * If no text field is focused it returns null\n */\nfunction currentlyFocusedField(): ?number {\n  if (__DEV__) {\n    console.error(\n      'currentlyFocusedField is deprecated and will be removed in a future release. Use currentlyFocusedInput',\n    );\n  }\n\n  return findNodeHandle(currentlyFocusedInputRef);\n}\n\nfunction focusInput(textField: ?ComponentRef): void {\n  if (currentlyFocusedInputRef !== textField && textField != null) {\n    currentlyFocusedInputRef = textField;\n  }\n}\n\nfunction blurInput(textField: ?ComponentRef): void {\n  if (currentlyFocusedInputRef === textField && textField != null) {\n    currentlyFocusedInputRef = null;\n  }\n}\n\nfunction focusField(textFieldID: ?number): void {\n  if (__DEV__) {\n    console.error('focusField no longer works. Use focusInput');\n  }\n\n  return;\n}\n\nfunction blurField(textFieldID: ?number) {\n  if (__DEV__) {\n    console.error('blurField no longer works. Use blurInput');\n  }\n\n  return;\n}\n\n/**\n * @param {number} TextInputID id of the text field to focus\n * Focuses the specified text field\n * noop if the text field was already focused or if the field is not editable\n */\nfunction focusTextInput(textField: ?ComponentRef) {\n  if (typeof textField === 'number') {\n    if (__DEV__) {\n      console.error(\n        'focusTextInput must be called with a host component. Passing a react tag is deprecated.',\n      );\n    }\n\n    return;\n  }\n\n  if (textField != null) {\n    const fieldCanBeFocused =\n      currentlyFocusedInputRef !== textField &&\n      // $FlowFixMe - `currentProps` is missing in `NativeMethods`\n      textField.currentProps?.editable !== false;\n\n    if (!fieldCanBeFocused) {\n      return;\n    }\n    focusInput(textField);\n    if (Platform.OS === 'ios') {\n      // This isn't necessarily a single line text input\n      // But commands don't actually care as long as the thing being passed in\n      // actually has a command with that name. So this should work with single\n      // and multiline text inputs. Ideally we'll merge them into one component\n      // in the future.\n      iOSTextInputCommands.focus(textField);\n    } else if (Platform.OS === 'android') {\n      AndroidTextInputCommands.focus(textField);\n    }\n  }\n}\n\n/**\n * @param {number} textFieldID id of the text field to unfocus\n * Unfocuses the specified text field\n * noop if it wasn't focused\n */\nfunction blurTextInput(textField: ?ComponentRef) {\n  if (typeof textField === 'number') {\n    if (__DEV__) {\n      console.error(\n        'blurTextInput must be called with a host component. Passing a react tag is deprecated.',\n      );\n    }\n\n    return;\n  }\n\n  if (currentlyFocusedInputRef === textField && textField != null) {\n    blurInput(textField);\n    if (Platform.OS === 'ios') {\n      // This isn't necessarily a single line text input\n      // But commands don't actually care as long as the thing being passed in\n      // actually has a command with that name. So this should work with single\n      // and multiline text inputs. Ideally we'll merge them into one component\n      // in the future.\n      iOSTextInputCommands.blur(textField);\n    } else if (Platform.OS === 'android') {\n      AndroidTextInputCommands.blur(textField);\n    }\n  }\n}\n\nfunction registerInput(textField: ComponentRef) {\n  if (typeof textField === 'number') {\n    if (__DEV__) {\n      console.error(\n        'registerInput must be called with a host component. Passing a react tag is deprecated.',\n      );\n    }\n\n    return;\n  }\n\n  inputs.add(textField);\n}\n\nfunction unregisterInput(textField: ComponentRef) {\n  if (typeof textField === 'number') {\n    if (__DEV__) {\n      console.error(\n        'unregisterInput must be called with a host component. Passing a react tag is deprecated.',\n      );\n    }\n\n    return;\n  }\n  inputs.delete(textField);\n}\n\nfunction isTextInput(textField: ComponentRef): boolean {\n  if (typeof textField === 'number') {\n    if (__DEV__) {\n      console.error(\n        'isTextInput must be called with a host component. Passing a react tag is deprecated.',\n      );\n    }\n\n    return false;\n  }\n\n  return inputs.has(textField);\n}\n\nmodule.exports = {\n  currentlyFocusedInput,\n  focusInput,\n  blurInput,\n\n  currentlyFocusedField,\n  focusField,\n  blurField,\n  focusTextInput,\n  blurTextInput,\n  registerInput,\n  unregisterInput,\n  isTextInput,\n};\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\nlet logListeners;\n\ntype LogListeners = {|\n  +onDifferentFunctionsIgnored: (nameOne: ?string, nameTwo: ?string) => void,\n|};\n\ntype Options = {|+unsafelyIgnoreFunctions?: boolean|};\n\nfunction unstable_setLogListeners(listeners: ?LogListeners) {\n  logListeners = listeners;\n}\n\n/*\n * @returns {bool} true if different, false if equal\n */\nconst deepDiffer = function (\n  one: any,\n  two: any,\n  maxDepthOrOptions: Options | number = -1,\n  maybeOptions?: Options,\n): boolean {\n  const options =\n    typeof maxDepthOrOptions === 'number' ? maybeOptions : maxDepthOrOptions;\n  const maxDepth =\n    typeof maxDepthOrOptions === 'number' ? maxDepthOrOptions : -1;\n  if (maxDepth === 0) {\n    return true;\n  }\n  if (one === two) {\n    // Short circuit on identical object references instead of traversing them.\n    return false;\n  }\n  if (typeof one === 'function' && typeof two === 'function') {\n    // We consider all functions equal unless explicitly configured otherwise\n    let unsafelyIgnoreFunctions = options?.unsafelyIgnoreFunctions;\n    if (unsafelyIgnoreFunctions == null) {\n      if (\n        logListeners &&\n        logListeners.onDifferentFunctionsIgnored &&\n        (!options || !('unsafelyIgnoreFunctions' in options))\n      ) {\n        logListeners.onDifferentFunctionsIgnored(one.name, two.name);\n      }\n      unsafelyIgnoreFunctions = true;\n    }\n    return !unsafelyIgnoreFunctions;\n  }\n  if (typeof one !== 'object' || one === null) {\n    // Primitives can be directly compared\n    return one !== two;\n  }\n  if (typeof two !== 'object' || two === null) {\n    // We know they are different because the previous case would have triggered\n    // otherwise.\n    return true;\n  }\n  if (one.constructor !== two.constructor) {\n    return true;\n  }\n  if (Array.isArray(one)) {\n    // We know two is also an array because the constructors are equal\n    const len = one.length;\n    if (two.length !== len) {\n      return true;\n    }\n    for (let ii = 0; ii < len; ii++) {\n      if (deepDiffer(one[ii], two[ii], maxDepth - 1, options)) {\n        return true;\n      }\n    }\n  } else {\n    for (const key in one) {\n      if (deepDiffer(one[key], two[key], maxDepth - 1, options)) {\n        return true;\n      }\n    }\n    for (const twoKey in two) {\n      // The only case we haven't checked yet is keys that are in two but aren't\n      // in one, which means they are different.\n      if (one[twoKey] === undefined && two[twoKey] !== undefined) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\ndeepDiffer.unstable_setLogListeners = unstable_setLogListeners;\nmodule.exports = deepDiffer;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @generated SignedSource<<8f82962343a5146622f36c2de071ff6a>>\n * @flow strict-local\n */\n\n/**\n * IMPORTANT: Do NOT modify this file directly.\n *\n * To change the definition of the flags, edit\n *   packages/react-native/scripts/featureflags/ReactNativeFeatureFlags.config.js.\n *\n * To regenerate this code, run the following script from the repo root:\n *   yarn featureflags-update\n */\n\nimport type {TurboModule} from '../../../Libraries/TurboModule/RCTExport';\n\nimport * as TurboModuleRegistry from '../../../Libraries/TurboModule/TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n  +commonTestFlag?: () => boolean;\n  +androidEnablePendingFabricTransactions?: () => boolean;\n  +batchRenderingUpdatesInEventLoop?: () => boolean;\n  +destroyFabricSurfacesInReactInstanceManager?: () => boolean;\n  +enableBackgroundExecutor?: () => boolean;\n  +useModernRuntimeScheduler?: () => boolean;\n  +enableMicrotasks?: () => boolean;\n  +enableSpannableBuildingUnification?: () => boolean;\n  +enableCustomDrawOrderFabric?: () => boolean;\n  +enableFixForClippedSubviewsCrash?: () => boolean;\n  +inspectorEnableCxxInspectorPackagerConnection?: () => boolean;\n  +inspectorEnableModernCDPRegistry?: () => boolean;\n}\n\nconst NativeReactNativeFeatureFlags: ?Spec = TurboModuleRegistry.get<Spec>(\n  'NativeReactNativeFeatureFlagsCxx',\n);\n\nexport default NativeReactNativeFeatureFlags;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @generated SignedSource<<b7ebc6e4360a4b7733335f283300a4bb>>\n * @flow strict-local\n */\n\n/**\n * IMPORTANT: Do NOT modify this file directly.\n *\n * To change the definition of the flags, edit\n *   packages/react-native/scripts/featureflags/ReactNativeFeatureFlags.config.js.\n *\n * To regenerate this code, run the following script from the repo root:\n *   yarn featureflags-update\n */\n\nimport {\n  type Getter,\n  createJavaScriptFlagGetter,\n  createNativeFlagGetter,\n  setOverrides,\n} from './ReactNativeFeatureFlagsBase';\n\nexport type ReactNativeFeatureFlagsJsOnly = {\n  jsOnlyTestFlag: Getter<boolean>,\n  isLayoutAnimationEnabled: Getter<boolean>,\n  animatedShouldDebounceQueueFlush: Getter<boolean>,\n  animatedShouldUseSingleOp: Getter<boolean>,\n  enableAccessToHostTreeInFabric: Getter<boolean>,\n  shouldUseAnimatedObjectForTransform: Getter<boolean>,\n  shouldUseSetNativePropsInFabric: Getter<boolean>,\n  shouldUseRemoveClippedSubviewsAsDefaultOnIOS: Getter<boolean>,\n};\n\nexport type ReactNativeFeatureFlagsJsOnlyOverrides = Partial<ReactNativeFeatureFlagsJsOnly>;\n\nexport type ReactNativeFeatureFlags = {\n  ...ReactNativeFeatureFlagsJsOnly,\n  commonTestFlag: Getter<boolean>,\n  androidEnablePendingFabricTransactions: Getter<boolean>,\n  batchRenderingUpdatesInEventLoop: Getter<boolean>,\n  destroyFabricSurfacesInReactInstanceManager: Getter<boolean>,\n  enableBackgroundExecutor: Getter<boolean>,\n  useModernRuntimeScheduler: Getter<boolean>,\n  enableMicrotasks: Getter<boolean>,\n  enableSpannableBuildingUnification: Getter<boolean>,\n  enableCustomDrawOrderFabric: Getter<boolean>,\n  enableFixForClippedSubviewsCrash: Getter<boolean>,\n  inspectorEnableCxxInspectorPackagerConnection: Getter<boolean>,\n  inspectorEnableModernCDPRegistry: Getter<boolean>,\n}\n\n/**\n * JS-only flag for testing. Do NOT modify.\n */\nexport const jsOnlyTestFlag: Getter<boolean> = createJavaScriptFlagGetter('jsOnlyTestFlag', false);\n\n/**\n * Function used to enable / disabled Layout Animations in React Native.\n */\nexport const isLayoutAnimationEnabled: Getter<boolean> = createJavaScriptFlagGetter('isLayoutAnimationEnabled', true);\n\n/**\n * Enables an experimental flush-queue debouncing in Animated.js.\n */\nexport const animatedShouldDebounceQueueFlush: Getter<boolean> = createJavaScriptFlagGetter('animatedShouldDebounceQueueFlush', false);\n\n/**\n * Enables an experimental mega-operation for Animated.js that replaces many calls to native with a single call into native, to reduce JSI/JNI traffic.\n */\nexport const animatedShouldUseSingleOp: Getter<boolean> = createJavaScriptFlagGetter('animatedShouldUseSingleOp', false);\n\n/**\n * Enables access to the host tree in Fabric using DOM-compatible APIs.\n */\nexport const enableAccessToHostTreeInFabric: Getter<boolean> = createJavaScriptFlagGetter('enableAccessToHostTreeInFabric', false);\n\n/**\n * Enables use of AnimatedObject for animating transform values.\n */\nexport const shouldUseAnimatedObjectForTransform: Getter<boolean> = createJavaScriptFlagGetter('shouldUseAnimatedObjectForTransform', false);\n\n/**\n * Enables use of setNativeProps in JS driven animations.\n */\nexport const shouldUseSetNativePropsInFabric: Getter<boolean> = createJavaScriptFlagGetter('shouldUseSetNativePropsInFabric', true);\n\n/**\n * removeClippedSubviews prop will be used as the default in FlatList on iOS to match Android\n */\nexport const shouldUseRemoveClippedSubviewsAsDefaultOnIOS: Getter<boolean> = createJavaScriptFlagGetter('shouldUseRemoveClippedSubviewsAsDefaultOnIOS', false);\n\n/**\n * Common flag for testing. Do NOT modify.\n */\nexport const commonTestFlag: Getter<boolean> = createNativeFlagGetter('commonTestFlag', false);\n/**\n * To be used with batchRenderingUpdatesInEventLoop. When enbled, the Android mounting layer will concatenate pending transactions to ensure they're applied atomatically\n */\nexport const androidEnablePendingFabricTransactions: Getter<boolean> = createNativeFlagGetter('androidEnablePendingFabricTransactions', false);\n/**\n * When enabled, the RuntimeScheduler processing the event loop will batch all rendering updates and dispatch them together at the end of each iteration of the loop.\n */\nexport const batchRenderingUpdatesInEventLoop: Getter<boolean> = createNativeFlagGetter('batchRenderingUpdatesInEventLoop', false);\n/**\n * When enabled, ReactInstanceManager will clean up Fabric surfaces on destroy().\n */\nexport const destroyFabricSurfacesInReactInstanceManager: Getter<boolean> = createNativeFlagGetter('destroyFabricSurfacesInReactInstanceManager', false);\n/**\n * Enables the use of a background executor to compute layout and commit updates on Fabric (this system is deprecated and should not be used).\n */\nexport const enableBackgroundExecutor: Getter<boolean> = createNativeFlagGetter('enableBackgroundExecutor', false);\n/**\n * When enabled, it uses the modern fork of RuntimeScheduler that allows scheduling tasks with priorities from any thread.\n */\nexport const useModernRuntimeScheduler: Getter<boolean> = createNativeFlagGetter('useModernRuntimeScheduler', false);\n/**\n * Enables the use of microtasks in Hermes (scheduling) and RuntimeScheduler (execution).\n */\nexport const enableMicrotasks: Getter<boolean> = createNativeFlagGetter('enableMicrotasks', false);\n/**\n * Uses new, deduplicated logic for constructing Android Spannables from text fragments\n */\nexport const enableSpannableBuildingUnification: Getter<boolean> = createNativeFlagGetter('enableSpannableBuildingUnification', false);\n/**\n * When enabled, Fabric will use customDrawOrder in ReactViewGroup (similar to old architecture).\n */\nexport const enableCustomDrawOrderFabric: Getter<boolean> = createNativeFlagGetter('enableCustomDrawOrderFabric', false);\n/**\n * Attempt at fixing a crash related to subview clipping on Android. This is a kill switch for the fix\n */\nexport const enableFixForClippedSubviewsCrash: Getter<boolean> = createNativeFlagGetter('enableFixForClippedSubviewsCrash', false);\n/**\n * Flag determining if the C++ implementation of InspectorPackagerConnection should be used instead of the per-platform one. This flag is global and should not be changed across React Host lifetimes.\n */\nexport const inspectorEnableCxxInspectorPackagerConnection: Getter<boolean> = createNativeFlagGetter('inspectorEnableCxxInspectorPackagerConnection', false);\n/**\n * Flag determining if the modern CDP backend should be enabled. This flag is global and should not be changed across React Host lifetimes.\n */\nexport const inspectorEnableModernCDPRegistry: Getter<boolean> = createNativeFlagGetter('inspectorEnableModernCDPRegistry', false);\n\n/**\n * Overrides the feature flags with the provided methods.\n * NOTE: Only JS-only flags can be overridden from JavaScript using this API.\n */\nexport const override = setOverrides;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport type {\n  ReactNativeFeatureFlagsJsOnly,\n  ReactNativeFeatureFlagsJsOnlyOverrides,\n} from './ReactNativeFeatureFlags';\n\nimport NativeReactNativeFeatureFlags from './NativeReactNativeFeatureFlags';\n\nconst accessedFeatureFlags: Set<string> = new Set();\nlet overrides: ?ReactNativeFeatureFlagsJsOnlyOverrides;\n\nexport type Getter<T> = () => T;\n\nfunction createGetter<T: boolean | number | string>(\n  configName: string,\n  customValueGetter: Getter<?T>,\n  defaultValue: T,\n): Getter<T> {\n  let cachedValue: ?T;\n\n  return () => {\n    if (cachedValue == null) {\n      accessedFeatureFlags.add(configName);\n      cachedValue = customValueGetter() ?? defaultValue;\n    }\n    return cachedValue;\n  };\n}\n\nexport function createJavaScriptFlagGetter<\n  K: $Keys<ReactNativeFeatureFlagsJsOnly>,\n>(\n  configName: K,\n  defaultValue: ReturnType<ReactNativeFeatureFlagsJsOnly[K]>,\n): Getter<ReturnType<ReactNativeFeatureFlagsJsOnly[K]>> {\n  return createGetter(\n    configName,\n    () => overrides?.[configName]?.(),\n    defaultValue,\n  );\n}\n\ntype NativeFeatureFlags = $NonMaybeType<typeof NativeReactNativeFeatureFlags>;\n\nexport function createNativeFlagGetter<K: $Keys<NativeFeatureFlags>>(\n  configName: K,\n  defaultValue: ReturnType<$NonMaybeType<NativeFeatureFlags[K]>>,\n): Getter<ReturnType<$NonMaybeType<NativeFeatureFlags[K]>>> {\n  return createGetter(\n    configName,\n    () => NativeReactNativeFeatureFlags?.[configName]?.(),\n    defaultValue,\n  );\n}\n\nexport function getOverrides(): ?ReactNativeFeatureFlagsJsOnlyOverrides {\n  return overrides;\n}\n\nexport function setOverrides(\n  newOverrides: ReactNativeFeatureFlagsJsOnlyOverrides,\n): void {\n  if (overrides != null) {\n    throw new Error('Feature flags cannot be overridden more than once');\n  }\n\n  if (accessedFeatureFlags.size > 0) {\n    const accessedFeatureFlagsStr = Array.from(accessedFeatureFlags).join(', ');\n    throw new Error(\n      `Feature flags were accessed before being overridden: ${accessedFeatureFlagsStr}`,\n    );\n  }\n\n  overrides = newOverrides;\n}\n","/**\n * @license React\n * scheduler.native.production.min.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';function f(a,b){var c=a.length;a.push(b);a:for(;0<c;){var d=c-1>>>1,e=a[d];if(0<g(e,b))a[d]=b,a[c]=e,c=d;else break a}}function h(a){return 0===a.length?null:a[0]}function k(a){if(0===a.length)return null;var b=a[0],c=a.pop();if(c!==b){a[0]=c;a:for(var d=0,e=a.length,t=e>>>1;d<t;){var m=2*(d+1)-1,E=a[m],n=m+1,A=a[n];if(0>g(E,c))n<e&&0>g(A,E)?(a[d]=A,a[n]=c,d=n):(a[d]=E,a[m]=c,d=m);else if(n<e&&0>g(A,c))a[d]=A,a[n]=c,d=n;else break a}}return b}\nfunction g(a,b){var c=a.sortIndex-b.sortIndex;return 0!==c?c:a.id-b.id}var l;if(\"object\"===typeof performance&&\"function\"===typeof performance.now){var p=performance;l=function(){return p.now()}}else{var q=Date,r=q.now();l=function(){return q.now()-r}}var u=[],v=[],w=1,x=null,y=3,z=!1,B=!1,C=!1,D=\"function\"===typeof setTimeout?setTimeout:null,F=\"function\"===typeof clearTimeout?clearTimeout:null,G=\"undefined\"!==typeof setImmediate?setImmediate:null;\n\"undefined\"!==typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending?navigator.scheduling.isInputPending.bind(navigator.scheduling):null;function H(a){for(var b=h(v);null!==b;){if(null===b.callback)k(v);else if(b.startTime<=a)k(v),b.sortIndex=b.expirationTime,f(u,b);else break;b=h(v)}}function I(a){C=!1;H(a);if(!B)if(null!==h(u))B=!0,J=K,L||(L=!0,M());else{var b=h(v);null!==b&&N(I,b.startTime-a)}}\nfunction K(a,b){B=!1;C&&(C=!1,F(O),O=-1);z=!0;var c=y;try{a:{H(b);for(x=h(u);null!==x&&(!(x.expirationTime>b)||a&&!P());){var d=x.callback;if(\"function\"===typeof d){x.callback=null;y=x.priorityLevel;var e=d(x.expirationTime<=b);b=l();if(\"function\"===typeof e){x.callback=e;H(b);var t=!0;break a}else x===h(u)&&k(u),H(b)}else k(u);x=h(u)}if(null!==x)t=!0;else{var m=h(v);null!==m&&N(I,m.startTime-b);t=!1}}return t}finally{x=null,y=c,z=!1}}\nfunction Q(a,b,c){var d=l();\"object\"===typeof c&&null!==c?(c=c.delay,c=\"number\"===typeof c&&0<c?d+c:d):c=d;switch(a){case 1:var e=-1;break;case 2:e=250;break;case 5:e=1073741823;break;case 4:e=1E4;break;default:e=5E3}e=c+e;a={id:w++,callback:b,priorityLevel:a,startTime:c,expirationTime:e,sortIndex:-1};c>d?(a.sortIndex=c,f(v,a),null===h(u)&&a===h(v)&&(C?(F(O),O=-1):C=!0,N(I,c-d))):(a.sortIndex=e,f(u,a),B||z||(B=!0,J=K,L||(L=!0,M())));return a}function R(a){a.callback=null}function S(){return y}\nvar L=!1,J=null,O=-1,T=-1;function P(){return 5>l()-T?!1:!0}function U(){}function V(){if(null!==J){var a=l();T=a;var b=!0;try{b=J(!0,a)}finally{b?M():(L=!1,J=null)}}else L=!1}var M;if(\"function\"===typeof G)M=function(){G(V)};else if(\"undefined\"!==typeof MessageChannel){var W=new MessageChannel,X=W.port2;W.port1.onmessage=V;M=function(){X.postMessage(null)}}else M=function(){D(V,0)};function N(a,b){O=D(function(){a(l())},b)}\nvar Y=\"undefined\"!==typeof nativeRuntimeScheduler?nativeRuntimeScheduler.unstable_UserBlockingPriority:2,aa=\"undefined\"!==typeof nativeRuntimeScheduler?nativeRuntimeScheduler.unstable_NormalPriority:3,ba=\"undefined\"!==typeof nativeRuntimeScheduler?nativeRuntimeScheduler.unstable_LowPriority:4,ca=\"undefined\"!==typeof nativeRuntimeScheduler?nativeRuntimeScheduler.unstable_ImmediatePriority:1,da=\"undefined\"!==typeof nativeRuntimeScheduler?nativeRuntimeScheduler.unstable_scheduleCallback:Q,ea=\"undefined\"!==\ntypeof nativeRuntimeScheduler?nativeRuntimeScheduler.unstable_cancelCallback:R,fa=\"undefined\"!==typeof nativeRuntimeScheduler?nativeRuntimeScheduler.unstable_getCurrentPriorityLevel:S,ha=\"undefined\"!==typeof nativeRuntimeScheduler?nativeRuntimeScheduler.unstable_shouldYield:P,ia=\"undefined\"!==typeof nativeRuntimeScheduler?nativeRuntimeScheduler.unstable_requestPaint:U,ja=\"undefined\"!==typeof nativeRuntimeScheduler?nativeRuntimeScheduler.unstable_now:l;\nfunction Z(){throw Error(\"Not implemented.\");}exports.unstable_IdlePriority=\"undefined\"!==typeof nativeRuntimeScheduler?nativeRuntimeScheduler.unstable_IdlePriority:5;exports.unstable_ImmediatePriority=ca;exports.unstable_LowPriority=ba;exports.unstable_NormalPriority=aa;exports.unstable_Profiling=null;exports.unstable_UserBlockingPriority=Y;exports.unstable_cancelCallback=ea;exports.unstable_continueExecution=Z;exports.unstable_forceFrameRate=Z;exports.unstable_getCurrentPriorityLevel=fa;\nexports.unstable_getFirstCallbackNode=Z;exports.unstable_next=Z;exports.unstable_now=ja;exports.unstable_pauseExecution=Z;exports.unstable_requestPaint=ia;exports.unstable_runWithPriority=Z;exports.unstable_scheduleCallback=da;exports.unstable_shouldYield=ha;exports.unstable_wrapCallback=Z;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/scheduler.native.production.min.js');\n} else {\n  module.exports = require('./cjs/scheduler.native.development.js');\n}\n","var superPropBase = require(\"./superPropBase.js\");\nfunction _get() {\n  return (module.exports = _get = \"undefined\" != typeof Reflect && Reflect.get ? Reflect.get.bind() : function (e, t, r) {\n    var p = superPropBase(e, t);\n    if (p) {\n      var n = Object.getOwnPropertyDescriptor(p, t);\n      return n.get ? n.get.call(arguments.length < 3 ? e : r) : n.value;\n    }\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports), _get.apply(null, arguments);\n}\nmodule.exports = _get, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var getPrototypeOf = require(\"./getPrototypeOf.js\");\nfunction _superPropBase(t, o) {\n  for (; !{}.hasOwnProperty.call(t, o) && null !== (t = getPrototypeOf(t)););\n  return t;\n}\nmodule.exports = _superPropBase, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;"],"names":["NativeComponentRegistry","e","r","__esModule","default","t","_getRequireWildcardCache","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","_interopRequireWildcard","require","_codegenNativeCommands","_interopRequireDefault","WeakMap","exports","codegenNativeCommands","supportedCommands","__INTERNAL_VIEW_CONFIG","uiViewClassName","bubblingEventTypes","topBlur","phasedRegistrationNames","bubbled","captured","topEndEditing","topFocus","topKeyPress","topSubmitEditing","topTextInput","directEventTypes","topScroll","registrationName","validAttributes","maxFontSizeMultiplier","adjustsFontSizeToFit","minimumFontScale","autoFocus","placeholder","inlineImagePadding","contextMenuHidden","textShadowColor","process","maxLength","selectTextOnFocus","textShadowRadius","underlineColorAndroid","textDecorationLine","submitBehavior","textAlignVertical","fontStyle","textShadowOffset","selectionColor","selectionHandleColor","placeholderTextColor","importantForAutofill","lineHeight","textTransform","returnKeyType","keyboardType","multiline","color","autoComplete","numberOfLines","letterSpacing","returnKeyLabel","fontSize","onKeyPress","cursorColor","text","showSoftInputOnFocus","textAlign","autoCapitalize","autoCorrect","caretHidden","secureTextEntry","textBreakStrategy","onScroll","onContentSizeChange","disableFullscreenUI","includeFontPadding","fontWeight","fontFamily","allowFontScaling","onSelectionChange","mostRecentEventCount","inlineImageLeft","editable","fontVariant","borderBottomRightRadius","borderBottomColor","borderRadius","borderRightColor","borderColor","borderTopRightRadius","borderStyle","borderBottomLeftRadius","borderLeftColor","borderTopLeftRadius","borderTopColor","AndroidTextInputNativeComponent","_RCTTextInputViewConfig","assign","RCTTextInputViewConfig","SinglelineTextInputNativeComponent","_ViewConfigIgnore","topChange","topTouchCancel","topTouchEnd","topTouchMove","topKeyPressSync","topSelectionChange","topChangeSync","topContentSizeChange","diff","isHighlighted","writingDirection","textDecorationStyle","textDecorationColor","inputAccessoryViewID","enablesReturnKeyAutomatically","clearButtonMode","selection","scrollEnabled","textContentType","keyboardAppearance","passwordRules","spellCheck","clearTextOnFocus","lineBreakStrategyIOS","smartInsertDelete","ConditionallyIgnoredEventHandlers","onChange","onChangeSync","onKeyPressSync","onTextInput","module","_AndroidTextInputNativeComponent","_RCTSingelineTextInputNativeComponent","findNodeHandle","Platform","currentlyFocusedInputRef","inputs","Set","focusInput","textField","blurInput","currentlyFocusedInput","currentlyFocusedField","focusField","textFieldID","__DEV__","blurField","focusTextInput","_textField$currentPro","currentProps","OS","iOSTextInputCommands","focus","AndroidTextInputCommands","blurTextInput","blur","registerInput","add","unregisterInput","delete","isTextInput","logListeners","deepDiffer","one","two","maxDepthOrOptions","arguments","length","undefined","options","maxDepth","unsafelyIgnoreFunctions","onDifferentFunctionsIgnored","name","constructor","Array","isArray","len","ii","key","twoKey","unstable_setLogListeners","listeners","NativeReactNativeFeatureFlags","_ReactNativeFeatureFlagsBase","createJavaScriptFlagGetter","createNativeFlagGetter","setOverrides","configName","defaultValue","createGetter","_overrides","_overrides$configName","overrides","_NativeReactNativeFea","newOverrides","Error","accessedFeatureFlags","size","accessedFeatureFlagsStr","from","join","_NativeReactNativeFeatureFlags","customValueGetter","cachedValue","_customValueGetter","f","b","c","push","d","g","h","k","pop","m","E","A","sortIndex","id","l","performance","now","p","q","Date","v","w","x","y","z","B","C","D","setTimeout","F","clearTimeout","G","setImmediate","H","callback","startTime","expirationTime","I","J","K","L","M","N","O","P","priorityLevel","navigator","scheduling","isInputPending","bind","T","V","MessageChannel","W","X","port2","port1","onmessage","postMessage","Y","nativeRuntimeScheduler","unstable_UserBlockingPriority","aa","unstable_NormalPriority","ba","unstable_LowPriority","ca","unstable_ImmediatePriority","da","unstable_scheduleCallback","delay","ea","unstable_cancelCallback","fa","unstable_getCurrentPriorityLevel","ha","unstable_shouldYield","ia","unstable_requestPaint","ja","unstable_now","Z","unstable_IdlePriority","unstable_Profiling","unstable_continueExecution","unstable_forceFrameRate","unstable_getFirstCallbackNode","unstable_next","unstable_pauseExecution","unstable_runWithPriority","unstable_wrapCallback","superPropBase","_get","Reflect","value","apply","getPrototypeOf","o"],"sourceRoot":""}