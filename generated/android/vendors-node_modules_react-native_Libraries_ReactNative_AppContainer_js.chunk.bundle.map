{"version":3,"file":"vendors-node_modules_react-native_Libraries_ReactNative_AppContainer_js.chunk.bundle","mappings":"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","sources":["webpack:///./node_modules/react-native/Libraries/Components/View/View.js","webpack:///./node_modules/react-native/Libraries/Components/View/ViewNativeComponent.js","webpack:///./node_modules/react-native/Libraries/NativeComponent/BaseViewConfig.android.js","webpack:///./node_modules/react-native/Libraries/NativeComponent/NativeComponentRegistry.js","webpack:///./node_modules/react-native/Libraries/NativeComponent/PlatformBaseViewConfig.js","webpack:///./node_modules/react-native/Libraries/NativeComponent/StaticViewConfigValidator.js","webpack:///./node_modules/react-native/Libraries/NativeComponent/ViewConfig.js","webpack:///./node_modules/react-native/Libraries/NativeComponent/ViewConfigIgnore.js","webpack:///./node_modules/react-native/Libraries/ReactNative/AppContainer-prod.js","webpack:///./node_modules/react-native/Libraries/ReactNative/AppContainer.js","webpack:///./node_modules/react-native/Libraries/ReactNative/RootTag.js","webpack:///./node_modules/react-native/Libraries/Renderer/shims/ReactNativeViewConfigRegistry.js","webpack:///./node_modules/react-native/Libraries/StyleSheet/StyleSheet.js","webpack:///./node_modules/react-native/Libraries/StyleSheet/flattenStyle.js","webpack:///./node_modules/react-native/Libraries/Text/TextAncestor.js","webpack:///./node_modules/react-native/Libraries/Utilities/codegenNativeCommands.js","webpack:///./node_modules/react-native/Libraries/Utilities/verifyComponentAttributeEquivalence.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\nimport type {ViewProps} from './ViewPropTypes';\n\nimport flattenStyle from '../../StyleSheet/flattenStyle';\nimport TextAncestor from '../../Text/TextAncestor';\nimport ViewNativeComponent from './ViewNativeComponent';\nimport * as React from 'react';\n\nexport type Props = ViewProps;\n\n/**\n * The most fundamental component for building a UI, View is a container that\n * supports layout with flexbox, style, some touch handling, and accessibility\n * controls.\n *\n * @see https://reactnative.dev/docs/view\n */\nconst View: React.AbstractComponent<\n  ViewProps,\n  React.ElementRef<typeof ViewNativeComponent>,\n> = React.forwardRef(\n  (\n    {\n      accessibilityElementsHidden,\n      accessibilityLabel,\n      accessibilityLabelledBy,\n      accessibilityLiveRegion,\n      accessibilityState,\n      accessibilityValue,\n      'aria-busy': ariaBusy,\n      'aria-checked': ariaChecked,\n      'aria-disabled': ariaDisabled,\n      'aria-expanded': ariaExpanded,\n      'aria-hidden': ariaHidden,\n      'aria-label': ariaLabel,\n      'aria-labelledby': ariaLabelledBy,\n      'aria-live': ariaLive,\n      'aria-selected': ariaSelected,\n      'aria-valuemax': ariaValueMax,\n      'aria-valuemin': ariaValueMin,\n      'aria-valuenow': ariaValueNow,\n      'aria-valuetext': ariaValueText,\n      focusable,\n      id,\n      importantForAccessibility,\n      nativeID,\n      pointerEvents,\n      tabIndex,\n      ...otherProps\n    }: ViewProps,\n    forwardedRef,\n  ) => {\n    const hasTextAncestor = React.useContext(TextAncestor);\n    const _accessibilityLabelledBy =\n      ariaLabelledBy?.split(/\\s*,\\s*/g) ?? accessibilityLabelledBy;\n\n    let _accessibilityState;\n    if (\n      accessibilityState != null ||\n      ariaBusy != null ||\n      ariaChecked != null ||\n      ariaDisabled != null ||\n      ariaExpanded != null ||\n      ariaSelected != null\n    ) {\n      _accessibilityState = {\n        busy: ariaBusy ?? accessibilityState?.busy,\n        checked: ariaChecked ?? accessibilityState?.checked,\n        disabled: ariaDisabled ?? accessibilityState?.disabled,\n        expanded: ariaExpanded ?? accessibilityState?.expanded,\n        selected: ariaSelected ?? accessibilityState?.selected,\n      };\n    }\n    let _accessibilityValue;\n    if (\n      accessibilityValue != null ||\n      ariaValueMax != null ||\n      ariaValueMin != null ||\n      ariaValueNow != null ||\n      ariaValueText != null\n    ) {\n      _accessibilityValue = {\n        max: ariaValueMax ?? accessibilityValue?.max,\n        min: ariaValueMin ?? accessibilityValue?.min,\n        now: ariaValueNow ?? accessibilityValue?.now,\n        text: ariaValueText ?? accessibilityValue?.text,\n      };\n    }\n\n    // $FlowFixMe[underconstrained-implicit-instantiation]\n    let style = flattenStyle(otherProps.style);\n\n    // $FlowFixMe[sketchy-null-mixed]\n    const newPointerEvents = style?.pointerEvents || pointerEvents;\n\n    const actualView = (\n      <ViewNativeComponent\n        {...otherProps}\n        accessibilityLiveRegion={\n          ariaLive === 'off' ? 'none' : ariaLive ?? accessibilityLiveRegion\n        }\n        accessibilityLabel={ariaLabel ?? accessibilityLabel}\n        focusable={tabIndex !== undefined ? !tabIndex : focusable}\n        accessibilityState={_accessibilityState}\n        accessibilityElementsHidden={ariaHidden ?? accessibilityElementsHidden}\n        accessibilityLabelledBy={_accessibilityLabelledBy}\n        accessibilityValue={_accessibilityValue}\n        importantForAccessibility={\n          ariaHidden === true\n            ? 'no-hide-descendants'\n            : importantForAccessibility\n        }\n        nativeID={id ?? nativeID}\n        style={style}\n        // $FlowFixMe[incompatible-type]\n        pointerEvents={newPointerEvents}\n        ref={forwardedRef}\n      />\n    );\n\n    if (hasTextAncestor) {\n      return (\n        <TextAncestor.Provider value={false}>\n          {actualView}\n        </TextAncestor.Provider>\n      );\n    }\n\n    return actualView;\n  },\n);\n\nView.displayName = 'View';\n\nmodule.exports = View;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport type {\n  HostComponent,\n  PartialViewConfig,\n} from '../../Renderer/shims/ReactNativeTypes';\n\nimport * as NativeComponentRegistry from '../../NativeComponent/NativeComponentRegistry';\nimport codegenNativeCommands from '../../Utilities/codegenNativeCommands';\nimport Platform from '../../Utilities/Platform';\nimport {type ViewProps as Props} from './ViewPropTypes';\nimport * as React from 'react';\n\nexport const __INTERNAL_VIEW_CONFIG: PartialViewConfig =\n  Platform.OS === 'android'\n    ? {\n        uiViewClassName: 'RCTView',\n        validAttributes: {\n          // ReactClippingViewManager @ReactProps\n          removeClippedSubviews: true,\n\n          // ReactViewManager @ReactProps\n          accessible: true,\n          hasTVPreferredFocus: true,\n          nextFocusDown: true,\n          nextFocusForward: true,\n          nextFocusLeft: true,\n          nextFocusRight: true,\n          nextFocusUp: true,\n\n          borderRadius: true,\n          borderTopLeftRadius: true,\n          borderTopRightRadius: true,\n          borderBottomRightRadius: true,\n          borderBottomLeftRadius: true,\n          borderTopStartRadius: true,\n          borderTopEndRadius: true,\n          borderBottomStartRadius: true,\n          borderBottomEndRadius: true,\n          borderEndEndRadius: true,\n          borderEndStartRadius: true,\n          borderStartEndRadius: true,\n          borderStartStartRadius: true,\n          borderStyle: true,\n          hitSlop: true,\n          pointerEvents: true,\n          nativeBackgroundAndroid: true,\n          nativeForegroundAndroid: true,\n          needsOffscreenAlphaCompositing: true,\n\n          borderWidth: true,\n          borderLeftWidth: true,\n          borderRightWidth: true,\n          borderTopWidth: true,\n          borderBottomWidth: true,\n          borderStartWidth: true,\n          borderEndWidth: true,\n\n          borderColor: {\n            process: require('../../StyleSheet/processColor').default,\n          },\n          borderLeftColor: {\n            process: require('../../StyleSheet/processColor').default,\n          },\n          borderRightColor: {\n            process: require('../../StyleSheet/processColor').default,\n          },\n          borderTopColor: {\n            process: require('../../StyleSheet/processColor').default,\n          },\n          borderBottomColor: {\n            process: require('../../StyleSheet/processColor').default,\n          },\n          borderStartColor: {\n            process: require('../../StyleSheet/processColor').default,\n          },\n          borderEndColor: {\n            process: require('../../StyleSheet/processColor').default,\n          },\n          borderBlockColor: {\n            process: require('../../StyleSheet/processColor').default,\n          },\n          borderBlockEndColor: {\n            process: require('../../StyleSheet/processColor').default,\n          },\n          borderBlockStartColor: {\n            process: require('../../StyleSheet/processColor').default,\n          },\n\n          focusable: true,\n          overflow: true,\n          backfaceVisibility: true,\n          experimental_layoutConformance: true,\n        },\n      }\n    : {\n        uiViewClassName: 'RCTView',\n      };\n\nconst ViewNativeComponent: HostComponent<Props> =\n  NativeComponentRegistry.get<Props>('RCTView', () => __INTERNAL_VIEW_CONFIG);\n\ninterface NativeCommands {\n  +hotspotUpdate: (\n    viewRef: React.ElementRef<HostComponent<mixed>>,\n    x: number,\n    y: number,\n  ) => void;\n  +setPressed: (\n    viewRef: React.ElementRef<HostComponent<mixed>>,\n    pressed: boolean,\n  ) => void;\n}\n\nexport const Commands: NativeCommands = codegenNativeCommands<NativeCommands>({\n  supportedCommands: ['hotspotUpdate', 'setPressed'],\n});\n\nexport default ViewNativeComponent;\n\nexport type ViewNativeComponentType = HostComponent<Props>;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\nimport type {PartialViewConfigWithoutName} from './PlatformBaseViewConfig';\n\nimport ReactNativeStyleAttributes from '../Components/View/ReactNativeStyleAttributes';\nimport {DynamicallyInjectedByGestureHandler} from './ViewConfigIgnore';\n\nconst bubblingEventTypes = {\n  // Bubbling events from UIManagerModuleConstants.java\n  topChange: {\n    phasedRegistrationNames: {\n      captured: 'onChangeCapture',\n      bubbled: 'onChange',\n    },\n  },\n  topSelect: {\n    phasedRegistrationNames: {\n      captured: 'onSelectCapture',\n      bubbled: 'onSelect',\n    },\n  },\n  topTouchEnd: {\n    phasedRegistrationNames: {\n      captured: 'onTouchEndCapture',\n      bubbled: 'onTouchEnd',\n    },\n  },\n  topTouchCancel: {\n    phasedRegistrationNames: {\n      captured: 'onTouchCancelCapture',\n      bubbled: 'onTouchCancel',\n    },\n  },\n  topTouchStart: {\n    phasedRegistrationNames: {\n      captured: 'onTouchStartCapture',\n      bubbled: 'onTouchStart',\n    },\n  },\n  topTouchMove: {\n    phasedRegistrationNames: {\n      captured: 'onTouchMoveCapture',\n      bubbled: 'onTouchMove',\n    },\n  },\n\n  // Experimental/Work in Progress Pointer Events (not yet ready for use)\n  topPointerCancel: {\n    phasedRegistrationNames: {\n      captured: 'onPointerCancelCapture',\n      bubbled: 'onPointerCancel',\n    },\n  },\n  topPointerDown: {\n    phasedRegistrationNames: {\n      captured: 'onPointerDownCapture',\n      bubbled: 'onPointerDown',\n    },\n  },\n  topPointerEnter: {\n    phasedRegistrationNames: {\n      captured: 'onPointerEnterCapture',\n      bubbled: 'onPointerEnter',\n      skipBubbling: true,\n    },\n  },\n  topPointerLeave: {\n    phasedRegistrationNames: {\n      captured: 'onPointerLeaveCapture',\n      bubbled: 'onPointerLeave',\n      skipBubbling: true,\n    },\n  },\n  topPointerMove: {\n    phasedRegistrationNames: {\n      captured: 'onPointerMoveCapture',\n      bubbled: 'onPointerMove',\n    },\n  },\n  topPointerUp: {\n    phasedRegistrationNames: {\n      captured: 'onPointerUpCapture',\n      bubbled: 'onPointerUp',\n    },\n  },\n  topPointerOut: {\n    phasedRegistrationNames: {\n      captured: 'onPointerOutCapture',\n      bubbled: 'onPointerOut',\n    },\n  },\n  topPointerOver: {\n    phasedRegistrationNames: {\n      captured: 'onPointerOverCapture',\n      bubbled: 'onPointerOver',\n    },\n  },\n  topClick: {\n    phasedRegistrationNames: {\n      captured: 'onClickCapture',\n      bubbled: 'onClick',\n    },\n  },\n};\n\nconst directEventTypes = {\n  topAccessibilityAction: {\n    registrationName: 'onAccessibilityAction',\n  },\n  onGestureHandlerEvent: DynamicallyInjectedByGestureHandler({\n    registrationName: 'onGestureHandlerEvent',\n  }),\n  onGestureHandlerStateChange: DynamicallyInjectedByGestureHandler({\n    registrationName: 'onGestureHandlerStateChange',\n  }),\n\n  // Direct events from UIManagerModuleConstants.java\n  topContentSizeChange: {\n    registrationName: 'onContentSizeChange',\n  },\n  topScrollBeginDrag: {\n    registrationName: 'onScrollBeginDrag',\n  },\n  topMessage: {\n    registrationName: 'onMessage',\n  },\n  topSelectionChange: {\n    registrationName: 'onSelectionChange',\n  },\n  topLoadingFinish: {\n    registrationName: 'onLoadingFinish',\n  },\n  topMomentumScrollEnd: {\n    registrationName: 'onMomentumScrollEnd',\n  },\n  topLoadingStart: {\n    registrationName: 'onLoadingStart',\n  },\n  topLoadingError: {\n    registrationName: 'onLoadingError',\n  },\n  topMomentumScrollBegin: {\n    registrationName: 'onMomentumScrollBegin',\n  },\n  topScrollEndDrag: {\n    registrationName: 'onScrollEndDrag',\n  },\n  topScroll: {\n    registrationName: 'onScroll',\n  },\n  topLayout: {\n    registrationName: 'onLayout',\n  },\n};\n\nconst validAttributesForNonEventProps = {\n  // @ReactProps from BaseViewManager\n  backgroundColor: {process: require('../StyleSheet/processColor').default},\n  transform: true,\n  transformOrigin: true,\n  opacity: true,\n  elevation: true,\n  shadowColor: {process: require('../StyleSheet/processColor').default},\n  zIndex: true,\n  renderToHardwareTextureAndroid: true,\n  testID: true,\n  nativeID: true,\n  accessibilityLabelledBy: true,\n  accessibilityLabel: true,\n  accessibilityHint: true,\n  accessibilityRole: true,\n  accessibilityCollection: true,\n  accessibilityCollectionItem: true,\n  accessibilityState: true,\n  accessibilityActions: true,\n  accessibilityValue: true,\n  importantForAccessibility: true,\n  role: true,\n  rotation: true,\n  scaleX: true,\n  scaleY: true,\n  translateX: true,\n  translateY: true,\n  accessibilityLiveRegion: true,\n\n  // @ReactProps from LayoutShadowNode\n  width: true,\n  minWidth: true,\n  collapsable: true,\n  maxWidth: true,\n  height: true,\n  minHeight: true,\n  maxHeight: true,\n  flex: true,\n  flexGrow: true,\n  rowGap: true,\n  columnGap: true,\n  gap: true,\n  flexShrink: true,\n  flexBasis: true,\n  aspectRatio: true,\n  flexDirection: true,\n  flexWrap: true,\n  alignSelf: true,\n  alignItems: true,\n  alignContent: true,\n  justifyContent: true,\n  overflow: true,\n  display: true,\n\n  margin: true,\n  marginBlock: true,\n  marginBlockEnd: true,\n  marginBlockStart: true,\n  marginBottom: true,\n  marginEnd: true,\n  marginHorizontal: true,\n  marginInline: true,\n  marginInlineEnd: true,\n  marginInlineStart: true,\n  marginLeft: true,\n  marginRight: true,\n  marginStart: true,\n  marginTop: true,\n  marginVertical: true,\n\n  padding: true,\n  paddingBlock: true,\n  paddingBlockEnd: true,\n  paddingBlockStart: true,\n  paddingBottom: true,\n  paddingEnd: true,\n  paddingHorizontal: true,\n  paddingInline: true,\n  paddingInlineEnd: true,\n  paddingInlineStart: true,\n  paddingLeft: true,\n  paddingRight: true,\n  paddingStart: true,\n  paddingTop: true,\n  paddingVertical: true,\n\n  borderWidth: true,\n  borderStartWidth: true,\n  borderEndWidth: true,\n  borderTopWidth: true,\n  borderBottomWidth: true,\n  borderLeftWidth: true,\n  borderRightWidth: true,\n\n  start: true,\n  end: true,\n  left: true,\n  right: true,\n  top: true,\n  bottom: true,\n\n  inset: true,\n  insetBlock: true,\n  insetBlockEnd: true,\n  insetBlockStart: true,\n  insetInline: true,\n  insetInlineEnd: true,\n  insetInlineStart: true,\n\n  position: true,\n\n  style: ReactNativeStyleAttributes,\n\n  experimental_layoutConformance: true,\n};\n\n// Props for bubbling and direct events\nconst validAttributesForEventProps = {\n  onLayout: true,\n\n  // PanResponder handlers\n  onMoveShouldSetResponder: true,\n  onMoveShouldSetResponderCapture: true,\n  onStartShouldSetResponder: true,\n  onStartShouldSetResponderCapture: true,\n  onResponderGrant: true,\n  onResponderReject: true,\n  onResponderStart: true,\n  onResponderEnd: true,\n  onResponderRelease: true,\n  onResponderMove: true,\n  onResponderTerminate: true,\n  onResponderTerminationRequest: true,\n  onShouldBlockNativeResponder: true,\n\n  // Touch events\n  onTouchStart: true,\n  onTouchMove: true,\n  onTouchEnd: true,\n  onTouchCancel: true,\n\n  // Pointer events\n  onClick: true,\n  onPointerEnter: true,\n  onPointerEnterCapture: true,\n  onPointerLeave: true,\n  onPointerLeaveCapture: true,\n  onPointerMove: true,\n  onPointerMoveCapture: true,\n  onPointerOut: true,\n  onPointerOutCapture: true,\n  onPointerOver: true,\n  onPointerOverCapture: true,\n};\n\n/**\n * On Android, Props are derived from a ViewManager and its ShadowNode.\n *\n * Where did we find these base platform props from?\n * - Nearly all component ViewManagers descend from BaseViewManager,\n * - and BaseViewManagers' ShadowNodes descend from LayoutShadowNode.\n * - Also, all components inherit ViewConfigs from UIManagerModuleConstants.java.\n *\n * So, these ViewConfigs are generated from LayoutShadowNode and BaseViewManager.\n */\nconst PlatformBaseViewConfigAndroid: PartialViewConfigWithoutName = {\n  directEventTypes,\n  bubblingEventTypes,\n  validAttributes: {\n    ...validAttributesForNonEventProps,\n    ...validAttributesForEventProps,\n  },\n};\n\nexport default PlatformBaseViewConfigAndroid;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport type {\n  HostComponent,\n  PartialViewConfig,\n} from '../Renderer/shims/ReactNativeTypes';\n\nimport getNativeComponentAttributes from '../ReactNative/getNativeComponentAttributes';\nimport UIManager from '../ReactNative/UIManager';\nimport * as ReactNativeViewConfigRegistry from '../Renderer/shims/ReactNativeViewConfigRegistry';\nimport verifyComponentAttributeEquivalence from '../Utilities/verifyComponentAttributeEquivalence';\nimport * as StaticViewConfigValidator from './StaticViewConfigValidator';\nimport {createViewConfig} from './ViewConfig';\nimport invariant from 'invariant';\nimport * as React from 'react';\n\nlet getRuntimeConfig;\n\n/**\n * Configures a function that is called to determine whether a given component\n * should be registered using reflection of the native component at runtime.\n *\n * The provider should return null if the native component is unavailable in\n * the current environment.\n */\nexport function setRuntimeConfigProvider(\n  runtimeConfigProvider: (name: string) => ?{\n    native: boolean,\n    strict: boolean,\n    verify: boolean,\n  },\n): void {\n  if (getRuntimeConfig === undefined) {\n    getRuntimeConfig = runtimeConfigProvider;\n  }\n}\n\n/**\n * Gets a `NativeComponent` that can be rendered by React Native.\n *\n * The supplied `viewConfigProvider` may or may not be invoked and utilized,\n * depending on how `setRuntimeConfigProvider` is configured.\n */\nexport function get<Config>(\n  name: string,\n  viewConfigProvider: () => PartialViewConfig,\n): HostComponent<Config> {\n  ReactNativeViewConfigRegistry.register(name, () => {\n    const {native, strict, verify} = getRuntimeConfig?.(name) ?? {\n      native: !global.RN$Bridgeless,\n      strict: false,\n      verify: false,\n    };\n\n    let viewConfig;\n    if (native) {\n      viewConfig = getNativeComponentAttributes(name);\n    } else {\n      viewConfig = createViewConfig(viewConfigProvider());\n      if (viewConfig == null) {\n        viewConfig = getNativeComponentAttributes(name);\n      }\n    }\n\n    if (verify) {\n      const nativeViewConfig = native\n        ? viewConfig\n        : getNativeComponentAttributes(name);\n      const staticViewConfig = native\n        ? createViewConfig(viewConfigProvider())\n        : viewConfig;\n\n      if (strict) {\n        const validationOutput = StaticViewConfigValidator.validate(\n          name,\n          nativeViewConfig,\n          staticViewConfig,\n        );\n\n        if (validationOutput.type === 'invalid') {\n          console.error(\n            StaticViewConfigValidator.stringifyValidationResult(\n              name,\n              validationOutput,\n            ),\n          );\n        }\n      } else {\n        verifyComponentAttributeEquivalence(nativeViewConfig, staticViewConfig);\n      }\n    }\n\n    return viewConfig;\n  });\n\n  // $FlowFixMe[incompatible-return] `NativeComponent` is actually string!\n  return name;\n}\n\n/**\n * Same as `NativeComponentRegistry.get(...)`, except this will check either\n * the `setRuntimeConfigProvider` configuration or use native reflection (slow)\n * to determine whether this native component is available.\n *\n * If the native component is not available, a stub component is returned. Note\n * that the return value of this is not `HostComponent` because the returned\n * component instance is not guaranteed to have native methods.\n */\nexport function getWithFallback_DEPRECATED<Config>(\n  name: string,\n  viewConfigProvider: () => PartialViewConfig,\n): React.AbstractComponent<Config> {\n  if (getRuntimeConfig == null) {\n    // `getRuntimeConfig == null` when static view configs are disabled\n    // If `setRuntimeConfigProvider` is not configured, use native reflection.\n    if (hasNativeViewConfig(name)) {\n      return get<Config>(name, viewConfigProvider);\n    }\n  } else {\n    // If there is no runtime config, then the native component is unavailable.\n    if (getRuntimeConfig(name) != null) {\n      return get<Config>(name, viewConfigProvider);\n    }\n  }\n\n  const FallbackNativeComponent = function (props: Config): React.Node {\n    return null;\n  };\n  FallbackNativeComponent.displayName = `Fallback(${name})`;\n  return FallbackNativeComponent;\n}\n\nfunction hasNativeViewConfig(name: string): boolean {\n  invariant(getRuntimeConfig == null, 'Unexpected invocation!');\n  return UIManager.getViewManagerConfig(name) != null;\n}\n\n/**\n * Unstable API. Do not use!\n *\n * This method returns if there is a StaticViewConfig registered for the\n * component name received as a parameter.\n */\nexport function unstable_hasStaticViewConfig(name: string): boolean {\n  const {native} = getRuntimeConfig?.(name) ?? {\n    native: true,\n  };\n  return !native;\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\nimport type {PartialViewConfig} from '../Renderer/shims/ReactNativeTypes';\n\nimport BaseViewConfig from './BaseViewConfig';\n\nexport type PartialViewConfigWithoutName = $Rest<\n  PartialViewConfig,\n  {uiViewClassName: string},\n>;\n\nconst PlatformBaseViewConfig: PartialViewConfigWithoutName = BaseViewConfig;\n\n// In Wilde/FB4A, use RNHostComponentListRoute in Bridge mode to verify\n// whether the JS props defined here match the native props defined\n// in RCTViewManagers in iOS, and ViewManagers in Android.\nexport default PlatformBaseViewConfig;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nimport {type ViewConfig} from '../Renderer/shims/ReactNativeTypes';\nimport {isIgnored} from './ViewConfigIgnore';\n\nexport type Difference =\n  | {\n      type: 'missing',\n      path: Array<string>,\n      nativeValue: mixed,\n    }\n  | {\n      type: 'unequal',\n      path: Array<string>,\n      nativeValue: mixed,\n      staticValue: mixed,\n    }\n  | {\n      type: 'unexpected',\n      path: Array<string>,\n      staticValue: mixed,\n    };\n\nexport type ValidationResult = ValidResult | InvalidResult;\ntype ValidResult = {\n  type: 'valid',\n};\ntype InvalidResult = {\n  type: 'invalid',\n  differences: Array<Difference>,\n};\n\n/**\n * During the migration from native view configs to static view configs, this is\n * used to validate that the two are equivalent.\n */\nexport function validate(\n  name: string,\n  nativeViewConfig: ViewConfig,\n  staticViewConfig: ViewConfig,\n): ValidationResult {\n  const differences: Array<Difference> = [];\n  accumulateDifferences(\n    differences,\n    [],\n    {\n      bubblingEventTypes: nativeViewConfig.bubblingEventTypes,\n      directEventTypes: nativeViewConfig.directEventTypes,\n      uiViewClassName: nativeViewConfig.uiViewClassName,\n      validAttributes: nativeViewConfig.validAttributes,\n    },\n    {\n      bubblingEventTypes: staticViewConfig.bubblingEventTypes,\n      directEventTypes: staticViewConfig.directEventTypes,\n      uiViewClassName: staticViewConfig.uiViewClassName,\n      validAttributes: staticViewConfig.validAttributes,\n    },\n  );\n\n  if (differences.length === 0) {\n    return {type: 'valid'};\n  }\n\n  return {\n    type: 'invalid',\n    differences,\n  };\n}\n\nexport function stringifyValidationResult(\n  name: string,\n  validationResult: InvalidResult,\n): string {\n  const {differences} = validationResult;\n  return [\n    `StaticViewConfigValidator: Invalid static view config for '${name}'.`,\n    '',\n    ...differences.map(difference => {\n      const {type, path} = difference;\n      switch (type) {\n        case 'missing':\n          return `- '${path.join('.')}' is missing.`;\n        case 'unequal':\n          return `- '${path.join('.')}' is the wrong value.`;\n        case 'unexpected':\n          return `- '${path.join('.')}' is present but not expected to be.`;\n      }\n    }),\n    '',\n  ].join('\\n');\n}\n\nfunction accumulateDifferences(\n  differences: Array<Difference>,\n  path: Array<string>,\n  nativeObject: {...},\n  staticObject: {...},\n): void {\n  for (const nativeKey in nativeObject) {\n    const nativeValue = nativeObject[nativeKey];\n\n    if (!staticObject.hasOwnProperty(nativeKey)) {\n      differences.push({\n        path: [...path, nativeKey],\n        type: 'missing',\n        nativeValue,\n      });\n      continue;\n    }\n\n    const staticValue = staticObject[nativeKey];\n\n    const nativeValueIfObject = ifObject(nativeValue);\n    if (nativeValueIfObject != null) {\n      const staticValueIfObject = ifObject(staticValue);\n      if (staticValueIfObject != null) {\n        path.push(nativeKey);\n        accumulateDifferences(\n          differences,\n          path,\n          nativeValueIfObject,\n          staticValueIfObject,\n        );\n        path.pop();\n        continue;\n      }\n    }\n\n    if (nativeValue !== staticValue) {\n      differences.push({\n        path: [...path, nativeKey],\n        type: 'unequal',\n        nativeValue,\n        staticValue,\n      });\n    }\n  }\n\n  for (const staticKey in staticObject) {\n    if (\n      !nativeObject.hasOwnProperty(staticKey) &&\n      !isIgnored(staticObject[staticKey])\n    ) {\n      differences.push({\n        path: [...path, staticKey],\n        type: 'unexpected',\n        staticValue: staticObject[staticKey],\n      });\n    }\n  }\n}\n\nfunction ifObject(value: mixed): ?{...} {\n  return typeof value === 'object' && !Array.isArray(value) ? value : null;\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport type {\n  PartialViewConfig,\n  ViewConfig,\n} from '../Renderer/shims/ReactNativeTypes';\n\nimport PlatformBaseViewConfig from './PlatformBaseViewConfig';\n\n/**\n * Creates a complete `ViewConfig` from a `PartialViewConfig`.\n */\nexport function createViewConfig(\n  partialViewConfig: PartialViewConfig,\n): ViewConfig {\n  return {\n    uiViewClassName: partialViewConfig.uiViewClassName,\n    Commands: {},\n    bubblingEventTypes: composeIndexers(\n      PlatformBaseViewConfig.bubblingEventTypes,\n      partialViewConfig.bubblingEventTypes,\n    ),\n    directEventTypes: composeIndexers(\n      PlatformBaseViewConfig.directEventTypes,\n      partialViewConfig.directEventTypes,\n    ),\n    // $FlowFixMe[incompatible-return]\n    validAttributes: composeIndexers(\n      // $FlowFixMe[incompatible-call] `style` property confuses Flow.\n      PlatformBaseViewConfig.validAttributes,\n      // $FlowFixMe[incompatible-call] `style` property confuses Flow.\n      partialViewConfig.validAttributes,\n    ),\n  };\n}\n\nfunction composeIndexers<T>(\n  maybeA: ?{+[string]: T},\n  maybeB: ?{+[string]: T},\n): {+[string]: T} {\n  return maybeA == null || maybeB == null\n    ? maybeA ?? maybeB ?? {}\n    : {...maybeA, ...maybeB};\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nimport Platform from '../Utilities/Platform';\n\nconst ignoredViewConfigProps = new WeakSet<{...}>();\n\n/**\n * Decorates ViewConfig values that are dynamically injected by the library,\n * react-native-gesture-handler. (T45765076)\n */\nexport function DynamicallyInjectedByGestureHandler<T: {...}>(object: T): T {\n  ignoredViewConfigProps.add(object);\n  return object;\n}\n\n/**\n * On iOS, ViewManager event declarations generate {eventName}: true entries\n * in ViewConfig valueAttributes. These entries aren't generated for Android.\n * This annotation allows Static ViewConfigs to insert these entries into\n * iOS but not Android.\n *\n * In the future, we want to remove this platform-inconsistency. We want\n * to set RN$ViewConfigEventValidAttributesDisabled = true server-side,\n * so that iOS does not generate validAttributes from event props in iOS RCTViewManager,\n * since Android does not generate validAttributes from events props in Android ViewManager.\n *\n * TODO(T110872225): Remove this logic, after achieving platform-consistency\n */\nexport function ConditionallyIgnoredEventHandlers<T: {[name: string]: true}>(\n  value: T,\n): T | void {\n  if (Platform.OS === 'ios') {\n    return value;\n  }\n  return undefined;\n}\n\nexport function isIgnored(value: mixed): boolean {\n  if (typeof value === 'object' && value != null) {\n    return ignoredViewConfigProps.has(value);\n  }\n  return false;\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n * @oncall react_native\n */\n\nimport type {Props} from './AppContainer';\n\nimport View from '../Components/View/View';\nimport StyleSheet from '../StyleSheet/StyleSheet';\nimport {RootTagContext, createRootTag} from './RootTag';\nimport * as React from 'react';\n\nconst AppContainer = ({\n  children,\n  fabric,\n  initialProps,\n  rootTag,\n  showArchitectureIndicator,\n  WrapperComponent,\n}: Props): React.Node => {\n  let innerView = children;\n\n  if (WrapperComponent != null) {\n    innerView = (\n      <WrapperComponent\n        initialProps={initialProps}\n        fabric={fabric === true}\n        showArchitectureIndicator={showArchitectureIndicator === true}>\n        {innerView}\n      </WrapperComponent>\n    );\n  }\n\n  return (\n    <RootTagContext.Provider value={createRootTag(rootTag)}>\n      <View style={styles.root} pointerEvents=\"box-none\">\n        {innerView}\n      </View>\n    </RootTagContext.Provider>\n  );\n};\n\nconst styles = StyleSheet.create({\n  root: {flex: 1},\n});\n\nexport default AppContainer;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\nimport type {RootTag} from './RootTag';\n\nimport * as React from 'react';\n\nexport type Props = $ReadOnly<{|\n  children?: React.Node,\n  fabric?: boolean,\n  rootTag: number | RootTag,\n  initialProps?: {...},\n  showArchitectureIndicator?: boolean,\n  WrapperComponent?: ?React.ComponentType<any>,\n  internal_excludeLogBox?: boolean,\n  internal_excludeInspector?: boolean,\n|}>;\n\nconst AppContainer: React.AbstractComponent<Props> = __DEV__\n  ? require('./AppContainer-dev').default\n  : require('./AppContainer-prod').default;\n\nmodule.exports = AppContainer;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nimport * as React from 'react';\n\nexport opaque type RootTag = number;\n\nexport const RootTagContext: React$Context<RootTag> =\n  React.createContext<RootTag>(0);\n\nif (__DEV__) {\n  RootTagContext.displayName = 'RootTagContext';\n}\n\n/**\n * Intended to only be used by `AppContainer`.\n */\nexport function createRootTag(rootTag: number | RootTag): RootTag {\n  return rootTag;\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @noformat\n * @flow strict-local\n * @nolint\n * @generated SignedSource<<73af5b3fe29d226634ed64bc861634df>>\n */\n\n'use strict';\n\nimport {type ViewConfig} from './ReactNativeTypes';\nimport invariant from 'invariant';\n\n// Event configs\nexport const customBubblingEventTypes: {\n  [eventName: string]: $ReadOnly<{\n    phasedRegistrationNames: $ReadOnly<{\n      captured: string,\n      bubbled: string,\n      skipBubbling?: ?boolean,\n    }>,\n  }>,\n} = {};\nexport const customDirectEventTypes: {\n  [eventName: string]: $ReadOnly<{\n    registrationName: string,\n  }>,\n} = {};\n\nconst viewConfigCallbacks = new Map<string, ?() => ViewConfig>();\nconst viewConfigs = new Map<string, ViewConfig>();\n\nfunction processEventTypes(viewConfig: ViewConfig): void {\n  const {bubblingEventTypes, directEventTypes} = viewConfig;\n\n  if (__DEV__) {\n    if (bubblingEventTypes != null && directEventTypes != null) {\n      for (const topLevelType in directEventTypes) {\n        invariant(\n          bubblingEventTypes[topLevelType] == null,\n          'Event cannot be both direct and bubbling: %s',\n          topLevelType,\n        );\n      }\n    }\n  }\n\n  if (bubblingEventTypes != null) {\n    for (const topLevelType in bubblingEventTypes) {\n      if (customBubblingEventTypes[topLevelType] == null) {\n        customBubblingEventTypes[topLevelType] =\n          bubblingEventTypes[topLevelType];\n      }\n    }\n  }\n\n  if (directEventTypes != null) {\n    for (const topLevelType in directEventTypes) {\n      if (customDirectEventTypes[topLevelType] == null) {\n        customDirectEventTypes[topLevelType] = directEventTypes[topLevelType];\n      }\n    }\n  }\n}\n\n/**\n * Registers a native view/component by name.\n * A callback is provided to load the view config from UIManager.\n * The callback is deferred until the view is actually rendered.\n */\nexport function register(name: string, callback: () => ViewConfig): string {\n  invariant(\n    !viewConfigCallbacks.has(name),\n    'Tried to register two views with the same name %s',\n    name,\n  );\n  invariant(\n    typeof callback === 'function',\n    'View config getter callback for component `%s` must be a function (received `%s`)',\n    name,\n    callback === null ? 'null' : typeof callback,\n  );\n  viewConfigCallbacks.set(name, callback);\n  return name;\n}\n\n/**\n * Retrieves a config for the specified view.\n * If this is the first time the view has been used,\n * This configuration will be lazy-loaded from UIManager.\n */\nexport function get(name: string): ViewConfig {\n  let viewConfig;\n  if (!viewConfigs.has(name)) {\n    const callback = viewConfigCallbacks.get(name);\n    if (typeof callback !== 'function') {\n      invariant(\n        false,\n        'View config getter callback for component `%s` must be a function (received `%s`).%s',\n        name,\n        callback === null ? 'null' : typeof callback,\n        // $FlowFixMe[recursive-definition]\n        typeof name[0] === 'string' && /[a-z]/.test(name[0])\n          ? ' Make sure to start component names with a capital letter.'\n          : '',\n      );\n    }\n    viewConfig = callback();\n    processEventTypes(viewConfig);\n    viewConfigs.set(name, viewConfig);\n\n    // Clear the callback after the config is set so that\n    // we don't mask any errors during registration.\n    viewConfigCallbacks.set(name, null);\n  } else {\n    viewConfig = viewConfigs.get(name);\n  }\n  invariant(viewConfig, 'View config not found for name %s', name);\n  return viewConfig;\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\n'use strict';\n\nimport type {\n  ____ColorValue_Internal,\n  ____DangerouslyImpreciseStyle_Internal,\n  ____DangerouslyImpreciseStyleProp_Internal,\n  ____ImageStyle_Internal,\n  ____ImageStyleProp_Internal,\n  ____Styles_Internal,\n  ____TextStyle_Internal,\n  ____TextStyleProp_Internal,\n  ____ViewStyle_Internal,\n  ____ViewStyleProp_Internal,\n} from './StyleSheetTypes';\n\nconst ReactNativeStyleAttributes = require('../Components/View/ReactNativeStyleAttributes');\nconst PixelRatio = require('../Utilities/PixelRatio').default;\nconst flatten = require('./flattenStyle');\n\nexport type {NativeColorValue} from './StyleSheetTypes';\n\n/**\n * This type should be used as the type for anything that is a color. It is\n * most useful when using DynamicColorIOS which can be a string or a dynamic\n * color object.\n *\n * type props = {backgroundColor: ColorValue};\n */\nexport type ColorValue = ____ColorValue_Internal;\n\n/**\n * This type should be used as the type for a prop that is passed through\n * to a <View>'s `style` prop. This ensures call sites of the component\n * can't pass styles that View doesn't support such as `fontSize`.`\n *\n * type Props = {style: ViewStyleProp}\n * const MyComponent = (props: Props) => <View style={props.style} />\n */\nexport type ViewStyleProp = ____ViewStyleProp_Internal;\n\n/**\n * This type should be used as the type for a prop that is passed through\n * to a <Text>'s `style` prop. This ensures call sites of the component\n * can't pass styles that Text doesn't support such as `resizeMode`.`\n *\n * type Props = {style: TextStyleProp}\n * const MyComponent = (props: Props) => <Text style={props.style} />\n */\nexport type TextStyleProp = ____TextStyleProp_Internal;\n\n/**\n * This type should be used as the type for a prop that is passed through\n * to an <Image>'s `style` prop. This ensures call sites of the component\n * can't pass styles that Image doesn't support such as `fontSize`.`\n *\n * type Props = {style: ImageStyleProp}\n * const MyComponent = (props: Props) => <Image style={props.style} />\n */\nexport type ImageStyleProp = ____ImageStyleProp_Internal;\n\n/**\n * WARNING: You probably shouldn't be using this type. This type\n * is similar to the ones above except it allows styles that are accepted\n * by all of View, Text, or Image. It is therefore very unsafe to pass this\n * through to an underlying component. Using this is almost always a mistake\n * and using one of the other more restrictive types is likely the right choice.\n */\nexport type DangerouslyImpreciseStyleProp =\n  ____DangerouslyImpreciseStyleProp_Internal;\n\n/**\n * Utility type for getting the values for specific style keys.\n *\n * The following is bad because position is more restrictive than 'string':\n * ```\n * type Props = {position: string};\n * ```\n *\n * You should use the following instead:\n *\n * ```\n * type Props = {position: TypeForStyleKey<'position'>};\n * ```\n *\n * This will correctly give you the type 'absolute' | 'relative'\n */\nexport type TypeForStyleKey<\n  +key: $Keys<____DangerouslyImpreciseStyle_Internal>,\n> = $ElementType<____DangerouslyImpreciseStyle_Internal, key>;\n\n/**\n * This type is an object of the different possible style\n * properties that can be specified for View.\n *\n * Note that this isn't a safe way to type a style prop for a component as\n * results from StyleSheet.create return an internal identifier, not\n * an object of styles.\n *\n * If you want to type the style prop of a function,\n * consider using ViewStyleProp.\n *\n * A reasonable usage of this type is for helper functions that return an\n * object of styles to pass to a View that can't be precomputed with\n * StyleSheet.create.\n */\nexport type ViewStyle = ____ViewStyle_Internal;\n\n/**\n * This type is an object of the different possible style\n * properties that can be specified for Text.\n *\n * Note that this isn't a safe way to type a style prop for a component as\n * results from StyleSheet.create return an internal identifier, not\n * an object of styles.\n *\n * If you want to type the style prop of a function,\n * consider using TextStyleProp.\n *\n * A reasonable usage of this type is for helper functions that return an\n * object of styles to pass to a Text that can't be precomputed with\n * StyleSheet.create.\n */\nexport type TextStyle = ____TextStyle_Internal;\n\n/**\n * This type is an object of the different possible style\n * properties that can be specified for Image.\n *\n * Note that this isn't a safe way to type a style prop for a component as\n * results from StyleSheet.create return an internal identifier, not\n * an object of styles.\n *\n * If you want to type the style prop of a function,\n * consider using ImageStyleProp.\n *\n * A reasonable usage of this type is for helper functions that return an\n * object of styles to pass to an Image that can't be precomputed with\n * StyleSheet.create.\n */\nexport type ImageStyle = ____ImageStyle_Internal;\n\n/**\n * WARNING: You probably shouldn't be using this type. This type is an object\n * with all possible style keys and their values. Note that this isn't\n * a safe way to type a style prop for a component as results from\n * StyleSheet.create return an internal identifier, not an object of styles.\n *\n * If you want to type the style prop of a function, consider using\n * ViewStyleProp, TextStyleProp, or ImageStyleProp.\n *\n * This should only be used by very core utilities that operate on an object\n * containing any possible style value.\n */\nexport type DangerouslyImpreciseStyle = ____DangerouslyImpreciseStyle_Internal;\n\nlet hairlineWidth: number = PixelRatio.roundToNearestPixel(0.4);\nif (hairlineWidth === 0) {\n  hairlineWidth = 1 / PixelRatio.get();\n}\n\nconst absoluteFill = {\n  position: 'absolute',\n  left: 0,\n  right: 0,\n  top: 0,\n  bottom: 0,\n};\nif (__DEV__) {\n  Object.freeze(absoluteFill);\n}\n\n/**\n * A StyleSheet is an abstraction similar to CSS StyleSheets\n *\n * Create a new StyleSheet:\n *\n * ```\n * const styles = StyleSheet.create({\n *   container: {\n *     borderRadius: 4,\n *     borderWidth: 0.5,\n *     borderColor: '#d6d7da',\n *   },\n *   title: {\n *     fontSize: 19,\n *     fontWeight: 'bold',\n *   },\n *   activeTitle: {\n *     color: 'red',\n *   },\n * });\n * ```\n *\n * Use a StyleSheet:\n *\n * ```\n * <View style={styles.container}>\n *   <Text style={[styles.title, this.props.isActive && styles.activeTitle]} />\n * </View>\n * ```\n *\n * Code quality:\n *\n *  - By moving styles away from the render function, you're making the code\n *    easier to understand.\n *  - Naming the styles is a good way to add meaning to the low level components\n *  in the render function, and encourage reuse.\n *  - In most IDEs, using `StyleSheet.create()` will offer static type checking\n *  and suggestions to help you write valid styles.\n *\n */\nmodule.exports = {\n  /**\n   * This is defined as the width of a thin line on the platform. It can be\n   * used as the thickness of a border or division between two elements.\n   * Example:\n   * ```\n   *   {\n   *     borderBottomColor: '#bbb',\n   *     borderBottomWidth: StyleSheet.hairlineWidth\n   *   }\n   * ```\n   *\n   * This constant will always be a round number of pixels (so a line defined\n   * by it look crisp) and will try to match the standard width of a thin line\n   * on the underlying platform. However, you should not rely on it being a\n   * constant size, because on different platforms and screen densities its\n   * value may be calculated differently.\n   *\n   * A line with hairline width may not be visible if your simulator is downscaled.\n   */\n  hairlineWidth,\n\n  /**\n   * A very common pattern is to create overlays with position absolute and zero positioning,\n   * so `absoluteFill` can be used for convenience and to reduce duplication of these repeated\n   * styles.\n   */\n  absoluteFill: (absoluteFill: any), // TODO: This should be updated after we fix downstream Flow sites.\n\n  /**\n   * Sometimes you may want `absoluteFill` but with a couple tweaks - `absoluteFillObject` can be\n   * used to create a customized entry in a `StyleSheet`, e.g.:\n   *\n   *   const styles = StyleSheet.create({\n   *     wrapper: {\n   *       ...StyleSheet.absoluteFillObject,\n   *       top: 10,\n   *       backgroundColor: 'transparent',\n   *     },\n   *   });\n   */\n  absoluteFillObject: absoluteFill,\n\n  /**\n   * Combines two styles such that `style2` will override any styles in `style1`.\n   * If either style is falsy, the other one is returned without allocating an\n   * array, saving allocations and maintaining reference equality for\n   * PureComponent checks.\n   */\n  compose<T: DangerouslyImpreciseStyleProp>(\n    style1: ?T,\n    style2: ?T,\n  ): ?T | $ReadOnlyArray<T> {\n    if (style1 != null && style2 != null) {\n      return ([style1, style2]: $ReadOnlyArray<T>);\n    } else {\n      return style1 != null ? style1 : style2;\n    }\n  },\n\n  /**\n   * Flattens an array of style objects, into one aggregated style object.\n   *\n   * Example:\n   * ```\n   * const styles = StyleSheet.create({\n   *   listItem: {\n   *     flex: 1,\n   *     fontSize: 16,\n   *     color: 'white'\n   *   },\n   *   selectedListItem: {\n   *     color: 'green'\n   *   }\n   * });\n   *\n   * StyleSheet.flatten([styles.listItem, styles.selectedListItem])\n   * // returns { flex: 1, fontSize: 16, color: 'green' }\n   * ```\n   */\n  flatten,\n\n  /**\n   * WARNING: EXPERIMENTAL. Breaking changes will probably happen a lot and will\n   * not be reliably announced. The whole thing might be deleted, who knows? Use\n   * at your own risk.\n   *\n   * Sets a function to use to pre-process a style property value. This is used\n   * internally to process color and transform values. You should not use this\n   * unless you really know what you are doing and have exhausted other options.\n   */\n  setStyleAttributePreprocessor(\n    property: string,\n    process: (nextProp: mixed) => mixed,\n  ) {\n    let value;\n\n    if (ReactNativeStyleAttributes[property] === true) {\n      value = {process};\n    } else if (typeof ReactNativeStyleAttributes[property] === 'object') {\n      value = {...ReactNativeStyleAttributes[property], process};\n    } else {\n      console.error(`${property} is not a valid style attribute`);\n      return;\n    }\n\n    if (\n      __DEV__ &&\n      typeof value.process === 'function' &&\n      typeof ReactNativeStyleAttributes[property]?.process === 'function' &&\n      value.process !== ReactNativeStyleAttributes[property]?.process\n    ) {\n      console.warn(`Overwriting ${property} style attribute preprocessor`);\n    }\n\n    ReactNativeStyleAttributes[property] = value;\n  },\n\n  /**\n   * An identity function for creating style sheets.\n   */\n  // $FlowFixMe[unsupported-variance-annotation]\n  create<+S: ____Styles_Internal>(obj: S): $ReadOnly<S> {\n    // TODO: This should return S as the return type. But first,\n    // we need to codemod all the callsites that are typing this\n    // return value as a number (even though it was opaque).\n    if (__DEV__) {\n      for (const key in obj) {\n        if (obj[key]) {\n          Object.freeze(obj[key]);\n        }\n      }\n    }\n    return obj;\n  },\n};\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nimport type {DangerouslyImpreciseStyleProp} from './StyleSheet';\nimport type {____FlattenStyleProp_Internal} from './StyleSheetTypes';\n\nfunction flattenStyle<TStyleProp: DangerouslyImpreciseStyleProp>(\n  style: ?TStyleProp,\n  // $FlowFixMe[underconstrained-implicit-instantiation]\n): ?____FlattenStyleProp_Internal<TStyleProp> {\n  if (style === null || typeof style !== 'object') {\n    return undefined;\n  }\n\n  if (!Array.isArray(style)) {\n    // $FlowFixMe[incompatible-return]\n    return style;\n  }\n\n  const result: {[string]: $FlowFixMe} = {};\n  for (let i = 0, styleLength = style.length; i < styleLength; ++i) {\n    // $FlowFixMe[underconstrained-implicit-instantiation]\n    const computedStyle = flattenStyle(style[i]);\n    if (computedStyle) {\n      // $FlowFixMe[invalid-in-rhs]\n      for (const key in computedStyle) {\n        // $FlowFixMe[incompatible-use]\n        result[key] = computedStyle[key];\n      }\n    }\n  }\n  // $FlowFixMe[incompatible-return]\n  return result;\n}\n\nmodule.exports = flattenStyle;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\n'use strict';\n\nconst React = require('react');\n\n/**\n * Whether the current element is the descendant of a <Text> element.\n */\nconst TextAncestorContext: React$Context<$FlowFixMe> =\n  React.createContext(false);\nif (__DEV__) {\n  TextAncestorContext.displayName = 'TextAncestorContext';\n}\nmodule.exports = TextAncestorContext;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\nconst {dispatchCommand} = require('../ReactNative/RendererProxy');\n\ntype Options<T = string> = $ReadOnly<{|\n  supportedCommands: $ReadOnlyArray<T>,\n|}>;\n\nfunction codegenNativeCommands<T: interface {}>(options: Options<$Keys<T>>): T {\n  const commandObj: {[$Keys<T>]: (...$ReadOnlyArray<mixed>) => void} = {};\n\n  options.supportedCommands.forEach(command => {\n    // $FlowFixMe[missing-local-annot]\n    commandObj[command] = (ref, ...args) => {\n      // $FlowFixMe[incompatible-call]\n      dispatchCommand(ref, command, args);\n    };\n  });\n\n  return ((commandObj: any): T);\n}\n\nexport default codegenNativeCommands;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\nimport PlatformBaseViewConfig from '../NativeComponent/PlatformBaseViewConfig';\nimport {type ViewConfig} from '../Renderer/shims/ReactNativeTypes';\n\nconst IGNORED_KEYS = ['transform', 'hitSlop'];\n\n/**\n * The purpose of this function is to validate that the view config that\n * native exposes for a given view manager is the same as the view config\n * that is specified for that view manager in JS.\n *\n * In order to improve perf, we want to avoid calling into native to get\n * the view config when each view manager is used. To do this, we are moving\n * the configs to JS. In the future we will use these JS based view configs\n * to codegen the view manager on native to ensure they stay in sync without\n * this runtime check.\n *\n * If this function fails, that likely means a change was made to the native\n * view manager without updating the JS config as well. Ideally you can make\n * that direct change to the JS config. If you don't know what the differences\n * are, the best approach I've found is to create a view that prints\n * the return value of getNativeComponentAttributes, and then copying that\n * text and pasting it back into JS:\n * <Text selectable={true}>{JSON.stringify(getNativeComponentAttributes('RCTView'))}</Text>\n *\n * This is meant to be a stopgap until the time comes when we only have a\n * single source of truth. I wonder if this message will still be here two\n * years from now...\n */\nexport default function verifyComponentAttributeEquivalence(\n  nativeViewConfig: ViewConfig,\n  staticViewConfig: ViewConfig,\n) {\n  for (const prop of [\n    'validAttributes',\n    'bubblingEventTypes',\n    'directEventTypes',\n  ]) {\n    const diff = Object.keys(\n      lefthandObjectDiff(nativeViewConfig[prop], staticViewConfig[prop]),\n    );\n\n    if (diff.length > 0) {\n      const name =\n        staticViewConfig.uiViewClassName ?? nativeViewConfig.uiViewClassName;\n      console.error(\n        `'${name}' has a view config that does not match native. ` +\n          `'${prop}' is missing: ${diff.join(', ')}`,\n      );\n    }\n  }\n}\n\n// Return the different key-value pairs of the right object, by iterating through the keys in the left object\n// Note it won't return a difference where a key is missing in the left but exists the right.\nfunction lefthandObjectDiff(leftObj: Object, rightObj: Object): Object {\n  const differentKeys: {[string]: any | {...}} = {};\n\n  function compare(leftItem: any, rightItem: any, key: string) {\n    if (typeof leftItem !== typeof rightItem && leftItem != null) {\n      differentKeys[key] = rightItem;\n      return;\n    }\n\n    if (typeof leftItem === 'object') {\n      const objDiff = lefthandObjectDiff(leftItem, rightItem);\n      if (Object.keys(objDiff).length > 1) {\n        differentKeys[key] = objDiff;\n      }\n      return;\n    }\n\n    if (leftItem !== rightItem) {\n      differentKeys[key] = rightItem;\n      return;\n    }\n  }\n\n  for (const key in leftObj) {\n    if (IGNORED_KEYS.includes(key)) {\n      continue;\n    }\n\n    if (!rightObj) {\n      differentKeys[key] = {};\n    } else if (leftObj.hasOwnProperty(key)) {\n      compare(leftObj[key], rightObj[key], key);\n    }\n  }\n\n  return differentKeys;\n}\n\nexport function getConfigWithoutViewProps(\n  viewConfig: ViewConfig,\n  propName: string,\n): {...} {\n  if (!viewConfig[propName]) {\n    return {};\n  }\n\n  return Object.keys(viewConfig[propName])\n    .filter(prop => !PlatformBaseViewConfig[propName][prop])\n    .reduce<{[string]: any}>((obj, prop) => {\n      obj[prop] = viewConfig[propName][prop];\n      return obj;\n    }, {});\n}\n\nexport function stringifyViewConfig(viewConfig: any): string {\n  return JSON.stringify(\n    viewConfig,\n    (key, val) => {\n      if (typeof val === 'function') {\n        return `ƒ ${val.name}`;\n      }\n      return val;\n    },\n    2,\n  );\n}\n"],"names":["_flattenStyle","_interopRequireDefault","require","_TextAncestor","_ViewNativeComponent","React","e","r","__esModule","default","t","_getRequireWildcardCache","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","_interopRequireWildcard","_jsxRuntime","_excluded","WeakMap","View","forwardRef","_ref","forwardedRef","_ariaLabelledBy$split","_accessibilityState","_accessibilityValue","accessibilityElementsHidden","accessibilityLabel","accessibilityLabelledBy","accessibilityLiveRegion","accessibilityState","accessibilityValue","ariaBusy","ariaChecked","ariaDisabled","ariaExpanded","ariaHidden","ariaLabel","ariaLabelledBy","ariaLive","ariaSelected","ariaValueMax","ariaValueMin","ariaValueNow","ariaValueText","focusable","id","importantForAccessibility","nativeID","pointerEvents","tabIndex","otherProps","_objectWithoutProperties2","hasTextAncestor","useContext","TextAncestor","_accessibilityLabelledBy","split","busy","checked","disabled","expanded","selected","max","min","now","text","style","flattenStyle","newPointerEvents","actualView","jsx","assign","undefined","ref","Provider","value","children","displayName","module","exports","NativeComponentRegistry","_codegenNativeCommands","_Platform","__INTERNAL_VIEW_CONFIG","Platform","OS","uiViewClassName","validAttributes","removeClippedSubviews","accessible","hasTVPreferredFocus","nextFocusDown","nextFocusForward","nextFocusLeft","nextFocusRight","nextFocusUp","borderRadius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","borderTopStartRadius","borderTopEndRadius","borderBottomStartRadius","borderBottomEndRadius","borderEndEndRadius","borderEndStartRadius","borderStartEndRadius","borderStartStartRadius","borderStyle","hitSlop","nativeBackgroundAndroid","nativeForegroundAndroid","needsOffscreenAlphaCompositing","borderWidth","borderLeftWidth","borderRightWidth","borderTopWidth","borderBottomWidth","borderStartWidth","borderEndWidth","borderColor","process","borderLeftColor","borderRightColor","borderTopColor","borderBottomColor","borderStartColor","borderEndColor","borderBlockColor","borderBlockEndColor","borderBlockStartColor","overflow","backfaceVisibility","experimental_layoutConformance","ViewNativeComponent","codegenNativeCommands","supportedCommands","_ReactNativeStyleAttributes","_ViewConfigIgnore","directEventTypes","topAccessibilityAction","registrationName","onGestureHandlerEvent","DynamicallyInjectedByGestureHandler","onGestureHandlerStateChange","topContentSizeChange","topScrollBeginDrag","topMessage","topSelectionChange","topLoadingFinish","topMomentumScrollEnd","topLoadingStart","topLoadingError","topMomentumScrollBegin","topScrollEndDrag","topScroll","topLayout","validAttributesForNonEventProps","backgroundColor","transform","transformOrigin","opacity","elevation","shadowColor","zIndex","renderToHardwareTextureAndroid","testID","accessibilityHint","accessibilityRole","accessibilityCollection","accessibilityCollectionItem","accessibilityActions","role","rotation","scaleX","scaleY","translateX","translateY","width","minWidth","collapsable","maxWidth","height","minHeight","maxHeight","flex","flexGrow","rowGap","columnGap","gap","flexShrink","flexBasis","aspectRatio","flexDirection","flexWrap","alignSelf","alignItems","alignContent","justifyContent","display","margin","marginBlock","marginBlockEnd","marginBlockStart","marginBottom","marginEnd","marginHorizontal","marginInline","marginInlineEnd","marginInlineStart","marginLeft","marginRight","marginStart","marginTop","marginVertical","padding","paddingBlock","paddingBlockEnd","paddingBlockStart","paddingBottom","paddingEnd","paddingHorizontal","paddingInline","paddingInlineEnd","paddingInlineStart","paddingLeft","paddingRight","paddingStart","paddingTop","paddingVertical","start","end","left","right","top","bottom","inset","insetBlock","insetBlockEnd","insetBlockStart","insetInline","insetInlineEnd","insetInlineStart","position","ReactNativeStyleAttributes","PlatformBaseViewConfigAndroid","bubblingEventTypes","topChange","phasedRegistrationNames","captured","bubbled","topSelect","topTouchEnd","topTouchCancel","topTouchStart","topTouchMove","topPointerCancel","topPointerDown","topPointerEnter","skipBubbling","topPointerLeave","topPointerMove","topPointerUp","topPointerOut","topPointerOver","topClick","onLayout","onMoveShouldSetResponder","onMoveShouldSetResponderCapture","onStartShouldSetResponder","onStartShouldSetResponderCapture","onResponderGrant","onResponderReject","onResponderStart","onResponderEnd","onResponderRelease","onResponderMove","onResponderTerminate","onResponderTerminationRequest","onShouldBlockNativeResponder","onTouchStart","onTouchMove","onTouchEnd","onTouchCancel","onClick","onPointerEnter","onPointerEnterCapture","onPointerLeave","onPointerLeaveCapture","onPointerMove","onPointerMoveCapture","onPointerOut","onPointerOutCapture","onPointerOver","onPointerOverCapture","name","viewConfigProvider","getRuntimeConfig","invariant","UIManager","getViewManagerConfig","hasNativeViewConfig","FallbackNativeComponent","props","runtimeConfigProvider","_getRuntimeConfig2","native","_getNativeComponentAttributes","_UIManager","ReactNativeViewConfigRegistry","_verifyComponentAttributeEquivalence","StaticViewConfigValidator","_ViewConfig","_invariant","register","_getRuntimeConfig","viewConfig","global","RN$Bridgeless","strict","verify","createViewConfig","getNativeComponentAttributes","nativeViewConfig","staticViewConfig","validationOutput","validate","type","console","error","stringifyValidationResult","verifyComponentAttributeEquivalence","PlatformBaseViewConfig","BaseViewConfig","validationResult","differences","concat","_toConsumableArray2","map","difference","path","join","accumulateDifferences","length","nativeObject","staticObject","nativeKey","nativeValue","staticValue","nativeValueIfObject","ifObject","staticValueIfObject","push","pop","staticKey","isIgnored","Array","isArray","partialViewConfig","Commands","composeIndexers","_PlatformBaseViewConfig","maybeA","maybeB","object","ignoredViewConfigProps","add","WeakSet","_View","_StyleSheet","_RootTag","styles","StyleSheet","create","root","fabric","initialProps","rootTag","showArchitectureIndicator","WrapperComponent","innerView","RootTagContext","createRootTag","AppContainer","createContext","viewConfigs","callback","viewConfigCallbacks","test","__DEV__","topLevelType","customBubblingEventTypes","customDirectEventTypes","processEventTypes","Map","PixelRatio","flatten","hairlineWidth","roundToNearestPixel","absoluteFill","absoluteFillObject","compose","style1","style2","setStyleAttributePreprocessor","property","obj","result","styleLength","computedStyle","key","TextAncestorContext","dispatchCommand","options","commandObj","forEach","command","_len","arguments","args","_key","prop","diff","keys","lefthandObjectDiff","_staticViewConfig$uiV","propName","filter","reduce","JSON","stringify","val","IGNORED_KEYS","leftObj","rightObj","differentKeys","compare","leftItem","rightItem","objDiff","includes"],"sourceRoot":""}