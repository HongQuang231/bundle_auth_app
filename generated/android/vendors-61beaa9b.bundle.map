{"version":3,"file":"vendors-61beaa9b.bundle","mappings":"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","sources":["webpack:///./node_modules/react-native-reanimated/src/Animated.ts","webpack:///./node_modules/react-native-reanimated/src/ConfigHelper.ts","webpack:///./node_modules/react-native-reanimated/src/animationBuilder.tsx","webpack:///./node_modules/react-native-reanimated/src/createAnimatedComponent/InlinePropManager.ts","webpack:///./node_modules/react-native-reanimated/src/createAnimatedComponent/JSPropsUpdater.ts","webpack:///./node_modules/react-native-reanimated/src/createAnimatedComponent/PropsFilter.tsx","webpack:///./node_modules/react-native-reanimated/src/createAnimatedComponent/createAnimatedComponent.tsx","webpack:///./node_modules/react-native-reanimated/src/createAnimatedComponent/getViewInfo.ts","webpack:///./node_modules/react-native-reanimated/src/createAnimatedComponent/index.ts","webpack:///./node_modules/react-native-reanimated/src/createAnimatedComponent/setAndForwardRef.ts","webpack:///./node_modules/react-native-reanimated/src/createAnimatedComponent/utils.ts","webpack:///./node_modules/react-native-reanimated/src/index.ts"],"sourcesContent":["'use strict';\nimport type { Extrapolate as _Extrapolate } from './reanimated2/interpolateColor';\nimport type { SharedValue as _SharedValue } from './reanimated2/commonTypes';\nimport type { DerivedValue as _DerivedValue } from './reanimated2/hook/useDerivedValue';\nimport type {\n  TransformStyleTypes as _TransformStyleTypes,\n  Adaptable as _Adaptable,\n  AdaptTransforms as _AdaptTransforms,\n  AnimatedTransform as _AnimatedTransform,\n  AnimateStyle as _AnimateStyle,\n  StylesOrDefault as _StylesOrDefault,\n  AnimateProps as _AnimateProps,\n} from './reanimated2/helperTypes';\nimport type { EasingFunction as _EasingFunction } from './reanimated2/Easing';\n\nimport type { AnimatedScrollViewProps as _AnimatedScrollViewProps } from './reanimated2/component/ScrollView';\nimport type { FlatListPropsWithLayout as _FlatListPropsWithLayout } from './reanimated2/component/FlatList';\n\nexport { createAnimatedComponent } from './createAnimatedComponent';\nexport { AnimatedText as Text } from './reanimated2/component/Text';\nexport { AnimatedView as View } from './reanimated2/component/View';\nexport { AnimatedScrollView as ScrollView } from './reanimated2/component/ScrollView';\nexport { AnimatedImage as Image } from './reanimated2/component/Image';\nexport { ReanimatedFlatList as FlatList } from './reanimated2/component/FlatList';\nexport {\n  addWhitelistedNativeProps,\n  addWhitelistedUIProps,\n} from './ConfigHelper';\n/**\n * @deprecated Please import `Extrapolate` directly from `react-native-reanimated` instead of `Animated` namespace.\n */\nexport type Extrapolate = typeof _Extrapolate;\n/**\n * @deprecated Please import `SharedValue` directly from `react-native-reanimated` instead of `Animated` namespace.\n */\n\nexport type SharedValue<T> = _SharedValue<T>;\n/**\n * @deprecated Please import `DerivedValue` directly from `react-native-reanimated` instead of `Animated` namespace.\n */\nexport type DerivedValue<T> = _DerivedValue<T>;\n/**\n * @deprecated Please import `Adaptable` directly from `react-native-reanimated` instead of `Animated` namespace.\n */\nexport type Adaptable<T> = _Adaptable<T>;\n/**\n * @deprecated Please import `TransformStyleTypes` directly from `react-native-reanimated` instead of `Animated` namespace.\n * */\nexport type TransformStyleTypes = _TransformStyleTypes;\n/**\n * @deprecated Please import `AdaptTransforms` directly from `react-native-reanimated` instead of `Animated` namespace.\n * */\nexport type AdaptTransforms<T> = _AdaptTransforms<T>;\n/**\n * @deprecated Please import `AnimatedTransform` directly from `react-native-reanimated` instead of `Animated` namespace.\n */\nexport type AnimatedTransform = _AnimatedTransform;\n/**\n * @deprecated Please import `AnimateStyle` directly from `react-native-reanimated` instead of `Animated` namespace.\n * */\nexport type AnimateStyle<S> = _AnimateStyle<S>;\n/**\n * @deprecated Please import `StylesOrDefault` directly from `react-native-reanimated` instead of `Animated` namespace.\n * */\nexport type StylesOrDefault<S> = _StylesOrDefault<S>;\n/**\n * @deprecated Please import `AnimateProps` directly from `react-native-reanimated` instead of `Animated` namespace.\n * */\nexport type AnimateProps<P extends object> = _AnimateProps<P>;\n/**\n * @deprecated Please import `EasingFunction` directly from `react-native-reanimated` instead of `Animated` namespace.\n * */\nexport type EasingFunction = _EasingFunction;\n/**\n * @deprecated Please import `AnimatedScrollViewProps` directly from `react-native-reanimated` instead of `Animated` namespace.\n * */\nexport type AnimatedScrollViewProps = _AnimatedScrollViewProps;\n/**\n * @deprecated Please import `FlatListPropsWithLayout` directly from `react-native-reanimated` instead of `Animated` namespace.\n * */\nexport type FlatListPropsWithLayout<T> = _FlatListPropsWithLayout<T>;\n","'use strict';\nimport { PropsAllowlists } from './propsAllowlists';\nimport { jsiConfigureProps } from './reanimated2/core';\nfunction assertNoOverlapInLists() {\n  for (const key in PropsAllowlists.NATIVE_THREAD_PROPS_WHITELIST) {\n    if (key in PropsAllowlists.UI_THREAD_PROPS_WHITELIST) {\n      throw new Error(\n        `[Reanimated] Property \\`${key}\\` was whitelisted both as UI and native prop. Please remove it from one of the lists.`\n      );\n    }\n  }\n}\n\nexport function configureProps(): void {\n  assertNoOverlapInLists();\n  jsiConfigureProps(\n    Object.keys(PropsAllowlists.UI_THREAD_PROPS_WHITELIST),\n    Object.keys(PropsAllowlists.NATIVE_THREAD_PROPS_WHITELIST)\n  );\n}\n\nexport function addWhitelistedNativeProps(\n  props: Record<string, boolean>\n): void {\n  const oldSize = Object.keys(\n    PropsAllowlists.NATIVE_THREAD_PROPS_WHITELIST\n  ).length;\n  PropsAllowlists.NATIVE_THREAD_PROPS_WHITELIST = {\n    ...PropsAllowlists.NATIVE_THREAD_PROPS_WHITELIST,\n    ...props,\n  };\n  if (\n    oldSize !==\n    Object.keys(PropsAllowlists.NATIVE_THREAD_PROPS_WHITELIST).length\n  ) {\n    configureProps();\n  }\n}\n\nexport function addWhitelistedUIProps(props: Record<string, boolean>): void {\n  const oldSize = Object.keys(PropsAllowlists.UI_THREAD_PROPS_WHITELIST).length;\n  PropsAllowlists.UI_THREAD_PROPS_WHITELIST = {\n    ...PropsAllowlists.UI_THREAD_PROPS_WHITELIST,\n    ...props,\n  };\n  if (\n    oldSize !== Object.keys(PropsAllowlists.UI_THREAD_PROPS_WHITELIST).length\n  ) {\n    configureProps();\n  }\n}\n\nconst PROCESSED_VIEW_NAMES = new Set();\n\nexport interface ViewConfig {\n  uiViewClassName: string;\n  validAttributes: Record<string, unknown>;\n}\n/**\n * updates UI props whitelist for given view host instance\n * this will work just once for every view name\n */\n\nexport function adaptViewConfig(viewConfig: ViewConfig): void {\n  const viewName = viewConfig.uiViewClassName;\n  const props = viewConfig.validAttributes;\n\n  // update whitelist of UI props for this view name only once\n  if (!PROCESSED_VIEW_NAMES.has(viewName)) {\n    const propsToAdd: Record<string, boolean> = {};\n    Object.keys(props).forEach((key) => {\n      // we don't want to add native props as they affect layout\n      // we also skip props which repeat here\n      if (\n        !(key in PropsAllowlists.NATIVE_THREAD_PROPS_WHITELIST) &&\n        !(key in PropsAllowlists.UI_THREAD_PROPS_WHITELIST)\n      ) {\n        propsToAdd[key] = true;\n      }\n    });\n    addWhitelistedUIProps(propsToAdd);\n\n    PROCESSED_VIEW_NAMES.add(viewName);\n  }\n}\n\nconfigureProps();\n","'use strict';\nimport type {\n  ILayoutAnimationBuilder,\n  LayoutAnimationFunction,\n  LayoutAnimationsValues,\n} from './reanimated2/layoutReanimation';\nimport type { StyleProps } from './reanimated2/commonTypes';\nimport type { NestedArray } from './createAnimatedComponent/commonTypes';\n\nconst mockTargetValues: LayoutAnimationsValues = {\n  targetOriginX: 0,\n  targetOriginY: 0,\n  targetWidth: 0,\n  targetHeight: 0,\n  targetGlobalOriginX: 0,\n  targetGlobalOriginY: 0,\n  targetBorderRadius: 0,\n  windowWidth: 0,\n  windowHeight: 0,\n  currentOriginX: 0,\n  currentOriginY: 0,\n  currentWidth: 0,\n  currentHeight: 0,\n  currentGlobalOriginX: 0,\n  currentGlobalOriginY: 0,\n  currentBorderRadius: 0,\n};\n\nfunction getCommonProperties(\n  layoutStyle: StyleProps,\n  componentStyle: StyleProps | Array<StyleProps>\n) {\n  let componentStyleFlat = Array.isArray(componentStyle)\n    ? componentStyle.flat()\n    : [componentStyle];\n\n  componentStyleFlat = componentStyleFlat.filter(Boolean);\n\n  componentStyleFlat = componentStyleFlat.map((style) =>\n    'initial' in style\n      ? style.initial.value // Include properties of animated style\n      : style\n  );\n\n  const componentStylesKeys = componentStyleFlat.flatMap((style) =>\n    Object.keys(style)\n  );\n\n  const commonKeys = Object.keys(layoutStyle).filter((key) =>\n    componentStylesKeys.includes(key)\n  );\n\n  return commonKeys;\n}\n\nfunction maybeReportOverwrittenProperties(\n  layoutAnimationStyle: StyleProps,\n  style: NestedArray<StyleProps>,\n  displayName: string\n) {\n  const commonProperties = getCommonProperties(layoutAnimationStyle, style);\n\n  if (commonProperties.length > 0) {\n    console.warn(\n      `[Reanimated] ${\n        commonProperties.length === 1 ? 'Property' : 'Properties'\n      } \"${commonProperties.join(\n        ', '\n      )}\" of ${displayName} may be overwritten by a layout animation. Please wrap your component with an animated view and apply the layout animation on the wrapper.`\n    );\n  }\n}\n\nexport function maybeBuild(\n  layoutAnimationOrBuilder:\n    | ILayoutAnimationBuilder\n    | LayoutAnimationFunction\n    | Keyframe,\n  style: NestedArray<StyleProps> | undefined,\n  displayName: string\n): LayoutAnimationFunction | Keyframe {\n  const isAnimationBuilder = (\n    value: ILayoutAnimationBuilder | LayoutAnimationFunction | Keyframe\n  ): value is ILayoutAnimationBuilder =>\n    'build' in layoutAnimationOrBuilder &&\n    typeof layoutAnimationOrBuilder.build === 'function';\n\n  if (isAnimationBuilder(layoutAnimationOrBuilder)) {\n    const animationFactory = layoutAnimationOrBuilder.build();\n\n    if (__DEV__ && style) {\n      const layoutAnimation = animationFactory(mockTargetValues);\n      maybeReportOverwrittenProperties(\n        layoutAnimation.animations,\n        style,\n        displayName\n      );\n    }\n\n    return animationFactory;\n  } else {\n    return layoutAnimationOrBuilder;\n  }\n}\n","'use strict';\nimport type { StyleProps } from '../reanimated2';\nimport type {\n  IAnimatedComponentInternal,\n  AnimatedComponentProps,\n  IInlinePropManager,\n  ViewInfo,\n} from './commonTypes';\nimport { flattenArray } from './utils';\nimport { makeViewDescriptorsSet } from '../reanimated2/ViewDescriptorsSet';\nimport type {\n  ViewDescriptorsSet,\n  ViewRefSet,\n} from '../reanimated2/ViewDescriptorsSet';\nimport { adaptViewConfig } from '../ConfigHelper';\nimport updateProps from '../reanimated2/UpdateProps';\nimport { stopMapper, startMapper } from '../reanimated2/mappers';\nimport { isSharedValue } from '../reanimated2/isSharedValue';\nimport { shouldBeUseWeb } from '../reanimated2/PlatformChecker';\n\nconst SHOULD_BE_USE_WEB = shouldBeUseWeb();\n\nfunction isInlineStyleTransform(transform: unknown): boolean {\n  if (!Array.isArray(transform)) {\n    return false;\n  }\n\n  return transform.some((t: Record<string, unknown>) => hasInlineStyles(t));\n}\n\nfunction inlinePropsHasChanged(\n  styles1: StyleProps,\n  styles2: StyleProps\n): boolean {\n  if (Object.keys(styles1).length !== Object.keys(styles2).length) {\n    return true;\n  }\n\n  for (const key of Object.keys(styles1)) {\n    if (styles1[key] !== styles2[key]) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction getInlinePropsUpdate(inlineProps: Record<string, unknown>) {\n  'worklet';\n  const update: Record<string, unknown> = {};\n  for (const [key, styleValue] of Object.entries(inlineProps)) {\n    if (isSharedValue(styleValue)) {\n      update[key] = styleValue.value;\n    } else if (Array.isArray(styleValue)) {\n      update[key] = styleValue.map((item) => {\n        return getInlinePropsUpdate(item);\n      });\n    } else if (typeof styleValue === 'object') {\n      update[key] = getInlinePropsUpdate(styleValue as Record<string, unknown>);\n    } else {\n      update[key] = styleValue;\n    }\n  }\n  return update;\n}\n\nfunction extractSharedValuesMapFromProps(\n  props: AnimatedComponentProps<\n    Record<string, unknown> /* Initial component props */\n  >\n): Record<string, unknown> {\n  const inlineProps: Record<string, unknown> = {};\n\n  for (const key in props) {\n    const value = props[key];\n    if (key === 'style') {\n      const styles = flattenArray<StyleProps>(props.style ?? []);\n      styles.forEach((style) => {\n        if (!style) {\n          return;\n        }\n        for (const [styleKey, styleValue] of Object.entries(style)) {\n          if (isSharedValue(styleValue)) {\n            inlineProps[styleKey] = styleValue;\n          } else if (\n            styleKey === 'transform' &&\n            isInlineStyleTransform(styleValue)\n          ) {\n            inlineProps[styleKey] = styleValue;\n          }\n        }\n      });\n    } else if (isSharedValue(value)) {\n      inlineProps[key] = value;\n    }\n  }\n\n  return inlineProps;\n}\n\nexport function hasInlineStyles(style: StyleProps): boolean {\n  if (!style) {\n    return false;\n  }\n  return Object.keys(style).some((key) => {\n    const styleValue = style[key];\n    return (\n      isSharedValue(styleValue) ||\n      (key === 'transform' && isInlineStyleTransform(styleValue))\n    );\n  });\n}\n\nexport function getInlineStyle(\n  style: Record<string, unknown>,\n  shouldGetInitialStyle: boolean\n) {\n  if (shouldGetInitialStyle) {\n    return getInlinePropsUpdate(style);\n  }\n  const newStyle: StyleProps = {};\n  for (const [key, styleValue] of Object.entries(style)) {\n    if (\n      !isSharedValue(styleValue) &&\n      !(key === 'transform' && isInlineStyleTransform(styleValue))\n    ) {\n      newStyle[key] = styleValue;\n    }\n  }\n  return newStyle;\n}\n\nexport class InlinePropManager implements IInlinePropManager {\n  _inlinePropsViewDescriptors: ViewDescriptorsSet | null = null;\n  _inlinePropsMapperId: number | null = null;\n  _inlineProps: StyleProps = {};\n\n  public attachInlineProps(\n    animatedComponent: React.Component<unknown, unknown> &\n      IAnimatedComponentInternal,\n    viewInfo: ViewInfo\n  ) {\n    const newInlineProps: Record<string, unknown> =\n      extractSharedValuesMapFromProps(animatedComponent.props);\n    const hasChanged = inlinePropsHasChanged(newInlineProps, this._inlineProps);\n\n    if (hasChanged) {\n      if (!this._inlinePropsViewDescriptors) {\n        this._inlinePropsViewDescriptors = makeViewDescriptorsSet();\n\n        const { viewTag, viewName, shadowNodeWrapper, viewConfig } = viewInfo;\n\n        if (Object.keys(newInlineProps).length && viewConfig) {\n          adaptViewConfig(viewConfig);\n        }\n\n        this._inlinePropsViewDescriptors.add({\n          tag: viewTag as number,\n          name: viewName!,\n          shadowNodeWrapper: shadowNodeWrapper!,\n        });\n      }\n      const shareableViewDescriptors =\n        this._inlinePropsViewDescriptors.shareableViewDescriptors;\n\n      const maybeViewRef = SHOULD_BE_USE_WEB\n        ? ({ items: new Set([animatedComponent]) } as ViewRefSet<unknown>) // see makeViewsRefSet\n        : undefined;\n      const updaterFunction = () => {\n        'worklet';\n        const update = getInlinePropsUpdate(newInlineProps);\n        updateProps(shareableViewDescriptors, update, maybeViewRef);\n      };\n      this._inlineProps = newInlineProps;\n      if (this._inlinePropsMapperId) {\n        stopMapper(this._inlinePropsMapperId);\n      }\n      this._inlinePropsMapperId = null;\n      if (Object.keys(newInlineProps).length) {\n        this._inlinePropsMapperId = startMapper(\n          updaterFunction,\n          Object.values(newInlineProps)\n        );\n      }\n    }\n  }\n\n  public detachInlineProps() {\n    if (this._inlinePropsMapperId) {\n      stopMapper(this._inlinePropsMapperId);\n    }\n  }\n}\n","'use strict';\nimport { NativeEventEmitter, Platform, findNodeHandle } from 'react-native';\nimport type { NativeModule } from 'react-native';\nimport { shouldBeUseWeb } from '../reanimated2/PlatformChecker';\nimport type { StyleProps } from '../reanimated2';\nimport { runOnJS, runOnUIImmediately } from '../reanimated2/threads';\nimport type {\n  AnimatedComponentProps,\n  IAnimatedComponentInternal,\n  IJSPropsUpdater,\n  InitialComponentProps,\n} from './commonTypes';\nimport NativeReanimatedModule from '../specs/NativeReanimatedModule';\n\ninterface ListenerData {\n  viewTag: number;\n  props: StyleProps;\n}\n\nconst SHOULD_BE_USE_WEB = shouldBeUseWeb();\n\nclass JSPropsUpdaterPaper implements IJSPropsUpdater {\n  private static _tagToComponentMapping = new Map();\n  private _reanimatedEventEmitter: NativeEventEmitter;\n\n  constructor() {\n    this._reanimatedEventEmitter = new NativeEventEmitter(\n      // NativeEventEmitter only uses this parameter on iOS.\n      Platform.OS === 'ios'\n        ? (NativeReanimatedModule as unknown as NativeModule)\n        : undefined\n    );\n  }\n\n  public addOnJSPropsChangeListener(\n    animatedComponent: React.Component<\n      AnimatedComponentProps<InitialComponentProps>\n    > &\n      IAnimatedComponentInternal\n  ) {\n    const viewTag = findNodeHandle(animatedComponent);\n    JSPropsUpdaterPaper._tagToComponentMapping.set(viewTag, animatedComponent);\n    if (JSPropsUpdaterPaper._tagToComponentMapping.size === 1) {\n      const listener = (data: ListenerData) => {\n        const component = JSPropsUpdaterPaper._tagToComponentMapping.get(\n          data.viewTag\n        );\n        component?._updateFromNative(data.props);\n      };\n      this._reanimatedEventEmitter.addListener(\n        'onReanimatedPropsChange',\n        listener\n      );\n    }\n  }\n\n  public removeOnJSPropsChangeListener(\n    animatedComponent: React.Component<\n      AnimatedComponentProps<InitialComponentProps>\n    > &\n      IAnimatedComponentInternal\n  ) {\n    const viewTag = findNodeHandle(animatedComponent);\n    JSPropsUpdaterPaper._tagToComponentMapping.delete(viewTag);\n    if (JSPropsUpdaterPaper._tagToComponentMapping.size === 0) {\n      this._reanimatedEventEmitter.removeAllListeners(\n        'onReanimatedPropsChange'\n      );\n    }\n  }\n}\n\nclass JSPropsUpdaterFabric implements IJSPropsUpdater {\n  private static _tagToComponentMapping = new Map();\n  private static isInitialized = false;\n\n  constructor() {\n    if (!JSPropsUpdaterFabric.isInitialized) {\n      const updater = (viewTag: number, props: unknown) => {\n        const component =\n          JSPropsUpdaterFabric._tagToComponentMapping.get(viewTag);\n        component?._updateFromNative(props);\n      };\n      runOnUIImmediately(() => {\n        'worklet';\n        global.updateJSProps = (viewTag: number, props: unknown) => {\n          runOnJS(updater)(viewTag, props);\n        };\n      })();\n      JSPropsUpdaterFabric.isInitialized = true;\n    }\n  }\n\n  public addOnJSPropsChangeListener(\n    animatedComponent: React.Component<\n      AnimatedComponentProps<InitialComponentProps>\n    > &\n      IAnimatedComponentInternal\n  ) {\n    if (!JSPropsUpdaterFabric.isInitialized) {\n      return;\n    }\n    const viewTag = findNodeHandle(animatedComponent);\n    JSPropsUpdaterFabric._tagToComponentMapping.set(viewTag, animatedComponent);\n  }\n\n  public removeOnJSPropsChangeListener(\n    animatedComponent: React.Component<\n      AnimatedComponentProps<InitialComponentProps>\n    > &\n      IAnimatedComponentInternal\n  ) {\n    if (!JSPropsUpdaterFabric.isInitialized) {\n      return;\n    }\n    const viewTag = findNodeHandle(animatedComponent);\n    JSPropsUpdaterFabric._tagToComponentMapping.delete(viewTag);\n  }\n}\n\nclass JSPropsUpdaterWeb implements IJSPropsUpdater {\n  public addOnJSPropsChangeListener(\n    _animatedComponent: React.Component<\n      AnimatedComponentProps<InitialComponentProps>\n    > &\n      IAnimatedComponentInternal\n  ) {\n    // noop\n  }\n\n  public removeOnJSPropsChangeListener(\n    _animatedComponent: React.Component<\n      AnimatedComponentProps<InitialComponentProps>\n    > &\n      IAnimatedComponentInternal\n  ) {\n    // noop\n  }\n}\n\ntype JSPropsUpdaterOptions =\n  | typeof JSPropsUpdaterWeb\n  | typeof JSPropsUpdaterFabric\n  | typeof JSPropsUpdaterPaper;\n\nlet JSPropsUpdater: JSPropsUpdaterOptions;\nif (SHOULD_BE_USE_WEB) {\n  JSPropsUpdater = JSPropsUpdaterWeb;\n} else if (global._IS_FABRIC) {\n  JSPropsUpdater = JSPropsUpdaterFabric;\n} else {\n  JSPropsUpdater = JSPropsUpdaterPaper;\n}\n\nexport default JSPropsUpdater;\n","'use strict';\n\nimport { shallowEqual } from '../reanimated2/hook/utils';\nimport type { StyleProps } from '../reanimated2/commonTypes';\nimport { isSharedValue } from '../reanimated2/isSharedValue';\nimport { isChromeDebugger } from '../reanimated2/PlatformChecker';\nimport { WorkletEventHandler } from '../reanimated2/WorkletEventHandler';\nimport { initialUpdaterRun } from '../reanimated2/animation';\nimport { hasInlineStyles, getInlineStyle } from './InlinePropManager';\nimport type {\n  AnimatedComponentProps,\n  AnimatedProps,\n  InitialComponentProps,\n  IAnimatedComponentInternal,\n  IPropsFilter,\n} from './commonTypes';\nimport { flattenArray, has } from './utils';\nimport { StyleSheet } from 'react-native';\n\nfunction dummyListener() {\n  // empty listener we use to assign to listener properties for which animated\n  // event is used.\n}\n\nexport class PropsFilter implements IPropsFilter {\n  private _initialStyle = {};\n  private _previousProps: React.Component['props'] | null = null;\n  private _requiresNewInitials = true;\n\n  public filterNonAnimatedProps(\n    component: React.Component<unknown, unknown> & IAnimatedComponentInternal\n  ): Record<string, unknown> {\n    const inputProps =\n      component.props as AnimatedComponentProps<InitialComponentProps>;\n\n    this._maybePrepareForNewInitials(inputProps);\n\n    const props: Record<string, unknown> = {};\n    for (const key in inputProps) {\n      const value = inputProps[key];\n      if (key === 'style') {\n        const styleProp = inputProps.style;\n        const styles = flattenArray<StyleProps>(styleProp ?? []);\n        if (this._requiresNewInitials) {\n          this._initialStyle = {};\n        }\n        const processedStyle: StyleProps = styles.map((style) => {\n          if (style && style.viewDescriptors) {\n            // this is how we recognize styles returned by useAnimatedStyle\n            // TODO - refactor, since `viewsRef` is only present on Web\n            style.viewsRef?.add(component);\n            if (this._requiresNewInitials) {\n              this._initialStyle = {\n                ...style.initial.value,\n                ...this._initialStyle,\n                ...initialUpdaterRun<StyleProps>(style.initial.updater),\n              };\n            }\n            return this._initialStyle;\n          } else if (hasInlineStyles(style)) {\n            return getInlineStyle(style, this._requiresNewInitials);\n          } else {\n            return style;\n          }\n        });\n        props[key] = StyleSheet.flatten(processedStyle);\n      } else if (key === 'animatedProps') {\n        const animatedProp = inputProps.animatedProps as Partial<\n          AnimatedComponentProps<AnimatedProps>\n        >;\n        if (animatedProp.initial !== undefined) {\n          Object.keys(animatedProp.initial.value).forEach((initialValueKey) => {\n            props[initialValueKey] =\n              animatedProp.initial?.value[initialValueKey];\n            // TODO - refacotr, since `viewsRef` is only present on Web\n            animatedProp.viewsRef?.add(component);\n          });\n        }\n      } else if (\n        has('workletEventHandler', value) &&\n        value.workletEventHandler instanceof WorkletEventHandler\n      ) {\n        if (value.workletEventHandler.eventNames.length > 0) {\n          value.workletEventHandler.eventNames.forEach((eventName) => {\n            props[eventName] = has('listeners', value.workletEventHandler)\n              ? (\n                  value.workletEventHandler.listeners as Record<string, unknown>\n                )[eventName]\n              : dummyListener;\n          });\n        } else {\n          props[key] = dummyListener;\n        }\n      } else if (isSharedValue(value)) {\n        if (this._requiresNewInitials) {\n          props[key] = value.value;\n        }\n      } else if (key !== 'onGestureHandlerStateChange' || !isChromeDebugger()) {\n        props[key] = value;\n      }\n    }\n    this._requiresNewInitials = false;\n    return props;\n  }\n\n  private _maybePrepareForNewInitials(\n    inputProps: AnimatedComponentProps<InitialComponentProps>\n  ) {\n    if (this._previousProps && inputProps.style) {\n      this._requiresNewInitials = !shallowEqual(\n        this._previousProps,\n        inputProps\n      );\n    }\n    this._previousProps = inputProps;\n  }\n}\n","'use strict';\nimport type {\n  Component,\n  ComponentClass,\n  ComponentType,\n  FunctionComponent,\n  MutableRefObject,\n} from 'react';\nimport React from 'react';\nimport { findNodeHandle, Platform } from 'react-native';\nimport { WorkletEventHandler } from '../reanimated2/WorkletEventHandler';\nimport '../reanimated2/layoutReanimation/animationsManager';\nimport invariant from 'invariant';\nimport { adaptViewConfig } from '../ConfigHelper';\nimport { RNRenderer } from '../reanimated2/platform-specific/RNRenderer';\nimport { enableLayoutAnimations } from '../reanimated2/core';\nimport {\n  SharedTransition,\n  LayoutAnimationType,\n} from '../reanimated2/layoutReanimation';\nimport type { StyleProps, ShadowNodeWrapper } from '../reanimated2/commonTypes';\nimport { getShadowNodeWrapperFromRef } from '../reanimated2/fabricUtils';\nimport { removeFromPropsRegistry } from '../reanimated2/PropsRegistry';\nimport { getReduceMotionFromConfig } from '../reanimated2/animation/util';\nimport { maybeBuild } from '../animationBuilder';\nimport { SkipEnteringContext } from '../reanimated2/component/LayoutAnimationConfig';\nimport type { AnimateProps } from '../reanimated2';\nimport JSPropsUpdater from './JSPropsUpdater';\nimport type {\n  AnimatedComponentProps,\n  AnimatedProps,\n  InitialComponentProps,\n  AnimatedComponentRef,\n  IAnimatedComponentInternal,\n  ViewInfo,\n} from './commonTypes';\nimport { has, flattenArray } from './utils';\nimport setAndForwardRef from './setAndForwardRef';\nimport {\n  isFabric,\n  isJest,\n  isWeb,\n  shouldBeUseWeb,\n} from '../reanimated2/PlatformChecker';\nimport { InlinePropManager } from './InlinePropManager';\nimport { PropsFilter } from './PropsFilter';\nimport {\n  startWebLayoutAnimation,\n  tryActivateLayoutTransition,\n  configureWebLayoutAnimations,\n  getReducedMotionFromConfig,\n  saveSnapshot,\n} from '../reanimated2/layoutReanimation/web';\nimport { updateLayoutAnimations } from '../reanimated2/UpdateLayoutAnimations';\nimport type { CustomConfig } from '../reanimated2/layoutReanimation/web/config';\nimport type { FlatList, FlatListProps } from 'react-native';\nimport { addHTMLMutationObserver } from '../reanimated2/layoutReanimation/web/domUtils';\nimport { getViewInfo } from './getViewInfo';\n\nconst IS_WEB = isWeb();\n\nif (IS_WEB) {\n  configureWebLayoutAnimations();\n}\n\nfunction onlyAnimatedStyles(styles: StyleProps[]): StyleProps[] {\n  return styles.filter((style) => style?.viewDescriptors);\n}\n\ntype Options<P> = {\n  setNativeProps: (ref: AnimatedComponentRef, props: P) => void;\n};\n\n/**\n * Lets you create an Animated version of any React Native component.\n *\n * @param component - The component you want to make animatable.\n * @returns A component that Reanimated is capable of animating.\n * @see https://docs.swmansion.com/react-native-reanimated/docs/core/createAnimatedComponent\n */\n\n// Don't change the order of overloads, since such a change breaks current behavior\nexport function createAnimatedComponent<P extends object>(\n  component: FunctionComponent<P>,\n  options?: Options<P>\n): FunctionComponent<AnimateProps<P>>;\n\nexport function createAnimatedComponent<P extends object>(\n  component: ComponentClass<P>,\n  options?: Options<P>\n): ComponentClass<AnimateProps<P>>;\n\nexport function createAnimatedComponent<P extends object>(\n  // Actually ComponentType<P = {}> = ComponentClass<P> | FunctionComponent<P> but we need this overload too\n  // since some external components (like FastImage) are typed just as ComponentType\n  component: ComponentType<P>,\n  options?: Options<P>\n): FunctionComponent<AnimateProps<P>> | ComponentClass<AnimateProps<P>>;\n\n/**\n * @deprecated Please use `Animated.FlatList` component instead of calling `Animated.createAnimatedComponent(FlatList)` manually.\n */\n// @ts-ignore This is required to create this overload, since type of createAnimatedComponent is incorrect and doesn't include typeof FlatList\nexport function createAnimatedComponent(\n  component: typeof FlatList<unknown>,\n  options?: Options<any>\n): ComponentClass<AnimateProps<FlatListProps<unknown>>>;\n\nexport function createAnimatedComponent(\n  Component: ComponentType<InitialComponentProps>,\n  options?: Options<InitialComponentProps>\n): any {\n  invariant(\n    typeof Component !== 'function' ||\n      (Component.prototype && Component.prototype.isReactComponent),\n    `Looks like you're passing a function component \\`${Component.name}\\` to \\`createAnimatedComponent\\` function which supports only class components. Please wrap your function component with \\`React.forwardRef()\\` or use a class component instead.`\n  );\n\n  class AnimatedComponent\n    extends React.Component<AnimatedComponentProps<InitialComponentProps>>\n    implements IAnimatedComponentInternal\n  {\n    _styles: StyleProps[] | null = null;\n    _animatedProps?: Partial<AnimatedComponentProps<AnimatedProps>>;\n    _componentViewTag = -1;\n    _eventViewTag = -1;\n    _isFirstRender = true;\n    jestAnimatedStyle: { value: StyleProps } = { value: {} };\n    _component: AnimatedComponentRef | HTMLElement | null = null;\n    _sharedElementTransition: SharedTransition | null = null;\n    _jsPropsUpdater = new JSPropsUpdater();\n    _InlinePropManager = new InlinePropManager();\n    _PropsFilter = new PropsFilter();\n    _viewInfo?: ViewInfo;\n    static displayName: string;\n    static contextType = SkipEnteringContext;\n    context!: React.ContextType<typeof SkipEnteringContext>;\n\n    constructor(props: AnimatedComponentProps<InitialComponentProps>) {\n      super(props);\n      if (isJest()) {\n        this.jestAnimatedStyle = { value: {} };\n      }\n    }\n\n    componentDidMount() {\n      this._setComponentViewTag();\n      this._setEventViewTag();\n      this._attachNativeEvents();\n      this._jsPropsUpdater.addOnJSPropsChangeListener(this);\n      this._attachAnimatedStyles();\n      this._InlinePropManager.attachInlineProps(this, this._getViewInfo());\n\n      const layout = this.props.layout;\n      if (layout) {\n        this._configureLayoutTransition();\n      }\n\n      if (IS_WEB) {\n        if (this.props.exiting) {\n          saveSnapshot(this._component as HTMLElement);\n        }\n\n        if (\n          !this.props.entering ||\n          getReducedMotionFromConfig(this.props.entering as CustomConfig)\n        ) {\n          this._isFirstRender = false;\n          return;\n        }\n\n        startWebLayoutAnimation(\n          this.props,\n          this._component as HTMLElement,\n          LayoutAnimationType.ENTERING\n        );\n      }\n\n      this._isFirstRender = false;\n    }\n\n    componentWillUnmount() {\n      this._detachNativeEvents();\n      this._jsPropsUpdater.removeOnJSPropsChangeListener(this);\n      this._detachStyles();\n      this._InlinePropManager.detachInlineProps();\n      if (this.props.sharedTransitionTag) {\n        this._configureSharedTransition(true);\n      }\n      this._sharedElementTransition?.unregisterTransition(\n        this._componentViewTag,\n        true\n      );\n\n      const exiting = this.props.exiting;\n      if (\n        IS_WEB &&\n        this._component &&\n        this.props.exiting &&\n        !getReducedMotionFromConfig(this.props.exiting as CustomConfig)\n      ) {\n        addHTMLMutationObserver();\n\n        startWebLayoutAnimation(\n          this.props,\n          this._component as HTMLElement,\n          LayoutAnimationType.EXITING\n        );\n      } else if (exiting) {\n        const reduceMotionInExiting =\n          'getReduceMotion' in exiting &&\n          typeof exiting.getReduceMotion === 'function'\n            ? getReduceMotionFromConfig(exiting.getReduceMotion())\n            : getReduceMotionFromConfig();\n        if (!reduceMotionInExiting) {\n          updateLayoutAnimations(\n            this._componentViewTag,\n            LayoutAnimationType.EXITING,\n            maybeBuild(\n              exiting,\n              this.props?.style,\n              AnimatedComponent.displayName\n            )\n          );\n        }\n      }\n    }\n\n    _setComponentViewTag() {\n      this._componentViewTag = this._getViewInfo().viewTag as number;\n    }\n\n    _setEventViewTag() {\n      // Setting the tag for registering events - since the event emitting view can be nested inside the main component\n      const componentAnimatedRef = this._component as AnimatedComponentRef;\n      if (componentAnimatedRef.getScrollableNode) {\n        const scrollableNode = componentAnimatedRef.getScrollableNode();\n        this._eventViewTag = findNodeHandle(scrollableNode) ?? -1;\n      } else {\n        this._eventViewTag =\n          findNodeHandle(\n            options?.setNativeProps ? this : componentAnimatedRef\n          ) ?? -1;\n      }\n    }\n\n    _attachNativeEvents() {\n      for (const key in this.props) {\n        const prop = this.props[key];\n        if (\n          has('workletEventHandler', prop) &&\n          prop.workletEventHandler instanceof WorkletEventHandler\n        ) {\n          prop.workletEventHandler.registerForEvents(this._eventViewTag, key);\n        }\n      }\n    }\n\n    _detachNativeEvents() {\n      for (const key in this.props) {\n        const prop = this.props[key];\n        if (\n          has('workletEventHandler', prop) &&\n          prop.workletEventHandler instanceof WorkletEventHandler\n        ) {\n          prop.workletEventHandler.unregisterFromEvents(this._eventViewTag);\n        }\n      }\n    }\n\n    _detachStyles() {\n      if (IS_WEB && this._styles !== null) {\n        for (const style of this._styles) {\n          style.viewsRef.remove(this);\n        }\n      } else if (this._componentViewTag !== -1 && this._styles !== null) {\n        for (const style of this._styles) {\n          style.viewDescriptors.remove(this._componentViewTag);\n        }\n        if (this.props.animatedProps?.viewDescriptors) {\n          this.props.animatedProps.viewDescriptors.remove(\n            this._componentViewTag\n          );\n        }\n        if (isFabric()) {\n          removeFromPropsRegistry(this._componentViewTag);\n        }\n      }\n    }\n\n    _updateNativeEvents(\n      prevProps: AnimatedComponentProps<InitialComponentProps>\n    ) {\n      for (const key in prevProps) {\n        const prevProp = prevProps[key];\n        if (\n          has('workletEventHandler', prevProp) &&\n          prevProp.workletEventHandler instanceof WorkletEventHandler\n        ) {\n          const newProp = this.props[key];\n          if (!newProp) {\n            // Prop got deleted\n            prevProp.workletEventHandler.unregisterFromEvents(\n              this._eventViewTag\n            );\n          } else if (\n            has('workletEventHandler', newProp) &&\n            newProp.workletEventHandler instanceof WorkletEventHandler &&\n            newProp.workletEventHandler !== prevProp.workletEventHandler\n          ) {\n            // Prop got changed\n            prevProp.workletEventHandler.unregisterFromEvents(\n              this._eventViewTag\n            );\n            newProp.workletEventHandler.registerForEvents(this._eventViewTag);\n          }\n        }\n      }\n\n      for (const key in this.props) {\n        const newProp = this.props[key];\n        if (\n          has('workletEventHandler', newProp) &&\n          newProp.workletEventHandler instanceof WorkletEventHandler &&\n          !prevProps[key]\n        ) {\n          // Prop got added\n          newProp.workletEventHandler.registerForEvents(this._eventViewTag);\n        }\n      }\n    }\n\n    _updateFromNative(props: StyleProps) {\n      if (options?.setNativeProps) {\n        options.setNativeProps(this._component as AnimatedComponentRef, props);\n      } else {\n        (this._component as AnimatedComponentRef)?.setNativeProps?.(props);\n      }\n    }\n\n    _getViewInfo(): ViewInfo {\n      if (this._viewInfo !== undefined) {\n        return this._viewInfo;\n      }\n\n      let viewTag: number | HTMLElement | null;\n      let viewName: string | null;\n      let shadowNodeWrapper: ShadowNodeWrapper | null = null;\n      let viewConfig;\n      // Component can specify ref which should be animated when animated version of the component is created.\n      // Otherwise, we animate the component itself.\n      const component = (this._component as AnimatedComponentRef)\n        ?.getAnimatableRef\n        ? (this._component as AnimatedComponentRef).getAnimatableRef?.()\n        : this;\n\n      if (IS_WEB) {\n        // At this point I assume that `_setComponentRef` was already called and `_component` is set.\n        // `this._component` on web represents HTMLElement of our component, that's why we use casting\n        viewTag = this._component as HTMLElement;\n        viewName = null;\n        shadowNodeWrapper = null;\n        viewConfig = null;\n      } else {\n        // hostInstance can be null for a component that doesn't render anything (render function returns null). Example: svg Stop: https://github.com/react-native-svg/react-native-svg/blob/develop/src/elements/Stop.tsx\n        const hostInstance = RNRenderer.findHostInstance_DEPRECATED(component);\n        if (!hostInstance) {\n          throw new Error(\n            '[Reanimated] Cannot find host instance for this component. Maybe it renders nothing?'\n          );\n        }\n\n        const viewInfo = getViewInfo(hostInstance);\n        viewTag = viewInfo.viewTag;\n        viewName = viewInfo.viewName;\n        viewConfig = viewInfo.viewConfig;\n        shadowNodeWrapper = isFabric()\n          ? getShadowNodeWrapperFromRef(this)\n          : null;\n      }\n      this._viewInfo = { viewTag, viewName, shadowNodeWrapper, viewConfig };\n      return this._viewInfo;\n    }\n\n    _attachAnimatedStyles() {\n      const styles = this.props.style\n        ? onlyAnimatedStyles(flattenArray<StyleProps>(this.props.style))\n        : [];\n      const prevStyles = this._styles;\n      this._styles = styles;\n\n      const prevAnimatedProps = this._animatedProps;\n      this._animatedProps = this.props.animatedProps;\n\n      const { viewTag, viewName, shadowNodeWrapper, viewConfig } =\n        this._getViewInfo();\n\n      // update UI props whitelist for this view\n      const hasReanimated2Props =\n        this.props.animatedProps?.viewDescriptors || styles.length;\n      if (hasReanimated2Props && viewConfig) {\n        adaptViewConfig(viewConfig);\n      }\n\n      this._componentViewTag = viewTag as number;\n\n      // remove old styles\n      if (prevStyles) {\n        // in most of the cases, views have only a single animated style and it remains unchanged\n        const hasOneSameStyle =\n          styles.length === 1 &&\n          prevStyles.length === 1 &&\n          styles[0] === prevStyles[0];\n\n        if (!hasOneSameStyle) {\n          // otherwise, remove each style that is not present in new styles\n          for (const prevStyle of prevStyles) {\n            const isPresent = styles.some((style) => style === prevStyle);\n            if (!isPresent) {\n              prevStyle.viewDescriptors.remove(viewTag);\n            }\n          }\n        }\n      }\n\n      styles.forEach((style) => {\n        style.viewDescriptors.add({\n          tag: viewTag,\n          name: viewName,\n          shadowNodeWrapper,\n        });\n        if (isJest()) {\n          /**\n           * We need to connect Jest's TestObject instance whose contains just props object\n           * with the updateProps() function where we update the properties of the component.\n           * We can't update props object directly because TestObject contains a copy of props - look at render function:\n           * const props = this._filterNonAnimatedProps(this.props);\n           */\n          this.jestAnimatedStyle.value = {\n            ...this.jestAnimatedStyle.value,\n            ...style.initial.value,\n          };\n          style.jestAnimatedStyle.current = this.jestAnimatedStyle;\n        }\n      });\n\n      // detach old animatedProps\n      if (prevAnimatedProps && prevAnimatedProps !== this.props.animatedProps) {\n        prevAnimatedProps.viewDescriptors!.remove(viewTag as number);\n      }\n\n      // attach animatedProps property\n      if (this.props.animatedProps?.viewDescriptors) {\n        this.props.animatedProps.viewDescriptors.add({\n          tag: viewTag as number,\n          name: viewName!,\n          shadowNodeWrapper: shadowNodeWrapper!,\n        });\n      }\n    }\n\n    componentDidUpdate(\n      prevProps: AnimatedComponentProps<InitialComponentProps>,\n      _prevState: Readonly<unknown>,\n      // This type comes straight from React\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      snapshot: DOMRect | null\n    ) {\n      const layout = this.props.layout;\n      const oldLayout = prevProps.layout;\n      if (layout !== oldLayout) {\n        this._configureLayoutTransition();\n      }\n      if (\n        this.props.sharedTransitionTag !== undefined ||\n        prevProps.sharedTransitionTag !== undefined\n      ) {\n        this._configureSharedTransition();\n      }\n      this._updateNativeEvents(prevProps);\n      this._attachAnimatedStyles();\n      this._InlinePropManager.attachInlineProps(this, this._getViewInfo());\n\n      if (IS_WEB && this.props.exiting) {\n        saveSnapshot(this._component as HTMLElement);\n      }\n\n      // Snapshot won't be undefined because it comes from getSnapshotBeforeUpdate method\n      if (\n        IS_WEB &&\n        snapshot !== null &&\n        this.props.layout &&\n        !getReducedMotionFromConfig(this.props.layout as CustomConfig)\n      ) {\n        tryActivateLayoutTransition(\n          this.props,\n          this._component as HTMLElement,\n          snapshot\n        );\n      }\n    }\n\n    _configureLayoutTransition() {\n      const layout = this.props.layout\n        ? maybeBuild(\n            this.props.layout,\n            undefined /* We don't have to warn user if style has common properties with animation for LAYOUT */,\n            AnimatedComponent.displayName\n          )\n        : undefined;\n      updateLayoutAnimations(\n        this._componentViewTag,\n        LayoutAnimationType.LAYOUT,\n        layout\n      );\n    }\n\n    _configureSharedTransition(isUnmounting = false) {\n      if (IS_WEB) {\n        return;\n      }\n      const { sharedTransitionTag } = this.props;\n      if (!sharedTransitionTag) {\n        this._sharedElementTransition?.unregisterTransition(\n          this._componentViewTag,\n          isUnmounting\n        );\n        this._sharedElementTransition = null;\n        return;\n      }\n      const sharedElementTransition =\n        this.props.sharedTransitionStyle ??\n        this._sharedElementTransition ??\n        new SharedTransition();\n      sharedElementTransition.registerTransition(\n        this._componentViewTag,\n        sharedTransitionTag,\n        isUnmounting\n      );\n      this._sharedElementTransition = sharedElementTransition;\n    }\n\n    _setComponentRef = setAndForwardRef<Component | HTMLElement>({\n      getForwardedRef: () =>\n        this.props.forwardedRef as MutableRefObject<\n          Component<Record<string, unknown>, Record<string, unknown>, unknown>\n        >,\n      setLocalRef: (ref) => {\n        // TODO update config\n\n        const tag = IS_WEB\n          ? (ref as HTMLElement)\n          : findNodeHandle(ref as Component);\n\n        this._componentViewTag = tag as number;\n\n        const { layout, entering, exiting, sharedTransitionTag } = this.props;\n        if (\n          (layout || entering || exiting || sharedTransitionTag) &&\n          tag != null\n        ) {\n          if (!shouldBeUseWeb()) {\n            enableLayoutAnimations(true, false);\n          }\n\n          if (sharedTransitionTag) {\n            this._configureSharedTransition();\n          }\n\n          const skipEntering = this.context?.current;\n          if (entering && !skipEntering) {\n            updateLayoutAnimations(\n              tag as number,\n              LayoutAnimationType.ENTERING,\n              maybeBuild(\n                entering,\n                this.props?.style,\n                AnimatedComponent.displayName\n              )\n            );\n          }\n        }\n\n        if (ref !== this._component) {\n          this._component = ref;\n        }\n      },\n    });\n\n    // This is a component lifecycle method from React, therefore we are not calling it directly.\n    // It is called before the component gets rerendered. This way we can access components' position before it changed\n    // and later on, in componentDidUpdate, calculate translation for layout transition.\n    getSnapshotBeforeUpdate() {\n      if (\n        IS_WEB &&\n        (this._component as HTMLElement)?.getBoundingClientRect !== undefined\n      ) {\n        return (this._component as HTMLElement).getBoundingClientRect();\n      }\n\n      return null;\n    }\n\n    render() {\n      const filteredProps = this._PropsFilter.filterNonAnimatedProps(this);\n\n      if (isJest()) {\n        filteredProps.jestAnimatedStyle = this.jestAnimatedStyle;\n      }\n\n      // Layout animations on web are set inside `componentDidMount` method, which is called after first render.\n      // Because of that we can encounter a situation in which component is visible for a short amount of time, and later on animation triggers.\n      // I've tested that on various browsers and devices and it did not happen to me. To be sure that it won't happen to someone else,\n      // I've decided to hide component at first render. Its visibility is reset in `componentDidMount`.\n      if (\n        this._isFirstRender &&\n        IS_WEB &&\n        filteredProps.entering &&\n        !getReducedMotionFromConfig(filteredProps.entering as CustomConfig)\n      ) {\n        filteredProps.style = {\n          ...(filteredProps.style ?? {}),\n          visibility: 'hidden', // Hide component until `componentDidMount` triggers\n        };\n      }\n\n      const platformProps = Platform.select({\n        web: {},\n        default: { collapsable: false },\n      });\n\n      return (\n        <Component\n          {...filteredProps}\n          // Casting is used here, because ref can be null - in that case it cannot be assigned to HTMLElement.\n          // After spending some time trying to figure out what to do with this problem, we decided to leave it this way\n          ref={this._setComponentRef as (ref: Component) => void}\n          {...platformProps}\n        />\n      );\n    }\n  }\n\n  AnimatedComponent.displayName = `AnimatedComponent(${\n    Component.displayName || Component.name || 'Component'\n  })`;\n\n  return React.forwardRef<Component>((props, ref) => {\n    return (\n      <AnimatedComponent\n        {...props}\n        {...(ref === null ? null : { forwardedRef: ref })}\n      />\n    );\n  });\n}\n","'use strict';\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\n// This is a makeshift solution to handle both 0.73 and 0.74 versions of React Native.\n\nexport let getViewInfo = (element: any) => {\n  if (element._nativeTag !== undefined && element.__nativeTag !== null) {\n    getViewInfo = getViewInfo73;\n    return getViewInfo73(element);\n  } else if (\n    element.__nativeTag !== undefined &&\n    element.__nativeTag !== null\n  ) {\n    getViewInfo = getViewInfoLatest;\n    return getViewInfoLatest(element);\n  }\n  return getViewInfo73(element);\n};\n\nfunction getViewInfo73(element: any) {\n  return {\n    // we can access view tag in the same way it's accessed here https://github.com/facebook/react/blob/e3f4eb7272d4ca0ee49f27577156b57eeb07cf73/packages/react-native-renderer/src/ReactFabric.js#L146\n    viewName: element?.viewConfig?.uiViewClassName,\n    /**\n     * RN uses viewConfig for components for storing different properties of the component(example: https://github.com/facebook/react-native/blob/main/packages/react-native/Libraries/Components/ScrollView/ScrollViewNativeComponent.js#L24).\n     * The name we're looking for is in the field named uiViewClassName.\n     */\n    viewTag: element?._nativeTag,\n    viewConfig: element?.viewConfig,\n  };\n}\n\nfunction getViewInfoLatest(element: any) {\n  return {\n    viewName: element?._viewConfig?.uiViewClassName,\n    viewTag: element?.__nativeTag,\n    viewConfig: element?._viewConfig,\n  };\n}\n","'use strict';\nexport { createAnimatedComponent } from './createAnimatedComponent';\n","'use strict';\n/**\n * imported from react-native\n */\n\nimport type { MutableRefObject } from 'react';\n\n/* eslint-disable */\n/**\n * This is a helper function for when a component needs to be able to forward a ref\n * to a child component, but still needs to have access to that component as part of\n * its implementation.\n *\n * Its main use case is in wrappers for native components.\n *\n * Usage:\n *\n *   class MyView extends React.Component {\n *     _nativeRef = null;\n *\n *     _setNativeRef = setAndForwardRef({\n *       getForwardedRef: () => this.props.forwardedRef,\n *       setLocalRef: ref => {\n *         this._nativeRef = ref;\n *       },\n *     });\n *\n *     render() {\n *       return <View ref={this._setNativeRef} />;\n *     }\n *   }\n *\n *   const MyViewWithRef = React.forwardRef((props, ref) => (\n *     <MyView {...props} forwardedRef={ref} />\n *   ));\n *\n *   module.exports = MyViewWithRef;\n */\n/* eslint-enable */\n\ntype ForwardedRef<T> = () => MutableRefObject<T> | ((ref: T) => void);\n\nfunction setAndForwardRef<T>({\n  getForwardedRef,\n  setLocalRef,\n}: {\n  getForwardedRef: ForwardedRef<T>;\n  setLocalRef: (ref: T) => void;\n}): (ref: T) => void {\n  return function forwardRef(ref: T) {\n    const forwardedRef = getForwardedRef();\n\n    setLocalRef(ref);\n\n    // Forward to user ref prop (if one has been specified)\n    if (typeof forwardedRef === 'function') {\n      // Handle function-based refs. String-based refs are handled as functions.\n      forwardedRef(ref);\n    } else if (typeof forwardedRef === 'object' && forwardedRef != null) {\n      // Handle createRef-based refs\n      forwardedRef.current = ref;\n    }\n  };\n}\n\nexport default setAndForwardRef;\n","'use strict';\nimport type { NestedArray } from './commonTypes';\n\nexport function flattenArray<T>(array: NestedArray<T>): T[] {\n  if (!Array.isArray(array)) {\n    return [array];\n  }\n  const resultArr: T[] = [];\n\n  const _flattenArray = (arr: NestedArray<T>[]): void => {\n    arr.forEach((item) => {\n      if (Array.isArray(item)) {\n        _flattenArray(item);\n      } else {\n        resultArr.push(item);\n      }\n    });\n  };\n  _flattenArray(array);\n  return resultArr;\n}\n\nexport const has = <K extends string>(\n  key: K,\n  x: unknown\n): x is { [key in K]: unknown } => {\n  if (typeof x === 'function' || typeof x === 'object') {\n    if (x === null || x === undefined) {\n      return false;\n    } else {\n      return key in x;\n    }\n  }\n  return false;\n};\n","'use strict';\nimport * as Animated from './Animated';\n\nexport * from './reanimated2';\nexport default Animated;\n"],"names":["Object","value","enumerable","get","_FlatList","ReanimatedFlatList","_Image","AnimatedImage","_ScrollView","AnimatedScrollView","_Text","AnimatedText","_View","AnimatedView","_ConfigHelper","addWhitelistedNativeProps","addWhitelistedUIProps","_createAnimatedComponent","createAnimatedComponent","require","exports","viewConfig","viewName","uiViewClassName","props","validAttributes","PROCESSED_VIEW_NAMES","has","propsToAdd","keys","forEach","key","PropsAllowlists","NATIVE_THREAD_PROPS_WHITELIST","UI_THREAD_PROPS_WHITELIST","add","oldSize","length","assign","configureProps","_propsAllowlists","_core","Error","assertNoOverlapInLists","jsiConfigureProps","Set","layoutAnimationOrBuilder","style","displayName","build","_interopRequireDefault","shouldGetInitialStyle","getInlinePropsUpdate","newStyle","_ref5","entries","_ref6","_slicedToArray2","default","styleValue","isSharedValue","isInlineStyleTransform","hasInlineStyles","_classCallCheck2","_createClass2","_utils","_ViewDescriptorsSet","_UpdateProps","_mappers","_isSharedValue","SHOULD_BE_USE_WEB","shouldBeUseWeb","transform","Array","isArray","some","t","_worklet_9755239701942_init_data","code","inlineProps","update","_ref","_ref2","map","item","__closure","__workletHash","__initData","_worklet_11406519397301_init_data","InlinePropManager","_inlinePropsViewDescriptors","_inlinePropsMapperId","_inlineProps","animatedComponent","viewInfo","anonymous","newInlineProps","_props$style","flattenArray","_ref3","_ref4","styleKey","extractSharedValuesMapFromProps","styles1","styles2","inlinePropsHasChanged","this","makeViewDescriptorsSet","viewTag","shadowNodeWrapper","adaptViewConfig","tag","name","shareableViewDescriptors","maybeViewRef","items","undefined","updaterFunction","updateProps","stopMapper","startMapper","values","_reactNative","_PlatformChecker","_threads","_NativeReanimatedModule","JSPropsUpdaterPaper","_reanimatedEventEmitter","NativeEventEmitter","Platform","OS","NativeReanimatedModule","findNodeHandle","_tagToComponentMapping","set","size","addListener","data","component","_updateFromNative","delete","removeAllListeners","Map","_worklet_9991293657914_init_data","JSPropsUpdaterFabric","isInitialized","updater","runOnUIImmediately","global","updateJSProps","runOnJS","JSPropsUpdater","JSPropsUpdaterWeb","_animatedComponent","_IS_FABRIC","_WorkletEventHandler","_animation","_InlinePropManager","_utils2","dummyListener","PropsFilter","_initialStyle","_previousProps","_requiresNewInitials","_this","inputProps","_maybePrepareForNewInitials","_loop","styleProp","styles","processedStyle","_style$viewsRef","viewDescriptors","viewsRef","initial","initialUpdaterRun","getInlineStyle","StyleSheet","flatten","animatedProp","animatedProps","initialValueKey","_animatedProp$initial","_animatedProp$viewsRe","workletEventHandler","WorkletEventHandler","eventNames","eventName","listeners","isChromeDebugger","shallowEqual","Component","options","invariant","prototype","isReactComponent","AnimatedComponent","o","e","_getPrototypeOf2","_possibleConstructorReturn2","_isNativeReflectConstruct","Reflect","construct","constructor","apply","_styles","_componentViewTag","_eventViewTag","_isFirstRender","jestAnimatedStyle","_component","_sharedElementTransition","_jsPropsUpdater","_PropsFilter","_setComponentRef","setAndForwardRef","getForwardedRef","forwardedRef","setLocalRef","ref","IS_WEB","_this$props","layout","entering","exiting","sharedTransitionTag","_this$context","enableLayoutAnimations","_configureSharedTransition","_this$props2","skipEntering","context","current","updateLayoutAnimations","LayoutAnimationType","ENTERING","maybeBuild","isJest","_inherits2","_setComponentViewTag","_setEventViewTag","_attachNativeEvents","addOnJSPropsChangeListener","_attachAnimatedStyles","attachInlineProps","_getViewInfo","_configureLayoutTransition","saveSnapshot","getReducedMotionFromConfig","startWebLayoutAnimation","_this$_sharedElementT","_detachNativeEvents","removeOnJSPropsChangeListener","_detachStyles","detachInlineProps","unregisterTransition","addHTMLMutationObserver","EXITING","_this$props3","getReduceMotion","getReduceMotionFromConfig","componentAnimatedRef","getScrollableNode","_findNodeHandle","scrollableNode","_findNodeHandle2","setNativeProps","prop","registerForEvents","unregisterFromEvents","remove","_this$props$animatedP","isFabric","removeFromPropsRegistry","prevProps","prevProp","newProp","_this$_component","_this$_component2","_getAnimatableRef","_viewInfo","getAnimatableRef","call","hostInstance","RNRenderer","findHostInstance_DEPRECATED","getViewInfo","getShadowNodeWrapperFromRef","_this$props$animatedP2","_this$props$animatedP3","_this2","filter","onlyAnimatedStyles","prevStyles","prevAnimatedProps","_animatedProps","_this$_getViewInfo","prevStyle","_prevState","snapshot","_updateNativeEvents","tryActivateLayoutTransition","LAYOUT","_this$props$sharedTra","isUnmounting","arguments","_this$_sharedElementT2","sharedElementTransition","sharedTransitionStyle","SharedTransition","registerTransition","_this$_component3","getBoundingClientRect","_filteredProps$style","filteredProps","filterNonAnimatedProps","visibility","platformProps","select","web","collapsable","_jsxRuntime","jsx","React","contextType","SkipEnteringContext","forwardRef","_react","_invariant","_RNRenderer","_layoutReanimation","_fabricUtils","_PropsRegistry","_util","_animationBuilder","_LayoutAnimationConfig","_JSPropsUpdater","_setAndForwardRef","_web","_UpdateLayoutAnimations","_domUtils","_getViewInfo2","Boolean","valueOf","isWeb","configureWebLayoutAnimations","element","_nativeTag","__nativeTag","getViewInfo73","getViewInfoLatest","_element$viewConfig","_element$_viewConfig","_viewConfig","array","resultArr","_flattenArray","arr","push","x","_exportNames","Animated","r","__esModule","_getRequireWildcardCache","n","__proto__","a","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","i","_interopRequireWildcard","_reanimated","WeakMap"],"sourceRoot":""}