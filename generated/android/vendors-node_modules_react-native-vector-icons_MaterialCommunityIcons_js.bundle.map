{"version":3,"file":"vendors-node_modules_react-native-vector-icons_MaterialCommunityIcons_js.bundle","mappings":"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","sources":["webpack:///./node_modules/react-native-vector-icons/MaterialCommunityIcons.js","webpack:///./node_modules/react-native-vector-icons/lib/NativeRNVectorIcons.js","webpack:///./node_modules/react-native-vector-icons/lib/create-icon-set.js","webpack:///./node_modules/react-native-vector-icons/lib/create-icon-source-cache.js","webpack:///./node_modules/react-native-vector-icons/lib/ensure-native-module-available.js","webpack:///./node_modules/react-native-vector-icons/lib/icon-button.js","webpack:///./node_modules/react-native-vector-icons/lib/object-utils.js"],"sourcesContent":["/**\n * MaterialCommunityIcons icon set component.\n * Usage: <MaterialCommunityIcons name=\"icon-name\" size={20} color=\"#4F8EF7\" />\n */\n\nimport createIconSet from './lib/create-icon-set';\nimport glyphMap from './glyphmaps/MaterialCommunityIcons.json';\n\nconst iconSet = createIconSet(glyphMap, 'Material Design Icons', 'MaterialCommunityIcons.ttf');\n\nexport default iconSet;\nexport const {\n  Button,\n  getImageSource,\n  getImageSourceSync,\n} = iconSet;\n","// @flow\n// eslint-disable-next-line import/no-unresolved\nimport type { TurboModule } from 'react-native/Libraries/TurboModule/RCTExport';\nimport { TurboModuleRegistry } from 'react-native';\n\nexport interface Spec extends TurboModule {\n  getImageForFont(\n    fontName: string,\n    glyph: string,\n    fontSize: number,\n    color: number\n  ): Promise<string>;\n  getImageForFontSync(\n    fontName: string,\n    glyph: string,\n    fontSize: number,\n    color: number\n  ): string;\n  loadFontWithFileName(fontFileName: string, extension: string): Promise<void>;\n}\nexport default (TurboModuleRegistry.get<Spec>('RNVectorIcons'): ?Spec);\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { Platform, PixelRatio, processColor, Text } from 'react-native';\n\nimport ensureNativeModuleAvailable from './ensure-native-module-available';\nimport createIconSourceCache from './create-icon-source-cache';\nimport createIconButtonComponent from './icon-button';\nimport NativeIconAPI from './NativeRNVectorIcons';\n\nexport const DEFAULT_ICON_SIZE = 12;\nexport const DEFAULT_ICON_COLOR = 'black';\n\nexport default function createIconSet(\n  glyphMap,\n  fontFamily,\n  fontFile,\n  fontStyle\n) {\n  // Android doesn't care about actual fontFamily name, it will only look in fonts folder.\n  const fontBasename = fontFile\n    ? fontFile.replace(/\\.(otf|ttf)$/, '')\n    : fontFamily;\n\n  const fontReference = Platform.select({\n    windows: `/Assets/${fontFile}#${fontFamily}`,\n    android: fontBasename,\n    web: fontBasename,\n    default: fontFamily,\n  });\n\n  const IconNamePropType = PropTypes.oneOf(Object.keys(glyphMap));\n\n  class Icon extends PureComponent {\n    static propTypes = {\n      allowFontScaling: PropTypes.bool,\n      name: IconNamePropType,\n      size: PropTypes.number,\n      color: PropTypes.any, // eslint-disable-line react/forbid-prop-types\n      children: PropTypes.node,\n      style: PropTypes.any, // eslint-disable-line react/forbid-prop-types\n    };\n\n    static defaultProps = {\n      size: DEFAULT_ICON_SIZE,\n      allowFontScaling: false,\n    };\n\n    render() {\n      const { name, size, color, style, children, ...props } = this.props;\n\n      let glyph = name ? glyphMap[name] || '?' : '';\n      if (typeof glyph === 'number') {\n        glyph = String.fromCodePoint(glyph);\n      }\n\n      const styleDefaults = {\n        fontSize: size,\n        color,\n      };\n\n      const styleOverrides = {\n        fontFamily: fontReference,\n        fontWeight: 'normal',\n        fontStyle: 'normal',\n      };\n\n      props.style = [styleDefaults, style, styleOverrides, fontStyle || {}];\n\n      return (\n        <Text selectable={false} {...props}>\n          {glyph}\n          {children}\n        </Text>\n      );\n    }\n  }\n\n  const imageSourceCache = createIconSourceCache();\n\n  function resolveGlyph(name) {\n    const glyph = glyphMap[name] || '?';\n    if (typeof glyph === 'number') {\n      return String.fromCodePoint(glyph);\n    }\n    return glyph;\n  }\n\n  function getImageSourceSync(\n    name,\n    size = DEFAULT_ICON_SIZE,\n    color = DEFAULT_ICON_COLOR\n  ) {\n    ensureNativeModuleAvailable();\n\n    const glyph = resolveGlyph(name);\n    const processedColor = processColor(color);\n    const cacheKey = `${glyph}:${size}:${processedColor}`;\n\n    if (imageSourceCache.has(cacheKey)) {\n      return imageSourceCache.get(cacheKey);\n    }\n    try {\n      const imagePath = NativeIconAPI.getImageForFontSync(\n        fontReference,\n        glyph,\n        size,\n        processedColor\n      );\n      const value = { uri: imagePath, scale: PixelRatio.get() };\n      imageSourceCache.setValue(cacheKey, value);\n      return value;\n    } catch (error) {\n      imageSourceCache.setError(cacheKey, error);\n      throw error;\n    }\n  }\n\n  async function getImageSource(\n    name,\n    size = DEFAULT_ICON_SIZE,\n    color = DEFAULT_ICON_COLOR\n  ) {\n    ensureNativeModuleAvailable();\n\n    const glyph = resolveGlyph(name);\n    const processedColor = processColor(color);\n    const cacheKey = `${glyph}:${size}:${processedColor}`;\n\n    if (imageSourceCache.has(cacheKey)) {\n      return imageSourceCache.get(cacheKey);\n    }\n    try {\n      const imagePath = await NativeIconAPI.getImageForFont(\n        fontReference,\n        glyph,\n        size,\n        processedColor\n      );\n      const value = { uri: imagePath, scale: PixelRatio.get() };\n      imageSourceCache.setValue(cacheKey, value);\n      return value;\n    } catch (error) {\n      imageSourceCache.setError(cacheKey, error);\n      throw error;\n    }\n  }\n\n  async function loadFont(file = fontFile) {\n    if (Platform.OS === 'ios') {\n      ensureNativeModuleAvailable();\n      if (!file) {\n        throw new Error('Unable to load font, because no file was specified. ');\n      }\n      await NativeIconAPI.loadFontWithFileName(...file.split('.'));\n    }\n  }\n\n  function hasIcon(name) {\n    return Object.prototype.hasOwnProperty.call(glyphMap, name);\n  }\n\n  function getRawGlyphMap() {\n    return glyphMap;\n  }\n\n  function getFontFamily() {\n    return fontReference;\n  }\n\n  Icon.Button = createIconButtonComponent(Icon);\n  Icon.getImageSource = getImageSource;\n  Icon.getImageSourceSync = getImageSourceSync;\n  Icon.loadFont = loadFont;\n  Icon.hasIcon = hasIcon;\n  Icon.getRawGlyphMap = getRawGlyphMap;\n  Icon.getFontFamily = getFontFamily;\n\n  return Icon;\n}\n","const TYPE_VALUE = 'value';\nconst TYPE_ERROR = 'error';\n\nexport default function createIconSourceCache() {\n  const cache = new Map();\n\n  const setValue = (key, value) =>\n    cache.set(key, { type: TYPE_VALUE, data: value });\n\n  const setError = (key, error) =>\n    cache.set(key, { type: TYPE_ERROR, data: error });\n\n  const has = key => cache.has(key);\n\n  const get = key => {\n    if (!cache.has(key)) {\n      return undefined;\n    }\n    const { type, data } = cache.get(key);\n    if (type === TYPE_ERROR) {\n      throw data;\n    }\n    return data;\n  };\n\n  return { setValue, setError, has, get };\n}\n","import NativeIconAPI from './NativeRNVectorIcons';\n\nexport default function ensureNativeModuleAvailable() {\n  if (!NativeIconAPI) {\n    throw new Error(\n      'The native RNVectorIcons API is not available, did you properly integrate the module? Please verify your autolinking setup and recompile.'\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { StyleSheet, Text, TouchableHighlight, View } from 'react-native';\nimport { pick, omit } from './object-utils';\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    padding: 8,\n  },\n  touchable: {\n    overflow: 'hidden',\n  },\n  icon: {\n    marginRight: 10,\n  },\n  text: {\n    fontWeight: '600',\n    backgroundColor: 'transparent',\n  },\n});\n\nconst IOS7_BLUE = '#007AFF';\n\nconst TEXT_PROP_NAMES = [\n  'ellipsizeMode',\n  'numberOfLines',\n  'textBreakStrategy',\n  'selectable',\n  'suppressHighlighting',\n  'allowFontScaling',\n  'adjustsFontSizeToFit',\n  'minimumFontScale',\n];\n\nconst TOUCHABLE_PROP_NAMES = [\n  'accessible',\n  'accessibilityLabel',\n  'accessibilityHint',\n  'accessibilityComponentType',\n  'accessibilityRole',\n  'accessibilityStates',\n  'accessibilityTraits',\n  'onFocus',\n  'onBlur',\n  'disabled',\n  'onPress',\n  'onPressIn',\n  'onPressOut',\n  'onLayout',\n  'onLongPress',\n  'nativeID',\n  'testID',\n  'delayPressIn',\n  'delayPressOut',\n  'delayLongPress',\n  'activeOpacity',\n  'underlayColor',\n  'selectionColor',\n  'onShowUnderlay',\n  'onHideUnderlay',\n  'hasTVPreferredFocus',\n  'tvParallaxProperties',\n];\n\nexport default function createIconButtonComponent(Icon) {\n  return class IconButton extends PureComponent {\n    static propTypes = {\n      backgroundColor: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n      ]),\n      borderRadius: PropTypes.number,\n      color: PropTypes.any, // eslint-disable-line react/forbid-prop-types\n      size: PropTypes.number,\n      iconStyle: PropTypes.any, // eslint-disable-line react/forbid-prop-types\n      style: PropTypes.any, // eslint-disable-line react/forbid-prop-types\n      children: PropTypes.node,\n    };\n\n    static defaultProps = {\n      backgroundColor: IOS7_BLUE,\n      borderRadius: 5,\n      color: 'white',\n      size: 20,\n    };\n\n    render() {\n      const { style, iconStyle, children, ...restProps } = this.props;\n\n      const iconProps = pick(\n        restProps,\n        TEXT_PROP_NAMES,\n        'style',\n        'name',\n        'size',\n        'color'\n      );\n      const touchableProps = pick(restProps, TOUCHABLE_PROP_NAMES);\n      const props = omit(\n        restProps,\n        Object.keys(iconProps),\n        Object.keys(touchableProps),\n        'iconStyle',\n        'borderRadius',\n        'backgroundColor'\n      );\n      iconProps.style = iconStyle ? [styles.icon, iconStyle] : styles.icon;\n\n      const colorStyle = pick(this.props, 'color');\n      const blockStyle = pick(this.props, 'backgroundColor', 'borderRadius');\n\n      return (\n        <TouchableHighlight\n          style={[styles.touchable, blockStyle]}\n          {...touchableProps}\n        >\n          <View style={[styles.container, blockStyle, style]} {...props}>\n            <Icon {...iconProps} />\n            {typeof children === 'string' ? (\n              <Text style={[styles.text, colorStyle]} selectable={false}>\n                {children}\n              </Text>\n            ) : (\n              children\n            )}\n          </View>\n        </TouchableHighlight>\n      );\n    }\n  };\n}\n","const pick = (obj, ...keys) =>\n  keys\n    .flat()\n    .filter(key => Object.prototype.hasOwnProperty.call(obj, key))\n    .reduce((acc, key) => {\n      acc[key] = obj[key];\n      return acc;\n    }, {});\n\nconst omit = (obj, ...keysToOmit) => {\n  const keysToOmitSet = new Set(keysToOmit.flat());\n  return Object.getOwnPropertyNames(obj)\n    .filter(key => !keysToOmitSet.has(key))\n    .reduce((acc, key) => {\n      acc[key] = obj[key];\n      return acc;\n    }, {});\n};\n\nmodule.exports = { pick, omit };\n"],"names":["_createIconSet","_interopRequireDefault","require","_MaterialCommunityIcons","iconSet","createIconSet","glyphMap","exports","Button","getImageSource","getImageSourceSync","_reactNative","TurboModuleRegistry","get","fontFamily","fontFile","fontStyle","fontBasename","replace","fontReference","Platform","select","windows","android","web","default","IconNamePropType","PropTypes","oneOf","Object","keys","Icon","_PureComponent","_classCallCheck2","t","o","e","arguments","_getPrototypeOf2","_possibleConstructorReturn2","_isNativeReflectConstruct","Reflect","construct","constructor","apply","_inherits2","_createClass2","key","value","_this$props","this","props","name","size","color","style","children","_objectWithoutProperties2","_excluded","glyph","String","fromCodePoint","styleDefaults","fontSize","styleOverrides","fontWeight","_jsxRuntime","jsxs","Text","assign","selectable","PureComponent","propTypes","allowFontScaling","bool","number","any","node","defaultProps","DEFAULT_ICON_SIZE","imageSourceCache","createIconSourceCache","resolveGlyph","_getImageSource","_asyncToGenerator2","length","undefined","DEFAULT_ICON_COLOR","ensureNativeModuleAvailable","processedColor","processColor","cacheKey","has","uri","NativeIconAPI","getImageForFont","scale","PixelRatio","setValue","error","setError","_loadFont","file","OS","Error","loadFontWithFileName","_toConsumableArray2","split","createIconButtonComponent","_x","getImageForFontSync","loadFont","hasIcon","prototype","hasOwnProperty","call","getRawGlyphMap","getFontFamily","_react","r","__esModule","_getRequireWildcardCache","n","__proto__","a","defineProperty","getOwnPropertyDescriptor","u","i","set","_interopRequireWildcard","_propTypes","_ensureNativeModuleAvailable","_createIconSourceCache","_iconButton","_NativeRNVectorIcons","WeakMap","Boolean","valueOf","cache","Map","type","TYPE_VALUE","data","TYPE_ERROR","_cache$get","_IconButton","IconButton","iconStyle","restProps","iconProps","pick","TEXT_PROP_NAMES","touchableProps","TOUCHABLE_PROP_NAMES","omit","styles","icon","colorStyle","blockStyle","jsx","TouchableHighlight","touchable","View","container","text","backgroundColor","oneOfType","string","borderRadius","IOS7_BLUE","_objectUtils","StyleSheet","create","flexDirection","justifyContent","alignItems","padding","overflow","marginRight","module","obj","_len","Array","_key","flat","filter","reduce","acc","_len2","keysToOmit","_key2","keysToOmitSet","Set","getOwnPropertyNames"],"sourceRoot":""}