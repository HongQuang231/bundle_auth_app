{"version":3,"file":"vendors-fabf2bb3.bundle","mappings":"4QAAAA,EAc6D,SAAAC,EAAAC,GAAA,IAAAA,GAAAD,GAAAA,EAAAE,WAAA,OAAAF,EAAA,UAAAA,GAAA,iBAAAA,GAAA,mBAAAA,EAAA,OAAAG,QAAAH,GAAA,IAAAI,EAAAC,EAAAJ,GAAA,GAAAG,GAAAA,EAAAE,IAAAN,GAAA,OAAAI,EAAAG,IAAAP,GAAA,IAAAQ,EAAA,CAAAC,UAAA,MAAAC,EAAAC,OAAAC,gBAAAD,OAAAE,yBAAA,QAAAC,KAAAd,EAAA,eAAAc,GAAA,GAAAC,eAAAC,KAAAhB,EAAAc,GAAA,KAAAG,EAAAP,EAAAC,OAAAE,yBAAAb,EAAAc,GAAA,KAAAG,IAAAA,EAAAV,KAAAU,EAAAC,KAAAP,OAAAC,eAAAJ,EAAAM,EAAAG,GAAAT,EAAAM,GAAAd,EAAAc,EAAA,QAAAN,EAAAL,QAAAH,EAAAI,GAAAA,EAAAc,IAAAlB,EAAAQ,GAAAA,CAAA,CAd7DW,CAAAC,EAAA,QACAC,EAAAD,EAAA,OAOAE,EAAAC,EAAAH,EAAA,QACAI,EAAAJ,EAAA,OACAK,EAAAL,EAAA,OACAM,EAAAH,EAAAH,EAAA,QACAO,EAAAJ,EAAAH,EAAA,QAEAQ,EAAAR,EAAA,OAA6DS,EAAAT,EAAA,gBAAAf,EAAAL,GAAA,sBAAA8B,QAAA,gBAAA7B,EAAA,IAAA6B,QAAA1B,EAAA,IAAA0B,QAAA,OAAAzB,EAAA,SAAAL,GAAA,OAAAA,EAAAI,EAAAH,CAAA,GAAAD,EAAA,CAsG3D+B,EAAAA,QA9FoB,SAACC,GACrB,IAAMC,EACJD,EAAME,OAA6C,IAApCvB,OAAOwB,KAAKH,EAAME,OAAOE,QAAgBJ,EAAME,MAAMG,QAEhEC,IACDN,EAAME,OAASD,KAAmC,MAAVM,EAAAA,gBAAU,EAAVA,EAAAA,WAAYC,mBACvD,QAEFC,EACE1C,EAAM2C,UAAkB,GAAMC,GAAA,EAAAC,EAAAzC,SAAAsC,EAAA,GADzBI,EAAmBF,EAAA,GAAEG,EAAsBH,EAAA,GAElDI,EACEhD,EAAM2C,SAA0BJ,GAAgBU,GAAA,EAAAJ,EAAAzC,SAAA4C,EAAA,GAD3CE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAG5BG,EAAyB,SAC7BC,GAEA,IAAQH,EAAgBG,EAAhBH,YACRC,EAAeD,EACjB,EAEAlD,EAAMsD,WAAU,WACd,IAAIC,EASJ,OAPKtB,EAAME,QACToB,GAAe,EAAAC,EAAAA,kBACbC,EAAAA,kBACA,sBACAV,IAGG,WACc,IAADW,EAAbzB,EAAME,QACG,OAAZuB,EAAAH,IAAAG,EAAcC,SAElB,CACF,GAAG,CAAC1B,EAAME,QAEVnC,EAAMsD,WAAU,WACd,IAAIM,EAMJ,OALK3B,EAAME,QAASD,IAClB0B,EAAmC,MAAVpB,EAAAA,gBAAU,EAAVA,EAAAA,WAAYqB,kBACnCT,IAGG,WACAnB,EAAME,QAASD,IACd0B,EACFA,EAAuBD,SAGb,MAAVnB,EAAAA,YAAAA,EAAAA,WAAYsB,qBAAqBV,GAGvC,CACF,GAAG,CAACnB,EAAME,MAAOD,IAEjB,IAAuB6B,EAAAC,EACfC,EACAC,EACAC,EAEAC,EAgBAC,EAAuBpC,EAAvBoC,SAAUC,EAAarC,EAAbqC,SAElB,OACE,EAAAxC,EAAAyC,KAAChD,EAAAnB,QAAsB,CAAAiE,UACrB,EAAAvC,EAAAyC,KAAC3C,EAAAxB,QAAU,CAAAiE,UACT,EAAAvC,EAAAyC,KAAC9C,EAAA+C,SAAgB,CACfC,MAAK7D,OAAA8D,OAAA,CACHC,KAAMC,EAAAA,QACNC,qBAAqB,GAClBP,GACHD,UAEF,EAAAvC,EAAAyC,KAAC7C,EAAAoD,cAAa,CAAC3C,OAhCf8B,GAA0B,OAAXF,EAAA9B,EAAME,YAAK,EAAX4B,EAAazB,UAAW,EACvC4B,EAAShB,GAAe,QACxBiB,EAAmBY,EAAAA,uBAAuBd,GAAcC,GAExDE,EAAiBxD,OAAA8D,OAAA,GAClBP,EACAlC,EAAME,MAAM,CACfG,QAAS2B,EACTe,UAASpE,OAAA8D,OAAA,GACO,OADPV,EACJ/B,EAAME,YAAK,EAAX6B,EAAagB,UAAU,CAC1BC,MAAOnC,EAAsB,EAAI,MAIrClC,OAAA8D,OAAA,GACKN,EAAkB,CACrBc,KAAoC,IAA9Bd,EAAkB9B,WAgBa+B,SAAEA,SAK7C,C,sFCnGwC,SAAApE,EAAAC,GAAA,IAAAA,GAAAD,GAAAA,EAAAE,WAAA,OAAAF,EAAA,UAAAA,GAAA,iBAAAA,GAAA,mBAAAA,EAAA,OAAAG,QAAAH,GAAA,IAAAI,EAAAC,EAAAJ,GAAA,GAAAG,GAAAA,EAAAE,IAAAN,GAAA,OAAAI,EAAAG,IAAAP,GAAA,IAAAQ,EAAA,CAAAC,UAAA,MAAAC,EAAAC,OAAAC,gBAAAD,OAAAE,yBAAA,QAAAC,KAAAd,EAAA,eAAAc,GAAA,GAAAC,eAAAC,KAAAhB,EAAAc,GAAA,KAAAG,EAAAP,EAAAC,OAAAE,yBAAAb,EAAAc,GAAA,KAAAG,IAAAA,EAAAV,KAAAU,EAAAC,KAAAP,OAAAC,eAAAJ,EAAAM,EAAAG,GAAAT,EAAAM,GAAAd,EAAAc,EAAA,CAAAN,EAAAL,QAAAH,EAAAI,GAAAA,EAAAc,IAAAlB,EAAAQ,EAAA,CAdxCW,CAAAC,EAAA,YACAC,EAAAD,EAAA,OASA8D,EAAA9D,EAAA,MAIwCS,EAAAT,EAAA,gBAAAf,EAAAL,GAAA,sBAAA8B,QAAA,gBAAA7B,EAAA,IAAA6B,QAAA1B,EAAA,IAAA0B,QAAA,OAAAzB,EAAA,SAAAL,GAAA,OAAAA,EAAAI,EAAAH,CAAA,GAAAD,EAAA,CAOxC,IAAAmF,EAAkCC,EAAAA,WAAW7E,IAAI,UAAS8E,EAAAF,EAAlDG,MAAAA,OAAK,IAAAD,EAAG,EAACA,EAAAE,EAAAJ,EAAEK,OAAAA,OAAM,IAAAD,EAAG,EAACA,EAKvBE,EACY,QAAhBC,EAAAA,SAASC,IAAwC,MAAxBC,EAAAA,qBACrB,CACEC,MAAO,CAAEC,EAAG,EAAGC,EAAG,EAAGT,MAAAA,EAAOE,OAAAA,GAC5BQ,OAAQ,CAAEC,IAAK,EAAGC,KAAM,EAAGC,MAAO,EAAGC,OAAQ,IAE/CR,EAAAA,qBAES,SAASS,EAAsBC,GAA8B,IAA3BlC,EAAQkC,EAARlC,SAAUmC,EAAKD,EAALC,MACzD,OACE,EAAA1E,EAAAyC,KAACY,EAAAsB,sBAAsBC,SAAQ,CAAArC,SAC5B,SAAC4B,GACA,OAAIA,GAIK,EAAAnE,EAAAyC,KAACjD,EAAAqF,KAAI,CAACH,MAAO,CAACI,EAAOC,UAAWL,GAAOnC,SAAEA,KAIhD,EAAAvC,EAAAyC,KAACY,EAAA2B,iBAAgB,CAACpB,eAAgBA,EAAgBc,MAAOA,EAAMnC,SAC5DA,GAGP,GAGN,CAEAiC,EAAuBZ,eAAiBA,EAExC,IAAMkB,EAASG,EAAAA,WAAWC,OAAO,CAC/BH,UAAW,CACTI,KAAM,I,uIC9DV,IAAAjH,EAI6C,SAAAC,EAAAC,GAAA,IAAAA,GAAAD,GAAAA,EAAAE,WAAA,OAAAF,EAAA,UAAAA,GAAA,iBAAAA,GAAA,mBAAAA,EAAA,OAAAG,QAAAH,GAAA,IAAAI,EAAAC,EAAAJ,GAAA,GAAAG,GAAAA,EAAAE,IAAAN,GAAA,OAAAI,EAAAG,IAAAP,GAAA,IAAAQ,EAAA,CAAAC,UAAA,MAAAC,EAAAC,OAAAC,gBAAAD,OAAAE,yBAAA,QAAAC,KAAAd,EAAA,eAAAc,GAAA,GAAAC,eAAAC,KAAAhB,EAAAc,GAAA,KAAAG,EAAAP,EAAAC,OAAAE,yBAAAb,EAAAc,GAAA,KAAAG,IAAAA,EAAAV,KAAAU,EAAAC,KAAAP,OAAAC,eAAAJ,EAAAM,EAAAG,GAAAT,EAAAM,GAAAd,EAAAc,EAAA,QAAAN,EAAAL,QAAAH,EAAAI,GAAAA,EAAAc,IAAAlB,EAAAQ,GAAAA,CAAA,CAJ7CW,CAAAC,EAAA,QAEAM,EAAAH,EAAAH,EAAA,QAE6C,SAAAf,EAAAL,GAAA,sBAAA8B,QAAA,gBAAA7B,EAAA,IAAA6B,QAAA1B,EAAA,IAAA0B,QAAA,OAAAzB,EAAA,SAAAL,GAAA,OAAAA,EAAAI,EAAAH,CAAA,GAAAD,EAAA,CAatC,IAAMiH,EAAelF,EAAAA,gBAAGhC,EAAMmH,cAAwB,CAC3DxC,KAAMC,EAAAA,QACNC,qBAAqB,IAGA7C,EAAAA,SAAekF,EAAvB1C,SAAkBxC,EAAAA,SAAKkF,EAAbR,Q,qJCgElB,SAA8BU,GACnC,IACEC,EAIED,EAJFC,qBACAC,EAGEF,EAHFE,oBACAC,EAEEH,EAFFG,cACAC,EACEJ,EADFI,aAGIC,EAAkB,SACtBC,EACAC,GAEA,OAAA/G,OAAA8D,OAAA,GACKgD,EAAgB,CACnBE,OAAMhH,OAAA8D,OAAA,GACDgD,EAAgBE,OAAO,CAC1BC,QAASF,EAASC,OAAOC,QACzBC,WAAYH,EAASC,OAAOE,WAC5BC,KAAMJ,EAASC,OAAOI,UAAUC,OAChCC,KAAMP,EAASC,OAAOO,UACtBC,OAAQT,EAASC,OAAOS,QACxBC,aAAcX,EAASC,OAAOW,SAGpC,EAEMC,EAAY,CAChBC,MAAOlB,GAAiBmB,EAAAA,cACxBC,KAAMnB,GAAgBoB,EAAAA,cAGxB,GAAIvB,GAAwBC,EAAqB,CAC/C,IAEMuB,EAAmB,CACvBJ,MAAOpB,EACPsB,KAAMrB,GAGRwB,EAPc,CAAC,QAAS,QAOiCC,QACvD,SAACC,EAAMC,GACL,OAAArI,OAAA8D,OAAA,GACKsE,GAAK,EAADE,EAAA9I,SAAA,GACN6I,EAAOxB,EAAgBoB,EAAiBI,GAAOT,EAAUS,KAE9D,GACA,CACER,MAAOpB,EACPsB,KAAMrB,IAIV,MAAO,CACL6B,WAdyBL,EAAnBL,MAeNW,UAf4CN,EAAjBH,KAiB/B,CAEA,GAAIrB,EACF,MAAO,CACL8B,UAAW3B,EAAgBH,EAAqBkB,EAAUG,OAI9D,MAAO,CACLQ,WAAY1B,EAAgBJ,EAAsBmB,EAAUC,OAEhE,E,mHA/HO,SAAgCY,GACrC,OAAOC,EAAeD,EACxB,E,yDA1BAE,EAAAlI,EAAA,OACAmI,EAAAhI,EAAAH,EAAA,QAEAoI,EAAApI,EAAA,OAeOqI,GAFkB1H,EAAAA,aAAG0G,EAAAA,eAMxB,EAAAiB,EAAAA,eAAuBjB,EAAAA,gBAFzBkB,GADa5H,EAAAA,cAAA0H,EAAb5E,cACS9C,EAAAA,UAAA0H,EAATE,WACUN,EAAWtH,EAAAA,YAAA0H,EAArBG,SAO2B7H,EAAAA,iBAAG,SAC9B8H,GAAuD,OACpDR,EAA2BQ,EAAgB,EAElB9H,EAAAA,kBAAG,SAC/B+H,GAAqE,OAClEH,EAAoBG,EAAkB,EANpC,IAQMhF,EAAsB/C,EAAAA,uBAAG,CACpC,EAAG,CACDyG,MAAOuB,EAAAA,cACPrB,KAAMsB,EAAAA,cAER,EAAG,CACDxB,MAAOC,EAAAA,cACPC,KAAMC,EAAAA,eAIW5G,EAAAA,SAAG,WAYtB,OAAO+C,IAPSmF,UAAA7H,OAAA,QAAA8H,IAAAD,UAAA,KAAAA,UAAA,GAIY,EAAI,GALlBA,UAAA7H,OAAA,QAAA8H,IAAAD,UAAA,IAAAA,UAAA,GAMU,OAAS,QAGnC,EA6FsClI,EAAAA,0BAAG,SAACkC,GAExC,MADwB,CAAC,cAAe,IAAM,IAAM,IAAM,IAAM,KACzC6E,QAAO,SAACqB,EAAYC,EAAgBC,GACzD,OAAA1J,OAAA8D,OAAA,GACK0F,GAAW,EAADlB,EAAA9I,SAAA,GACZ,QAAQkK,IACG,IAAVA,EACID,GACA,EAAAE,EAAAA,SAAMrG,EAAOsG,SACVC,KAAI,EAAAF,EAAAA,SAAMrG,EAAO2D,SAAUwC,GAC3BK,MACAC,UAEb,GAAG,CAAC,EACN,C,o8JCzKA,IAAAC,EAAAvJ,EAAA,OAEAK,EAAAL,EAAA,OAQAoI,EAAApI,EAAA,OAAAT,OAAAwB,KAAAqH,GAAAoB,SAAA,SAAAC,GAAA,YAAAA,GAAA,eAAAA,IAAAlK,OAAAmK,UAAA/J,eAAAC,KAAA+J,EAAAF,IAAAA,KAAA9I,GAAAA,EAAA8I,KAAArB,EAAAqB,IAAAlK,OAAAC,eAAAmB,EAAA8I,EAAA,CAAAG,YAAA,EAAAzK,IAAA,kBAAAiJ,EAAAqB,EAAA,QAEA,IAAAI,EAAA1J,EAAAH,EAAA,QAEA8J,EAAA3J,EAAAH,EAAA,QACA+J,EAAA5J,EAAAH,EAAA,QACAgK,EAAA7J,EAAAH,EAAA,QAEAiK,EAAAlK,EAAAC,EAAA,QAAqDW,EAAAA,OAAAsJ,EACrD,IAAAC,EAAAnK,EAAAC,EAAA,QAAqDW,EAAAA,OAAAuJ,EACrD,IAAAC,EAAApK,EAAAC,EAAA,QAA+CW,EAAAA,KAAAwJ,EAC/C,IAAAC,EAAArK,EAAAC,EAAA,QAAuDW,EAAAA,UAAAyJ,EAKvD,IAAAC,EAAAtK,EAAAC,EAAA,QAAAT,OAAAwB,KAAAsJ,GAAAb,SAAA,SAAAC,GAAA,YAAAA,GAAA,eAAAA,IAAAlK,OAAAmK,UAAA/J,eAAAC,KAAA+J,EAAAF,IAAAA,KAAA9I,GAAAA,EAAA8I,KAAAY,EAAAZ,IAAAlK,OAAAC,eAAAmB,EAAA8I,EAAA,CAAAG,YAAA,EAAAzK,IAAA,kBAAAkL,EAAAZ,EAAA,QAEA,IAAAa,EAAAnK,EAAAH,EAAA,QACAuK,EAAApK,EAAAH,EAAA,QACAwK,EAAArK,EAAAH,EAAA,QACAyK,EAAAtK,EAAAH,EAAA,QACA0K,EAAAvK,EAAAH,EAAA,QACA2K,EAAAxK,EAAAH,EAAA,QACA4K,EAAAzK,EAAAH,EAAA,QACA6K,EAAA1K,EAAAH,EAAA,QACA8K,EAAA3K,EAAAH,EAAA,QACA+K,EAAA5K,EAAAH,EAAA,QACAgL,EAAA7K,EAAAH,EAAA,QACAiL,EAAA9K,EAAAH,EAAA,QAEAkL,EAAA/K,EAAAH,EAAA,QACAmL,EAAAhL,EAAAH,EAAA,QACAoL,EAAAjL,EAAAH,EAAA,QACAqL,EAAAlL,EAAAH,EAAA,OACAsL,EAAAnL,EAAAH,EAAA,QACAuL,EAAApL,EAAAH,EAAA,QACAwL,EAAArL,EAAAH,EAAA,QACAyL,EAAAtL,EAAAH,EAAA,QACA0L,EAAAvL,EAAAH,EAAA,QACA2L,EAAAxL,EAAAH,EAAA,QACA4L,EAAAzL,EAAAH,EAAA,QACA6L,EAAA1L,EAAAH,EAAA,QACA8L,EAAA3L,EAAAH,EAAA,QACA+L,EAAA5L,EAAAH,EAAA,QACAgM,EAAA7L,EAAAH,EAAA,QACAiM,EAAA9L,EAAAH,EAAA,QACAkM,EAAA/L,EAAAH,EAAA,QACAmM,EAAAhM,EAAAH,EAAA,QAEAoM,EAAApM,EAAA,OAOAqM,EAAAtM,EAAAC,EAAA,QAA2E,SAAAf,EAAAL,GAAA,sBAAA8B,QAAA,gBAAA7B,EAAA,IAAA6B,QAAA1B,EAAA,IAAA0B,QAAA,OAAAzB,EAAA,SAAAL,GAAA,OAAAA,EAAAI,EAAAH,CAAA,GAAAD,EAAA,UAAAmB,EAAAnB,EAAAC,GAAA,IAAAA,GAAAD,GAAAA,EAAAE,WAAA,OAAAF,EAAA,UAAAA,GAAA,iBAAAA,GAAA,mBAAAA,EAAA,OAAAG,QAAAH,GAAA,IAAAI,EAAAC,EAAAJ,GAAA,GAAAG,GAAAA,EAAAE,IAAAN,GAAA,OAAAI,EAAAG,IAAAP,GAAA,IAAAQ,EAAA,CAAAC,UAAA,MAAAC,EAAAC,OAAAC,gBAAAD,OAAAE,yBAAA,QAAAC,KAAAd,EAAA,eAAAc,GAAA,GAAAC,eAAAC,KAAAhB,EAAAc,GAAA,KAAAG,EAAAP,EAAAC,OAAAE,yBAAAb,EAAAc,GAAA,KAAAG,IAAAA,EAAAV,KAAAU,EAAAC,KAAAP,OAAAC,eAAAJ,EAAAM,EAAAG,GAAAT,EAAAM,GAAAd,EAAAc,EAAA,QAAAN,EAAAL,QAAAH,EAAAI,GAAAA,EAAAc,IAAAlB,EAAAQ,GAAAA,CAAA,C","sources":["webpack:///./node_modules/react-native-paper/src/core/PaperProvider.tsx","webpack:///./node_modules/react-native-paper/src/core/SafeAreaProviderCompat.tsx","webpack:///./node_modules/react-native-paper/src/core/settings.tsx","webpack:///./node_modules/react-native-paper/src/core/theming.tsx","webpack:///./node_modules/react-native-paper/src/index.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  AccessibilityInfo,\n  Appearance,\n  ColorSchemeName,\n  NativeEventSubscription,\n} from 'react-native';\n\nimport SafeAreaProviderCompat from './SafeAreaProviderCompat';\nimport { Provider as SettingsProvider, Settings } from './settings';\nimport { defaultThemesByVersion, ThemeProvider } from './theming';\nimport MaterialCommunityIcon from '../components/MaterialCommunityIcon';\nimport PortalHost from '../components/Portal/PortalHost';\nimport type { ThemeProp } from '../types';\nimport { addEventListener } from '../utils/addEventListener';\n\nexport type Props = {\n  children: React.ReactNode;\n  theme?: ThemeProp;\n  settings?: Settings;\n};\n\nconst PaperProvider = (props: Props) => {\n  const isOnlyVersionInTheme =\n    props.theme && Object.keys(props.theme).length === 1 && props.theme.version;\n\n  const colorSchemeName =\n    ((!props.theme || isOnlyVersionInTheme) && Appearance?.getColorScheme()) ||\n    'light';\n\n  const [reduceMotionEnabled, setReduceMotionEnabled] =\n    React.useState<boolean>(false);\n  const [colorScheme, setColorScheme] =\n    React.useState<ColorSchemeName>(colorSchemeName);\n\n  const handleAppearanceChange = (\n    preferences: Appearance.AppearancePreferences\n  ) => {\n    const { colorScheme } = preferences;\n    setColorScheme(colorScheme);\n  };\n\n  React.useEffect(() => {\n    let subscription: NativeEventSubscription | undefined;\n\n    if (!props.theme) {\n      subscription = addEventListener(\n        AccessibilityInfo,\n        'reduceMotionChanged',\n        setReduceMotionEnabled\n      );\n    }\n    return () => {\n      if (!props.theme) {\n        subscription?.remove();\n      }\n    };\n  }, [props.theme]);\n\n  React.useEffect(() => {\n    let appearanceSubscription: NativeEventSubscription | undefined;\n    if (!props.theme || isOnlyVersionInTheme) {\n      appearanceSubscription = Appearance?.addChangeListener(\n        handleAppearanceChange\n      ) as NativeEventSubscription | undefined;\n    }\n    return () => {\n      if (!props.theme || isOnlyVersionInTheme) {\n        if (appearanceSubscription) {\n          appearanceSubscription.remove();\n        } else {\n          // @ts-expect-error: We keep deprecated listener remove method for backwards compat with old RN versions\n          Appearance?.removeChangeListener(handleAppearanceChange);\n        }\n      }\n    };\n  }, [props.theme, isOnlyVersionInTheme]);\n\n  const getTheme = () => {\n    const themeVersion = props.theme?.version || 3;\n    const scheme = colorScheme || 'light';\n    const defaultThemeBase = defaultThemesByVersion[themeVersion][scheme];\n\n    const extendedThemeBase = {\n      ...defaultThemeBase,\n      ...props.theme,\n      version: themeVersion,\n      animation: {\n        ...props.theme?.animation,\n        scale: reduceMotionEnabled ? 0 : 1,\n      },\n    };\n\n    return {\n      ...extendedThemeBase,\n      isV3: extendedThemeBase.version === 3,\n    };\n  };\n\n  const { children, settings } = props;\n\n  return (\n    <SafeAreaProviderCompat>\n      <PortalHost>\n        <SettingsProvider\n          value={{\n            icon: MaterialCommunityIcon,\n            rippleEffectEnabled: true,\n            ...settings,\n          }}\n        >\n          <ThemeProvider theme={getTheme()}>{children}</ThemeProvider>\n        </SettingsProvider>\n      </PortalHost>\n    </SafeAreaProviderCompat>\n  );\n};\n\nexport default PaperProvider;\n","/**\n * Ported from @react-navigation https://github.com/react-navigation/react-navigation/blob/main/packages/elements/src/SafeAreaProviderCompat.tsx\n */\nimport * as React from 'react';\nimport {\n  Dimensions,\n  Platform,\n  StyleProp,\n  StyleSheet,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport {\n  initialWindowMetrics,\n  SafeAreaInsetsContext,\n  SafeAreaProvider,\n} from 'react-native-safe-area-context';\n\ntype Props = {\n  children: React.ReactNode;\n  style?: StyleProp<ViewStyle>;\n};\n\nconst { width = 0, height = 0 } = Dimensions.get('window');\n\n// To support SSR on web, we need to have empty insets for initial values\n// Otherwise there can be mismatch between SSR and client output\n// We also need to specify empty values to support tests environments\nconst initialMetrics =\n  Platform.OS === 'web' || initialWindowMetrics == null\n    ? {\n        frame: { x: 0, y: 0, width, height },\n        insets: { top: 0, left: 0, right: 0, bottom: 0 },\n      }\n    : initialWindowMetrics;\n\nexport default function SafeAreaProviderCompat({ children, style }: Props) {\n  return (\n    <SafeAreaInsetsContext.Consumer>\n      {(insets) => {\n        if (insets) {\n          // If we already have insets, don't wrap the stack in another safe area provider\n          // This avoids an issue with updates at the cost of potentially incorrect values\n          // https://github.com/react-navigation/react-navigation/issues/174\n          return <View style={[styles.container, style]}>{children}</View>;\n        }\n\n        return (\n          <SafeAreaProvider initialMetrics={initialMetrics} style={style}>\n            {children}\n          </SafeAreaProvider>\n        );\n      }}\n    </SafeAreaInsetsContext.Consumer>\n  );\n}\n\nSafeAreaProviderCompat.initialMetrics = initialMetrics;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n});\n","import * as React from 'react';\n\nimport MaterialCommunityIcon, {\n  IconProps,\n} from '../components/MaterialCommunityIcon';\n\nexport type Settings = {\n  icon?: ({\n    name,\n    color,\n    size,\n    direction,\n    testID,\n  }: IconProps) => React.ReactNode;\n  rippleEffectEnabled?: boolean;\n};\n\nexport const SettingsContext = React.createContext<Settings>({\n  icon: MaterialCommunityIcon,\n  rippleEffectEnabled: true,\n});\n\nexport const { Provider, Consumer } = SettingsContext;\n","import type { ComponentType } from 'react';\n\nimport { $DeepPartial, createTheming } from '@callstack/react-theme-provider';\nimport color from 'color';\n\nimport {\n  MD2DarkTheme,\n  MD2LightTheme,\n  MD3DarkTheme,\n  MD3LightTheme,\n} from '../styles/themes';\nimport type {\n  InternalTheme,\n  MD3Theme,\n  MD3AndroidColors,\n  NavigationTheme,\n} from '../types';\n\nexport const DefaultTheme = MD3LightTheme;\n\nexport const {\n  ThemeProvider,\n  withTheme,\n  useTheme: useAppTheme,\n} = createTheming<unknown>(MD3LightTheme);\n\nexport function useTheme<T = MD3Theme>(overrides?: $DeepPartial<T>) {\n  return useAppTheme<T>(overrides);\n}\n\nexport const useInternalTheme = (\n  themeOverrides: $DeepPartial<InternalTheme> | undefined\n) => useAppTheme<InternalTheme>(themeOverrides);\n\nexport const withInternalTheme = <Props extends { theme: InternalTheme }, C>(\n  WrappedComponent: ComponentType<Props & { theme: InternalTheme }> & C\n) => withTheme<Props, C>(WrappedComponent);\n\nexport const defaultThemesByVersion = {\n  2: {\n    light: MD2LightTheme,\n    dark: MD2DarkTheme,\n  },\n  3: {\n    light: MD3LightTheme,\n    dark: MD3DarkTheme,\n  },\n};\n\nexport const getTheme = <\n  Scheme extends boolean = false,\n  IsVersion3 extends boolean = true\n>(\n  isDark: Scheme = false as Scheme,\n  isV3: IsVersion3 = true as IsVersion3\n): (typeof defaultThemesByVersion)[IsVersion3 extends true\n  ? 3\n  : 2][Scheme extends true ? 'dark' : 'light'] => {\n  const themeVersion = isV3 ? 3 : 2;\n  const scheme = isDark ? 'dark' : 'light';\n\n  return defaultThemesByVersion[themeVersion][scheme];\n};\n\n// eslint-disable-next-line no-redeclare\nexport function adaptNavigationTheme(themes: {\n  reactNavigationLight: NavigationTheme;\n  materialLight?: MD3Theme;\n}): {\n  LightTheme: NavigationTheme;\n};\n// eslint-disable-next-line no-redeclare\nexport function adaptNavigationTheme(themes: {\n  reactNavigationDark: NavigationTheme;\n  materialDark?: MD3Theme;\n}): {\n  DarkTheme: NavigationTheme;\n};\n// eslint-disable-next-line no-redeclare\nexport function adaptNavigationTheme(themes: {\n  reactNavigationLight: NavigationTheme;\n  reactNavigationDark: NavigationTheme;\n  materialLight?: MD3Theme;\n  materialDark?: MD3Theme;\n}): { LightTheme: NavigationTheme; DarkTheme: NavigationTheme };\n// eslint-disable-next-line no-redeclare\nexport function adaptNavigationTheme(themes: any) {\n  const {\n    reactNavigationLight,\n    reactNavigationDark,\n    materialLight,\n    materialDark,\n  } = themes;\n\n  const getAdaptedTheme = (\n    navigationTheme: NavigationTheme,\n    MD3Theme: MD3Theme\n  ) => {\n    return {\n      ...navigationTheme,\n      colors: {\n        ...navigationTheme.colors,\n        primary: MD3Theme.colors.primary,\n        background: MD3Theme.colors.background,\n        card: MD3Theme.colors.elevation.level2,\n        text: MD3Theme.colors.onSurface,\n        border: MD3Theme.colors.outline,\n        notification: MD3Theme.colors.error,\n      },\n    };\n  };\n\n  const MD3Themes = {\n    light: materialLight || MD3LightTheme,\n    dark: materialDark || MD3DarkTheme,\n  };\n\n  if (reactNavigationLight && reactNavigationDark) {\n    const modes = ['light', 'dark'] as const;\n\n    const NavigationThemes = {\n      light: reactNavigationLight,\n      dark: reactNavigationDark,\n    };\n\n    const { light: adaptedLight, dark: adaptedDark } = modes.reduce(\n      (prev, curr) => {\n        return {\n          ...prev,\n          [curr]: getAdaptedTheme(NavigationThemes[curr], MD3Themes[curr]),\n        };\n      },\n      {\n        light: reactNavigationLight,\n        dark: reactNavigationDark,\n      }\n    );\n\n    return {\n      LightTheme: adaptedLight,\n      DarkTheme: adaptedDark,\n    };\n  }\n\n  if (reactNavigationDark) {\n    return {\n      DarkTheme: getAdaptedTheme(reactNavigationDark, MD3Themes.dark),\n    };\n  }\n\n  return {\n    LightTheme: getAdaptedTheme(reactNavigationLight, MD3Themes.light),\n  };\n}\n\nexport const getDynamicThemeElevations = (scheme: MD3AndroidColors) => {\n  const elevationValues = ['transparent', 0.05, 0.08, 0.11, 0.12, 0.14];\n  return elevationValues.reduce((elevations, elevationValue, index) => {\n    return {\n      ...elevations,\n      [`level${index}`]:\n        index === 0\n          ? elevationValue\n          : color(scheme.surface)\n              .mix(color(scheme.primary), elevationValue as number)\n              .rgb()\n              .string(),\n    };\n  }, {});\n};\n","export { MD3Colors } from './styles/themes/v3/tokens';\n\nexport {\n  useTheme,\n  withTheme,\n  ThemeProvider,\n  DefaultTheme,\n  adaptNavigationTheme,\n} from './core/theming';\n\nexport * from './styles/themes';\n\nexport { default as Provider } from './core/PaperProvider';\nexport { default as PaperProvider } from './core/PaperProvider';\nexport { default as shadow } from './styles/shadow';\nexport { default as overlay } from './styles/overlay';\nexport { default as configureFonts } from './styles/fonts';\n\nimport * as Avatar from './components/Avatar/Avatar';\nimport * as Drawer from './components/Drawer/Drawer';\nimport * as List from './components/List/List';\nimport * as MD2Colors from './styles/themes/v2/colors';\n\nexport { MD2Colors };\nexport { Avatar, List, Drawer };\n\nexport * from './components/FAB/AnimatedFAB';\n\nexport { default as Badge } from './components/Badge';\nexport { default as ActivityIndicator } from './components/ActivityIndicator';\nexport { default as Banner } from './components/Banner';\nexport { default as BottomNavigation } from './components/BottomNavigation/BottomNavigation';\nexport { default as Button } from './components/Button/Button';\nexport { default as Card } from './components/Card/Card';\nexport { default as Checkbox } from './components/Checkbox';\nexport { default as Chip } from './components/Chip/Chip';\nexport { default as DataTable } from './components/DataTable/DataTable';\nexport { default as Dialog } from './components/Dialog/Dialog';\nexport { default as Divider } from './components/Divider';\nexport { default as FAB } from './components/FAB';\nexport { default as AnimatedFAB } from './components/FAB/AnimatedFAB';\nexport { default as HelperText } from './components/HelperText/HelperText';\nexport { default as Icon } from './components/Icon';\nexport { default as IconButton } from './components/IconButton/IconButton';\nexport { default as Menu } from './components/Menu/Menu';\nexport { default as Modal } from './components/Modal';\nexport { default as Portal } from './components/Portal/Portal';\nexport { default as ProgressBar } from './components/ProgressBar';\nexport { default as RadioButton } from './components/RadioButton';\nexport { default as Searchbar } from './components/Searchbar';\nexport { default as Snackbar } from './components/Snackbar';\nexport { default as Surface } from './components/Surface';\nexport { default as Switch } from './components/Switch/Switch';\nexport { default as Appbar } from './components/Appbar';\nexport { default as TouchableRipple } from './components/TouchableRipple/TouchableRipple';\nexport { default as TextInput } from './components/TextInput/TextInput';\nexport { default as ToggleButton } from './components/ToggleButton';\nexport { default as SegmentedButtons } from './components/SegmentedButtons/SegmentedButtons';\nexport { default as Tooltip } from './components/Tooltip/Tooltip';\n\nexport {\n  Caption,\n  Headline,\n  Paragraph,\n  Subheading,\n  Title,\n} from './components/Typography/v2';\nexport { default as Text, customText } from './components/Typography/Text';\n\n// Types\nexport type { Props as ActivityIndicatorProps } from './components/ActivityIndicator';\nexport type { Props as AnimatedFABProps } from './components/FAB/AnimatedFAB';\nexport type { Props as AppbarProps } from './components/Appbar/Appbar';\nexport type { Props as AppbarActionProps } from './components/Appbar/AppbarAction';\nexport type { Props as AppbarBackActionProps } from './components/Appbar/AppbarBackAction';\nexport type { Props as AppbarContentProps } from './components/Appbar/AppbarContent';\nexport type { Props as AppbarHeaderProps } from './components/Appbar/AppbarHeader';\nexport type { Props as AvatarIconProps } from './components/Avatar/AvatarIcon';\nexport type { Props as AvatarImageProps } from './components/Avatar/AvatarImage';\nexport type { Props as AvatarTextProps } from './components/Avatar/AvatarText';\nexport type { Props as BadgeProps } from './components/Badge';\nexport type { Props as BannerProps } from './components/Banner';\nexport type {\n  Props as BottomNavigationProps,\n  BaseRoute as BottomNavigationRoute,\n} from './components/BottomNavigation/BottomNavigation';\nexport type { Props as ButtonProps } from './components/Button/Button';\nexport type { Props as CardProps } from './components/Card/Card';\nexport type { Props as CardActionsProps } from './components/Card/CardActions';\nexport type { Props as CardContentProps } from './components/Card/CardContent';\nexport type { Props as CardCoverProps } from './components/Card/CardCover';\nexport type { Props as CardTitleProps } from './components/Card/CardTitle';\nexport type { Props as CheckboxProps } from './components/Checkbox/Checkbox';\nexport type { Props as CheckboxAndroidProps } from './components/Checkbox/CheckboxAndroid';\nexport type { Props as CheckboxIOSProps } from './components/Checkbox/CheckboxIOS';\nexport type { Props as CheckboxItemProps } from './components/Checkbox/CheckboxItem';\nexport type { Props as ChipProps } from './components/Chip/Chip';\nexport type { Props as DataTableProps } from './components/DataTable/DataTable';\nexport type { Props as DataTableCellProps } from './components/DataTable/DataTableCell';\nexport type { Props as DataTableHeaderProps } from './components/DataTable/DataTableHeader';\nexport type { Props as DataTablePaginationProps } from './components/DataTable/DataTablePagination';\nexport type { Props as DataTableRowProps } from './components/DataTable/DataTableRow';\nexport type { Props as DataTableTitleProps } from './components/DataTable/DataTableTitle';\nexport type { Props as DialogProps } from './components/Dialog/Dialog';\nexport type { Props as DialogActionsProps } from './components/Dialog/DialogActions';\nexport type { Props as DialogContentProps } from './components/Dialog/DialogContent';\nexport type { Props as DialogIconProps } from './components/Dialog/DialogIcon';\nexport type { Props as DialogScrollAreaProps } from './components/Dialog/DialogScrollArea';\nexport type { Props as DialogTitleProps } from './components/Dialog/DialogTitle';\nexport type { Props as DividerProps } from './components/Divider';\nexport type { Props as DrawerCollapsedItemProps } from './components/Drawer/DrawerCollapsedItem';\nexport type { Props as DrawerItemProps } from './components/Drawer/DrawerItem';\nexport type { Props as DrawerSectionProps } from './components/Drawer/DrawerSection';\nexport type { Props as FABProps } from './components/FAB/FAB';\nexport type { Props as FABGroupProps } from './components/FAB/FABGroup';\nexport type { Props as HelperTextProps } from './components/HelperText/HelperText';\nexport type { Props as IconButtonProps } from './components/IconButton/IconButton';\nexport type { Props as ListAccordionProps } from './components/List/ListAccordion';\nexport type { Props as ListAccordionGroupProps } from './components/List/ListAccordionGroup';\nexport type { Props as ListIconProps } from './components/List/ListIcon';\nexport type { Props as ListItemProps } from './components/List/ListItem';\nexport type { Props as ListSectionProps } from './components/List/ListSection';\nexport type { Props as ListSubheaderProps } from './components/List/ListSubheader';\nexport type { Props as MenuProps } from './components/Menu/Menu';\nexport type { Props as MenuItemProps } from './components/Menu/MenuItem';\nexport type { Props as ModalProps } from './components/Modal';\nexport type { Props as PortalProps } from './components/Portal/Portal';\nexport type { Props as PortalHostProps } from './components/Portal/PortalHost';\nexport type { Props as ProgressBarProps } from './components/ProgressBar';\nexport type { Props as ProviderProps } from './core/PaperProvider';\nexport type { Props as RadioButtonProps } from './components/RadioButton/RadioButton';\nexport type { Props as RadioButtonAndroidProps } from './components/RadioButton/RadioButtonAndroid';\nexport type { Props as RadioButtonGroupProps } from './components/RadioButton/RadioButtonGroup';\nexport type { Props as RadioButtonIOSProps } from './components/RadioButton/RadioButtonIOS';\nexport type { Props as RadioButtonItemProps } from './components/RadioButton/RadioButtonItem';\nexport type { Props as SearchbarProps } from './components/Searchbar';\nexport type { Props as SnackbarProps } from './components/Snackbar';\nexport type { Props as SurfaceProps } from './components/Surface';\nexport type { Props as SwitchProps } from './components/Switch/Switch';\nexport type { Props as TextInputProps } from './components/TextInput/TextInput';\nexport type { Props as TextInputAffixProps } from './components/TextInput/Adornment/TextInputAffix';\nexport type { Props as TextInputIconProps } from './components/TextInput/Adornment/TextInputIcon';\nexport type { Props as ToggleButtonProps } from './components/ToggleButton/ToggleButton';\nexport type { Props as ToggleButtonGroupProps } from './components/ToggleButton/ToggleButtonGroup';\nexport type { Props as ToggleButtonRowProps } from './components/ToggleButton/ToggleButtonRow';\nexport type { Props as TouchableRippleProps } from './components/TouchableRipple/TouchableRipple';\nexport type { Props as CaptionProps } from './components/Typography/v2/Caption';\nexport type { Props as HeadlineProps } from './components/Typography/v2/Headline';\nexport type { Props as ParagraphProps } from './components/Typography/v2/Paragraph';\nexport type { Props as SubheadingProps } from './components/Typography/v2/Subheading';\nexport type { Props as TitleProps } from './components/Typography/v2/Title';\nexport type { Props as TextProps } from './components/Typography/Text';\nexport type { Props as SegmentedButtonsProps } from './components/SegmentedButtons/SegmentedButtons';\nexport type { Props as ListImageProps } from './components/List/ListImage';\nexport type { Props as TooltipProps } from './components/Tooltip/Tooltip';\nexport type {\n  MaterialBottomTabNavigationEventMap,\n  MaterialBottomTabNavigationOptions,\n  MaterialBottomTabNavigationProp,\n  MaterialBottomTabScreenProps,\n} from './react-navigation';\n\nexport type {\n  MD2Theme,\n  MD3Theme,\n  ThemeBase,\n  MD3Elevation,\n  MD3TypescaleKey,\n} from './types';\n"],"names":["React","e","r","__esModule","default","t","_getRequireWildcardCache","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","_interopRequireWildcard","require","_reactNative","_SafeAreaProviderCompat","_interopRequireDefault","_settings","_theming","_MaterialCommunityIcon","_PortalHost","_addEventListener","_jsxRuntime","WeakMap","exports","props","isOnlyVersionInTheme","theme","keys","length","version","colorSchemeName","Appearance","getColorScheme","_React$useState","useState","_React$useState2","_slicedToArray2","reduceMotionEnabled","setReduceMotionEnabled","_React$useState3","_React$useState4","colorScheme","setColorScheme","handleAppearanceChange","preferences","useEffect","subscription","addEventListener","AccessibilityInfo","_subscription","remove","appearanceSubscription","addChangeListener","removeChangeListener","_props$theme","_props$theme2","themeVersion","scheme","defaultThemeBase","extendedThemeBase","children","settings","jsx","Provider","value","assign","icon","MaterialCommunityIcon","rippleEffectEnabled","ThemeProvider","defaultThemesByVersion","animation","scale","isV3","_reactNativeSafeAreaContext","_Dimensions$get","Dimensions","_Dimensions$get$width","width","_Dimensions$get$heigh","height","initialMetrics","Platform","OS","initialWindowMetrics","frame","x","y","insets","top","left","right","bottom","SafeAreaProviderCompat","_ref","style","SafeAreaInsetsContext","Consumer","View","styles","container","SafeAreaProvider","StyleSheet","create","flex","SettingsContext","createContext","themes","reactNavigationLight","reactNavigationDark","materialLight","materialDark","getAdaptedTheme","navigationTheme","MD3Theme","colors","primary","background","card","elevation","level2","text","onSurface","border","outline","notification","error","MD3Themes","light","MD3LightTheme","dark","MD3DarkTheme","NavigationThemes","_modes$reduce","reduce","prev","curr","_defineProperty2","LightTheme","DarkTheme","overrides","useAppTheme","_reactThemeProvider","_color","_themes","_createTheming","createTheming","withTheme","useTheme","themeOverrides","WrappedComponent","MD2LightTheme","MD2DarkTheme","arguments","undefined","elevations","elevationValue","index","color","surface","mix","rgb","string","_tokens","forEach","key","prototype","_exportNames","enumerable","_PaperProvider","_shadow","_overlay","_fonts","Avatar","Drawer","List","MD2Colors","_AnimatedFAB","_Badge","_ActivityIndicator","_Banner","_BottomNavigation","_Button","_Card","_Checkbox","_Chip","_DataTable","_Dialog","_Divider","_FAB","_HelperText","_Icon","_IconButton","_Menu","_Modal","_Portal","_ProgressBar","_RadioButton","_Searchbar","_Snackbar","_Surface","_Switch","_Appbar","_TouchableRipple","_TextInput","_ToggleButton","_SegmentedButtons","_Tooltip","_v","_Text"],"sourceRoot":""}