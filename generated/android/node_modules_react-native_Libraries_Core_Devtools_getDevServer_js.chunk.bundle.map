{"version":3,"file":"node_modules_react-native_Libraries_Core_Devtools_getDevServer_js.chunk.bundle","mappings":"yJAYIA,EACAC,EAHJC,E,QAAAC,CAAAC,EAAA,QAgCAC,EAAOC,QAfP,WAAwC,IAADC,EACrC,QAA4BC,IAAxBR,EAAmC,CACrC,IAAMS,EAAYC,EAAAA,QAAiBC,eAAeC,UAC5CC,EAAQJ,EAAUI,MAAM,qBAC9Bb,EAAsBa,EAAQA,EAAM,GAAK,KACzCZ,EAAuBY,EAAQJ,EAAY,IAC7C,CAEA,MAAO,CACLK,IAAwB,OAArBP,EAAEP,GAAmBO,EAtBX,yBAuBbQ,cAAed,EACfe,uBAAgD,OAAxBhB,EAE5B,C","sources":["webpack:///./node_modules/react-native/Libraries/Core/Devtools/getDevServer.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict\n */\n\nimport NativeSourceCode from '../../NativeModules/specs/NativeSourceCode';\n\nlet _cachedDevServerURL: ?string;\nlet _cachedFullBundleURL: ?string;\nconst FALLBACK = 'http://localhost:8081/';\n\ntype DevServerInfo = {\n  url: string,\n  fullBundleUrl: ?string,\n  bundleLoadedFromServer: boolean,\n  ...\n};\n\n/**\n * Many RN development tools rely on the development server (packager) running\n * @return URL to packager with trailing slash\n */\nfunction getDevServer(): DevServerInfo {\n  if (_cachedDevServerURL === undefined) {\n    const scriptUrl = NativeSourceCode.getConstants().scriptURL;\n    const match = scriptUrl.match(/^https?:\\/\\/.*?\\//);\n    _cachedDevServerURL = match ? match[0] : null;\n    _cachedFullBundleURL = match ? scriptUrl : null;\n  }\n\n  return {\n    url: _cachedDevServerURL ?? FALLBACK,\n    fullBundleUrl: _cachedFullBundleURL,\n    bundleLoadedFromServer: _cachedDevServerURL !== null,\n  };\n}\n\nmodule.exports = getDevServer;\n"],"names":["_cachedDevServerURL","_cachedFullBundleURL","_NativeSourceCode","_interopRequireDefault","require","module","exports","_cachedDevServerURL2","undefined","scriptUrl","NativeSourceCode","getConstants","scriptURL","match","url","fullBundleUrl","bundleLoadedFromServer"],"sourceRoot":""}