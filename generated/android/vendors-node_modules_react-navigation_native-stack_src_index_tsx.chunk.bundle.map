{"version":3,"file":"vendors-node_modules_react-navigation_native-stack_src_index_tsx.chunk.bundle","mappings":"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","sources":["webpack:///./node_modules/@react-navigation/native-stack/src/index.tsx","webpack:///./node_modules/@react-navigation/native-stack/src/navigators/createNativeStackNavigator.tsx","webpack:///./node_modules/@react-navigation/native-stack/src/utils/useDismissedRouteError.tsx","webpack:///./node_modules/@react-navigation/native-stack/src/utils/useInvalidPreventRemoveError.tsx","webpack:///./node_modules/@react-navigation/native-stack/src/views/DebugContainer.native.tsx","webpack:///./node_modules/@react-navigation/native-stack/src/views/FontProcessor.native.tsx","webpack:///./node_modules/@react-navigation/native-stack/src/views/HeaderConfig.tsx","webpack:///./node_modules/@react-navigation/native-stack/src/views/NativeStackView.native.tsx"],"sourcesContent":["/**\n * Navigators\n */\nexport { default as createNativeStackNavigator } from './navigators/createNativeStackNavigator';\n\n/**\n * Views\n */\nexport { default as NativeStackView } from './views/NativeStackView';\n\n/**\n * Types\n */\nexport type {\n  NativeStackHeaderProps,\n  NativeStackNavigationEventMap,\n  NativeStackNavigationOptions,\n  NativeStackNavigationProp,\n  NativeStackScreenProps,\n} from './types';\n","import {\n  createNavigatorFactory,\n  EventArg,\n  ParamListBase,\n  StackActionHelpers,\n  StackActions,\n  StackNavigationState,\n  StackRouter,\n  StackRouterOptions,\n  useNavigationBuilder,\n} from '@react-navigation/native';\nimport * as React from 'react';\n\nimport type {\n  NativeStackNavigationEventMap,\n  NativeStackNavigationOptions,\n  NativeStackNavigatorProps,\n} from '../types';\nimport NativeStackView from '../views/NativeStackView';\n\nfunction NativeStackNavigator({\n  id,\n  initialRouteName,\n  children,\n  screenListeners,\n  screenOptions,\n  ...rest\n}: NativeStackNavigatorProps) {\n  const { state, descriptors, navigation, NavigationContent } =\n    useNavigationBuilder<\n      StackNavigationState<ParamListBase>,\n      StackRouterOptions,\n      StackActionHelpers<ParamListBase>,\n      NativeStackNavigationOptions,\n      NativeStackNavigationEventMap\n    >(StackRouter, {\n      id,\n      initialRouteName,\n      children,\n      screenListeners,\n      screenOptions,\n    });\n\n  React.useEffect(\n    () =>\n      // @ts-expect-error: there may not be a tab navigator in parent\n      navigation?.addListener?.('tabPress', (e: any) => {\n        const isFocused = navigation.isFocused();\n\n        // Run the operation in the next frame so we're sure all listeners have been run\n        // This is necessary to know if preventDefault() has been called\n        requestAnimationFrame(() => {\n          if (\n            state.index > 0 &&\n            isFocused &&\n            !(e as EventArg<'tabPress', true>).defaultPrevented\n          ) {\n            // When user taps on already focused tab and we're inside the tab,\n            // reset the stack to replicate native behaviour\n            navigation.dispatch({\n              ...StackActions.popToTop(),\n              target: state.key,\n            });\n          }\n        });\n      }),\n    [navigation, state.index, state.key]\n  );\n\n  return (\n    <NavigationContent>\n      <NativeStackView\n        {...rest}\n        state={state}\n        navigation={navigation}\n        descriptors={descriptors}\n      />\n    </NavigationContent>\n  );\n}\n\nexport default createNavigatorFactory<\n  StackNavigationState<ParamListBase>,\n  NativeStackNavigationOptions,\n  NativeStackNavigationEventMap,\n  typeof NativeStackNavigator\n>(NativeStackNavigator);\n","import type {\n  ParamListBase,\n  StackNavigationState,\n} from '@react-navigation/native';\nimport * as React from 'react';\n\nexport default function useInvalidPreventRemoveError(\n  state: StackNavigationState<ParamListBase>\n) {\n  const [nextDismissedKey, setNextDismissedKey] = React.useState<string | null>(\n    null\n  );\n\n  const dismissedRouteName = nextDismissedKey\n    ? state.routes.find((route) => route.key === nextDismissedKey)?.name\n    : null;\n\n  React.useEffect(() => {\n    if (dismissedRouteName) {\n      const message =\n        `The screen '${dismissedRouteName}' was removed natively but didn't get removed from JS state. ` +\n        `This can happen if the action was prevented in a 'beforeRemove' listener, which is not fully supported in native-stack.\\n\\n` +\n        `Consider using a 'usePreventRemove' hook with 'headerBackButtonMenuEnabled: false' to prevent users from natively going back multiple screens.`;\n\n      console.error(message);\n    }\n  }, [dismissedRouteName]);\n\n  return { setNextDismissedKey };\n}\n","import { usePreventRemoveContext } from '@react-navigation/native';\nimport * as React from 'react';\n\nimport type { NativeStackDescriptorMap } from '../types';\n\nexport default function useInvalidPreventRemoveError(\n  descriptors: NativeStackDescriptorMap\n) {\n  const { preventedRoutes } = usePreventRemoveContext();\n  const preventedRouteKey = Object.keys(preventedRoutes)[0];\n  const preventedDescriptor = descriptors[preventedRouteKey];\n  const isHeaderBackButtonMenuEnabledOnPreventedScreen =\n    preventedDescriptor?.options?.headerBackButtonMenuEnabled;\n  const preventedRouteName = preventedDescriptor?.route?.name;\n\n  React.useEffect(() => {\n    if (\n      preventedRouteKey != null &&\n      isHeaderBackButtonMenuEnabledOnPreventedScreen\n    ) {\n      const message =\n        `The screen ${preventedRouteName} uses 'usePreventRemove' hook alongside 'headerBackButtonMenuEnabled: true', which is not supported. \\n\\n` +\n        `Consider removing 'headerBackButtonMenuEnabled: true' from ${preventedRouteName} screen to get rid of this error.`;\n      console.error(message);\n    }\n  }, [\n    preventedRouteKey,\n    isHeaderBackButtonMenuEnabledOnPreventedScreen,\n    preventedRouteName,\n  ]);\n}\n","import * as React from 'react';\nimport { Platform, View, ViewProps } from 'react-native';\n// @ts-ignore Getting private component\nimport AppContainer from 'react-native/Libraries/ReactNative/AppContainer';\nimport type { StackPresentationTypes } from 'react-native-screens';\n\ntype ContainerProps = ViewProps & {\n  stackPresentation: StackPresentationTypes;\n  children: React.ReactNode;\n};\n\n/**\n * This view must *not* be flattened.\n * See https://github.com/software-mansion/react-native-screens/pull/1825\n * for detailed explanation.\n */\nlet DebugContainer = (props: ContainerProps) => {\n  return <View {...props} collapsable={false} />;\n};\n\nif (process.env.NODE_ENV !== 'production') {\n  DebugContainer = (props: ContainerProps) => {\n    const { stackPresentation, ...rest } = props;\n\n    if (Platform.OS === 'ios' && stackPresentation !== 'push') {\n      // This is necessary for LogBox\n      return (\n        <AppContainer>\n          <View {...rest} collapsable={false} />\n        </AppContainer>\n      );\n    }\n\n    return <View {...rest} collapsable={false} />;\n  };\n}\n\nexport default DebugContainer;\n","// @ts-ignore: No declaration available\nimport ReactNativeStyleAttributes from 'react-native/Libraries/Components/View/ReactNativeStyleAttributes';\n\nexport function processFonts(\n  fontFamilies: (string | undefined)[]\n): (string | undefined)[] {\n  // @ts-ignore: React Native types are incorrect here and don't consider fontFamily a style value\n  const fontFamilyProcessor = ReactNativeStyleAttributes.fontFamily?.process;\n  if (typeof fontFamilyProcessor === 'function') {\n    return fontFamilies.map(fontFamilyProcessor);\n  }\n  return fontFamilies;\n}\n","import { getHeaderTitle, HeaderTitle } from '@react-navigation/elements';\nimport { Route, useTheme } from '@react-navigation/native';\nimport * as React from 'react';\nimport {\n  I18nManager,\n  Platform,\n  StyleSheet,\n  TextStyle,\n  View,\n} from 'react-native';\nimport {\n  // @ts-expect-error: Available since react-native-screens v3.21\n  isNewBackTitleImplementation,\n  isSearchBarAvailableForCurrentPlatform,\n  ScreenStackHeaderBackButtonImage,\n  ScreenStackHeaderCenterView,\n  ScreenStackHeaderConfig,\n  ScreenStackHeaderLeftView,\n  ScreenStackHeaderRightView,\n  ScreenStackHeaderSearchBarView,\n  SearchBar,\n} from 'react-native-screens';\n\nimport type { NativeStackNavigationOptions } from '../types';\nimport { processFonts } from './FontProcessor';\n\ntype Props = NativeStackNavigationOptions & {\n  headerTopInsetEnabled: boolean;\n  headerHeight: number;\n  route: Route<string>;\n  canGoBack: boolean;\n};\n\nexport default function HeaderConfig({\n  headerBackImageSource,\n  headerBackButtonMenuEnabled,\n  headerBackTitle,\n  headerBackTitleStyle,\n  headerBackTitleVisible = true,\n  headerBackVisible,\n  headerShadowVisible,\n  headerLargeStyle,\n  headerLargeTitle,\n  headerLargeTitleShadowVisible,\n  headerLargeTitleStyle,\n  headerBackground,\n  headerLeft,\n  headerRight,\n  headerShown,\n  headerStyle,\n  headerBlurEffect,\n  headerTintColor,\n  headerTitle,\n  headerTitleAlign,\n  headerTitleStyle,\n  headerTransparent,\n  headerSearchBarOptions,\n  headerTopInsetEnabled,\n  route,\n  title,\n  canGoBack,\n}: Props): JSX.Element {\n  const { colors } = useTheme();\n  const tintColor =\n    headerTintColor ?? (Platform.OS === 'ios' ? colors.primary : colors.text);\n\n  const headerBackTitleStyleFlattened =\n    StyleSheet.flatten(headerBackTitleStyle) || {};\n  const headerLargeTitleStyleFlattened =\n    StyleSheet.flatten(headerLargeTitleStyle) || {};\n  const headerTitleStyleFlattened = StyleSheet.flatten(headerTitleStyle) || {};\n  const headerStyleFlattened = StyleSheet.flatten(headerStyle) || {};\n  const headerLargeStyleFlattened = StyleSheet.flatten(headerLargeStyle) || {};\n\n  const [backTitleFontFamily, largeTitleFontFamily, titleFontFamily] =\n    processFonts([\n      headerBackTitleStyleFlattened.fontFamily,\n      headerLargeTitleStyleFlattened.fontFamily,\n      headerTitleStyleFlattened.fontFamily,\n    ]);\n\n  const titleText = getHeaderTitle({ title, headerTitle }, route.name);\n  const titleColor =\n    headerTitleStyleFlattened.color ?? headerTintColor ?? colors.text;\n  const titleFontSize = headerTitleStyleFlattened.fontSize;\n  const titleFontWeight = headerTitleStyleFlattened.fontWeight;\n\n  const headerTitleStyleSupported: TextStyle = { color: titleColor };\n\n  if (headerTitleStyleFlattened.fontFamily != null) {\n    headerTitleStyleSupported.fontFamily = headerTitleStyleFlattened.fontFamily;\n  }\n\n  if (titleFontSize != null) {\n    headerTitleStyleSupported.fontSize = titleFontSize;\n  }\n\n  if (titleFontWeight != null) {\n    headerTitleStyleSupported.fontWeight = titleFontWeight;\n  }\n\n  const headerLeftElement = headerLeft?.({\n    tintColor,\n    canGoBack,\n    label: headerBackTitle,\n  });\n  const headerRightElement = headerRight?.({\n    tintColor,\n    canGoBack,\n  });\n  const headerTitleElement =\n    typeof headerTitle === 'function'\n      ? headerTitle({\n          tintColor,\n          children: titleText,\n        })\n      : null;\n\n  const supportsHeaderSearchBar =\n    typeof isSearchBarAvailableForCurrentPlatform === 'boolean'\n      ? isSearchBarAvailableForCurrentPlatform\n      : // Fallback for older versions of react-native-screens\n        Platform.OS === 'ios' && SearchBar != null;\n\n  const hasHeaderSearchBar =\n    supportsHeaderSearchBar && headerSearchBarOptions != null;\n\n  if (headerSearchBarOptions != null && !supportsHeaderSearchBar) {\n    throw new Error(\n      `The current version of 'react-native-screens' doesn't support SearchBar in the header. Please update to the latest version to use this option.`\n    );\n  }\n\n  /**\n   * We need to set this in if:\n   * - Back button should stay visible when `headerLeft` is specified\n   * - If `headerTitle` for Android is specified, so we only need to remove the title and keep the back button\n   */\n  const backButtonInCustomView = headerBackVisible\n    ? headerLeftElement != null\n    : Platform.OS === 'android' && headerTitleElement != null;\n\n  const translucent =\n    headerBackground != null ||\n    headerTransparent ||\n    // When using a SearchBar or large title, the header needs to be translucent for it to work on iOS\n    ((hasHeaderSearchBar || headerLargeTitle) &&\n      Platform.OS === 'ios' &&\n      headerTransparent !== false);\n\n  return (\n    <ScreenStackHeaderConfig\n      backButtonInCustomView={backButtonInCustomView}\n      backgroundColor={\n        headerStyleFlattened.backgroundColor ??\n        (headerBackground != null || headerTransparent\n          ? 'transparent'\n          : colors.card)\n      }\n      backTitle={\n        isNewBackTitleImplementation || headerBackTitleVisible\n          ? headerBackTitle\n          : ' '\n      }\n      // @ts-expect-error: Available since react-native-screens v3.21\n      backTitleVisible={headerBackTitleVisible}\n      backTitleFontFamily={backTitleFontFamily}\n      backTitleFontSize={headerBackTitleStyleFlattened.fontSize}\n      blurEffect={headerBlurEffect}\n      color={tintColor}\n      direction={I18nManager.getConstants().isRTL ? 'rtl' : 'ltr'}\n      disableBackButtonMenu={headerBackButtonMenuEnabled === false}\n      hidden={headerShown === false}\n      hideBackButton={headerBackVisible === false}\n      hideShadow={\n        headerShadowVisible === false ||\n        headerBackground != null ||\n        (headerTransparent && headerShadowVisible !== true)\n      }\n      largeTitle={headerLargeTitle}\n      largeTitleBackgroundColor={headerLargeStyleFlattened.backgroundColor}\n      largeTitleColor={headerLargeTitleStyleFlattened.color}\n      largeTitleFontFamily={largeTitleFontFamily}\n      largeTitleFontSize={headerLargeTitleStyleFlattened.fontSize}\n      largeTitleFontWeight={headerLargeTitleStyleFlattened.fontWeight}\n      largeTitleHideShadow={headerLargeTitleShadowVisible === false}\n      title={titleText}\n      titleColor={titleColor}\n      titleFontFamily={titleFontFamily}\n      titleFontSize={titleFontSize}\n      titleFontWeight={titleFontWeight}\n      topInsetEnabled={headerTopInsetEnabled}\n      translucent={\n        // This defaults to `true`, so we can't pass `undefined`\n        translucent === true\n      }\n    >\n      {Platform.OS === 'ios' ? (\n        <>\n          {headerLeftElement != null ? (\n            <ScreenStackHeaderLeftView>\n              {headerLeftElement}\n            </ScreenStackHeaderLeftView>\n          ) : null}\n          {headerTitleElement != null ? (\n            <ScreenStackHeaderCenterView>\n              {headerTitleElement}\n            </ScreenStackHeaderCenterView>\n          ) : null}\n        </>\n      ) : (\n        <>\n          {headerLeftElement != null || typeof headerTitle === 'function' ? (\n            <ScreenStackHeaderLeftView>\n              <View style={styles.row}>\n                {headerLeftElement}\n                {headerTitleAlign !== 'center' ? (\n                  typeof headerTitle === 'function' ? (\n                    headerTitleElement\n                  ) : (\n                    <HeaderTitle\n                      tintColor={tintColor}\n                      style={headerTitleStyleSupported}\n                    >\n                      {titleText}\n                    </HeaderTitle>\n                  )\n                ) : null}\n              </View>\n            </ScreenStackHeaderLeftView>\n          ) : null}\n          {headerTitleAlign === 'center' ? (\n            <ScreenStackHeaderCenterView>\n              {typeof headerTitle === 'function' ? (\n                headerTitleElement\n              ) : (\n                <HeaderTitle\n                  tintColor={tintColor}\n                  style={headerTitleStyleSupported}\n                >\n                  {titleText}\n                </HeaderTitle>\n              )}\n            </ScreenStackHeaderCenterView>\n          ) : null}\n        </>\n      )}\n      {headerBackImageSource !== undefined ? (\n        <ScreenStackHeaderBackButtonImage source={headerBackImageSource} />\n      ) : null}\n      {headerRightElement != null ? (\n        <ScreenStackHeaderRightView>\n          {headerRightElement}\n        </ScreenStackHeaderRightView>\n      ) : null}\n      {hasHeaderSearchBar ? (\n        <ScreenStackHeaderSearchBarView>\n          <SearchBar {...headerSearchBarOptions} />\n        </ScreenStackHeaderSearchBarView>\n      ) : null}\n    </ScreenStackHeaderConfig>\n  );\n}\n\nconst styles = StyleSheet.create({\n  row: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n});\n","import {\n  getDefaultHeaderHeight,\n  getHeaderTitle,\n  HeaderBackContext,\n  HeaderHeightContext,\n  HeaderShownContext,\n  SafeAreaProviderCompat,\n} from '@react-navigation/elements';\nimport {\n  NavigationContext,\n  NavigationRouteContext,\n  ParamListBase,\n  Route,\n  StackActions,\n  StackNavigationState,\n  usePreventRemoveContext,\n  useTheme,\n} from '@react-navigation/native';\nimport * as React from 'react';\nimport { Platform, StyleSheet, View } from 'react-native';\nimport {\n  useSafeAreaFrame,\n  useSafeAreaInsets,\n} from 'react-native-safe-area-context';\nimport type { ScreenProps } from 'react-native-screens';\nimport {\n  Screen,\n  ScreenStack,\n  StackPresentationTypes,\n} from 'react-native-screens';\nimport warnOnce from 'warn-once';\n\nimport type {\n  NativeStackDescriptor,\n  NativeStackDescriptorMap,\n  NativeStackNavigationHelpers,\n  NativeStackNavigationOptions,\n} from '../types';\nimport useDismissedRouteError from '../utils/useDismissedRouteError';\nimport useInvalidPreventRemoveError from '../utils/useInvalidPreventRemoveError';\nimport DebugContainer from './DebugContainer';\nimport HeaderConfig from './HeaderConfig';\n\nconst isAndroid = Platform.OS === 'android';\n\nconst MaybeNestedStack = ({\n  options,\n  route,\n  presentation,\n  headerHeight,\n  headerTopInsetEnabled,\n  children,\n}: {\n  options: NativeStackNavigationOptions;\n  route: Route<string>;\n  presentation: Exclude<StackPresentationTypes, 'push'> | 'card';\n  headerHeight: number;\n  headerTopInsetEnabled: boolean;\n  children: React.ReactNode;\n}) => {\n  const { colors } = useTheme();\n  const { header, headerShown = true, contentStyle } = options;\n\n  const isHeaderInModal = isAndroid\n    ? false\n    : presentation !== 'card' && headerShown === true && header === undefined;\n\n  const headerShownPreviousRef = React.useRef(headerShown);\n\n  React.useEffect(() => {\n    warnOnce(\n      !isAndroid &&\n        presentation !== 'card' &&\n        headerShownPreviousRef.current !== headerShown,\n      `Dynamically changing 'headerShown' in modals will result in remounting the screen and losing all local state. See options for the screen '${route.name}'.`\n    );\n\n    headerShownPreviousRef.current = headerShown;\n  }, [headerShown, presentation, route.name]);\n\n  const content = (\n    <DebugContainer\n      style={[\n        styles.container,\n        presentation !== 'transparentModal' &&\n          presentation !== 'containedTransparentModal' && {\n            backgroundColor: colors.background,\n          },\n        contentStyle,\n      ]}\n      stackPresentation={presentation === 'card' ? 'push' : presentation}\n    >\n      {children}\n    </DebugContainer>\n  );\n\n  if (isHeaderInModal) {\n    return (\n      <ScreenStack style={styles.container}>\n        <Screen enabled style={StyleSheet.absoluteFill}>\n          {content}\n          <HeaderConfig\n            {...options}\n            route={route}\n            headerHeight={headerHeight}\n            headerTopInsetEnabled={headerTopInsetEnabled}\n            canGoBack\n          />\n        </Screen>\n      </ScreenStack>\n    );\n  }\n\n  return content;\n};\n\ntype SceneViewProps = {\n  index: number;\n  focused: boolean;\n  descriptor: NativeStackDescriptor;\n  previousDescriptor?: NativeStackDescriptor;\n  nextDescriptor?: NativeStackDescriptor;\n  onWillDisappear: () => void;\n  onAppear: () => void;\n  onDisappear: () => void;\n  onDismissed: ScreenProps['onDismissed'];\n  onHeaderBackButtonClicked: ScreenProps['onHeaderBackButtonClicked'];\n  onNativeDismissCancelled: ScreenProps['onDismissed'];\n};\n\nconst SceneView = ({\n  index,\n  focused,\n  descriptor,\n  previousDescriptor,\n  nextDescriptor,\n  onWillDisappear,\n  onAppear,\n  onDisappear,\n  onDismissed,\n  onHeaderBackButtonClicked,\n  onNativeDismissCancelled,\n}: SceneViewProps) => {\n  const { route, navigation, options, render } = descriptor;\n  const {\n    animationDuration,\n    animationTypeForReplace = 'push',\n    gestureEnabled,\n    header,\n    headerBackButtonMenuEnabled,\n    headerShown,\n    headerBackground,\n    headerTransparent,\n    autoHideHomeIndicator,\n    navigationBarColor,\n    navigationBarHidden,\n    orientation,\n    statusBarAnimation,\n    statusBarHidden,\n    statusBarStyle,\n    statusBarTranslucent,\n    statusBarColor,\n    freezeOnBlur,\n  } = options;\n\n  let {\n    animation,\n    customAnimationOnGesture,\n    fullScreenGestureEnabled,\n    presentation = 'card',\n    gestureDirection = presentation === 'card' ? 'horizontal' : 'vertical',\n  } = options;\n\n  if (gestureDirection === 'vertical' && Platform.OS === 'ios') {\n    // for `vertical` direction to work, we need to set `fullScreenGestureEnabled` to `true`\n    // so the screen can be dismissed from any point on screen.\n    // `customAnimationOnGesture` needs to be set to `true` so the `animation` set by user can be used,\n    // otherwise `simple_push` will be used.\n    // Also, the default animation for this direction seems to be `slide_from_bottom`.\n    if (fullScreenGestureEnabled === undefined) {\n      fullScreenGestureEnabled = true;\n    }\n    if (customAnimationOnGesture === undefined) {\n      customAnimationOnGesture = true;\n    }\n    if (animation === undefined) {\n      animation = 'slide_from_bottom';\n    }\n  }\n\n  // workaround for rn-screens where gestureDirection has to be set on both\n  // current and previous screen - software-mansion/react-native-screens/pull/1509\n  const nextGestureDirection = nextDescriptor?.options.gestureDirection;\n  const gestureDirectionOverride =\n    nextGestureDirection != null ? nextGestureDirection : gestureDirection;\n\n  if (index === 0) {\n    // first screen should always be treated as `card`, it resolves problems with no header animation\n    // for navigator with first screen as `modal` and the next as `card`\n    presentation = 'card';\n  }\n\n  const insets = useSafeAreaInsets();\n  const frame = useSafeAreaFrame();\n\n  // `modal` and `formSheet` presentations do not take whole screen, so should not take the inset.\n  const isModal = presentation === 'modal' || presentation === 'formSheet';\n\n  // Modals are fullscreen in landscape only on iPhone\n  const isIPhone = Platform.OS === 'ios' && !(Platform.isPad || Platform.isTV);\n  const isLandscape = frame.width > frame.height;\n\n  const isParentHeaderShown = React.useContext(HeaderShownContext);\n  const parentHeaderHeight = React.useContext(HeaderHeightContext);\n  const parentHeaderBack = React.useContext(HeaderBackContext);\n\n  const topInset =\n    isParentHeaderShown ||\n    (Platform.OS === 'ios' && isModal) ||\n    (isIPhone && isLandscape)\n      ? 0\n      : insets.top;\n\n  // On models with Dynamic Island the status bar height is smaller than the safe area top inset.\n  const hasDynamicIsland = Platform.OS === 'ios' && topInset > 50;\n  const statusBarHeight = hasDynamicIsland ? topInset - 5 : topInset;\n\n  const { preventedRoutes } = usePreventRemoveContext();\n\n  const defaultHeaderHeight = getDefaultHeaderHeight(\n    frame,\n    isModal,\n    statusBarHeight\n  );\n\n  const [customHeaderHeight, setCustomHeaderHeight] =\n    React.useState(defaultHeaderHeight);\n\n  const headerTopInsetEnabled = topInset !== 0;\n  const headerHeight = header ? customHeaderHeight : defaultHeaderHeight;\n  const headerBack = previousDescriptor\n    ? {\n        title: getHeaderTitle(\n          previousDescriptor.options,\n          previousDescriptor.route.name\n        ),\n      }\n    : parentHeaderBack;\n\n  const isRemovePrevented = preventedRoutes[route.key]?.preventRemove;\n\n  return (\n    <Screen\n      key={route.key}\n      enabled\n      style={StyleSheet.absoluteFill}\n      customAnimationOnSwipe={customAnimationOnGesture}\n      fullScreenSwipeEnabled={fullScreenGestureEnabled}\n      gestureEnabled={\n        isAndroid\n          ? // This prop enables handling of system back gestures on Android\n            // Since we handle them in JS side, we disable this\n            false\n          : gestureEnabled\n      }\n      homeIndicatorHidden={autoHideHomeIndicator}\n      navigationBarColor={navigationBarColor}\n      navigationBarHidden={navigationBarHidden}\n      replaceAnimation={animationTypeForReplace}\n      stackPresentation={presentation === 'card' ? 'push' : presentation}\n      stackAnimation={animation}\n      screenOrientation={orientation}\n      statusBarAnimation={statusBarAnimation}\n      statusBarHidden={statusBarHidden}\n      statusBarStyle={statusBarStyle}\n      statusBarColor={statusBarColor}\n      statusBarTranslucent={statusBarTranslucent}\n      swipeDirection={gestureDirectionOverride}\n      transitionDuration={animationDuration}\n      onWillDisappear={onWillDisappear}\n      onAppear={onAppear}\n      onDisappear={onDisappear}\n      onDismissed={onDismissed}\n      isNativeStack\n      nativeBackButtonDismissalEnabled={false} // on Android\n      onHeaderBackButtonClicked={onHeaderBackButtonClicked}\n      // @ts-ignore props not exported from rn-screens\n      preventNativeDismiss={isRemovePrevented} // on iOS\n      onNativeDismissCancelled={onNativeDismissCancelled}\n      // this prop is available since rn-screens 3.16\n      freezeOnBlur={freezeOnBlur}\n    >\n      <NavigationContext.Provider value={navigation}>\n        <NavigationRouteContext.Provider value={route}>\n          <HeaderShownContext.Provider\n            value={isParentHeaderShown || headerShown !== false}\n          >\n            <HeaderHeightContext.Provider\n              value={\n                headerShown !== false ? headerHeight : parentHeaderHeight ?? 0\n              }\n            >\n              {headerBackground != null ? (\n                /**\n                 * To show a custom header background, we render it at the top of the screen below the header\n                 * The header also needs to be positioned absolutely (with `translucent` style)\n                 */\n                <View\n                  style={[\n                    styles.background,\n                    headerTransparent ? styles.translucent : null,\n                    { height: headerHeight },\n                  ]}\n                >\n                  {headerBackground()}\n                </View>\n              ) : null}\n              <View\n                accessibilityElementsHidden={!focused}\n                importantForAccessibility={\n                  focused ? 'auto' : 'no-hide-descendants'\n                }\n                style={styles.scene}\n              >\n                <MaybeNestedStack\n                  options={options}\n                  route={route}\n                  presentation={presentation}\n                  headerHeight={headerHeight}\n                  headerTopInsetEnabled={headerTopInsetEnabled}\n                >\n                  <HeaderBackContext.Provider value={headerBack}>\n                    {render()}\n                  </HeaderBackContext.Provider>\n                </MaybeNestedStack>\n                {header !== undefined && headerShown !== false ? (\n                  <View\n                    onLayout={(e) => {\n                      setCustomHeaderHeight(e.nativeEvent.layout.height);\n                    }}\n                    style={headerTransparent ? styles.absolute : null}\n                  >\n                    {header({\n                      back: headerBack,\n                      options,\n                      route,\n                      navigation,\n                    })}\n                  </View>\n                ) : null}\n              </View>\n              {/**\n               * `HeaderConfig` needs to be the direct child of `Screen` without any intermediate `View`\n               * We don't render it conditionally to make it possible to dynamically render a custom `header`\n               * Otherwise dynamically rendering a custom `header` leaves the native header visible\n               *\n               * https://github.com/software-mansion/react-native-screens/blob/main/guides/GUIDE_FOR_LIBRARY_AUTHORS.md#screenstackheaderconfig\n               *\n               * HeaderConfig must not be first child of a Screen.\n               * See https://github.com/software-mansion/react-native-screens/pull/1825\n               * for detailed explanation\n               */}\n              <HeaderConfig\n                {...options}\n                route={route}\n                headerBackButtonMenuEnabled={\n                  isRemovePrevented !== undefined\n                    ? !isRemovePrevented\n                    : headerBackButtonMenuEnabled\n                }\n                headerShown={header !== undefined ? false : headerShown}\n                headerHeight={headerHeight}\n                headerBackTitle={\n                  options.headerBackTitle !== undefined\n                    ? options.headerBackTitle\n                    : undefined\n                }\n                headerTopInsetEnabled={headerTopInsetEnabled}\n                canGoBack={headerBack !== undefined}\n              />\n            </HeaderHeightContext.Provider>\n          </HeaderShownContext.Provider>\n        </NavigationRouteContext.Provider>\n      </NavigationContext.Provider>\n    </Screen>\n  );\n};\n\ntype Props = {\n  state: StackNavigationState<ParamListBase>;\n  navigation: NativeStackNavigationHelpers;\n  descriptors: NativeStackDescriptorMap;\n};\n\nfunction NativeStackViewInner({ state, navigation, descriptors }: Props) {\n  const { setNextDismissedKey } = useDismissedRouteError(state);\n\n  useInvalidPreventRemoveError(descriptors);\n\n  return (\n    <ScreenStack style={styles.container}>\n      {state.routes.map((route, index) => {\n        const descriptor = descriptors[route.key];\n        const isFocused = state.index === index;\n        const previousKey = state.routes[index - 1]?.key;\n        const nextKey = state.routes[index + 1]?.key;\n        const previousDescriptor = previousKey\n          ? descriptors[previousKey]\n          : undefined;\n        const nextDescriptor = nextKey ? descriptors[nextKey] : undefined;\n\n        return (\n          <SceneView\n            key={route.key}\n            index={index}\n            focused={isFocused}\n            descriptor={descriptor}\n            previousDescriptor={previousDescriptor}\n            nextDescriptor={nextDescriptor}\n            onWillDisappear={() => {\n              navigation.emit({\n                type: 'transitionStart',\n                data: { closing: true },\n                target: route.key,\n              });\n            }}\n            onAppear={() => {\n              navigation.emit({\n                type: 'transitionEnd',\n                data: { closing: false },\n                target: route.key,\n              });\n            }}\n            onDisappear={() => {\n              navigation.emit({\n                type: 'transitionEnd',\n                data: { closing: true },\n                target: route.key,\n              });\n            }}\n            onDismissed={(event) => {\n              navigation.dispatch({\n                ...StackActions.pop(event.nativeEvent.dismissCount),\n                source: route.key,\n                target: state.key,\n              });\n\n              setNextDismissedKey(route.key);\n            }}\n            onHeaderBackButtonClicked={() => {\n              navigation.dispatch({\n                ...StackActions.pop(),\n                source: route.key,\n                target: state.key,\n              });\n            }}\n            onNativeDismissCancelled={(event) => {\n              navigation.dispatch({\n                ...StackActions.pop(event.nativeEvent.dismissCount),\n                source: route.key,\n                target: state.key,\n              });\n            }}\n          />\n        );\n      })}\n    </ScreenStack>\n  );\n}\n\nexport default function NativeStackView(props: Props) {\n  return (\n    <SafeAreaProviderCompat>\n      <NativeStackViewInner {...props} />\n    </SafeAreaProviderCompat>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  scene: {\n    flex: 1,\n    flexDirection: 'column-reverse',\n  },\n  absolute: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n  },\n  translucent: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    zIndex: 1,\n    elevation: 1,\n  },\n  background: {\n    overflow: 'hidden',\n  },\n});\n"],"names":["_createNativeStackNavigator","_interopRequireDefault","require","_NativeStackView","_native","React","e","r","__esModule","default","t","_getRequireWildcardCache","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","_interopRequireWildcard","_jsxRuntime","_excluded","WeakMap","exports","createNavigatorFactory","_ref","id","initialRouteName","children","screenListeners","screenOptions","rest","_objectWithoutProperties2","_useNavigationBuilder","useNavigationBuilder","StackRouter","state","descriptors","navigation","NavigationContent","useEffect","addListener","isFocused","requestAnimationFrame","index","defaultPrevented","dispatch","assign","StackActions","popToTop","target","key","jsx","_state$routes$find","_React$useState","useState","_React$useState2","_slicedToArray2","nextDismissedKey","setNextDismissedKey","dismissedRouteName","routes","find","route","name","message","console","error","_preventedDescriptor$","_preventedDescriptor$2","preventedRoutes","usePreventRemoveContext","preventedRouteKey","keys","preventedDescriptor","isHeaderBackButtonMenuEnabledOnPreventedScreen","options","headerBackButtonMenuEnabled","preventedRouteName","_reactNative","props","View","collapsable","fontFamilies","_ReactNativeStyleAttr","fontFamilyProcessor","ReactNativeStyleAttributes","fontFamily","process","map","_ReactNativeStyleAttributes","_ref2","_headerTitleStyleFlat","_headerStyleFlattened","headerBackImageSource","headerBackTitle","headerBackTitleStyle","_ref$headerBackTitleV","headerBackTitleVisible","headerBackVisible","headerShadowVisible","headerLargeStyle","headerLargeTitle","headerLargeTitleShadowVisible","headerLargeTitleStyle","headerBackground","headerLeft","headerRight","headerShown","headerStyle","headerBlurEffect","headerTintColor","headerTitle","headerTitleAlign","headerTitleStyle","headerTransparent","headerSearchBarOptions","headerTopInsetEnabled","title","canGoBack","colors","useTheme","tintColor","Platform","OS","primary","text","headerBackTitleStyleFlattened","StyleSheet","flatten","headerLargeTitleStyleFlattened","headerTitleStyleFlattened","headerStyleFlattened","headerLargeStyleFlattened","_processFonts","processFonts","_processFonts2","backTitleFontFamily","largeTitleFontFamily","titleFontFamily","titleText","getHeaderTitle","titleColor","color","titleFontSize","fontSize","titleFontWeight","fontWeight","headerTitleStyleSupported","headerLeftElement","label","headerRightElement","headerTitleElement","supportsHeaderSearchBar","isSearchBarAvailableForCurrentPlatform","SearchBar","hasHeaderSearchBar","Error","backButtonInCustomView","translucent","jsxs","_reactNativeScreens","ScreenStackHeaderConfig","backgroundColor","card","backTitle","isNewBackTitleImplementation","backTitleVisible","backTitleFontSize","blurEffect","direction","I18nManager","getConstants","isRTL","disableBackButtonMenu","hidden","hideBackButton","hideShadow","largeTitle","largeTitleBackgroundColor","largeTitleColor","largeTitleFontSize","largeTitleFontWeight","largeTitleHideShadow","topInsetEnabled","Fragment","ScreenStackHeaderLeftView","ScreenStackHeaderCenterView","style","styles","row","_elements","HeaderTitle","undefined","ScreenStackHeaderBackButtonImage","source","ScreenStackHeaderRightView","ScreenStackHeaderSearchBarView","_FontProcessor","create","flexDirection","alignItems","SafeAreaProviderCompat","NativeStackViewInner","_reactNativeSafeAreaContext","_warnOnce","_useDismissedRouteError","_useInvalidPreventRemoveError","_DebugContainer","_HeaderConfig","isAndroid","MaybeNestedStack","presentation","headerHeight","header","_options$headerShown","contentStyle","isHeaderInModal","headerShownPreviousRef","useRef","warnOnce","current","content","container","background","stackPresentation","ScreenStack","Screen","enabled","absoluteFill","SceneView","_preventedRoutes$rout","focused","descriptor","previousDescriptor","nextDescriptor","onWillDisappear","onAppear","onDisappear","onDismissed","onHeaderBackButtonClicked","onNativeDismissCancelled","render","animationDuration","_options$animationTyp","animationTypeForReplace","gestureEnabled","autoHideHomeIndicator","navigationBarColor","navigationBarHidden","orientation","statusBarAnimation","statusBarHidden","statusBarStyle","statusBarTranslucent","statusBarColor","freezeOnBlur","animation","customAnimationOnGesture","fullScreenGestureEnabled","_options$presentation","_options$gestureDirec","gestureDirection","nextGestureDirection","gestureDirectionOverride","insets","useSafeAreaInsets","frame","useSafeAreaFrame","isModal","isIPhone","isPad","isTV","isLandscape","width","height","isParentHeaderShown","useContext","HeaderShownContext","parentHeaderHeight","HeaderHeightContext","parentHeaderBack","HeaderBackContext","topInset","top","statusBarHeight","defaultHeaderHeight","getDefaultHeaderHeight","customHeaderHeight","setCustomHeaderHeight","headerBack","isRemovePrevented","preventRemove","customAnimationOnSwipe","fullScreenSwipeEnabled","homeIndicatorHidden","replaceAnimation","stackAnimation","screenOrientation","swipeDirection","transitionDuration","isNativeStack","nativeBackButtonDismissalEnabled","preventNativeDismiss","NavigationContext","Provider","value","NavigationRouteContext","accessibilityElementsHidden","importantForAccessibility","scene","onLayout","nativeEvent","layout","absolute","back","_ref3","useDismissedRouteError","useInvalidPreventRemoveError","_state$routes","_state$routes2","previousKey","nextKey","emit","type","data","closing","event","pop","dismissCount","flex","position","left","right","zIndex","elevation","overflow"],"sourceRoot":""}