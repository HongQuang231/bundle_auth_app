{"version":3,"file":"src_services_accountInfo_services_ts-src_services_review-ecollabo_ts-src_services_review-tick-13e63d.bundle","mappings":"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","sources":["webpack:///./src/services/accountInfo.services.ts","webpack:///./src/services/review-ecollabo.ts","webpack:///./src/services/review-ticket-econtract.services.ts","webpack:///./src/services/settings.services.ts"],"sourcesContent":["import AsyncStorage from '@react-native-async-storage/async-storage';\nimport {String} from '../constants';\nimport {getConfig} from './httpClient';\n\nexport const createAccountInfoServices = (fetchRequest: any) => ({\n  async deleteAvatar() {\n    try {\n      const endpoint = '/services/uaa/api/account/avatar';\n      const data = await fetchRequest({\n        url: getConfig().BASE_URL_EACCOUNT + endpoint,\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        typeOfResponse: '',\n      });\n      return Promise.resolve(data?.data);\n    } catch (error) {\n      console.log('deleteAvatar: ', error);\n      return Promise.reject(error);\n    }\n  },\n\n  async updateAccountAvatar(body: FormData) {\n    try {\n      const endpoint = '/services/uaa/api/account/avatar-zoom';\n      const data = await fetchRequest({\n        url: getConfig().BASE_URL_EACCOUNT + endpoint,\n        method: 'POST',\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n        body,\n      });\n      return Promise.resolve(data?.data);\n    } catch (error) {\n      console.log('updateAccountAvatar: ', error);\n      return Promise.reject(error);\n    }\n  },\n\n  async updateAccount(body: any) {\n    try {\n      const endpoint = '/services/uaa/api/account';\n      const data = await fetchRequest({\n        url: getConfig().BASE_URL_EACCOUNT + endpoint,\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(body),\n      });\n      return Promise.resolve(data?.data);\n    } catch (error) {\n      console.log('updateAccount: ', error);\n      return Promise.reject(error);\n    }\n  },\n\n  async getSecuriryPasswordRules(): Promise<any> {\n    try {\n      const endpoint = '/services/uaa/api/security-configs/all';\n      const data = await fetchRequest({\n        url: getConfig().BASE_URL_EACCOUNT + endpoint,\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n      return Promise.resolve(data?.data);\n    } catch (error) {\n      console.log('getSecuriryPasswordRules: ', error);\n      return Promise.reject(error);\n    }\n  },\n\n  async changePassword(body: any): Promise<any> {\n    try {\n      const endpoint = '/services/uaa/api/account/change-password';\n      const data = await fetchRequest({\n        url: getConfig().BASE_URL_EACCOUNT + endpoint,\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(body),\n        getValueErr: true,\n        typeOfResponse: '',\n      });\n      return Promise.resolve(data);\n    } catch (error: any) {\n      console.log('changePassword: ', error);\n      return Promise.reject(error);\n    }\n  },\n\n  async getOrganizationDetail() {\n    try {\n      const endpoint = '/services/uaa/api/organization-detail-profile';\n      const data = await fetchRequest({\n        url: getConfig().BASE_URL_EACCOUNT + endpoint,\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n      return Promise.resolve(data?.data);\n    } catch (error) {\n      console.log('getOrganizationDetail: ', error);\n      return Promise.reject(error);\n    }\n  },\n\n  async getOrgLegalInProfileAuth(step: string) {\n    try {\n      const endpoint = `/services/uaa/api/profile-authentication/legal?step=${step}`;\n      const data = await fetchRequest({\n        url: getConfig().BASE_URL_EACCOUNT + endpoint,\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n      return Promise.resolve(data?.data);\n    } catch (error) {\n      console.log('getOrgLegalInProfileAuth: ', error);\n      return Promise.reject(error);\n    }\n  },\n\n  async getPersonalProfileEkyc(userId: any) {\n    try {\n      const endpoint =\n        '/services/uaa/api/personal-kyc-detail-profiles-eaccount-by-userId/' +\n        userId;\n      const data = await fetchRequest({\n        url: getConfig().BASE_URL_EACCOUNT + endpoint,\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n      return Promise.resolve(data?.data);\n    } catch (error) {\n      console.log('getPersonalProfileEkyc: ', error);\n      return Promise.reject(error);\n    }\n  },\n\n  async getMenuView() {\n    const endpoint = '/services/uaa/api/menu-swaps';\n    const data = await fetchRequest({\n      url: getConfig().BASE_URL_EACCOUNT + endpoint,\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n    return Promise.resolve(data?.data);\n  },\n\n  async blockUser(body: any) {\n    try {\n      const endpoint = `/services/uaa/api/users-block`;\n      const data = await fetchRequest({\n        url: getConfig().BASE_URL_EACCOUNT + endpoint,\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(body),\n      });\n      return Promise.resolve(data?.data);\n    } catch (error) {\n      console.log('blockUser: ', error);\n      return Promise.reject(error);\n    }\n  },\n  async fetchLocation(params: any) {\n    try {\n      const response = await fetch(\n        `https://nominatim.openstreetmap.org/reverse?lat=${params.lat}&lon=${params.lon}&format=json`,\n      );\n      if (!response.ok) {\n        if (params.lat && params.lon) {\n          return {\n            display_name: `Không lấy được tên của vị trí: \\n Latitude: ${params.lat} \\n Longitude: ${params.lon}`,\n          };\n        } else {\n          return {\n            display_name: undefined,\n          };\n        }\n      }\n\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      console.error('Error fetchLocation:', error);\n      return {\n        display_name: undefined,\n      };\n    }\n  },\n  async checkinTHADS(body: any) {\n    try {\n      const endpoint = `/services/etms/api/attendance-logs/check-in`;\n      const data = await fetchRequest({\n        url: getConfig().BASE_URL_ECONDRIVE + endpoint,\n        method: 'POST',\n        body: JSON.stringify(body),\n      });\n      return Promise.resolve(data?.data);\n    } catch (error) {\n      console.error('Error checkin THADS:', error);\n      throw error;\n    }\n  },\n  async checkoutTHADS(body: any) {\n    try {\n      const endpoint = `/services/etms/api/attendance-logs/check-out`;\n      const dataLocation = await fetchRequest({\n        url: getConfig().BASE_URL_ECONDRIVE + endpoint,\n        method: 'POST',\n        body: JSON.stringify(body),\n      });\n      return Promise.resolve(dataLocation?.data);\n    } catch (error) {\n      console.error('Error checkout:', error);\n      throw error;\n    }\n  },\n  async getTimeLogUser(\n    body: any,\n    workLocation: 'default' | 'onsite' | 'all' = 'all',\n  ) {\n    try {\n      const endpoint = `/services/etms/api/attendance-logs/user/get_time_log?workLocation=${workLocation}`;\n      const dataCheckinUser = await fetchRequest({\n        url: getConfig().BASE_URL_ECONDRIVE + endpoint,\n        method: 'POST',\n        body: JSON.stringify(body),\n      });\n      return Promise.resolve(dataCheckinUser?.data);\n    } catch (error) {\n      console.error('Error getTimeLogUser:', error);\n      throw error;\n    }\n  },\n  async requestOnsite(body: FormData) {\n    try {\n      const endpoint = `/services/etms/api/onsite-requests`;\n      const dataCheckinUser = await fetchRequest({\n        url: getConfig().BASE_URL_ECONDRIVE + endpoint,\n        method: 'POST',\n        body: body,\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      });\n      return Promise.resolve(dataCheckinUser?.data);\n    } catch (error) {\n      console.error('Error requestOnsite:', error);\n      throw error;\n    }\n  },\n  async getOnsiteDataByDate(body: any) {\n    try {\n      const endpoint = `/services/etms/api/onsite-requests/find`;\n      const dataOnsite = await fetchRequest({\n        url: getConfig().BASE_URL_ECONDRIVE + endpoint,\n        // url: 'http://10.15.182.196:8066/api/onsite-requests/find',\n        method: 'POST',\n        // headers: {\n        //   'Content-Type': 'application/json',\n        //   Authorization:\n        //     'Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aSI6eyJncm91cHNOYW1lIjpbIkFETUlOIiwiQ8OUTkcgVFkgQ-G7lCBQSOG6pk4gR01QIExJTksgVknhu4ZUIE5BTSIsIlNVUEVSIEFETUlOIl0sInJvbGVzIjpbXSwiZ3JvdXBzIjpbNzYyLDEzMDMsMTM4MF0sImlwQWNjZXNzIjpbXSwibG9naW4iOiJuZXBuaGkyN0BnbWFpbC5jb20iLCJmb2xkZXJJZCI6IjAwMDAxMUJYSWtEV1NnNDQ2bkRWREh4ZXkiLCJmb2xkZXJQYXRoIjoiL2hvbWUvYWRtaW5pc3RyYXRvci9maWxlc3RvcmFnZS8zNTciLCJkYlN1ZmZpeCI6IjAwMDAxIiwibGFuZ0tleSI6InZpIiwiY3VzdElkIjozNTcsIm9yZ0luIjoiLzM1Ny82NzEiLCJpZCI6MTk1NywiZW1haWwiOiJuZXBuaGkyN0BnbWFpbC5jb20ifSwidXNlcl9uYW1lIjoibmVwbmhpMjdAZ21haWwuY29tIiwic2NvcGUiOlsib3BlbmlkIl0sImV4cCI6MzU0NzczMDU1OCwiaWF0IjoxNzQ3NzMwNTU4LCJhdXRob3JpdGllcyI6WyJST0xFX0NVU1RfUkVQT1JUIiwiUk9MRV9VU0VSIiwiUk9MRV9DVVNUX0RPQyIsIlJPTEVfQ1VTVF9SRVBPUlRfVVNFUiIsIlJPTEVfT1JHX0FETUlOIiwiUk9MRV9DVVNUX1NUQUZGIiwiUk9MRV9DVVNUX1ZJRVdFUiJdLCJqdGkiOiIzYTk1NGUzZC0wZDZlLTQxNGMtODA1Yi1jZWNmMjJhMGVjMDgiLCJjbGllbnRfaWQiOiJ3ZWJfYXBwIn0.T1bvVNU0v3sC2G7Ev7P57Pmg-58QO7tPPDE8UHRNdvSjt56iC3rxUdKxE4Pxbr6-7eGexn0PAlLgFNFMCKOypmNf21hFpddSCeiegMqVuINRx7g_dAyHoIMz8imK10cDqXnXTNLhNOjuhp36JIzZZpjXp9cYKvnrRV9-UbckNzJaCBa5xbmmzwvDpla1q-st9yhjN9UZJZGCl2Vos_n6Z2ySYBY4PAykYOtYey8hi1Yq1uG9ruV61jdqIa_eSyzlzs4TqxlUsTtUcPb1T--DrXW6sEEpgh4MiFNWQ-V9hI7B-kGw1I_AlcU8w3lsIxXLIodb6JVSdpWv-MN0PkOwtg',\n        // },\n        body: JSON.stringify(body),\n      });\n      return Promise.resolve(dataOnsite?.data);\n    } catch (error) {\n      console.error('Error getOnsiteDataByDate:', error);\n      throw error;\n    }\n  },\n});\n","import {getConfig} from './httpClient';\n\nexport const createEcollaboServices = (fetchRequest: any) => ({\n  async getFileById(fileId: string) {\n    try {\n      const endpoint = '/services/collabora/api/files/' + fileId;\n      const data = await fetchRequest({\n        url: getConfig().BASE_URL_ECOLLABO + endpoint,\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n      return Promise.resolve(data?.data);\n    } catch (error) {\n      console.log('getFileById', error);\n      return Promise.reject(error);\n    }\n  },\n\n  async changeStatusFile(body: any) {\n    try {\n      const endpoint = '/services/collabora/api/files';\n      const data = await fetchRequest({\n        url: getConfig().BASE_URL_ECOLLABO + endpoint,\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(body),\n      });\n      return Promise.resolve(data?.data);\n    } catch (error) {\n      console.log('changeStatusFile', error);\n      return Promise.reject(error);\n    }\n  },\n});\n","import {getConfig} from './httpClient';\n\nexport const createReviewEcontractServices = (fetchRequest: any) => ({\n  async getEnvelopeById(body: any, accessToken: string) {\n    const endPoint = `/services/excall/api/excall`;\n    try {\n      const data = await fetchRequest({\n        url: getConfig().BASE_URL + endPoint,\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + accessToken,\n        },\n        body: JSON.stringify(body),\n      });\n      return Promise.resolve(data?.data);\n    } catch (error) {\n      Promise.reject(error);\n    }\n  },\n\n  async getRecipientDetail(userTaskId: string, ticketId: string) {\n    try {\n      const endPoint = `/services/erequest/api/recipient-details/${ticketId}/${userTaskId}`;\n      const data = await fetchRequest({\n        url: getConfig().BASE_URL + endPoint,\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n      return Promise.resolve(data?.data);\n    } catch (error) {\n      Promise.reject(error);\n    }\n  },\n\n  async getEWriterDocByUserTaskIdAndTicketId(\n    userTaskId: string,\n    ticketId: string,\n  ) {\n    try {\n      const endPoint = `/services/erequest/api/file-repositories/getFileIdNotionEContract/${ticketId}/userTask/${userTaskId}`;\n      const data = await fetchRequest({\n        url: getConfig().BASE_URL + endPoint,\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n      return Promise.resolve(data?.data);\n    } catch (error) {\n      Promise.reject(error);\n    }\n  },\n\n  async getEcontractDocInfo(params: any) {\n    try {\n      const endPoint = '/services/ewriter/api/documents/details';\n      const data = await fetchRequest({\n        url: getConfig().BASE_URL + endPoint,\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        params: params,\n      });\n      return Promise.resolve(data?.data);\n    } catch (error) {\n      Promise.reject(error);\n    }\n  },\n\n  async getStructureOfData(params: any, accessToken: string) {\n    try {\n      const endPoint =\n        '/services/envelope/api/external/v1/template/tempAndStructure';\n      const data = await fetchRequest({\n        url: getConfig().BASE_URL + endPoint,\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + accessToken,\n        },\n        params: params,\n      });\n      return Promise.resolve(data?.data);\n    } catch (error) {\n      Promise.reject(error);\n    }\n  },\n\n  async getDataFormFill(params: any) {\n    try {\n      const endpoint = '/services/eform/api/share/form-erequest';\n      const data = await fetchRequest({\n        url: getConfig().BASE_URL + endpoint,\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        params: params,\n      });\n      return Promise.resolve(data?.data);\n    } catch (error) {\n      Promise.reject(error);\n    }\n  },\n\n  async createContract(body: any) {\n    try {\n      const endPoint = '/services/erequest/api/envelope/create-envelope';\n      const data = await fetchRequest({\n        url: getConfig().BASE_URL + endPoint,\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(body),\n        typeOfResponse: 'text',\n      });\n      return Promise.resolve(data?.data);\n    } catch (error) {\n      Promise.reject(error);\n    }\n  },\n\n  async getEkycRepositoryDetailIdCard(resourceId: string, params: any) {\n    try {\n      const endpoint = `/services/common/api/p/ekyc/${resourceId}/ekycRepositoryDetails/detailss/idCard`;\n      const data = await fetchRequest({\n        url: getConfig().BASE_URL + endpoint,\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        params,\n      });\n      return Promise.resolve(data?.data);\n    } catch (error) {\n      Promise.reject(error);\n    }\n  },\n\n  async getTicketForms(ticketId: string) {\n    try {\n      const endpoint =\n        '/services/erequest/api/ticket-form-data/findByTicketId/' + ticketId;\n      const data = await fetchRequest({\n        url: getConfig().BASE_URL + endpoint,\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n      return Promise.resolve(data?.data);\n    } catch (error) {\n      Promise.reject(error);\n    }\n  },\n\n  async getListCollaboDocs(ticketId: string, usertaskId: string) {\n    try {\n      const endPoint = `/services/erequest/api/file-repositories/getFileIdFromCollabor/${ticketId}/userTask/${usertaskId}`;\n      const data = await fetchRequest({\n        url: getConfig().BASE_URL + endPoint,\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n      return Promise.resolve(data?.data);\n    } catch (error) {\n      Promise.reject(error);\n    }\n  },\n\n  async getDetailCollabora(fileId: string) {\n    try {\n      const endPoint = `/services/collabora/api/files/${fileId}/info`;\n      const data = await fetchRequest({\n        url: getConfig().BASE_URL + endPoint,\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n      return Promise.resolve(data?.data);\n    } catch (error) {\n      Promise.reject(error);\n    }\n  },\n\n  async getTicketModelerFlowStatusRaw(ticketId: string) {\n    try {\n      const endpoint =\n        '/services/erequest/api/ticket-modeler-flows/statusRaw/' + ticketId;\n      const data = await fetchRequest({\n        url: getConfig().BASE_URL + endpoint,\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n      return Promise.resolve(data?.data);\n    } catch (error) {\n      return Promise.reject(error);\n    }\n  },\n\n  async getLinkIframeEcollabo(fileId: string) {\n    try {\n      const endpoint = `/services/collabora/wopi/iframe-info/${fileId}`;\n      const data = await fetchRequest({\n        url: getConfig().BASE_URL_ECOLLABO + endpoint,\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n      return Promise.resolve(data?.data);\n    } catch (error) {\n      return Promise.reject(error);\n    }\n  },\n\n  async deleteFile(fileId: string) {\n    try {\n      const endpoint =\n        '/services/erequest/api/file-repositories/deleteFileUploadCollaboration/' +\n        fileId;\n      const data = await fetchRequest({\n        url: getConfig().BASE_URL + endpoint,\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        typeOfResponse: 'text',\n      });\n      return Promise.resolve(data?.data);\n    } catch (error) {\n      return Promise.reject(error);\n    }\n  },\n\n  async getListOrgin(params: any) {\n    try {\n      const endpoint =\n        '/services/uaa/api/organizations/child/find-organization-like-orgin';\n      const data = await fetchRequest({\n        url: getConfig().BASE_URL + endpoint,\n        method: 'GET',\n        params: params,\n      });\n      return Promise.resolve(data?.data);\n    } catch (error) {\n      return Promise.reject(error);\n    }\n  },\n\n  async uploadFiles(ticketId: string, userTaskId: string, body: FormData) {\n    try {\n      const endpoint = `/services/erequest/api/file-repositories/uploadFileToCollaboration/${ticketId}/userTask/${userTaskId}`;\n      const data = await fetchRequest({\n        url: getConfig().BASE_URL + endpoint,\n        method: 'POST',\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n        body: body,\n      });\n      return Promise.resolve(data?.data);\n    } catch (error) {\n      return Promise.reject(error);\n    }\n  },\n\n  async getAllFileInNotion(ticketId: string, userTaskId: string) {\n    try {\n      const endpoint = `/services/erequest/api/file-repositories/getFileDTOCreateEcontract/${ticketId}/${userTaskId}`;\n      const data = await fetchRequest({\n        url: getConfig().BASE_URL + endpoint,\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n      return Promise.resolve(data?.data);\n    } catch (error) {\n      return Promise.reject(error);\n    }\n  },\n\n  async getExecutorByTicketIdAndUsertaskId(\n    ticketId: string,\n    usertaskId: string,\n  ) {\n    const endpoint = `/services/erequest/api/recipient-details/implement-accepted/${ticketId}/${usertaskId}`;\n    const data = await fetchRequest({\n      url: getConfig().BASE_URL + endpoint,\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n    return Promise.resolve(data?.data);\n  },\n\n  async generateEnvNo(body: any) {\n    const endpoint = '/services/excall/api/excall';\n    const data = await fetchRequest({\n      url: getConfig().BASE_URL + endpoint,\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(body),\n    });\n    return Promise.resolve(data?.data);\n  },\n\n  async getListAutomationEcontract(ticketId: string, userTaskId: string) {\n    try {\n      const endpoint = `/services/erequest/api/tickets/${ticketId}/userTaskId/${userTaskId}/listAutomationEcontract`;\n      const data = await fetchRequest({\n        url: getConfig().BASE_URL + endpoint,\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n      return Promise.resolve(data?.data);\n    } catch (error) {\n      return Promise.reject(error);\n    }\n  },\n\n  async getEContractNotionDocResource(userTaskId: string) {\n    try {\n      const endpoint = `/services/idaas-eflow/api/documents/user-task/${userTaskId}`;\n      const data = await fetchRequest({\n        url: getConfig().BASE_URL + endpoint,\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n      return Promise.resolve(data?.data);\n    } catch (error) {\n      return Promise.reject(error);\n    }\n  },\n});\n","import {IPasswordConfig} from '../app/account/settings/password/interface';\nimport {getConfig} from './httpClient';\n\nexport const createAccountSettingsServices = (fetchRequest: any) => ({\n  async getAllConfig() {\n    try {\n      const endpoint = '/services/uaa/api/security-configs/all';\n      const data = await fetchRequest({\n        url: getConfig().BASE_URL_EACCOUNT + endpoint,\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n      return Promise.resolve(data?.data);\n    } catch (error) {\n      console.log('getAllConfig: ', error);\n      return Promise.reject(error);\n    }\n  },\n\n  async editSecurityPasswordConfig(\n    body: IPasswordConfig[],\n  ): Promise<IPasswordConfig[]> {\n    try {\n      const endpoint = '/services/uaa/api/security-configs/save';\n      const data = await fetchRequest({\n        url: getConfig().BASE_URL_EACCOUNT + endpoint,\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({data: body}),\n      });\n      return Promise.resolve(data?.data);\n    } catch (error) {\n      console.log('editSecurityPasswordConfig: ', error);\n      return Promise.reject(error);\n    }\n  },\n\n  async getMenuView(serviceId: number) {\n    const endPoint = `/services/uaa/api/owner/menu-views?serviceId=${serviceId}`;\n    try {\n      const data = await fetchRequest({\n        url: getConfig().BASE_URL + endPoint,\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n      return Promise.resolve(data?.data);\n    } catch (error) {\n      Promise.reject(error);\n    }\n  },\n  \n  async subOrg(username: string, subOrg: string, domain: string) {\n    const params = `username=${encodeURIComponent(\n      username,\n    )}&subOrg=${encodeURIComponent(subOrg)}&domain=${encodeURIComponent(\n      domain,\n    )}`;\n\n    const endPoint = `/services/uaa/api/switch/subOrg?${params}`;\n    try {\n      const data = await fetchRequest({\n        url: getConfig().BASE_URL_EACCOUNT + endPoint,\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n      return Promise.resolve(data?.data);\n    } catch (error) {\n      Promise.reject(error);\n    }\n  },\n});\n"],"names":["_httpClient","require","exports","fetchRequest","deleteAvatar","_deleteAvatar","_asyncToGenerator2","default","data","url","getConfig","BASE_URL_EACCOUNT","method","headers","typeOfResponse","Promise","resolve","error","console","log","reject","apply","arguments","updateAccountAvatar","_updateAccountAvatar","body","_x","updateAccount","_updateAccount","JSON","stringify","_x2","getSecuriryPasswordRules","_getSecuriryPasswordRules","changePassword","_changePassword","getValueErr","_x3","getOrganizationDetail","_getOrganizationDetail","getOrgLegalInProfileAuth","_getOrgLegalInProfileAuth","step","endpoint","_x4","getPersonalProfileEkyc","_getPersonalProfileEkyc","userId","_x5","getMenuView","_getMenuView","blockUser","_blockUser","_x6","fetchLocation","_fetchLocation","params","response","fetch","lat","lon","ok","json","display_name","undefined","_x7","checkinTHADS","_checkinTHADS","BASE_URL_ECONDRIVE","_x8","checkoutTHADS","_checkoutTHADS","dataLocation","_x9","getTimeLogUser","_getTimeLogUser","workLocation","length","dataCheckinUser","_x10","requestOnsite","_requestOnsite","_x11","getOnsiteDataByDate","_getOnsiteDataByDate","dataOnsite","_x12","getFileById","_getFileById","fileId","BASE_URL_ECOLLABO","changeStatusFile","_changeStatusFile","getEnvelopeById","_getEnvelopeById","accessToken","BASE_URL","Authorization","getRecipientDetail","_getRecipientDetail","userTaskId","ticketId","endPoint","getEWriterDocByUserTaskIdAndTicketId","_getEWriterDocByUserTaskIdAndTicketId","getEcontractDocInfo","_getEcontractDocInfo","getStructureOfData","_getStructureOfData","getDataFormFill","_getDataFormFill","createContract","_createContract","getEkycRepositoryDetailIdCard","_getEkycRepositoryDetailIdCard","resourceId","_x13","getTicketForms","_getTicketForms","_x14","getListCollaboDocs","_getListCollaboDocs","usertaskId","_x15","_x16","getDetailCollabora","_getDetailCollabora","_x17","getTicketModelerFlowStatusRaw","_getTicketModelerFlowStatusRaw","_x18","getLinkIframeEcollabo","_getLinkIframeEcollabo","_x19","deleteFile","_deleteFile","_x20","getListOrgin","_getListOrgin","_x21","uploadFiles","_uploadFiles","_x22","_x23","_x24","getAllFileInNotion","_getAllFileInNotion","_x25","_x26","getExecutorByTicketIdAndUsertaskId","_getExecutorByTicketIdAndUsertaskId","_x27","_x28","generateEnvNo","_generateEnvNo","_x29","getListAutomationEcontract","_getListAutomationEcontract","_x30","_x31","getEContractNotionDocResource","_getEContractNotionDocResource","_x32","getAllConfig","_getAllConfig","editSecurityPasswordConfig","_editSecurityPasswordConfig","serviceId","subOrg","_subOrg2","username","domain","encodeURIComponent"],"sourceRoot":""}