{"version":3,"file":"vendors-c813710b.bundle","mappings":"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","sources":["webpack:///./node_modules/@react-native/virtualized-lists/Interaction/Batchinator.js","webpack:///./node_modules/@react-native/virtualized-lists/Lists/CellRenderMask.js","webpack:///./node_modules/@react-native/virtualized-lists/Lists/ChildListCollection.js","webpack:///./node_modules/@react-native/virtualized-lists/Lists/FillRateHelper.js","webpack:///./node_modules/@react-native/virtualized-lists/Lists/ListMetricsAggregator.js","webpack:///./node_modules/@react-native/virtualized-lists/Lists/StateSafePureComponent.js","webpack:///./node_modules/@react-native/virtualized-lists/Lists/ViewabilityHelper.js","webpack:///./node_modules/@react-native/virtualized-lists/Lists/VirtualizeUtils.js","webpack:///./node_modules/@react-native/virtualized-lists/Lists/VirtualizedList.js","webpack:///./node_modules/@react-native/virtualized-lists/Lists/VirtualizedListCellRenderer.js","webpack:///./node_modules/@react-native/virtualized-lists/Lists/VirtualizedListContext.js","webpack:///./node_modules/@react-native/virtualized-lists/Lists/VirtualizedListProps.js","webpack:///./node_modules/@react-native/virtualized-lists/Lists/VirtualizedSectionList.js","webpack:///./node_modules/@react-native/virtualized-lists/Utilities/clamp.js","webpack:///./node_modules/@react-native/virtualized-lists/Utilities/infoLog.js","webpack:///./node_modules/@react-native/virtualized-lists/index.js","webpack:///./node_modules/react-native/src/private/core/setUpDOM.js","webpack:///./node_modules/react-native/src/private/featureflags/NativeReactNativeFeatureFlags.js","webpack:///./node_modules/react-native/src/private/featureflags/ReactNativeFeatureFlags.js","webpack:///./node_modules/react-native/src/private/featureflags/ReactNativeFeatureFlagsBase.js","webpack:///./node_modules/react-native/src/private/specs/components/ActivityIndicatorViewNativeComponent.js","webpack:///./node_modules/react-native/src/private/specs/components/AndroidDrawerLayoutNativeComponent.js","webpack:///./node_modules/react-native/src/private/specs/components/AndroidHorizontalScrollContentViewNativeComponent.js","webpack:///./node_modules/react-native/src/private/specs/components/AndroidSwipeRefreshLayoutNativeComponent.js","webpack:///./node_modules/react-native/src/private/specs/components/AndroidSwitchNativeComponent.js","webpack:///./node_modules/react-native/src/private/specs/components/ProgressBarAndroidNativeComponent.js","webpack:///./node_modules/react-native/src/private/specs/components/PullToRefreshViewNativeComponent.js","webpack:///./node_modules/react-native/src/private/specs/components/RCTInputAccessoryViewNativeComponent.js","webpack:///./node_modules/react-native/src/private/specs/components/RCTModalHostViewNativeComponent.js","webpack:///./node_modules/react-native/src/private/specs/components/RCTSafeAreaViewNativeComponent.js","webpack:///./node_modules/react-native/src/private/specs/components/SwitchNativeComponent.js","webpack:///./node_modules/react-native/src/private/specs/modules/NativeAccessibilityInfo.js","webpack:///./node_modules/react-native/src/private/specs/modules/NativeAccessibilityManager.js","webpack:///./node_modules/react-native/src/private/specs/modules/NativeActionSheetManager.js","webpack:///./node_modules/react-native/src/private/specs/modules/NativeAnimatedModule.js","webpack:///./node_modules/react-native/src/private/specs/modules/NativeAnimatedTurboModule.js","webpack:///./node_modules/react-native/src/private/specs/modules/NativeAppState.js","webpack:///./node_modules/react-native/src/private/specs/modules/NativeAppearance.js","webpack:///./node_modules/react-native/src/private/specs/modules/NativeBlobModule.js","webpack:///./node_modules/react-native/src/private/specs/modules/NativeBugReporting.js","webpack:///./node_modules/react-native/src/private/specs/modules/NativeClipboard.js","webpack:///./node_modules/react-native/src/private/specs/modules/NativeDevSettings.js","webpack:///./node_modules/react-native/src/private/specs/modules/NativeDeviceEventManager.js","webpack:///./node_modules/react-native/src/private/specs/modules/NativeDeviceInfo.js","webpack:///./node_modules/react-native/src/private/specs/modules/NativeDialogManagerAndroid.js","webpack:///./node_modules/react-native/src/private/specs/modules/NativeExceptionsManager.js","webpack:///./node_modules/react-native/src/private/specs/modules/NativeFileReaderModule.js","webpack:///./node_modules/react-native/src/private/specs/modules/NativeFrameRateLogger.js","webpack:///./node_modules/react-native/src/private/specs/modules/NativeHeadlessJsTaskSupport.js","webpack:///./node_modules/react-native/src/private/specs/modules/NativeI18nManager.js","webpack:///./node_modules/react-native/src/private/specs/modules/NativeImageLoaderAndroid.js","webpack:///./node_modules/react-native/src/private/specs/modules/NativeIntentAndroid.js","webpack:///./node_modules/react-native/src/private/specs/modules/NativeJSCHeapCapture.js","webpack:///./node_modules/react-native/src/private/specs/modules/NativeJSCSamplingProfiler.js","webpack:///./node_modules/react-native/src/private/specs/modules/NativeKeyboardObserver.js","webpack:///./node_modules/react-native/src/private/specs/modules/NativeLinkingManager.js","webpack:///./node_modules/react-native/src/private/specs/modules/NativeModalManager.js","webpack:///./node_modules/react-native/src/private/specs/modules/NativeNetworkingAndroid.js","webpack:///./node_modules/react-native/src/private/specs/modules/NativePermissionsAndroid.js","webpack:///./node_modules/react-native/src/private/specs/modules/NativePlatformConstantsAndroid.js","webpack:///./node_modules/react-native/src/private/specs/modules/NativePushNotificationManagerIOS.js","webpack:///./node_modules/react-native/src/private/specs/modules/NativeRedBox.js","webpack:///./node_modules/react-native/src/private/specs/modules/NativeSegmentFetcher.js","webpack:///./node_modules/react-native/src/private/specs/modules/NativeShareModule.js","webpack:///./node_modules/react-native/src/private/specs/modules/NativeSoundManager.js","webpack:///./node_modules/react-native/src/private/specs/modules/NativeSourceCode.js","webpack:///./node_modules/react-native/src/private/specs/modules/NativeStatusBarManagerAndroid.js","webpack:///./node_modules/react-native/src/private/specs/modules/NativeStatusBarManagerIOS.js","webpack:///./node_modules/react-native/src/private/specs/modules/NativeTiming.js","webpack:///./node_modules/react-native/src/private/specs/modules/NativeToastAndroid.js","webpack:///./node_modules/react-native/src/private/specs/modules/NativeUIManager.js","webpack:///./node_modules/react-native/src/private/specs/modules/NativeVibration.js","webpack:///./node_modules/react-native/src/private/specs/modules/NativeWebSocketModule.js","webpack:///./node_modules/react-native/src/private/webapis/dom/geometry/DOMRect.js","webpack:///./node_modules/react-native/src/private/webapis/dom/geometry/DOMRectReadOnly.js","webpack:///./node_modules/react-native/src/private/webapis/dom/nodes/ReactNativeElement.js","webpack:///./node_modules/react-native/src/private/webapis/dom/nodes/ReadOnlyCharacterData.js","webpack:///./node_modules/react-native/src/private/webapis/dom/nodes/ReadOnlyElement.js","webpack:///./node_modules/react-native/src/private/webapis/dom/nodes/ReadOnlyNode.js","webpack:///./node_modules/react-native/src/private/webapis/dom/nodes/ReadOnlyText.js","webpack:///./node_modules/react-native/src/private/webapis/dom/nodes/utilities/Traversal.js","webpack:///./node_modules/react-native/src/private/webapis/dom/oldstylecollections/ArrayLikeUtils.js","webpack:///./node_modules/react-native/src/private/webapis/dom/oldstylecollections/HTMLCollection.js","webpack:///./node_modules/react-native/src/private/webapis/dom/oldstylecollections/NodeList.js","webpack:///./node_modules/react-native/src/private/webapis/performance/EventCounts.js","webpack:///./node_modules/react-native/src/private/webapis/performance/MemoryInfo.js","webpack:///./node_modules/react-native/src/private/webapis/performance/NativePerformance.js","webpack:///./node_modules/react-native/src/private/webapis/performance/NativePerformanceObserver.js","webpack:///./node_modules/react-native/src/private/webapis/performance/Performance.js","webpack:///./node_modules/react-native/src/private/webapis/performance/PerformanceEntry.js","webpack:///./node_modules/react-native/src/private/webapis/performance/PerformanceEventTiming.js","webpack:///./node_modules/react-native/src/private/webapis/performance/PerformanceObserver.js","webpack:///./node_modules/react-native/src/private/webapis/performance/RawPerformanceEntry.js","webpack:///./node_modules/react-native/src/private/webapis/performance/ReactNativeStartupTiming.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\n'use strict';\n\nconst {InteractionManager} = require('react-native');\n\n/**\n * A simple class for batching up invocations of a low-pri callback. A timeout is set to run the\n * callback once after a delay, no matter how many times it's scheduled. Once the delay is reached,\n * InteractionManager.runAfterInteractions is used to invoke the callback after any hi-pri\n * interactions are done running.\n *\n * Make sure to cleanup with dispose().  Example:\n *\n *   class Widget extends React.Component {\n *     _batchedSave: new Batchinator(() => this._saveState, 1000);\n *     _saveSate() {\n *       // save this.state to disk\n *     }\n *     componentDidUpdate() {\n *       this._batchedSave.schedule();\n *     }\n *     componentWillUnmount() {\n *       this._batchedSave.dispose();\n *     }\n *     ...\n *   }\n */\nclass Batchinator {\n  _callback: () => void;\n  _delay: number;\n  _taskHandle: ?{cancel: () => void, ...};\n  constructor(callback: () => void, delayMS: number) {\n    this._delay = delayMS;\n    this._callback = callback;\n  }\n  /*\n   * Cleanup any pending tasks.\n   *\n   * By default, if there is a pending task the callback is run immediately. Set the option abort to\n   * true to not call the callback if it was pending.\n   */\n  dispose(options: {abort: boolean, ...} = {abort: false}) {\n    if (this._taskHandle) {\n      this._taskHandle.cancel();\n      if (!options.abort) {\n        this._callback();\n      }\n      this._taskHandle = null;\n    }\n  }\n  schedule() {\n    if (this._taskHandle) {\n      return;\n    }\n    const timeoutHandle = setTimeout(() => {\n      this._taskHandle = InteractionManager.runAfterInteractions(() => {\n        // Note that we clear the handle before invoking the callback so that if the callback calls\n        // schedule again, it will actually schedule another task.\n        this._taskHandle = null;\n        this._callback();\n      });\n    }, this._delay);\n    this._taskHandle = {cancel: () => clearTimeout(timeoutHandle)};\n  }\n}\n\nmodule.exports = Batchinator;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nimport invariant from 'invariant';\n\nexport type CellRegion = {\n  first: number,\n  last: number,\n  isSpacer: boolean,\n};\n\nexport class CellRenderMask {\n  _numCells: number;\n  _regions: Array<CellRegion>;\n\n  constructor(numCells: number) {\n    invariant(\n      numCells >= 0,\n      'CellRenderMask must contain a non-negative number os cells',\n    );\n\n    this._numCells = numCells;\n\n    if (numCells === 0) {\n      this._regions = [];\n    } else {\n      this._regions = [\n        {\n          first: 0,\n          last: numCells - 1,\n          isSpacer: true,\n        },\n      ];\n    }\n  }\n\n  enumerateRegions(): $ReadOnlyArray<CellRegion> {\n    return this._regions;\n  }\n\n  addCells(cells: {first: number, last: number}): void {\n    invariant(\n      cells.first >= 0 &&\n        cells.first < this._numCells &&\n        cells.last >= -1 &&\n        cells.last < this._numCells &&\n        cells.last >= cells.first - 1,\n      'CellRenderMask.addCells called with invalid cell range',\n    );\n\n    // VirtualizedList uses inclusive ranges, where zero-count states are\n    // possible. E.g. [0, -1] for no cells, starting at 0.\n    if (cells.last < cells.first) {\n      return;\n    }\n\n    const [firstIntersect, firstIntersectIdx] = this._findRegion(cells.first);\n    const [lastIntersect, lastIntersectIdx] = this._findRegion(cells.last);\n\n    // Fast-path if the cells to add are already all present in the mask. We\n    // will otherwise need to do some mutation.\n    if (firstIntersectIdx === lastIntersectIdx && !firstIntersect.isSpacer) {\n      return;\n    }\n\n    // We need to replace the existing covered regions with 1-3 new regions\n    // depending whether we need to split spacers out of overlapping regions.\n    const newLeadRegion: Array<CellRegion> = [];\n    const newTailRegion: Array<CellRegion> = [];\n    const newMainRegion: CellRegion = {\n      ...cells,\n      isSpacer: false,\n    };\n\n    if (firstIntersect.first < newMainRegion.first) {\n      if (firstIntersect.isSpacer) {\n        newLeadRegion.push({\n          first: firstIntersect.first,\n          last: newMainRegion.first - 1,\n          isSpacer: true,\n        });\n      } else {\n        newMainRegion.first = firstIntersect.first;\n      }\n    }\n\n    if (lastIntersect.last > newMainRegion.last) {\n      if (lastIntersect.isSpacer) {\n        newTailRegion.push({\n          first: newMainRegion.last + 1,\n          last: lastIntersect.last,\n          isSpacer: true,\n        });\n      } else {\n        newMainRegion.last = lastIntersect.last;\n      }\n    }\n\n    const replacementRegions: Array<CellRegion> = [\n      ...newLeadRegion,\n      newMainRegion,\n      ...newTailRegion,\n    ];\n    const numRegionsToDelete = lastIntersectIdx - firstIntersectIdx + 1;\n    this._regions.splice(\n      firstIntersectIdx,\n      numRegionsToDelete,\n      ...replacementRegions,\n    );\n  }\n\n  numCells(): number {\n    return this._numCells;\n  }\n\n  equals(other: CellRenderMask): boolean {\n    return (\n      this._numCells === other._numCells &&\n      this._regions.length === other._regions.length &&\n      this._regions.every(\n        (region, i) =>\n          region.first === other._regions[i].first &&\n          region.last === other._regions[i].last &&\n          region.isSpacer === other._regions[i].isSpacer,\n      )\n    );\n  }\n\n  _findRegion(cellIdx: number): [CellRegion, number] {\n    let firstIdx = 0;\n    let lastIdx = this._regions.length - 1;\n\n    while (firstIdx <= lastIdx) {\n      const middleIdx = Math.floor((firstIdx + lastIdx) / 2);\n      const middleRegion = this._regions[middleIdx];\n\n      if (cellIdx >= middleRegion.first && cellIdx <= middleRegion.last) {\n        return [middleRegion, middleIdx];\n      } else if (cellIdx < middleRegion.first) {\n        lastIdx = middleIdx - 1;\n      } else if (cellIdx > middleRegion.last) {\n        firstIdx = middleIdx + 1;\n      }\n    }\n\n    invariant(false, `A region was not found containing cellIdx ${cellIdx}`);\n  }\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nimport invariant from 'invariant';\n\nexport default class ChildListCollection<TList> {\n  _cellKeyToChildren: Map<string, Set<TList>> = new Map();\n  _childrenToCellKey: Map<TList, string> = new Map();\n\n  add(list: TList, cellKey: string): void {\n    invariant(\n      !this._childrenToCellKey.has(list),\n      'Trying to add already present child list',\n    );\n\n    const cellLists = this._cellKeyToChildren.get(cellKey) ?? new Set();\n    cellLists.add(list);\n    this._cellKeyToChildren.set(cellKey, cellLists);\n\n    this._childrenToCellKey.set(list, cellKey);\n  }\n\n  remove(list: TList): void {\n    const cellKey = this._childrenToCellKey.get(list);\n    invariant(cellKey != null, 'Trying to remove non-present child list');\n    this._childrenToCellKey.delete(list);\n\n    const cellLists = this._cellKeyToChildren.get(cellKey);\n    invariant(cellLists, '_cellKeyToChildren should contain cellKey');\n    cellLists.delete(list);\n\n    if (cellLists.size === 0) {\n      this._cellKeyToChildren.delete(cellKey);\n    }\n  }\n\n  forEach(fn: TList => void): void {\n    for (const listSet of this._cellKeyToChildren.values()) {\n      for (const list of listSet) {\n        fn(list);\n      }\n    }\n  }\n\n  forEachInCell(cellKey: string, fn: TList => void): void {\n    const listSet = this._cellKeyToChildren.get(cellKey) ?? [];\n    for (const list of listSet) {\n      fn(list);\n    }\n  }\n\n  anyInCell(cellKey: string, fn: TList => boolean): boolean {\n    const listSet = this._cellKeyToChildren.get(cellKey) ?? [];\n    for (const list of listSet) {\n      if (fn(list)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  size(): number {\n    return this._childrenToCellKey.size;\n  }\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\n'use strict';\n\nimport type {CellMetricProps} from './ListMetricsAggregator';\n\nimport ListMetricsAggregator from './ListMetricsAggregator';\n\nexport type FillRateInfo = Info;\n\nclass Info {\n  any_blank_count: number = 0;\n  any_blank_ms: number = 0;\n  any_blank_speed_sum: number = 0;\n  mostly_blank_count: number = 0;\n  mostly_blank_ms: number = 0;\n  pixels_blank: number = 0;\n  pixels_sampled: number = 0;\n  pixels_scrolled: number = 0;\n  total_time_spent: number = 0;\n  sample_count: number = 0;\n}\n\nconst DEBUG = false;\n\nlet _listeners: Array<(Info) => void> = [];\nlet _minSampleCount = 10;\nlet _sampleRate = DEBUG ? 1 : null;\n\n/**\n * A helper class for detecting when the maximem fill rate of `VirtualizedList` is exceeded.\n * By default the sampling rate is set to zero and this will do nothing. If you want to collect\n * samples (e.g. to log them), make sure to call `FillRateHelper.setSampleRate(0.0-1.0)`.\n *\n * Listeners and sample rate are global for all `VirtualizedList`s - typical usage will combine with\n * `SceneTracker.getActiveScene` to determine the context of the events.\n */\nclass FillRateHelper {\n  _anyBlankStartTime: ?number = null;\n  _enabled = false;\n  _listMetrics: ListMetricsAggregator;\n  _info: Info = new Info();\n  _mostlyBlankStartTime: ?number = null;\n  _samplesStartTime: ?number = null;\n\n  static addListener(callback: FillRateInfo => void): {\n    remove: () => void,\n    ...\n  } {\n    if (_sampleRate === null) {\n      console.warn('Call `FillRateHelper.setSampleRate` before `addListener`.');\n    }\n    _listeners.push(callback);\n    return {\n      remove: () => {\n        _listeners = _listeners.filter(listener => callback !== listener);\n      },\n    };\n  }\n\n  static setSampleRate(sampleRate: number) {\n    _sampleRate = sampleRate;\n  }\n\n  static setMinSampleCount(minSampleCount: number) {\n    _minSampleCount = minSampleCount;\n  }\n\n  constructor(listMetrics: ListMetricsAggregator) {\n    this._listMetrics = listMetrics;\n    this._enabled = (_sampleRate || 0) > Math.random();\n    this._resetData();\n  }\n\n  activate() {\n    if (this._enabled && this._samplesStartTime == null) {\n      DEBUG && console.debug('FillRateHelper: activate');\n      this._samplesStartTime = global.performance.now();\n    }\n  }\n\n  deactivateAndFlush() {\n    if (!this._enabled) {\n      return;\n    }\n    const start = this._samplesStartTime; // const for flow\n    if (start == null) {\n      DEBUG &&\n        console.debug('FillRateHelper: bail on deactivate with no start time');\n      return;\n    }\n    if (this._info.sample_count < _minSampleCount) {\n      // Don't bother with under-sampled events.\n      this._resetData();\n      return;\n    }\n    const total_time_spent = global.performance.now() - start;\n    const info: any = {\n      ...this._info,\n      total_time_spent,\n    };\n    if (DEBUG) {\n      const derived = {\n        avg_blankness: this._info.pixels_blank / this._info.pixels_sampled,\n        avg_speed: this._info.pixels_scrolled / (total_time_spent / 1000),\n        avg_speed_when_any_blank:\n          this._info.any_blank_speed_sum / this._info.any_blank_count,\n        any_blank_per_min:\n          this._info.any_blank_count / (total_time_spent / 1000 / 60),\n        any_blank_time_frac: this._info.any_blank_ms / total_time_spent,\n        mostly_blank_per_min:\n          this._info.mostly_blank_count / (total_time_spent / 1000 / 60),\n        mostly_blank_time_frac: this._info.mostly_blank_ms / total_time_spent,\n      };\n      for (const key in derived) {\n        // $FlowFixMe[prop-missing]\n        derived[key] = Math.round(1000 * derived[key]) / 1000;\n      }\n      console.debug('FillRateHelper deactivateAndFlush: ', {derived, info});\n    }\n    _listeners.forEach(listener => listener(info));\n    this._resetData();\n  }\n\n  computeBlankness(\n    props: {\n      ...CellMetricProps,\n      initialNumToRender?: ?number,\n      ...\n    },\n    cellsAroundViewport: {\n      first: number,\n      last: number,\n      ...\n    },\n    scrollMetrics: {\n      dOffset: number,\n      offset: number,\n      velocity: number,\n      visibleLength: number,\n      ...\n    },\n  ): number {\n    if (\n      !this._enabled ||\n      props.getItemCount(props.data) === 0 ||\n      cellsAroundViewport.last < cellsAroundViewport.first ||\n      this._samplesStartTime == null\n    ) {\n      return 0;\n    }\n    const {dOffset, offset, velocity, visibleLength} = scrollMetrics;\n\n    // Denominator metrics that we track for all events - most of the time there is no blankness and\n    // we want to capture that.\n    this._info.sample_count++;\n    this._info.pixels_sampled += Math.round(visibleLength);\n    this._info.pixels_scrolled += Math.round(Math.abs(dOffset));\n    const scrollSpeed = Math.round(Math.abs(velocity) * 1000); // px / sec\n\n    // Whether blank now or not, record the elapsed time blank if we were blank last time.\n    const now = global.performance.now();\n    if (this._anyBlankStartTime != null) {\n      this._info.any_blank_ms += now - this._anyBlankStartTime;\n    }\n    this._anyBlankStartTime = null;\n    if (this._mostlyBlankStartTime != null) {\n      this._info.mostly_blank_ms += now - this._mostlyBlankStartTime;\n    }\n    this._mostlyBlankStartTime = null;\n\n    let blankTop = 0;\n    let first = cellsAroundViewport.first;\n    let firstFrame = this._listMetrics.getCellMetrics(first, props);\n    while (\n      first <= cellsAroundViewport.last &&\n      (!firstFrame || !firstFrame.isMounted)\n    ) {\n      firstFrame = this._listMetrics.getCellMetrics(first, props);\n      first++;\n    }\n    // Only count blankTop if we aren't rendering the first item, otherwise we will count the header\n    // as blank.\n    if (firstFrame && first > 0) {\n      blankTop = Math.min(\n        visibleLength,\n        Math.max(0, firstFrame.offset - offset),\n      );\n    }\n    let blankBottom = 0;\n    let last = cellsAroundViewport.last;\n    let lastFrame = this._listMetrics.getCellMetrics(last, props);\n    while (\n      last >= cellsAroundViewport.first &&\n      (!lastFrame || !lastFrame.isMounted)\n    ) {\n      lastFrame = this._listMetrics.getCellMetrics(last, props);\n      last--;\n    }\n    // Only count blankBottom if we aren't rendering the last item, otherwise we will count the\n    // footer as blank.\n    if (lastFrame && last < props.getItemCount(props.data) - 1) {\n      const bottomEdge = lastFrame.offset + lastFrame.length;\n      blankBottom = Math.min(\n        visibleLength,\n        Math.max(0, offset + visibleLength - bottomEdge),\n      );\n    }\n    const pixels_blank = Math.round(blankTop + blankBottom);\n    const blankness = pixels_blank / visibleLength;\n    if (blankness > 0) {\n      this._anyBlankStartTime = now;\n      this._info.any_blank_speed_sum += scrollSpeed;\n      this._info.any_blank_count++;\n      this._info.pixels_blank += pixels_blank;\n      if (blankness > 0.5) {\n        this._mostlyBlankStartTime = now;\n        this._info.mostly_blank_count++;\n      }\n    } else if (scrollSpeed < 0.01 || Math.abs(dOffset) < 1) {\n      this.deactivateAndFlush();\n    }\n    return blankness;\n  }\n\n  enabled(): boolean {\n    return this._enabled;\n  }\n\n  _resetData() {\n    this._anyBlankStartTime = null;\n    this._info = new Info();\n    this._mostlyBlankStartTime = null;\n    this._samplesStartTime = null;\n  }\n}\n\nmodule.exports = FillRateHelper;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport type {Props as VirtualizedListProps} from './VirtualizedListProps';\nimport type {Layout} from 'react-native/Libraries/Types/CoreEventTypes';\n\nimport {keyExtractor as defaultKeyExtractor} from './VirtualizeUtils';\nimport invariant from 'invariant';\n\nexport type CellMetrics = {\n  /**\n   * Index of the item in the list\n   */\n  index: number,\n  /**\n   * Length of the cell along the scrolling axis\n   */\n  length: number,\n  /**\n   * Distance between this cell and the start of the list along the scrolling\n   * axis\n   */\n  offset: number,\n  /**\n   * Whether the cell is last known to be mounted\n   */\n  isMounted: boolean,\n};\n\n// TODO: `inverted` can be incorporated here if it is moved to an order\n// based implementation instead of transform.\nexport type ListOrientation = {\n  horizontal: boolean,\n  rtl: boolean,\n};\n\n/**\n * Subset of VirtualizedList props needed to calculate cell metrics\n */\nexport type CellMetricProps = {\n  data: VirtualizedListProps['data'],\n  getItemCount: VirtualizedListProps['getItemCount'],\n  getItem: VirtualizedListProps['getItem'],\n  getItemLayout?: VirtualizedListProps['getItemLayout'],\n  keyExtractor?: VirtualizedListProps['keyExtractor'],\n  ...\n};\n\n/**\n * Provides an interface to query information about the metrics of a list and its cells.\n */\nexport default class ListMetricsAggregator {\n  _averageCellLength = 0;\n  _cellMetrics: Map<string, CellMetrics> = new Map();\n  _contentLength: ?number;\n  _highestMeasuredCellIndex = 0;\n  _measuredCellsLength = 0;\n  _measuredCellsCount = 0;\n  _orientation: ListOrientation = {\n    horizontal: false,\n    rtl: false,\n  };\n\n  /**\n   * Notify the ListMetricsAggregator that a cell has been laid out.\n   *\n   * @returns whether the cell layout has changed since last notification\n   */\n  notifyCellLayout({\n    cellIndex,\n    cellKey,\n    orientation,\n    layout,\n  }: {\n    cellIndex: number,\n    cellKey: string,\n    orientation: ListOrientation,\n    layout: Layout,\n  }): boolean {\n    this._invalidateIfOrientationChanged(orientation);\n\n    const next: CellMetrics = {\n      index: cellIndex,\n      length: this._selectLength(layout),\n      isMounted: true,\n      offset: this.flowRelativeOffset(layout),\n    };\n    const curr = this._cellMetrics.get(cellKey);\n\n    if (!curr || next.offset !== curr.offset || next.length !== curr.length) {\n      if (curr) {\n        const dLength = next.length - curr.length;\n        this._measuredCellsLength += dLength;\n      } else {\n        this._measuredCellsLength += next.length;\n        this._measuredCellsCount += 1;\n      }\n\n      this._averageCellLength =\n        this._measuredCellsLength / this._measuredCellsCount;\n      this._cellMetrics.set(cellKey, next);\n      this._highestMeasuredCellIndex = Math.max(\n        this._highestMeasuredCellIndex,\n        cellIndex,\n      );\n      return true;\n    } else {\n      curr.isMounted = true;\n      return false;\n    }\n  }\n\n  /**\n   * Notify ListMetricsAggregator that a cell has been unmounted.\n   */\n  notifyCellUnmounted(cellKey: string): void {\n    const curr = this._cellMetrics.get(cellKey);\n    if (curr) {\n      curr.isMounted = false;\n    }\n  }\n\n  /**\n   * Notify ListMetricsAggregator that the lists content container has been laid out.\n   */\n  notifyListContentLayout({\n    orientation,\n    layout,\n  }: {\n    orientation: ListOrientation,\n    layout: $ReadOnly<{width: number, height: number}>,\n  }): void {\n    this._invalidateIfOrientationChanged(orientation);\n    this._contentLength = this._selectLength(layout);\n  }\n\n  /**\n   * Return the average length of the cells which have been measured\n   */\n  getAverageCellLength(): number {\n    return this._averageCellLength;\n  }\n\n  /**\n   * Return the highest measured cell index (or 0 if nothing has been measured\n   * yet)\n   */\n  getHighestMeasuredCellIndex(): number {\n    return this._highestMeasuredCellIndex;\n  }\n\n  /**\n   * Returns the exact metrics of a cell if it has already been laid out,\n   * otherwise an estimate based on the average length of previously measured\n   * cells\n   */\n  getCellMetricsApprox(index: number, props: CellMetricProps): CellMetrics {\n    const frame = this.getCellMetrics(index, props);\n    if (frame && frame.index === index) {\n      // check for invalid frames due to row re-ordering\n      return frame;\n    } else {\n      const {data, getItemCount} = props;\n      invariant(\n        index >= 0 && index < getItemCount(data),\n        'Tried to get frame for out of range index ' + index,\n      );\n      return {\n        length: this._averageCellLength,\n        offset: this._averageCellLength * index,\n        index,\n        isMounted: false,\n      };\n    }\n  }\n\n  /**\n   * Returns the exact metrics of a cell if it has already been laid out\n   */\n  getCellMetrics(index: number, props: CellMetricProps): ?CellMetrics {\n    const {data, getItem, getItemCount, getItemLayout} = props;\n    invariant(\n      index >= 0 && index < getItemCount(data),\n      'Tried to get metrics for out of range cell index ' + index,\n    );\n    const keyExtractor = props.keyExtractor ?? defaultKeyExtractor;\n    const frame = this._cellMetrics.get(\n      keyExtractor(getItem(data, index), index),\n    );\n    if (frame && frame.index === index) {\n      return frame;\n    }\n\n    if (getItemLayout) {\n      const {length, offset} = getItemLayout(data, index);\n      // TODO: `isMounted` is used for both \"is exact layout\" and \"has been\n      // unmounted\". Should be refactored.\n      return {index, length, offset, isMounted: true};\n    }\n\n    return null;\n  }\n\n  /**\n   * Gets an approximate offset to an item at a given index. Supports\n   * fractional indices.\n   */\n  getCellOffsetApprox(index: number, props: CellMetricProps): number {\n    if (Number.isInteger(index)) {\n      return this.getCellMetricsApprox(index, props).offset;\n    } else {\n      const frameMetrics = this.getCellMetricsApprox(Math.floor(index), props);\n      const remainder = index - Math.floor(index);\n      return frameMetrics.offset + remainder * frameMetrics.length;\n    }\n  }\n\n  /**\n   * Returns the length of all ScrollView content along the scrolling axis.\n   */\n  getContentLength(): number {\n    return this._contentLength ?? 0;\n  }\n\n  /**\n   * Whether a content length has been observed\n   */\n  hasContentLength(): boolean {\n    return this._contentLength != null;\n  }\n\n  /**\n   * Finds the flow-relative offset (e.g. starting from the left in LTR, but\n   * right in RTL) from a layout box.\n   */\n  flowRelativeOffset(layout: Layout, referenceContentLength?: ?number): number {\n    const {horizontal, rtl} = this._orientation;\n\n    if (horizontal && rtl) {\n      const contentLength = referenceContentLength ?? this._contentLength;\n      invariant(\n        contentLength != null,\n        'ListMetricsAggregator must be notified of list content layout before resolving offsets',\n      );\n      return (\n        contentLength -\n        (this._selectOffset(layout) + this._selectLength(layout))\n      );\n    } else {\n      return this._selectOffset(layout);\n    }\n  }\n\n  /**\n   * Converts a flow-relative offset to a cartesian offset\n   */\n  cartesianOffset(flowRelativeOffset: number): number {\n    const {horizontal, rtl} = this._orientation;\n\n    if (horizontal && rtl) {\n      invariant(\n        this._contentLength != null,\n        'ListMetricsAggregator must be notified of list content layout before resolving offsets',\n      );\n      return this._contentLength - flowRelativeOffset;\n    } else {\n      return flowRelativeOffset;\n    }\n  }\n\n  _invalidateIfOrientationChanged(orientation: ListOrientation): void {\n    if (orientation.rtl !== this._orientation.rtl) {\n      this._cellMetrics.clear();\n    }\n\n    if (orientation.horizontal !== this._orientation.horizontal) {\n      this._averageCellLength = 0;\n      this._highestMeasuredCellIndex = 0;\n      this._measuredCellsLength = 0;\n      this._measuredCellsCount = 0;\n    }\n\n    this._orientation = orientation;\n  }\n\n  _selectLength({\n    width,\n    height,\n  }: $ReadOnly<{width: number, height: number, ...}>): number {\n    return this._orientation.horizontal ? width : height;\n  }\n\n  _selectOffset({x, y}: $ReadOnly<{x: number, y: number, ...}>): number {\n    return this._orientation.horizontal ? x : y;\n  }\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nimport invariant from 'invariant';\nimport * as React from 'react';\n\n/**\n * `setState` is called asynchronously, and should not rely on the value of\n * `this.props` or `this.state`:\n * https://react.dev/docs/state-and-lifecycle.html#state-updates-may-be-asynchronous\n *\n * SafePureComponent adds runtime enforcement, to catch cases where these\n * variables are read in a state updater function, instead of the ones passed\n * in.\n */\nexport default class StateSafePureComponent<\n  Props,\n  State: interface {},\n> extends React.PureComponent<Props, State> {\n  _inAsyncStateUpdate = false;\n\n  constructor(props: Props) {\n    super(props);\n    this._installSetStateHooks();\n  }\n\n  setState(\n    partialState: ?(Partial<State> | ((State, Props) => ?Partial<State>)),\n    callback?: () => mixed,\n  ): void {\n    if (typeof partialState === 'function') {\n      super.setState((state, props) => {\n        this._inAsyncStateUpdate = true;\n        let ret;\n        try {\n          ret = partialState(state, props);\n        } catch (err) {\n          throw err;\n        } finally {\n          this._inAsyncStateUpdate = false;\n        }\n        return ret;\n      }, callback);\n    } else {\n      super.setState(partialState, callback);\n    }\n  }\n\n  _installSetStateHooks() {\n    const that = this;\n    let {props, state} = this;\n\n    Object.defineProperty(this, 'props', {\n      get() {\n        invariant(\n          !that._inAsyncStateUpdate,\n          '\"this.props\" should not be accessed during state updates',\n        );\n        return props;\n      },\n      set(newProps: Props) {\n        props = newProps;\n      },\n    });\n    Object.defineProperty(this, 'state', {\n      get() {\n        invariant(\n          !that._inAsyncStateUpdate,\n          '\"this.state\" should not be acceessed during state updates',\n        );\n        return state;\n      },\n      set(newState: State) {\n        state = newState;\n      },\n    });\n  }\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\n'use strict';\n\nimport type {CellMetricProps} from './ListMetricsAggregator';\n\nimport ListMetricsAggregator from './ListMetricsAggregator';\n\nconst invariant = require('invariant');\n\nexport type ViewToken = {\n  item: any,\n  key: string,\n  index: ?number,\n  isViewable: boolean,\n  section?: any,\n  ...\n};\n\nexport type ViewabilityConfigCallbackPair = {\n  viewabilityConfig: ViewabilityConfig,\n  onViewableItemsChanged: (info: {\n    viewableItems: Array<ViewToken>,\n    changed: Array<ViewToken>,\n    ...\n  }) => void,\n  ...\n};\n\nexport type ViewabilityConfig = {|\n  /**\n   * Minimum amount of time (in milliseconds) that an item must be physically viewable before the\n   * viewability callback will be fired. A high number means that scrolling through content without\n   * stopping will not mark the content as viewable.\n   */\n  minimumViewTime?: number,\n\n  /**\n   * Percent of viewport that must be covered for a partially occluded item to count as\n   * \"viewable\", 0-100. Fully visible items are always considered viewable. A value of 0 means\n   * that a single pixel in the viewport makes the item viewable, and a value of 100 means that\n   * an item must be either entirely visible or cover the entire viewport to count as viewable.\n   */\n  viewAreaCoveragePercentThreshold?: number,\n\n  /**\n   * Similar to `viewAreaPercentThreshold`, but considers the percent of the item that is visible,\n   * rather than the fraction of the viewable area it covers.\n   */\n  itemVisiblePercentThreshold?: number,\n\n  /**\n   * Nothing is considered viewable until the user scrolls or `recordInteraction` is called after\n   * render.\n   */\n  waitForInteraction?: boolean,\n|};\n\n/**\n * A Utility class for calculating viewable items based on current metrics like scroll position and\n * layout.\n *\n * An item is said to be in a \"viewable\" state when any of the following\n * is true for longer than `minimumViewTime` milliseconds (after an interaction if `waitForInteraction`\n * is true):\n *\n * - Occupying >= `viewAreaCoveragePercentThreshold` of the view area XOR fraction of the item\n *   visible in the view area >= `itemVisiblePercentThreshold`.\n * - Entirely visible on screen\n */\nclass ViewabilityHelper {\n  _config: ViewabilityConfig;\n  _hasInteracted: boolean = false;\n  _timers: Set<number> = new Set();\n  _viewableIndices: Array<number> = [];\n  _viewableItems: Map<string, ViewToken> = new Map();\n\n  constructor(\n    config: ViewabilityConfig = {viewAreaCoveragePercentThreshold: 0},\n  ) {\n    this._config = config;\n  }\n\n  /**\n   * Cleanup, e.g. on unmount. Clears any pending timers.\n   */\n  dispose() {\n    /* $FlowFixMe[incompatible-call] (>=0.63.0 site=react_native_fb) This\n     * comment suppresses an error found when Flow v0.63 was deployed. To see\n     * the error delete this comment and run Flow. */\n    this._timers.forEach(clearTimeout);\n  }\n\n  /**\n   * Determines which items are viewable based on the current metrics and config.\n   */\n  computeViewableItems(\n    props: CellMetricProps,\n    scrollOffset: number,\n    viewportHeight: number,\n    listMetrics: ListMetricsAggregator,\n    // Optional optimization to reduce the scan size\n    renderRange?: {\n      first: number,\n      last: number,\n      ...\n    },\n  ): Array<number> {\n    const itemCount = props.getItemCount(props.data);\n    const {itemVisiblePercentThreshold, viewAreaCoveragePercentThreshold} =\n      this._config;\n    const viewAreaMode = viewAreaCoveragePercentThreshold != null;\n    const viewablePercentThreshold = viewAreaMode\n      ? viewAreaCoveragePercentThreshold\n      : itemVisiblePercentThreshold;\n    invariant(\n      viewablePercentThreshold != null &&\n        (itemVisiblePercentThreshold != null) !==\n          (viewAreaCoveragePercentThreshold != null),\n      'Must set exactly one of itemVisiblePercentThreshold or viewAreaCoveragePercentThreshold',\n    );\n    const viewableIndices = [];\n    if (itemCount === 0) {\n      return viewableIndices;\n    }\n    let firstVisible = -1;\n    const {first, last} = renderRange || {first: 0, last: itemCount - 1};\n    if (last >= itemCount) {\n      console.warn(\n        'Invalid render range computing viewability ' +\n          JSON.stringify({renderRange, itemCount}),\n      );\n      return [];\n    }\n    for (let idx = first; idx <= last; idx++) {\n      const metrics = listMetrics.getCellMetrics(idx, props);\n      if (!metrics) {\n        continue;\n      }\n      const top = Math.floor(metrics.offset - scrollOffset);\n      const bottom = Math.floor(top + metrics.length);\n\n      if (top < viewportHeight && bottom > 0) {\n        firstVisible = idx;\n        if (\n          _isViewable(\n            viewAreaMode,\n            viewablePercentThreshold,\n            top,\n            bottom,\n            viewportHeight,\n            metrics.length,\n          )\n        ) {\n          viewableIndices.push(idx);\n        }\n      } else if (firstVisible >= 0) {\n        break;\n      }\n    }\n    return viewableIndices;\n  }\n\n  /**\n   * Figures out which items are viewable and how that has changed from before and calls\n   * `onViewableItemsChanged` as appropriate.\n   */\n  onUpdate(\n    props: CellMetricProps,\n    scrollOffset: number,\n    viewportHeight: number,\n    listMetrics: ListMetricsAggregator,\n    createViewToken: (\n      index: number,\n      isViewable: boolean,\n      props: CellMetricProps,\n    ) => ViewToken,\n    onViewableItemsChanged: ({\n      viewableItems: Array<ViewToken>,\n      changed: Array<ViewToken>,\n      ...\n    }) => void,\n    // Optional optimization to reduce the scan size\n    renderRange?: {\n      first: number,\n      last: number,\n      ...\n    },\n  ): void {\n    const itemCount = props.getItemCount(props.data);\n    if (\n      (this._config.waitForInteraction && !this._hasInteracted) ||\n      itemCount === 0 ||\n      !listMetrics.getCellMetrics(0, props)\n    ) {\n      return;\n    }\n    let viewableIndices: Array<number> = [];\n    if (itemCount) {\n      viewableIndices = this.computeViewableItems(\n        props,\n        scrollOffset,\n        viewportHeight,\n        listMetrics,\n        renderRange,\n      );\n    }\n    if (\n      this._viewableIndices.length === viewableIndices.length &&\n      this._viewableIndices.every((v, ii) => v === viewableIndices[ii])\n    ) {\n      // We might get a lot of scroll events where visibility doesn't change and we don't want to do\n      // extra work in those cases.\n      return;\n    }\n    this._viewableIndices = viewableIndices;\n    if (this._config.minimumViewTime) {\n      const handle: TimeoutID = setTimeout(() => {\n        /* $FlowFixMe[incompatible-call] (>=0.63.0 site=react_native_fb) This\n         * comment suppresses an error found when Flow v0.63 was deployed. To\n         * see the error delete this comment and run Flow. */\n        this._timers.delete(handle);\n        this._onUpdateSync(\n          props,\n          viewableIndices,\n          onViewableItemsChanged,\n          createViewToken,\n        );\n      }, this._config.minimumViewTime);\n      /* $FlowFixMe[incompatible-call] (>=0.63.0 site=react_native_fb) This\n       * comment suppresses an error found when Flow v0.63 was deployed. To see\n       * the error delete this comment and run Flow. */\n      this._timers.add(handle);\n    } else {\n      this._onUpdateSync(\n        props,\n        viewableIndices,\n        onViewableItemsChanged,\n        createViewToken,\n      );\n    }\n  }\n\n  /**\n   * clean-up cached _viewableIndices to evaluate changed items on next update\n   */\n  resetViewableIndices() {\n    this._viewableIndices = [];\n  }\n\n  /**\n   * Records that an interaction has happened even if there has been no scroll.\n   */\n  recordInteraction() {\n    this._hasInteracted = true;\n  }\n\n  _onUpdateSync(\n    props: CellMetricProps,\n    viewableIndicesToCheck: Array<number>,\n    onViewableItemsChanged: ({\n      changed: Array<ViewToken>,\n      viewableItems: Array<ViewToken>,\n      ...\n    }) => void,\n    createViewToken: (\n      index: number,\n      isViewable: boolean,\n      props: CellMetricProps,\n    ) => ViewToken,\n  ) {\n    // Filter out indices that have gone out of view since this call was scheduled.\n    viewableIndicesToCheck = viewableIndicesToCheck.filter(ii =>\n      this._viewableIndices.includes(ii),\n    );\n    const prevItems = this._viewableItems;\n    const nextItems = new Map(\n      viewableIndicesToCheck.map(ii => {\n        const viewable = createViewToken(ii, true, props);\n        return [viewable.key, viewable];\n      }),\n    );\n\n    const changed = [];\n    for (const [key, viewable] of nextItems) {\n      if (!prevItems.has(key)) {\n        changed.push(viewable);\n      }\n    }\n    for (const [key, viewable] of prevItems) {\n      if (!nextItems.has(key)) {\n        changed.push({...viewable, isViewable: false});\n      }\n    }\n    if (changed.length > 0) {\n      this._viewableItems = nextItems;\n      onViewableItemsChanged({\n        viewableItems: Array.from(nextItems.values()),\n        changed,\n        viewabilityConfig: this._config,\n      });\n    }\n  }\n}\n\nfunction _isViewable(\n  viewAreaMode: boolean,\n  viewablePercentThreshold: number,\n  top: number,\n  bottom: number,\n  viewportHeight: number,\n  itemLength: number,\n): boolean {\n  if (_isEntirelyVisible(top, bottom, viewportHeight)) {\n    return true;\n  } else {\n    const pixels = _getPixelsVisible(top, bottom, viewportHeight);\n    const percent =\n      100 * (viewAreaMode ? pixels / viewportHeight : pixels / itemLength);\n    return percent >= viewablePercentThreshold;\n  }\n}\n\nfunction _getPixelsVisible(\n  top: number,\n  bottom: number,\n  viewportHeight: number,\n): number {\n  const visibleHeight = Math.min(bottom, viewportHeight) - Math.max(top, 0);\n  return Math.max(0, visibleHeight);\n}\n\nfunction _isEntirelyVisible(\n  top: number,\n  bottom: number,\n  viewportHeight: number,\n): boolean {\n  return top >= 0 && bottom <= viewportHeight && bottom > top;\n}\n\nmodule.exports = ViewabilityHelper;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\n'use strict';\n\nimport type ListMetricsAggregator, {\n  CellMetricProps,\n} from './ListMetricsAggregator';\n\n/**\n * Used to find the indices of the frames that overlap the given offsets. Useful for finding the\n * items that bound different windows of content, such as the visible area or the buffered overscan\n * area.\n */\nexport function elementsThatOverlapOffsets(\n  offsets: Array<number>,\n  props: CellMetricProps,\n  listMetrics: ListMetricsAggregator,\n  zoomScale: number = 1,\n): Array<number> {\n  const itemCount = props.getItemCount(props.data);\n  const result = [];\n  for (let offsetIndex = 0; offsetIndex < offsets.length; offsetIndex++) {\n    const currentOffset = offsets[offsetIndex];\n    let left = 0;\n    let right = itemCount - 1;\n\n    while (left <= right) {\n      const mid = left + Math.floor((right - left) / 2);\n      const frame = listMetrics.getCellMetricsApprox(mid, props);\n      const scaledOffsetStart = frame.offset * zoomScale;\n      const scaledOffsetEnd = (frame.offset + frame.length) * zoomScale;\n\n      // We want the first frame that contains the offset, with inclusive bounds. Thus, for the\n      // first frame the scaledOffsetStart is inclusive, while for other frames it is exclusive.\n      if (\n        (mid === 0 && currentOffset < scaledOffsetStart) ||\n        (mid !== 0 && currentOffset <= scaledOffsetStart)\n      ) {\n        right = mid - 1;\n      } else if (currentOffset > scaledOffsetEnd) {\n        left = mid + 1;\n      } else {\n        result[offsetIndex] = mid;\n        break;\n      }\n    }\n  }\n\n  return result;\n}\n\n/**\n * Computes the number of elements in the `next` range that are new compared to the `prev` range.\n * Handy for calculating how many new items will be rendered when the render window changes so we\n * can restrict the number of new items render at once so that content can appear on the screen\n * faster.\n */\nexport function newRangeCount(\n  prev: {\n    first: number,\n    last: number,\n    ...\n  },\n  next: {\n    first: number,\n    last: number,\n    ...\n  },\n): number {\n  return (\n    next.last -\n    next.first +\n    1 -\n    Math.max(\n      0,\n      1 + Math.min(next.last, prev.last) - Math.max(next.first, prev.first),\n    )\n  );\n}\n\n/**\n * Custom logic for determining which items should be rendered given the current frame and scroll\n * metrics, as well as the previous render state. The algorithm may evolve over time, but generally\n * prioritizes the visible area first, then expands that with overscan regions ahead and behind,\n * biased in the direction of scroll.\n */\nexport function computeWindowedRenderLimits(\n  props: CellMetricProps,\n  maxToRenderPerBatch: number,\n  windowSize: number,\n  prev: {\n    first: number,\n    last: number,\n  },\n  listMetrics: ListMetricsAggregator,\n  scrollMetrics: {\n    dt: number,\n    offset: number,\n    velocity: number,\n    visibleLength: number,\n    zoomScale: number,\n    ...\n  },\n): {\n  first: number,\n  last: number,\n} {\n  const itemCount = props.getItemCount(props.data);\n  if (itemCount === 0) {\n    return {first: 0, last: -1};\n  }\n  const {offset, velocity, visibleLength, zoomScale = 1} = scrollMetrics;\n\n  // Start with visible area, then compute maximum overscan region by expanding from there, biased\n  // in the direction of scroll. Total overscan area is capped, which should cap memory consumption\n  // too.\n  const visibleBegin = Math.max(0, offset);\n  const visibleEnd = visibleBegin + visibleLength;\n  const overscanLength = (windowSize - 1) * visibleLength;\n\n  // Considering velocity seems to introduce more churn than it's worth.\n  const leadFactor = 0.5; // Math.max(0, Math.min(1, velocity / 25 + 0.5));\n\n  const fillPreference =\n    velocity > 1 ? 'after' : velocity < -1 ? 'before' : 'none';\n\n  const overscanBegin = Math.max(\n    0,\n    visibleBegin - (1 - leadFactor) * overscanLength,\n  );\n  const overscanEnd = Math.max(0, visibleEnd + leadFactor * overscanLength);\n\n  const lastItemOffset =\n    listMetrics.getCellMetricsApprox(itemCount - 1, props).offset * zoomScale;\n  if (lastItemOffset < overscanBegin) {\n    // Entire list is before our overscan window\n    return {\n      first: Math.max(0, itemCount - 1 - maxToRenderPerBatch),\n      last: itemCount - 1,\n    };\n  }\n\n  // Find the indices that correspond to the items at the render boundaries we're targeting.\n  let [overscanFirst, first, last, overscanLast] = elementsThatOverlapOffsets(\n    [overscanBegin, visibleBegin, visibleEnd, overscanEnd],\n    props,\n    listMetrics,\n    zoomScale,\n  );\n  overscanFirst = overscanFirst == null ? 0 : overscanFirst;\n  first = first == null ? Math.max(0, overscanFirst) : first;\n  overscanLast = overscanLast == null ? itemCount - 1 : overscanLast;\n  last =\n    last == null\n      ? Math.min(overscanLast, first + maxToRenderPerBatch - 1)\n      : last;\n  const visible = {first, last};\n\n  // We want to limit the number of new cells we're rendering per batch so that we can fill the\n  // content on the screen quickly. If we rendered the entire overscan window at once, the user\n  // could be staring at white space for a long time waiting for a bunch of offscreen content to\n  // render.\n  let newCellCount = newRangeCount(prev, visible);\n\n  while (true) {\n    if (first <= overscanFirst && last >= overscanLast) {\n      // If we fill the entire overscan range, we're done.\n      break;\n    }\n    const maxNewCells = newCellCount >= maxToRenderPerBatch;\n    const firstWillAddMore = first <= prev.first || first > prev.last;\n    const firstShouldIncrement =\n      first > overscanFirst && (!maxNewCells || !firstWillAddMore);\n    const lastWillAddMore = last >= prev.last || last < prev.first;\n    const lastShouldIncrement =\n      last < overscanLast && (!maxNewCells || !lastWillAddMore);\n    if (maxNewCells && !firstShouldIncrement && !lastShouldIncrement) {\n      // We only want to stop if we've hit maxNewCells AND we cannot increment first or last\n      // without rendering new items. This let's us preserve as many already rendered items as\n      // possible, reducing render churn and keeping the rendered overscan range as large as\n      // possible.\n      break;\n    }\n    if (\n      firstShouldIncrement &&\n      !(fillPreference === 'after' && lastShouldIncrement && lastWillAddMore)\n    ) {\n      if (firstWillAddMore) {\n        newCellCount++;\n      }\n      first--;\n    }\n    if (\n      lastShouldIncrement &&\n      !(fillPreference === 'before' && firstShouldIncrement && firstWillAddMore)\n    ) {\n      if (lastWillAddMore) {\n        newCellCount++;\n      }\n      last++;\n    }\n  }\n  if (\n    !(\n      last >= first &&\n      first >= 0 &&\n      last < itemCount &&\n      first >= overscanFirst &&\n      last <= overscanLast &&\n      first <= visible.first &&\n      last >= visible.last\n    )\n  ) {\n    throw new Error(\n      'Bad window calculation ' +\n        JSON.stringify({\n          first,\n          last,\n          itemCount,\n          overscanFirst,\n          overscanLast,\n          visible,\n        }),\n    );\n  }\n  return {first, last};\n}\n\nexport function keyExtractor(item: any, index: number): string {\n  if (typeof item === 'object' && item?.key != null) {\n    return item.key;\n  }\n  if (typeof item === 'object' && item?.id != null) {\n    return item.id;\n  }\n  return String(index);\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\nimport type {CellMetricProps, ListOrientation} from './ListMetricsAggregator';\nimport type {ViewToken} from './ViewabilityHelper';\nimport type {\n  Item,\n  Props,\n  RenderItemProps,\n  RenderItemType,\n  Separators,\n} from './VirtualizedListProps';\nimport type {ScrollResponderType} from 'react-native/Libraries/Components/ScrollView/ScrollView';\nimport type {ViewStyleProp} from 'react-native/Libraries/StyleSheet/StyleSheet';\nimport type {\n  LayoutEvent,\n  ScrollEvent,\n} from 'react-native/Libraries/Types/CoreEventTypes';\n\nimport Batchinator from '../Interaction/Batchinator';\nimport clamp from '../Utilities/clamp';\nimport infoLog from '../Utilities/infoLog';\nimport {CellRenderMask} from './CellRenderMask';\nimport ChildListCollection from './ChildListCollection';\nimport FillRateHelper from './FillRateHelper';\nimport ListMetricsAggregator from './ListMetricsAggregator';\nimport StateSafePureComponent from './StateSafePureComponent';\nimport ViewabilityHelper from './ViewabilityHelper';\nimport CellRenderer from './VirtualizedListCellRenderer';\nimport {\n  VirtualizedListCellContextProvider,\n  VirtualizedListContext,\n  VirtualizedListContextProvider,\n} from './VirtualizedListContext.js';\nimport {\n  horizontalOrDefault,\n  initialNumToRenderOrDefault,\n  maxToRenderPerBatchOrDefault,\n  onEndReachedThresholdOrDefault,\n  onStartReachedThresholdOrDefault,\n  windowSizeOrDefault,\n} from './VirtualizedListProps';\nimport {\n  computeWindowedRenderLimits,\n  keyExtractor as defaultKeyExtractor,\n} from './VirtualizeUtils';\nimport invariant from 'invariant';\nimport nullthrows from 'nullthrows';\nimport * as React from 'react';\nimport {\n  I18nManager,\n  Platform,\n  RefreshControl,\n  ScrollView,\n  StyleSheet,\n  View,\n  findNodeHandle,\n} from 'react-native';\n\nexport type {RenderItemProps, RenderItemType, Separators};\n\nconst ON_EDGE_REACHED_EPSILON = 0.001;\n\nlet _usedIndexForKey = false;\nlet _keylessItemComponentName: string = '';\n\ntype ViewabilityHelperCallbackTuple = {\n  viewabilityHelper: ViewabilityHelper,\n  onViewableItemsChanged: (info: {\n    viewableItems: Array<ViewToken>,\n    changed: Array<ViewToken>,\n    ...\n  }) => void,\n  ...\n};\n\ntype State = {\n  renderMask: CellRenderMask,\n  cellsAroundViewport: {first: number, last: number},\n  // Used to track items added at the start of the list for maintainVisibleContentPosition.\n  firstVisibleItemKey: ?string,\n  // When > 0 the scroll position available in JS is considered stale and should not be used.\n  pendingScrollUpdateCount: number,\n};\n\nfunction getScrollingThreshold(threshold: number, visibleLength: number) {\n  return (threshold * visibleLength) / 2;\n}\n\n/**\n * Base implementation for the more convenient [`<FlatList>`](https://reactnative.dev/docs/flatlist)\n * and [`<SectionList>`](https://reactnative.dev/docs/sectionlist) components, which are also better\n * documented. In general, this should only really be used if you need more flexibility than\n * `FlatList` provides, e.g. for use with immutable data instead of plain arrays.\n *\n * Virtualization massively improves memory consumption and performance of large lists by\n * maintaining a finite render window of active items and replacing all items outside of the render\n * window with appropriately sized blank space. The window adapts to scrolling behavior, and items\n * are rendered incrementally with low-pri (after any running interactions) if they are far from the\n * visible area, or with hi-pri otherwise to minimize the potential of seeing blank space.\n *\n * Some caveats:\n *\n * - Internal state is not preserved when content scrolls out of the render window. Make sure all\n *   your data is captured in the item data or external stores like Flux, Redux, or Relay.\n * - This is a `PureComponent` which means that it will not re-render if `props` remain shallow-\n *   equal. Make sure that everything your `renderItem` function depends on is passed as a prop\n *   (e.g. `extraData`) that is not `===` after updates, otherwise your UI may not update on\n *   changes. This includes the `data` prop and parent component state.\n * - In order to constrain memory and enable smooth scrolling, content is rendered asynchronously\n *   offscreen. This means it's possible to scroll faster than the fill rate ands momentarily see\n *   blank content. This is a tradeoff that can be adjusted to suit the needs of each application,\n *   and we are working on improving it behind the scenes.\n * - By default, the list looks for a `key` or `id` prop on each item and uses that for the React key.\n *   Alternatively, you can provide a custom `keyExtractor` prop.\n * - As an effort to remove defaultProps, use helper functions when referencing certain props\n *\n */\nclass VirtualizedList extends StateSafePureComponent<Props, State> {\n  static contextType: typeof VirtualizedListContext = VirtualizedListContext;\n\n  // scrollToEnd may be janky without getItemLayout prop\n  scrollToEnd(params?: ?{animated?: ?boolean, ...}) {\n    const animated = params ? params.animated : true;\n    const veryLast = this.props.getItemCount(this.props.data) - 1;\n    if (veryLast < 0) {\n      return;\n    }\n    const frame = this._listMetrics.getCellMetricsApprox(veryLast, this.props);\n    const offset = Math.max(\n      0,\n      frame.offset +\n        frame.length +\n        this._footerLength -\n        this._scrollMetrics.visibleLength,\n    );\n\n    // TODO: consider using `ref.scrollToEnd` directly\n    this.scrollToOffset({animated, offset});\n  }\n\n  // scrollToIndex may be janky without getItemLayout prop\n  scrollToIndex(params: {\n    animated?: ?boolean,\n    index: number,\n    viewOffset?: number,\n    viewPosition?: number,\n    ...\n  }): $FlowFixMe {\n    const {data, getItemCount, getItemLayout, onScrollToIndexFailed} =\n      this.props;\n    const {animated, index, viewOffset, viewPosition} = params;\n    invariant(\n      index >= 0,\n      `scrollToIndex out of range: requested index ${index} but minimum is 0`,\n    );\n    invariant(\n      getItemCount(data) >= 1,\n      `scrollToIndex out of range: item length ${getItemCount(\n        data,\n      )} but minimum is 1`,\n    );\n    invariant(\n      index < getItemCount(data),\n      `scrollToIndex out of range: requested index ${index} is out of 0 to ${\n        getItemCount(data) - 1\n      }`,\n    );\n    if (\n      !getItemLayout &&\n      index > this._listMetrics.getHighestMeasuredCellIndex()\n    ) {\n      invariant(\n        !!onScrollToIndexFailed,\n        'scrollToIndex should be used in conjunction with getItemLayout or onScrollToIndexFailed, ' +\n          'otherwise there is no way to know the location of offscreen indices or handle failures.',\n      );\n      onScrollToIndexFailed({\n        averageItemLength: this._listMetrics.getAverageCellLength(),\n        highestMeasuredFrameIndex:\n          this._listMetrics.getHighestMeasuredCellIndex(),\n        index,\n      });\n      return;\n    }\n    const frame = this._listMetrics.getCellMetricsApprox(\n      Math.floor(index),\n      this.props,\n    );\n    const offset =\n      Math.max(\n        0,\n        this._listMetrics.getCellOffsetApprox(index, this.props) -\n          (viewPosition || 0) *\n            (this._scrollMetrics.visibleLength - frame.length),\n      ) - (viewOffset || 0);\n\n    this.scrollToOffset({offset, animated});\n  }\n\n  // scrollToItem may be janky without getItemLayout prop. Required linear scan through items -\n  // use scrollToIndex instead if possible.\n  scrollToItem(params: {\n    animated?: ?boolean,\n    item: Item,\n    viewOffset?: number,\n    viewPosition?: number,\n    ...\n  }) {\n    const {item} = params;\n    const {data, getItem, getItemCount} = this.props;\n    const itemCount = getItemCount(data);\n    for (let index = 0; index < itemCount; index++) {\n      if (getItem(data, index) === item) {\n        this.scrollToIndex({...params, index});\n        break;\n      }\n    }\n  }\n\n  /**\n   * Scroll to a specific content pixel offset in the list.\n   *\n   * Param `offset` expects the offset to scroll to.\n   * In case of `horizontal` is true, the offset is the x-value,\n   * in any other case the offset is the y-value.\n   *\n   * Param `animated` (`true` by default) defines whether the list\n   * should do an animation while scrolling.\n   */\n  scrollToOffset(params: {animated?: ?boolean, offset: number, ...}) {\n    const {animated, offset} = params;\n    const scrollRef = this._scrollRef;\n\n    if (scrollRef == null) {\n      return;\n    }\n\n    if (scrollRef.scrollTo == null) {\n      console.warn(\n        'No scrollTo method provided. This may be because you have two nested ' +\n          'VirtualizedLists with the same orientation, or because you are ' +\n          'using a custom component that does not implement scrollTo.',\n      );\n      return;\n    }\n\n    const {horizontal, rtl} = this._orientation();\n    if (horizontal && rtl && !this._listMetrics.hasContentLength()) {\n      console.warn(\n        'scrollToOffset may not be called in RTL before content is laid out',\n      );\n      return;\n    }\n\n    scrollRef.scrollTo({\n      animated,\n      ...this._scrollToParamsFromOffset(offset),\n    });\n  }\n\n  _scrollToParamsFromOffset(offset: number): {x?: number, y?: number} {\n    const {horizontal, rtl} = this._orientation();\n    if (horizontal && rtl) {\n      // Add the visible length of the scrollview so that the offset is right-aligned\n      const cartOffset = this._listMetrics.cartesianOffset(\n        offset + this._scrollMetrics.visibleLength,\n      );\n      return horizontal ? {x: cartOffset} : {y: cartOffset};\n    } else {\n      return horizontal ? {x: offset} : {y: offset};\n    }\n  }\n\n  recordInteraction() {\n    this._nestedChildLists.forEach(childList => {\n      childList.recordInteraction();\n    });\n    this._viewabilityTuples.forEach(t => {\n      t.viewabilityHelper.recordInteraction();\n    });\n    this._updateViewableItems(this.props, this.state.cellsAroundViewport);\n  }\n\n  flashScrollIndicators() {\n    if (this._scrollRef == null) {\n      return;\n    }\n\n    this._scrollRef.flashScrollIndicators();\n  }\n\n  /**\n   * Provides a handle to the underlying scroll responder.\n   * Note that `this._scrollRef` might not be a `ScrollView`, so we\n   * need to check that it responds to `getScrollResponder` before calling it.\n   */\n  getScrollResponder(): ?ScrollResponderType {\n    if (this._scrollRef && this._scrollRef.getScrollResponder) {\n      return this._scrollRef.getScrollResponder();\n    }\n  }\n\n  getScrollableNode(): ?number {\n    if (this._scrollRef && this._scrollRef.getScrollableNode) {\n      return this._scrollRef.getScrollableNode();\n    } else {\n      return findNodeHandle(this._scrollRef);\n    }\n  }\n\n  getScrollRef():\n    | ?React.ElementRef<typeof ScrollView>\n    | ?React.ElementRef<typeof View> {\n    if (this._scrollRef && this._scrollRef.getScrollRef) {\n      return this._scrollRef.getScrollRef();\n    } else {\n      return this._scrollRef;\n    }\n  }\n\n  setNativeProps(props: Object) {\n    if (this._scrollRef) {\n      this._scrollRef.setNativeProps(props);\n    }\n  }\n\n  _getCellKey(): string {\n    return this.context?.cellKey || 'rootList';\n  }\n\n  // $FlowFixMe[missing-local-annot]\n  _getScrollMetrics = () => {\n    return this._scrollMetrics;\n  };\n\n  hasMore(): boolean {\n    return this._hasMore;\n  }\n\n  // $FlowFixMe[missing-local-annot]\n  _getOutermostParentListRef = () => {\n    if (this._isNestedWithSameOrientation()) {\n      return this.context.getOutermostParentListRef();\n    } else {\n      return this;\n    }\n  };\n\n  _registerAsNestedChild = (childList: {\n    cellKey: string,\n    ref: React.ElementRef<typeof VirtualizedList>,\n  }): void => {\n    this._nestedChildLists.add(childList.ref, childList.cellKey);\n    if (this._hasInteracted) {\n      childList.ref.recordInteraction();\n    }\n  };\n\n  _unregisterAsNestedChild = (childList: {\n    ref: React.ElementRef<typeof VirtualizedList>,\n  }): void => {\n    this._nestedChildLists.remove(childList.ref);\n  };\n\n  state: State;\n\n  constructor(props: Props) {\n    super(props);\n    this._checkProps(props);\n\n    this._fillRateHelper = new FillRateHelper(this._listMetrics);\n    this._updateCellsToRenderBatcher = new Batchinator(\n      this._updateCellsToRender,\n      this.props.updateCellsBatchingPeriod ?? 50,\n    );\n\n    if (this.props.viewabilityConfigCallbackPairs) {\n      this._viewabilityTuples = this.props.viewabilityConfigCallbackPairs.map(\n        pair => ({\n          viewabilityHelper: new ViewabilityHelper(pair.viewabilityConfig),\n          onViewableItemsChanged: pair.onViewableItemsChanged,\n        }),\n      );\n    } else {\n      const {onViewableItemsChanged, viewabilityConfig} = this.props;\n      if (onViewableItemsChanged) {\n        this._viewabilityTuples.push({\n          viewabilityHelper: new ViewabilityHelper(viewabilityConfig),\n          onViewableItemsChanged: onViewableItemsChanged,\n        });\n      }\n    }\n\n    const initialRenderRegion = VirtualizedList._initialRenderRegion(props);\n\n    const minIndexForVisible =\n      this.props.maintainVisibleContentPosition?.minIndexForVisible ?? 0;\n\n    this.state = {\n      cellsAroundViewport: initialRenderRegion,\n      renderMask: VirtualizedList._createRenderMask(props, initialRenderRegion),\n      firstVisibleItemKey:\n        this.props.getItemCount(this.props.data) > minIndexForVisible\n          ? VirtualizedList._getItemKey(this.props, minIndexForVisible)\n          : null,\n      // When we have a non-zero initialScrollIndex, we will receive a\n      // scroll event later so this will prevent the window from updating\n      // until we get a valid offset.\n      pendingScrollUpdateCount:\n        this.props.initialScrollIndex != null &&\n        this.props.initialScrollIndex > 0\n          ? 1\n          : 0,\n    };\n  }\n\n  _checkProps(props: Props) {\n    const {onScroll, windowSize, getItemCount, data, initialScrollIndex} =\n      props;\n\n    invariant(\n      // $FlowFixMe[prop-missing]\n      !onScroll || !onScroll.__isNative,\n      'Components based on VirtualizedList must be wrapped with Animated.createAnimatedComponent ' +\n        'to support native onScroll events with useNativeDriver',\n    );\n    invariant(\n      windowSizeOrDefault(windowSize) > 0,\n      'VirtualizedList: The windowSize prop must be present and set to a value greater than 0.',\n    );\n\n    invariant(\n      getItemCount,\n      'VirtualizedList: The \"getItemCount\" prop must be provided',\n    );\n\n    const itemCount = getItemCount(data);\n\n    if (\n      initialScrollIndex != null &&\n      !this._hasTriggeredInitialScrollToIndex &&\n      (initialScrollIndex < 0 ||\n        (itemCount > 0 && initialScrollIndex >= itemCount)) &&\n      !this._hasWarned.initialScrollIndex\n    ) {\n      console.warn(\n        `initialScrollIndex \"${initialScrollIndex}\" is not valid (list has ${itemCount} items)`,\n      );\n      this._hasWarned.initialScrollIndex = true;\n    }\n\n    if (__DEV__ && !this._hasWarned.flexWrap) {\n      // $FlowFixMe[underconstrained-implicit-instantiation]\n      const flatStyles = StyleSheet.flatten(this.props.contentContainerStyle);\n      if (flatStyles != null && flatStyles.flexWrap === 'wrap') {\n        console.warn(\n          '`flexWrap: `wrap`` is not supported with the `VirtualizedList` components.' +\n            'Consider using `numColumns` with `FlatList` instead.',\n        );\n        this._hasWarned.flexWrap = true;\n      }\n    }\n  }\n\n  static _findItemIndexWithKey(\n    props: Props,\n    key: string,\n    hint: ?number,\n  ): ?number {\n    const itemCount = props.getItemCount(props.data);\n    if (hint != null && hint >= 0 && hint < itemCount) {\n      const curKey = VirtualizedList._getItemKey(props, hint);\n      if (curKey === key) {\n        return hint;\n      }\n    }\n    for (let ii = 0; ii < itemCount; ii++) {\n      const curKey = VirtualizedList._getItemKey(props, ii);\n      if (curKey === key) {\n        return ii;\n      }\n    }\n    return null;\n  }\n\n  static _getItemKey(\n    props: {\n      data: Props['data'],\n      getItem: Props['getItem'],\n      keyExtractor: Props['keyExtractor'],\n      ...\n    },\n    index: number,\n  ): string {\n    const item = props.getItem(props.data, index);\n    return VirtualizedList._keyExtractor(item, index, props);\n  }\n\n  static _createRenderMask(\n    props: Props,\n    cellsAroundViewport: {first: number, last: number},\n    additionalRegions?: ?$ReadOnlyArray<{first: number, last: number}>,\n  ): CellRenderMask {\n    const itemCount = props.getItemCount(props.data);\n\n    invariant(\n      cellsAroundViewport.first >= 0 &&\n        cellsAroundViewport.last >= cellsAroundViewport.first - 1 &&\n        cellsAroundViewport.last < itemCount,\n      `Invalid cells around viewport \"[${cellsAroundViewport.first}, ${cellsAroundViewport.last}]\" was passed to VirtualizedList._createRenderMask`,\n    );\n\n    const renderMask = new CellRenderMask(itemCount);\n\n    if (itemCount > 0) {\n      const allRegions = [cellsAroundViewport, ...(additionalRegions ?? [])];\n      for (const region of allRegions) {\n        renderMask.addCells(region);\n      }\n\n      // The initially rendered cells are retained as part of the\n      // \"scroll-to-top\" optimization\n      if (props.initialScrollIndex == null || props.initialScrollIndex <= 0) {\n        const initialRegion = VirtualizedList._initialRenderRegion(props);\n        renderMask.addCells(initialRegion);\n      }\n\n      // The layout coordinates of sticker headers may be off-screen while the\n      // actual header is on-screen. Keep the most recent before the viewport\n      // rendered, even if its layout coordinates are not in viewport.\n      const stickyIndicesSet = new Set(props.stickyHeaderIndices);\n      VirtualizedList._ensureClosestStickyHeader(\n        props,\n        stickyIndicesSet,\n        renderMask,\n        cellsAroundViewport.first,\n      );\n    }\n\n    return renderMask;\n  }\n\n  static _initialRenderRegion(props: Props): {first: number, last: number} {\n    const itemCount = props.getItemCount(props.data);\n\n    const firstCellIndex = Math.max(\n      0,\n      Math.min(itemCount - 1, Math.floor(props.initialScrollIndex ?? 0)),\n    );\n\n    const lastCellIndex =\n      Math.min(\n        itemCount,\n        firstCellIndex + initialNumToRenderOrDefault(props.initialNumToRender),\n      ) - 1;\n\n    return {\n      first: firstCellIndex,\n      last: lastCellIndex,\n    };\n  }\n\n  static _ensureClosestStickyHeader(\n    props: Props,\n    stickyIndicesSet: Set<number>,\n    renderMask: CellRenderMask,\n    cellIdx: number,\n  ) {\n    const stickyOffset = props.ListHeaderComponent ? 1 : 0;\n\n    for (let itemIdx = cellIdx - 1; itemIdx >= 0; itemIdx--) {\n      if (stickyIndicesSet.has(itemIdx + stickyOffset)) {\n        renderMask.addCells({first: itemIdx, last: itemIdx});\n        break;\n      }\n    }\n  }\n\n  _adjustCellsAroundViewport(\n    props: Props,\n    cellsAroundViewport: {first: number, last: number},\n    pendingScrollUpdateCount: number,\n  ): {first: number, last: number} {\n    const {data, getItemCount} = props;\n    const onEndReachedThreshold = onEndReachedThresholdOrDefault(\n      props.onEndReachedThreshold,\n    );\n    const {offset, visibleLength} = this._scrollMetrics;\n    const contentLength = this._listMetrics.getContentLength();\n    const distanceFromEnd = contentLength - visibleLength - offset;\n\n    // Wait until the scroll view metrics have been set up. And until then,\n    // we will trust the initialNumToRender suggestion\n    if (visibleLength <= 0 || contentLength <= 0) {\n      return cellsAroundViewport.last >= getItemCount(data)\n        ? VirtualizedList._constrainToItemCount(cellsAroundViewport, props)\n        : cellsAroundViewport;\n    }\n\n    let newCellsAroundViewport: {first: number, last: number};\n    if (props.disableVirtualization) {\n      const renderAhead =\n        distanceFromEnd < onEndReachedThreshold * visibleLength\n          ? maxToRenderPerBatchOrDefault(props.maxToRenderPerBatch)\n          : 0;\n\n      newCellsAroundViewport = {\n        first: 0,\n        last: Math.min(\n          cellsAroundViewport.last + renderAhead,\n          getItemCount(data) - 1,\n        ),\n      };\n    } else {\n      // If we have a pending scroll update, we should not adjust the render window as it\n      // might override the correct window.\n      if (pendingScrollUpdateCount > 0) {\n        return cellsAroundViewport.last >= getItemCount(data)\n          ? VirtualizedList._constrainToItemCount(cellsAroundViewport, props)\n          : cellsAroundViewport;\n      }\n\n      newCellsAroundViewport = computeWindowedRenderLimits(\n        props,\n        maxToRenderPerBatchOrDefault(props.maxToRenderPerBatch),\n        windowSizeOrDefault(props.windowSize),\n        cellsAroundViewport,\n        this._listMetrics,\n        this._scrollMetrics,\n      );\n      invariant(\n        newCellsAroundViewport.last < getItemCount(data),\n        'computeWindowedRenderLimits() should return range in-bounds',\n      );\n    }\n\n    if (this._nestedChildLists.size() > 0) {\n      // If some cell in the new state has a child list in it, we should only render\n      // up through that item, so that we give that list a chance to render.\n      // Otherwise there's churn from multiple child lists mounting and un-mounting\n      // their items.\n\n      // Will this prevent rendering if the nested list doesn't realize the end?\n      const childIdx = this._findFirstChildWithMore(\n        newCellsAroundViewport.first,\n        newCellsAroundViewport.last,\n      );\n\n      newCellsAroundViewport.last = childIdx ?? newCellsAroundViewport.last;\n    }\n\n    return newCellsAroundViewport;\n  }\n\n  _findFirstChildWithMore(first: number, last: number): number | null {\n    for (let ii = first; ii <= last; ii++) {\n      const cellKeyForIndex = this._indicesToKeys.get(ii);\n      if (\n        cellKeyForIndex != null &&\n        this._nestedChildLists.anyInCell(cellKeyForIndex, childList =>\n          childList.hasMore(),\n        )\n      ) {\n        return ii;\n      }\n    }\n\n    return null;\n  }\n\n  componentDidMount() {\n    if (this._isNestedWithSameOrientation()) {\n      this.context.registerAsNestedChild({\n        ref: this,\n        cellKey: this.context.cellKey,\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    if (this._isNestedWithSameOrientation()) {\n      this.context.unregisterAsNestedChild({ref: this});\n    }\n    this._updateCellsToRenderBatcher.dispose({abort: true});\n    this._viewabilityTuples.forEach(tuple => {\n      tuple.viewabilityHelper.dispose();\n    });\n    this._fillRateHelper.deactivateAndFlush();\n  }\n\n  static getDerivedStateFromProps(newProps: Props, prevState: State): State {\n    // first and last could be stale (e.g. if a new, shorter items props is passed in), so we make\n    // sure we're rendering a reasonable range here.\n    const itemCount = newProps.getItemCount(newProps.data);\n    if (itemCount === prevState.renderMask.numCells()) {\n      return prevState;\n    }\n\n    let maintainVisibleContentPositionAdjustment: ?number = null;\n    const prevFirstVisibleItemKey = prevState.firstVisibleItemKey;\n    const minIndexForVisible =\n      newProps.maintainVisibleContentPosition?.minIndexForVisible ?? 0;\n    const newFirstVisibleItemKey =\n      newProps.getItemCount(newProps.data) > minIndexForVisible\n        ? VirtualizedList._getItemKey(newProps, minIndexForVisible)\n        : null;\n    if (\n      newProps.maintainVisibleContentPosition != null &&\n      prevFirstVisibleItemKey != null &&\n      newFirstVisibleItemKey != null\n    ) {\n      if (newFirstVisibleItemKey !== prevFirstVisibleItemKey) {\n        // Fast path if items were added at the start of the list.\n        const hint =\n          itemCount - prevState.renderMask.numCells() + minIndexForVisible;\n        const firstVisibleItemIndex = VirtualizedList._findItemIndexWithKey(\n          newProps,\n          prevFirstVisibleItemKey,\n          hint,\n        );\n        maintainVisibleContentPositionAdjustment =\n          firstVisibleItemIndex != null\n            ? firstVisibleItemIndex - minIndexForVisible\n            : null;\n      } else {\n        maintainVisibleContentPositionAdjustment = null;\n      }\n    }\n\n    const constrainedCells = VirtualizedList._constrainToItemCount(\n      maintainVisibleContentPositionAdjustment != null\n        ? {\n            first:\n              prevState.cellsAroundViewport.first +\n              maintainVisibleContentPositionAdjustment,\n            last:\n              prevState.cellsAroundViewport.last +\n              maintainVisibleContentPositionAdjustment,\n          }\n        : prevState.cellsAroundViewport,\n      newProps,\n    );\n\n    return {\n      cellsAroundViewport: constrainedCells,\n      renderMask: VirtualizedList._createRenderMask(newProps, constrainedCells),\n      firstVisibleItemKey: newFirstVisibleItemKey,\n      pendingScrollUpdateCount:\n        maintainVisibleContentPositionAdjustment != null\n          ? prevState.pendingScrollUpdateCount + 1\n          : prevState.pendingScrollUpdateCount,\n    };\n  }\n\n  _pushCells(\n    cells: Array<Object>,\n    stickyHeaderIndices: Array<number>,\n    stickyIndicesFromProps: Set<number>,\n    first: number,\n    last: number,\n    inversionStyle: ViewStyleProp,\n  ) {\n    const {\n      CellRendererComponent,\n      ItemSeparatorComponent,\n      ListHeaderComponent,\n      ListItemComponent,\n      data,\n      debug,\n      getItem,\n      getItemCount,\n      getItemLayout,\n      horizontal,\n      renderItem,\n    } = this.props;\n    const stickyOffset = ListHeaderComponent ? 1 : 0;\n    const end = getItemCount(data) - 1;\n    let prevCellKey;\n    last = Math.min(end, last);\n\n    for (let ii = first; ii <= last; ii++) {\n      const item = getItem(data, ii);\n      const key = VirtualizedList._keyExtractor(item, ii, this.props);\n\n      this._indicesToKeys.set(ii, key);\n      if (stickyIndicesFromProps.has(ii + stickyOffset)) {\n        stickyHeaderIndices.push(cells.length);\n      }\n\n      const shouldListenForLayout =\n        getItemLayout == null || debug || this._fillRateHelper.enabled();\n\n      cells.push(\n        <CellRenderer\n          CellRendererComponent={CellRendererComponent}\n          ItemSeparatorComponent={ii < end ? ItemSeparatorComponent : undefined}\n          ListItemComponent={ListItemComponent}\n          cellKey={key}\n          horizontal={horizontal}\n          index={ii}\n          inversionStyle={inversionStyle}\n          item={item}\n          key={key}\n          prevCellKey={prevCellKey}\n          onUpdateSeparators={this._onUpdateSeparators}\n          onCellFocusCapture={this._onCellFocusCapture}\n          onUnmount={this._onCellUnmount}\n          ref={ref => {\n            this._cellRefs[key] = ref;\n          }}\n          renderItem={renderItem}\n          {...(shouldListenForLayout && {\n            onCellLayout: this._onCellLayout,\n          })}\n        />,\n      );\n      prevCellKey = key;\n    }\n  }\n\n  static _constrainToItemCount(\n    cells: {first: number, last: number},\n    props: Props,\n  ): {first: number, last: number} {\n    const itemCount = props.getItemCount(props.data);\n    const lastPossibleCellIndex = itemCount - 1;\n\n    // Constraining `last` may significantly shrink the window. Adjust `first`\n    // to expand the window if the new `last` results in a new window smaller\n    // than the number of cells rendered per batch.\n    const maxToRenderPerBatch = maxToRenderPerBatchOrDefault(\n      props.maxToRenderPerBatch,\n    );\n    const maxFirst = Math.max(0, lastPossibleCellIndex - maxToRenderPerBatch);\n\n    return {\n      first: clamp(0, cells.first, maxFirst),\n      last: Math.min(lastPossibleCellIndex, cells.last),\n    };\n  }\n\n  _onUpdateSeparators = (keys: Array<?string>, newProps: Object) => {\n    keys.forEach(key => {\n      const ref = key != null && this._cellRefs[key];\n      ref && ref.updateSeparatorProps(newProps);\n    });\n  };\n\n  _isNestedWithSameOrientation(): boolean {\n    const nestedContext = this.context;\n    return !!(\n      nestedContext &&\n      !!nestedContext.horizontal === horizontalOrDefault(this.props.horizontal)\n    );\n  }\n\n  _getSpacerKey = (isVertical: boolean): string =>\n    isVertical ? 'height' : 'width';\n\n  static _keyExtractor(\n    item: Item,\n    index: number,\n    props: {\n      keyExtractor?: ?(item: Item, index: number) => string,\n      ...\n    },\n  ): string {\n    if (props.keyExtractor != null) {\n      return props.keyExtractor(item, index);\n    }\n\n    const key = defaultKeyExtractor(item, index);\n    if (key === String(index)) {\n      _usedIndexForKey = true;\n      if (item.type && item.type.displayName) {\n        _keylessItemComponentName = item.type.displayName;\n      }\n    }\n    return key;\n  }\n\n  render(): React.Node {\n    this._checkProps(this.props);\n    const {ListEmptyComponent, ListFooterComponent, ListHeaderComponent} =\n      this.props;\n    const {data, horizontal} = this.props;\n    const inversionStyle = this.props.inverted\n      ? horizontalOrDefault(this.props.horizontal)\n        ? styles.horizontallyInverted\n        : styles.verticallyInverted\n      : null;\n    const cells: Array<any | React.Node> = [];\n    const stickyIndicesFromProps = new Set(this.props.stickyHeaderIndices);\n    const stickyHeaderIndices = [];\n\n    // 1. Add cell for ListHeaderComponent\n    if (ListHeaderComponent) {\n      if (stickyIndicesFromProps.has(0)) {\n        stickyHeaderIndices.push(0);\n      }\n      const element = React.isValidElement(ListHeaderComponent) ? (\n        ListHeaderComponent\n      ) : (\n        // $FlowFixMe[not-a-component]\n        // $FlowFixMe[incompatible-type-arg]\n        <ListHeaderComponent />\n      );\n      cells.push(\n        <VirtualizedListCellContextProvider\n          cellKey={this._getCellKey() + '-header'}\n          key=\"$header\">\n          <View\n            // We expect that header component will be a single native view so make it\n            // not collapsable to avoid this view being flattened and make this assumption\n            // no longer true.\n            collapsable={false}\n            onLayout={this._onLayoutHeader}\n            style={StyleSheet.compose(\n              inversionStyle,\n              this.props.ListHeaderComponentStyle,\n            )}>\n            {\n              // $FlowFixMe[incompatible-type] - Typing ReactNativeComponent revealed errors\n              element\n            }\n          </View>\n        </VirtualizedListCellContextProvider>,\n      );\n    }\n\n    // 2a. Add a cell for ListEmptyComponent if applicable\n    const itemCount = this.props.getItemCount(data);\n    if (itemCount === 0 && ListEmptyComponent) {\n      const element: React.Element<any> = ((React.isValidElement(\n        ListEmptyComponent,\n      ) ? (\n        ListEmptyComponent\n      ) : (\n        // $FlowFixMe[not-a-component]\n        // $FlowFixMe[incompatible-type-arg]\n        <ListEmptyComponent />\n      )): any);\n      cells.push(\n        <VirtualizedListCellContextProvider\n          cellKey={this._getCellKey() + '-empty'}\n          key=\"$empty\">\n          {React.cloneElement(element, {\n            onLayout: (event: LayoutEvent) => {\n              this._onLayoutEmpty(event);\n              // $FlowFixMe[prop-missing] React.Element internal inspection\n              if (element.props.onLayout) {\n                element.props.onLayout(event);\n              }\n            },\n            // $FlowFixMe[prop-missing] React.Element internal inspection\n            style: StyleSheet.compose(inversionStyle, element.props.style),\n          })}\n        </VirtualizedListCellContextProvider>,\n      );\n    }\n\n    // 2b. Add cells and spacers for each item\n    if (itemCount > 0) {\n      _usedIndexForKey = false;\n      _keylessItemComponentName = '';\n      const spacerKey = this._getSpacerKey(!horizontal);\n\n      const renderRegions = this.state.renderMask.enumerateRegions();\n      const lastRegion = renderRegions[renderRegions.length - 1];\n      const lastSpacer = lastRegion?.isSpacer ? lastRegion : null;\n\n      for (const section of renderRegions) {\n        if (section.isSpacer) {\n          // Legacy behavior is to avoid spacers when virtualization is\n          // disabled (including head spacers on initial render).\n          if (this.props.disableVirtualization) {\n            continue;\n          }\n\n          // Without getItemLayout, we limit our tail spacer to the _highestMeasuredFrameIndex to\n          // prevent the user for hyperscrolling into un-measured area because otherwise content will\n          // likely jump around as it renders in above the viewport.\n          const isLastSpacer = section === lastSpacer;\n          const constrainToMeasured = isLastSpacer && !this.props.getItemLayout;\n          const last = constrainToMeasured\n            ? clamp(\n                section.first - 1,\n                section.last,\n                this._listMetrics.getHighestMeasuredCellIndex(),\n              )\n            : section.last;\n\n          const firstMetrics = this._listMetrics.getCellMetricsApprox(\n            section.first,\n            this.props,\n          );\n          const lastMetrics = this._listMetrics.getCellMetricsApprox(\n            last,\n            this.props,\n          );\n          const spacerSize =\n            lastMetrics.offset + lastMetrics.length - firstMetrics.offset;\n          cells.push(\n            <View\n              key={`$spacer-${section.first}`}\n              style={{[spacerKey]: spacerSize}}\n            />,\n          );\n        } else {\n          this._pushCells(\n            cells,\n            stickyHeaderIndices,\n            stickyIndicesFromProps,\n            section.first,\n            section.last,\n            inversionStyle,\n          );\n        }\n      }\n\n      if (!this._hasWarned.keys && _usedIndexForKey) {\n        console.warn(\n          'VirtualizedList: missing keys for items, make sure to specify a key or id property on each ' +\n            'item or provide a custom keyExtractor.',\n          _keylessItemComponentName,\n        );\n        this._hasWarned.keys = true;\n      }\n    }\n\n    // 3. Add cell for ListFooterComponent\n    if (ListFooterComponent) {\n      const element = React.isValidElement(ListFooterComponent) ? (\n        ListFooterComponent\n      ) : (\n        // $FlowFixMe[not-a-component]\n        // $FlowFixMe[incompatible-type-arg]\n        <ListFooterComponent />\n      );\n      cells.push(\n        <VirtualizedListCellContextProvider\n          cellKey={this._getFooterCellKey()}\n          key=\"$footer\">\n          <View\n            onLayout={this._onLayoutFooter}\n            style={StyleSheet.compose(\n              inversionStyle,\n              this.props.ListFooterComponentStyle,\n            )}>\n            {\n              // $FlowFixMe[incompatible-type] - Typing ReactNativeComponent revealed errors\n              element\n            }\n          </View>\n        </VirtualizedListCellContextProvider>,\n      );\n    }\n\n    // 4. Render the ScrollView\n    const scrollProps = {\n      ...this.props,\n      onContentSizeChange: this._onContentSizeChange,\n      onLayout: this._onLayout,\n      onScroll: this._onScroll,\n      onScrollBeginDrag: this._onScrollBeginDrag,\n      onScrollEndDrag: this._onScrollEndDrag,\n      onMomentumScrollBegin: this._onMomentumScrollBegin,\n      onMomentumScrollEnd: this._onMomentumScrollEnd,\n      // iOS/macOS requires a non-zero scrollEventThrottle to fire more than a\n      // single notification while scrolling. This will otherwise no-op.\n      scrollEventThrottle: this.props.scrollEventThrottle ?? 0.0001,\n      invertStickyHeaders:\n        this.props.invertStickyHeaders !== undefined\n          ? this.props.invertStickyHeaders\n          : this.props.inverted,\n      stickyHeaderIndices,\n      style: inversionStyle\n        ? [inversionStyle, this.props.style]\n        : this.props.style,\n      isInvertedVirtualizedList: this.props.inverted,\n      maintainVisibleContentPosition:\n        this.props.maintainVisibleContentPosition != null\n          ? {\n              ...this.props.maintainVisibleContentPosition,\n              // Adjust index to account for ListHeaderComponent.\n              minIndexForVisible:\n                this.props.maintainVisibleContentPosition.minIndexForVisible +\n                (this.props.ListHeaderComponent ? 1 : 0),\n            }\n          : undefined,\n    };\n\n    this._hasMore = this.state.cellsAroundViewport.last < itemCount - 1;\n\n    const innerRet = (\n      <VirtualizedListContextProvider\n        value={{\n          cellKey: null,\n          getScrollMetrics: this._getScrollMetrics,\n          horizontal: horizontalOrDefault(this.props.horizontal),\n          getOutermostParentListRef: this._getOutermostParentListRef,\n          registerAsNestedChild: this._registerAsNestedChild,\n          unregisterAsNestedChild: this._unregisterAsNestedChild,\n        }}>\n        {React.cloneElement(\n          (\n            this.props.renderScrollComponent ||\n            this._defaultRenderScrollComponent\n          )(scrollProps),\n          {\n            ref: this._captureScrollRef,\n          },\n          cells,\n        )}\n      </VirtualizedListContextProvider>\n    );\n    let ret: React.Node = innerRet;\n    if (__DEV__) {\n      ret = (\n        <ScrollView.Context.Consumer>\n          {scrollContext => {\n            if (\n              scrollContext != null &&\n              !scrollContext.horizontal ===\n                !horizontalOrDefault(this.props.horizontal) &&\n              !this._hasWarned.nesting &&\n              this.context == null &&\n              this.props.scrollEnabled !== false\n            ) {\n              console.error(\n                'VirtualizedLists should never be nested inside plain ScrollViews with the same ' +\n                  'orientation because it can break windowing and other functionality - use another ' +\n                  'VirtualizedList-backed container instead.',\n              );\n              this._hasWarned.nesting = true;\n            }\n            return innerRet;\n          }}\n        </ScrollView.Context.Consumer>\n      );\n    }\n    if (this.props.debug) {\n      return (\n        <View style={styles.debug}>\n          {ret}\n          {this._renderDebugOverlay()}\n        </View>\n      );\n    } else {\n      return ret;\n    }\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const {data, extraData} = this.props;\n    if (data !== prevProps.data || extraData !== prevProps.extraData) {\n      // clear the viewableIndices cache to also trigger\n      // the onViewableItemsChanged callback with the new data\n      this._viewabilityTuples.forEach(tuple => {\n        tuple.viewabilityHelper.resetViewableIndices();\n      });\n    }\n    // The `this._hiPriInProgress` is guaranteeing a hiPri cell update will only happen\n    // once per fiber update. The `_scheduleCellsToRenderUpdate` will set it to true\n    // if a hiPri update needs to perform. If `componentDidUpdate` is triggered with\n    // `this._hiPriInProgress=true`, means it's triggered by the hiPri update. The\n    // `_scheduleCellsToRenderUpdate` will check this condition and not perform\n    // another hiPri update.\n    const hiPriInProgress = this._hiPriInProgress;\n    this._scheduleCellsToRenderUpdate();\n    // Make sure setting `this._hiPriInProgress` back to false after `componentDidUpdate`\n    // is triggered with `this._hiPriInProgress = true`\n    if (hiPriInProgress) {\n      this._hiPriInProgress = false;\n    }\n  }\n\n  _cellRefs: {[string]: null | CellRenderer<any>} = {};\n  _fillRateHelper: FillRateHelper;\n  _listMetrics: ListMetricsAggregator = new ListMetricsAggregator();\n  _footerLength = 0;\n  // Used for preventing scrollToIndex from being called multiple times for initialScrollIndex\n  _hasTriggeredInitialScrollToIndex = false;\n  _hasInteracted = false;\n  _hasMore = false;\n  _hasWarned: {[string]: boolean} = {};\n  _headerLength = 0;\n  _hiPriInProgress: boolean = false; // flag to prevent infinite hiPri cell limit update\n  _indicesToKeys: Map<number, string> = new Map();\n  _lastFocusedCellKey: ?string = null;\n  _nestedChildLists: ChildListCollection<VirtualizedList> =\n    new ChildListCollection();\n  _offsetFromParentVirtualizedList: number = 0;\n  _pendingViewabilityUpdate: boolean = false;\n  _prevParentOffset: number = 0;\n  _scrollMetrics: {\n    dOffset: number,\n    dt: number,\n    offset: number,\n    timestamp: number,\n    velocity: number,\n    visibleLength: number,\n    zoomScale: number,\n  } = {\n    dOffset: 0,\n    dt: 10,\n    offset: 0,\n    timestamp: 0,\n    velocity: 0,\n    visibleLength: 0,\n    zoomScale: 1,\n  };\n  _scrollRef: ?React.ElementRef<any> = null;\n  _sentStartForContentLength = 0;\n  _sentEndForContentLength = 0;\n  _updateCellsToRenderBatcher: Batchinator;\n  _viewabilityTuples: Array<ViewabilityHelperCallbackTuple> = [];\n\n  /* $FlowFixMe[missing-local-annot] The type annotation(s) required by Flow's\n   * LTI update could not be added via codemod */\n  _captureScrollRef = ref => {\n    this._scrollRef = ref;\n  };\n\n  _computeBlankness() {\n    this._fillRateHelper.computeBlankness(\n      this.props,\n      this.state.cellsAroundViewport,\n      this._scrollMetrics,\n    );\n  }\n\n  /* $FlowFixMe[missing-local-annot] The type annotation(s) required by Flow's\n   * LTI update could not be added via codemod */\n  _defaultRenderScrollComponent = props => {\n    const onRefresh = props.onRefresh;\n    if (this._isNestedWithSameOrientation()) {\n      // Prevent VirtualizedList._onContentSizeChange from being triggered by a bubbling onContentSizeChange event.\n      // This could lead to internal inconsistencies within VirtualizedList.\n      const {onContentSizeChange, ...otherProps} = props;\n      return <View {...otherProps} />;\n    } else if (onRefresh) {\n      invariant(\n        typeof props.refreshing === 'boolean',\n        '`refreshing` prop must be set as a boolean in order to use `onRefresh`, but got `' +\n          JSON.stringify(props.refreshing ?? 'undefined') +\n          '`',\n      );\n      return (\n        // $FlowFixMe[prop-missing] Invalid prop usage\n        // $FlowFixMe[incompatible-use]\n        <ScrollView\n          {...props}\n          refreshControl={\n            props.refreshControl == null ? (\n              <RefreshControl\n                // $FlowFixMe[incompatible-type]\n                refreshing={props.refreshing}\n                onRefresh={onRefresh}\n                progressViewOffset={props.progressViewOffset}\n              />\n            ) : (\n              props.refreshControl\n            )\n          }\n        />\n      );\n    } else {\n      // $FlowFixMe[prop-missing] Invalid prop usage\n      // $FlowFixMe[incompatible-use]\n      return <ScrollView {...props} />;\n    }\n  };\n\n  _onCellLayout = (\n    e: LayoutEvent,\n    cellKey: string,\n    cellIndex: number,\n  ): void => {\n    const layoutHasChanged = this._listMetrics.notifyCellLayout({\n      cellIndex,\n      cellKey,\n      layout: e.nativeEvent.layout,\n      orientation: this._orientation(),\n    });\n\n    if (layoutHasChanged) {\n      this._scheduleCellsToRenderUpdate();\n    }\n\n    this._triggerRemeasureForChildListsInCell(cellKey);\n    this._computeBlankness();\n    this._updateViewableItems(this.props, this.state.cellsAroundViewport);\n  };\n\n  _onCellFocusCapture = (cellKey: string) => {\n    this._lastFocusedCellKey = cellKey;\n    this._updateCellsToRender();\n  };\n\n  _onCellUnmount = (cellKey: string) => {\n    delete this._cellRefs[cellKey];\n    this._listMetrics.notifyCellUnmounted(cellKey);\n  };\n\n  _triggerRemeasureForChildListsInCell(cellKey: string): void {\n    this._nestedChildLists.forEachInCell(cellKey, childList => {\n      childList.measureLayoutRelativeToContainingList();\n    });\n  }\n\n  measureLayoutRelativeToContainingList(): void {\n    // TODO (T35574538): findNodeHandle sometimes crashes with \"Unable to find\n    // node on an unmounted component\" during scrolling\n    try {\n      if (!this._scrollRef) {\n        return;\n      }\n      // We are assuming that getOutermostParentListRef().getScrollRef()\n      // is a non-null reference to a ScrollView\n      this._scrollRef.measureLayout(\n        this.context.getOutermostParentListRef().getScrollRef(),\n        (x, y, width, height) => {\n          this._offsetFromParentVirtualizedList = this._selectOffset({x, y});\n          this._listMetrics.notifyListContentLayout({\n            layout: {width, height},\n            orientation: this._orientation(),\n          });\n          const scrollMetrics = this._convertParentScrollMetrics(\n            this.context.getScrollMetrics(),\n          );\n\n          const metricsChanged =\n            this._scrollMetrics.visibleLength !== scrollMetrics.visibleLength ||\n            this._scrollMetrics.offset !== scrollMetrics.offset;\n\n          if (metricsChanged) {\n            this._scrollMetrics.visibleLength = scrollMetrics.visibleLength;\n            this._scrollMetrics.offset = scrollMetrics.offset;\n\n            // If metrics of the scrollView changed, then we triggered remeasure for child list\n            // to ensure VirtualizedList has the right information.\n            this._nestedChildLists.forEach(childList => {\n              childList.measureLayoutRelativeToContainingList();\n            });\n          }\n        },\n        error => {\n          console.warn(\n            \"VirtualizedList: Encountered an error while measuring a list's\" +\n              ' offset from its containing VirtualizedList.',\n          );\n        },\n      );\n    } catch (error) {\n      console.warn(\n        'measureLayoutRelativeToContainingList threw an error',\n        error.stack,\n      );\n    }\n  }\n\n  _onLayout = (e: LayoutEvent) => {\n    if (this._isNestedWithSameOrientation()) {\n      // Need to adjust our scroll metrics to be relative to our containing\n      // VirtualizedList before we can make claims about list item viewability\n      this.measureLayoutRelativeToContainingList();\n    } else {\n      this._scrollMetrics.visibleLength = this._selectLength(\n        e.nativeEvent.layout,\n      );\n    }\n    this.props.onLayout && this.props.onLayout(e);\n    this._scheduleCellsToRenderUpdate();\n    this._maybeCallOnEdgeReached();\n  };\n\n  _onLayoutEmpty = (e: LayoutEvent) => {\n    this.props.onLayout && this.props.onLayout(e);\n  };\n\n  _getFooterCellKey(): string {\n    return this._getCellKey() + '-footer';\n  }\n\n  _onLayoutFooter = (e: LayoutEvent) => {\n    this._triggerRemeasureForChildListsInCell(this._getFooterCellKey());\n    this._footerLength = this._selectLength(e.nativeEvent.layout);\n  };\n\n  _onLayoutHeader = (e: LayoutEvent) => {\n    this._headerLength = this._selectLength(e.nativeEvent.layout);\n  };\n\n  // $FlowFixMe[missing-local-annot]\n  _renderDebugOverlay() {\n    const normalize =\n      this._scrollMetrics.visibleLength /\n      (this._listMetrics.getContentLength() || 1);\n    const framesInLayout = [];\n    const itemCount = this.props.getItemCount(this.props.data);\n    for (let ii = 0; ii < itemCount; ii++) {\n      const frame = this._listMetrics.getCellMetricsApprox(ii, this.props);\n      if (frame.isMounted) {\n        framesInLayout.push(frame);\n      }\n    }\n    const windowTop = this._listMetrics.getCellMetricsApprox(\n      this.state.cellsAroundViewport.first,\n      this.props,\n    ).offset;\n    const frameLast = this._listMetrics.getCellMetricsApprox(\n      this.state.cellsAroundViewport.last,\n      this.props,\n    );\n    const windowLen = frameLast.offset + frameLast.length - windowTop;\n    const visTop = this._scrollMetrics.offset;\n    const visLen = this._scrollMetrics.visibleLength;\n\n    return (\n      <View style={[styles.debugOverlayBase, styles.debugOverlay]}>\n        {framesInLayout.map((f, ii) => (\n          <View\n            key={'f' + ii}\n            style={[\n              styles.debugOverlayBase,\n              styles.debugOverlayFrame,\n              {\n                top: f.offset * normalize,\n                height: f.length * normalize,\n              },\n            ]}\n          />\n        ))}\n        <View\n          style={[\n            styles.debugOverlayBase,\n            styles.debugOverlayFrameLast,\n            {\n              top: windowTop * normalize,\n              height: windowLen * normalize,\n            },\n          ]}\n        />\n        <View\n          style={[\n            styles.debugOverlayBase,\n            styles.debugOverlayFrameVis,\n            {\n              top: visTop * normalize,\n              height: visLen * normalize,\n            },\n          ]}\n        />\n      </View>\n    );\n  }\n\n  _selectLength(\n    metrics: $ReadOnly<{\n      height: number,\n      width: number,\n      ...\n    }>,\n  ): number {\n    return !horizontalOrDefault(this.props.horizontal)\n      ? metrics.height\n      : metrics.width;\n  }\n\n  _selectOffset({x, y}: $ReadOnly<{x: number, y: number, ...}>): number {\n    return this._orientation().horizontal ? x : y;\n  }\n\n  _orientation(): ListOrientation {\n    return {\n      horizontal: horizontalOrDefault(this.props.horizontal),\n      rtl: I18nManager.isRTL,\n    };\n  }\n\n  _maybeCallOnEdgeReached() {\n    const {\n      data,\n      getItemCount,\n      onStartReached,\n      onStartReachedThreshold,\n      onEndReached,\n      onEndReachedThreshold,\n    } = this.props;\n    // If we have any pending scroll updates it means that the scroll metrics\n    // are out of date and we should not call any of the edge reached callbacks.\n    if (this.state.pendingScrollUpdateCount > 0) {\n      return;\n    }\n\n    const {visibleLength, offset} = this._scrollMetrics;\n    let distanceFromStart = offset;\n    let distanceFromEnd =\n      this._listMetrics.getContentLength() - visibleLength - offset;\n\n    // Especially when oERT is zero it's necessary to 'floor' very small distance values to be 0\n    // since debouncing causes us to not fire this event for every single \"pixel\" we scroll and can thus\n    // be at the edge of the list with a distance approximating 0 but not quite there.\n    if (distanceFromStart < ON_EDGE_REACHED_EPSILON) {\n      distanceFromStart = 0;\n    }\n    if (distanceFromEnd < ON_EDGE_REACHED_EPSILON) {\n      distanceFromEnd = 0;\n    }\n\n    // TODO: T121172172 Look into why we're \"defaulting\" to a threshold of 2px\n    // when oERT is not present (different from 2 viewports used elsewhere)\n    const DEFAULT_THRESHOLD_PX = 2;\n\n    const startThreshold =\n      onStartReachedThreshold != null\n        ? onStartReachedThreshold * visibleLength\n        : DEFAULT_THRESHOLD_PX;\n    const endThreshold =\n      onEndReachedThreshold != null\n        ? onEndReachedThreshold * visibleLength\n        : DEFAULT_THRESHOLD_PX;\n    const isWithinStartThreshold = distanceFromStart <= startThreshold;\n    const isWithinEndThreshold = distanceFromEnd <= endThreshold;\n\n    // First check if the user just scrolled within the end threshold\n    // and call onEndReached only once for a given content length,\n    // and only if onStartReached is not being executed\n    if (\n      onEndReached &&\n      this.state.cellsAroundViewport.last === getItemCount(data) - 1 &&\n      isWithinEndThreshold &&\n      this._listMetrics.getContentLength() !== this._sentEndForContentLength\n    ) {\n      this._sentEndForContentLength = this._listMetrics.getContentLength();\n      onEndReached({distanceFromEnd});\n    }\n\n    // Next check if the user just scrolled within the start threshold\n    // and call onStartReached only once for a given content length,\n    // and only if onEndReached is not being executed\n    if (\n      onStartReached != null &&\n      this.state.cellsAroundViewport.first === 0 &&\n      isWithinStartThreshold &&\n      this._listMetrics.getContentLength() !== this._sentStartForContentLength\n    ) {\n      this._sentStartForContentLength = this._listMetrics.getContentLength();\n      onStartReached({distanceFromStart});\n    }\n\n    // If the user scrolls away from the start or end and back again,\n    // cause onStartReached or onEndReached to be triggered again\n    if (!isWithinStartThreshold) {\n      this._sentStartForContentLength = 0;\n    }\n    if (!isWithinEndThreshold) {\n      this._sentEndForContentLength = 0;\n    }\n  }\n\n  _onContentSizeChange = (width: number, height: number) => {\n    this._listMetrics.notifyListContentLayout({\n      layout: {width, height},\n      orientation: this._orientation(),\n    });\n\n    this._maybeScrollToInitialScrollIndex(width, height);\n\n    if (this.props.onContentSizeChange) {\n      this.props.onContentSizeChange(width, height);\n    }\n    this._scheduleCellsToRenderUpdate();\n    this._maybeCallOnEdgeReached();\n  };\n\n  /**\n   * Scroll to a specified `initialScrollIndex` prop after the ScrollView\n   * content has been laid out, if it is still valid. Only a single scroll is\n   * triggered throughout the lifetime of the list.\n   */\n  _maybeScrollToInitialScrollIndex(\n    contentWidth: number,\n    contentHeight: number,\n  ) {\n    if (\n      contentWidth > 0 &&\n      contentHeight > 0 &&\n      this.props.initialScrollIndex != null &&\n      this.props.initialScrollIndex > 0 &&\n      !this._hasTriggeredInitialScrollToIndex\n    ) {\n      if (this.props.contentOffset == null) {\n        if (\n          this.props.initialScrollIndex <\n          this.props.getItemCount(this.props.data)\n        ) {\n          this.scrollToIndex({\n            animated: false,\n            index: nullthrows(this.props.initialScrollIndex),\n          });\n        } else {\n          this.scrollToEnd({animated: false});\n        }\n      }\n      this._hasTriggeredInitialScrollToIndex = true;\n    }\n  }\n\n  /* Translates metrics from a scroll event in a parent VirtualizedList into\n   * coordinates relative to the child list.\n   */\n  _convertParentScrollMetrics = (metrics: {\n    visibleLength: number,\n    offset: number,\n    ...\n  }): $FlowFixMe => {\n    // Offset of the top of the nested list relative to the top of its parent's viewport\n    const offset = metrics.offset - this._offsetFromParentVirtualizedList;\n    // Child's visible length is the same as its parent's\n    const visibleLength = metrics.visibleLength;\n    const dOffset = offset - this._scrollMetrics.offset;\n    const contentLength = this._listMetrics.getContentLength();\n\n    return {\n      visibleLength,\n      contentLength,\n      offset,\n      dOffset,\n    };\n  };\n\n  _onScroll = (e: Object) => {\n    this._nestedChildLists.forEach(childList => {\n      childList._onScroll(e);\n    });\n    if (this.props.onScroll) {\n      this.props.onScroll(e);\n    }\n    const timestamp = e.timeStamp;\n    let visibleLength = this._selectLength(e.nativeEvent.layoutMeasurement);\n    let contentLength = this._selectLength(e.nativeEvent.contentSize);\n    let offset = this._offsetFromScrollEvent(e);\n    let dOffset = offset - this._scrollMetrics.offset;\n\n    if (this._isNestedWithSameOrientation()) {\n      if (this._listMetrics.getContentLength() === 0) {\n        // Ignore scroll events until onLayout has been called and we\n        // know our offset from our offset from our parent\n        return;\n      }\n      ({visibleLength, contentLength, offset, dOffset} =\n        this._convertParentScrollMetrics({\n          visibleLength,\n          offset,\n        }));\n    }\n\n    const dt = this._scrollMetrics.timestamp\n      ? Math.max(1, timestamp - this._scrollMetrics.timestamp)\n      : 1;\n    const velocity = dOffset / dt;\n\n    if (\n      dt > 500 &&\n      this._scrollMetrics.dt > 500 &&\n      contentLength > 5 * visibleLength &&\n      !this._hasWarned.perf\n    ) {\n      infoLog(\n        'VirtualizedList: You have a large list that is slow to update - make sure your ' +\n          'renderItem function renders components that follow React performance best practices ' +\n          'like PureComponent, shouldComponentUpdate, etc.',\n        {dt, prevDt: this._scrollMetrics.dt, contentLength},\n      );\n      this._hasWarned.perf = true;\n    }\n\n    // For invalid negative values (w/ RTL), set this to 1.\n    const zoomScale = e.nativeEvent.zoomScale < 0 ? 1 : e.nativeEvent.zoomScale;\n    this._scrollMetrics = {\n      dt,\n      dOffset,\n      offset,\n      timestamp,\n      velocity,\n      visibleLength,\n      zoomScale,\n    };\n    if (this.state.pendingScrollUpdateCount > 0) {\n      this.setState(state => ({\n        pendingScrollUpdateCount: state.pendingScrollUpdateCount - 1,\n      }));\n    }\n    this._updateViewableItems(this.props, this.state.cellsAroundViewport);\n    if (!this.props) {\n      return;\n    }\n    this._maybeCallOnEdgeReached();\n    if (velocity !== 0) {\n      this._fillRateHelper.activate();\n    }\n    this._computeBlankness();\n    this._scheduleCellsToRenderUpdate();\n  };\n\n  _offsetFromScrollEvent(e: ScrollEvent): number {\n    const {contentOffset, contentSize, layoutMeasurement} = e.nativeEvent;\n    const {horizontal, rtl} = this._orientation();\n    if (horizontal && rtl) {\n      return (\n        this._selectLength(contentSize) -\n        (this._selectOffset(contentOffset) +\n          this._selectLength(layoutMeasurement))\n      );\n    } else {\n      return this._selectOffset(contentOffset);\n    }\n  }\n\n  _scheduleCellsToRenderUpdate() {\n    // Only trigger high-priority updates if we've actually rendered cells,\n    // and with that size estimate, accurately compute how many cells we should render.\n    // Otherwise, it would just render as many cells as it can (of zero dimension),\n    // each time through attempting to render more (limited by maxToRenderPerBatch),\n    // starving the renderer from actually laying out the objects and computing _averageCellLength.\n    // If this is triggered in an `componentDidUpdate` followed by a hiPri cellToRenderUpdate\n    // We shouldn't do another hipri cellToRenderUpdate\n    if (\n      (this._listMetrics.getAverageCellLength() > 0 ||\n        this.props.getItemLayout != null) &&\n      this._shouldRenderWithPriority() &&\n      !this._hiPriInProgress\n    ) {\n      this._hiPriInProgress = true;\n      // Don't worry about interactions when scrolling quickly; focus on filling content as fast\n      // as possible.\n      this._updateCellsToRenderBatcher.dispose({abort: true});\n      this._updateCellsToRender();\n      return;\n    } else {\n      this._updateCellsToRenderBatcher.schedule();\n    }\n  }\n\n  _shouldRenderWithPriority(): boolean {\n    const {first, last} = this.state.cellsAroundViewport;\n    const {offset, visibleLength, velocity} = this._scrollMetrics;\n    const itemCount = this.props.getItemCount(this.props.data);\n    let hiPri = false;\n    const onStartReachedThreshold = onStartReachedThresholdOrDefault(\n      this.props.onStartReachedThreshold,\n    );\n    const onEndReachedThreshold = onEndReachedThresholdOrDefault(\n      this.props.onEndReachedThreshold,\n    );\n    // Mark as high priority if we're close to the start of the first item\n    // But only if there are items before the first rendered item\n    if (first > 0) {\n      const distTop =\n        offset -\n        this._listMetrics.getCellMetricsApprox(first, this.props).offset;\n      hiPri =\n        distTop < 0 ||\n        (velocity < -2 &&\n          distTop <\n            getScrollingThreshold(onStartReachedThreshold, visibleLength));\n    }\n    // Mark as high priority if we're close to the end of the last item\n    // But only if there are items after the last rendered item\n    if (!hiPri && last >= 0 && last < itemCount - 1) {\n      const distBottom =\n        this._listMetrics.getCellMetricsApprox(last, this.props).offset -\n        (offset + visibleLength);\n      hiPri =\n        distBottom < 0 ||\n        (velocity > 2 &&\n          distBottom <\n            getScrollingThreshold(onEndReachedThreshold, visibleLength));\n    }\n\n    return hiPri;\n  }\n\n  _onScrollBeginDrag = (e: ScrollEvent): void => {\n    this._nestedChildLists.forEach(childList => {\n      childList._onScrollBeginDrag(e);\n    });\n    this._viewabilityTuples.forEach(tuple => {\n      tuple.viewabilityHelper.recordInteraction();\n    });\n    this._hasInteracted = true;\n    this.props.onScrollBeginDrag && this.props.onScrollBeginDrag(e);\n  };\n\n  _onScrollEndDrag = (e: ScrollEvent): void => {\n    this._nestedChildLists.forEach(childList => {\n      childList._onScrollEndDrag(e);\n    });\n    const {velocity} = e.nativeEvent;\n    if (velocity) {\n      this._scrollMetrics.velocity = this._selectOffset(velocity);\n    }\n    this._computeBlankness();\n    this.props.onScrollEndDrag && this.props.onScrollEndDrag(e);\n  };\n\n  _onMomentumScrollBegin = (e: ScrollEvent): void => {\n    this._nestedChildLists.forEach(childList => {\n      childList._onMomentumScrollBegin(e);\n    });\n    this.props.onMomentumScrollBegin && this.props.onMomentumScrollBegin(e);\n  };\n\n  _onMomentumScrollEnd = (e: ScrollEvent): void => {\n    this._nestedChildLists.forEach(childList => {\n      childList._onMomentumScrollEnd(e);\n    });\n    this._scrollMetrics.velocity = 0;\n    this._computeBlankness();\n    this.props.onMomentumScrollEnd && this.props.onMomentumScrollEnd(e);\n  };\n\n  _updateCellsToRender = () => {\n    this._updateViewableItems(this.props, this.state.cellsAroundViewport);\n\n    this.setState((state, props) => {\n      const cellsAroundViewport = this._adjustCellsAroundViewport(\n        props,\n        state.cellsAroundViewport,\n        state.pendingScrollUpdateCount,\n      );\n      const renderMask = VirtualizedList._createRenderMask(\n        props,\n        cellsAroundViewport,\n        this._getNonViewportRenderRegions(props),\n      );\n\n      if (\n        cellsAroundViewport.first === state.cellsAroundViewport.first &&\n        cellsAroundViewport.last === state.cellsAroundViewport.last &&\n        renderMask.equals(state.renderMask)\n      ) {\n        return null;\n      }\n\n      return {cellsAroundViewport, renderMask};\n    });\n  };\n\n  _createViewToken = (\n    index: number,\n    isViewable: boolean,\n    props: CellMetricProps,\n    // $FlowFixMe[missing-local-annot]\n  ) => {\n    const {data, getItem} = props;\n    const item = getItem(data, index);\n    return {\n      index,\n      item,\n      key: VirtualizedList._keyExtractor(item, index, props),\n      isViewable,\n    };\n  };\n\n  __getListMetrics(): ListMetricsAggregator {\n    return this._listMetrics;\n  }\n\n  _getNonViewportRenderRegions = (\n    props: CellMetricProps,\n  ): $ReadOnlyArray<{\n    first: number,\n    last: number,\n  }> => {\n    // Keep a viewport's worth of content around the last focused cell to allow\n    // random navigation around it without any blanking. E.g. tabbing from one\n    // focused item out of viewport to another.\n    if (\n      !(this._lastFocusedCellKey && this._cellRefs[this._lastFocusedCellKey])\n    ) {\n      return [];\n    }\n\n    const lastFocusedCellRenderer = this._cellRefs[this._lastFocusedCellKey];\n    const focusedCellIndex = lastFocusedCellRenderer.props.index;\n    const itemCount = props.getItemCount(props.data);\n\n    // The last cell we rendered may be at a new index. Bail if we don't know\n    // where it is.\n    if (\n      focusedCellIndex >= itemCount ||\n      VirtualizedList._getItemKey(props, focusedCellIndex) !==\n        this._lastFocusedCellKey\n    ) {\n      return [];\n    }\n\n    let first = focusedCellIndex;\n    let heightOfCellsBeforeFocused = 0;\n    for (\n      let i = first - 1;\n      i >= 0 && heightOfCellsBeforeFocused < this._scrollMetrics.visibleLength;\n      i--\n    ) {\n      first--;\n      heightOfCellsBeforeFocused += this._listMetrics.getCellMetricsApprox(\n        i,\n        props,\n      ).length;\n    }\n\n    let last = focusedCellIndex;\n    let heightOfCellsAfterFocused = 0;\n    for (\n      let i = last + 1;\n      i < itemCount &&\n      heightOfCellsAfterFocused < this._scrollMetrics.visibleLength;\n      i++\n    ) {\n      last++;\n      heightOfCellsAfterFocused += this._listMetrics.getCellMetricsApprox(\n        i,\n        props,\n      ).length;\n    }\n\n    return [{first, last}];\n  };\n\n  _updateViewableItems(\n    props: CellMetricProps,\n    cellsAroundViewport: {first: number, last: number},\n  ) {\n    // If we have any pending scroll updates it means that the scroll metrics\n    // are out of date and we should not call any of the visibility callbacks.\n    if (this.state.pendingScrollUpdateCount > 0) {\n      return;\n    }\n    this._viewabilityTuples.forEach(tuple => {\n      tuple.viewabilityHelper.onUpdate(\n        props,\n        this._scrollMetrics.offset,\n        this._scrollMetrics.visibleLength,\n        this._listMetrics,\n        this._createViewToken,\n        tuple.onViewableItemsChanged,\n        cellsAroundViewport,\n      );\n    });\n  }\n}\n\nconst styles = StyleSheet.create({\n  verticallyInverted:\n    Platform.OS === 'android'\n      ? {transform: [{scale: -1}]}\n      : {transform: [{scaleY: -1}]},\n  horizontallyInverted: {\n    transform: [{scaleX: -1}],\n  },\n  debug: {\n    flex: 1,\n  },\n  debugOverlayBase: {\n    position: 'absolute',\n    top: 0,\n    right: 0,\n  },\n  debugOverlay: {\n    bottom: 0,\n    width: 20,\n    borderColor: 'blue',\n    borderWidth: 1,\n  },\n  debugOverlayFrame: {\n    left: 0,\n    backgroundColor: 'orange',\n  },\n  debugOverlayFrameLast: {\n    left: 0,\n    borderColor: 'green',\n    borderWidth: 2,\n  },\n  debugOverlayFrameVis: {\n    left: 0,\n    borderColor: 'red',\n    borderWidth: 2,\n  },\n});\n\nmodule.exports = VirtualizedList;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\nimport type {CellRendererProps, RenderItemType} from './VirtualizedListProps';\nimport type {ViewStyleProp} from 'react-native/Libraries/StyleSheet/StyleSheet';\nimport type {\n  FocusEvent,\n  LayoutEvent,\n} from 'react-native/Libraries/Types/CoreEventTypes';\n\nimport {VirtualizedListCellContextProvider} from './VirtualizedListContext.js';\nimport invariant from 'invariant';\nimport * as React from 'react';\nimport {StyleSheet, View} from 'react-native';\n\nexport type Props<ItemT> = {\n  CellRendererComponent?: ?React.ComponentType<CellRendererProps<ItemT>>,\n  ItemSeparatorComponent: ?React.ComponentType<\n    any | {highlighted: boolean, leadingItem: ?ItemT},\n  >,\n  ListItemComponent?: ?(React.ComponentType<any> | React.Element<any>),\n  cellKey: string,\n  horizontal: ?boolean,\n  index: number,\n  inversionStyle: ViewStyleProp,\n  item: ItemT,\n  onCellLayout?: (event: LayoutEvent, cellKey: string, index: number) => void,\n  onCellFocusCapture?: (cellKey: string) => void,\n  onUnmount: (cellKey: string) => void,\n  onUpdateSeparators: (\n    cellKeys: Array<?string>,\n    props: Partial<SeparatorProps<ItemT>>,\n  ) => void,\n  prevCellKey: ?string,\n  renderItem?: ?RenderItemType<ItemT>,\n  ...\n};\n\ntype SeparatorProps<ItemT> = $ReadOnly<{|\n  highlighted: boolean,\n  leadingItem: ?ItemT,\n|}>;\n\ntype State<ItemT> = {\n  separatorProps: SeparatorProps<ItemT>,\n  ...\n};\n\nexport default class CellRenderer<ItemT> extends React.Component<\n  Props<ItemT>,\n  State<ItemT>,\n> {\n  state: State<ItemT> = {\n    separatorProps: {\n      highlighted: false,\n      leadingItem: this.props.item,\n    },\n  };\n\n  static getDerivedStateFromProps(\n    props: Props<ItemT>,\n    prevState: State<ItemT>,\n  ): ?State<ItemT> {\n    return {\n      separatorProps: {\n        ...prevState.separatorProps,\n        leadingItem: props.item,\n      },\n    };\n  }\n\n  // TODO: consider factoring separator stuff out of VirtualizedList into FlatList since it's not\n  // reused by SectionList and we can keep VirtualizedList simpler.\n  // $FlowFixMe[missing-local-annot]\n  _separators = {\n    highlight: () => {\n      const {cellKey, prevCellKey} = this.props;\n      this.props.onUpdateSeparators([cellKey, prevCellKey], {\n        highlighted: true,\n      });\n    },\n    unhighlight: () => {\n      const {cellKey, prevCellKey} = this.props;\n      this.props.onUpdateSeparators([cellKey, prevCellKey], {\n        highlighted: false,\n      });\n    },\n    updateProps: (\n      select: 'leading' | 'trailing',\n      newProps: SeparatorProps<ItemT>,\n    ) => {\n      const {cellKey, prevCellKey} = this.props;\n      this.props.onUpdateSeparators(\n        [select === 'leading' ? prevCellKey : cellKey],\n        newProps,\n      );\n    },\n  };\n\n  updateSeparatorProps(newProps: SeparatorProps<ItemT>) {\n    this.setState(state => ({\n      separatorProps: {...state.separatorProps, ...newProps},\n    }));\n  }\n\n  componentWillUnmount() {\n    this.props.onUnmount(this.props.cellKey);\n  }\n\n  _onLayout = (nativeEvent: LayoutEvent): void => {\n    this.props.onCellLayout?.(\n      nativeEvent,\n      this.props.cellKey,\n      this.props.index,\n    );\n  };\n\n  _onCellFocusCapture = (e: FocusEvent): void => {\n    this.props.onCellFocusCapture?.(this.props.cellKey);\n  };\n\n  _renderElement(\n    renderItem: ?RenderItemType<ItemT>,\n    ListItemComponent: any,\n    item: ItemT,\n    index: number,\n  ): React.Node {\n    if (renderItem && ListItemComponent) {\n      console.warn(\n        'VirtualizedList: Both ListItemComponent and renderItem props are present. ListItemComponent will take' +\n          ' precedence over renderItem.',\n      );\n    }\n\n    if (ListItemComponent) {\n      /* $FlowFixMe[not-a-component] (>=0.108.0 site=react_native_fb) This\n       * comment suppresses an error found when Flow v0.108 was deployed. To\n       * see the error, delete this comment and run Flow. */\n      /* $FlowFixMe[incompatible-type-arg] (>=0.108.0 site=react_native_fb)\n       * This comment suppresses an error found when Flow v0.108 was deployed.\n       * To see the error, delete this comment and run Flow. */\n      return React.createElement(ListItemComponent, {\n        item,\n        index,\n        separators: this._separators,\n      });\n    }\n\n    if (renderItem) {\n      return renderItem({\n        item,\n        index,\n        separators: this._separators,\n      });\n    }\n\n    invariant(\n      false,\n      'VirtualizedList: Either ListItemComponent or renderItem props are required but none were found.',\n    );\n  }\n\n  render(): React.Node {\n    const {\n      CellRendererComponent,\n      ItemSeparatorComponent,\n      ListItemComponent,\n      cellKey,\n      horizontal,\n      item,\n      index,\n      inversionStyle,\n      onCellLayout,\n      renderItem,\n    } = this.props;\n    const element = this._renderElement(\n      renderItem,\n      ListItemComponent,\n      item,\n      index,\n    );\n\n    // NOTE: that when this is a sticky header, `onLayout` will get automatically extracted and\n    // called explicitly by `ScrollViewStickyHeader`.\n    const itemSeparator: React.Node = React.isValidElement(\n      ItemSeparatorComponent,\n    )\n      ? // $FlowFixMe[incompatible-type]\n        ItemSeparatorComponent\n      : // $FlowFixMe[incompatible-type]\n        ItemSeparatorComponent && (\n          <ItemSeparatorComponent {...this.state.separatorProps} />\n        );\n    const cellStyle = inversionStyle\n      ? horizontal\n        ? [styles.rowReverse, inversionStyle]\n        : [styles.columnReverse, inversionStyle]\n      : horizontal\n      ? [styles.row, inversionStyle]\n      : inversionStyle;\n    const result = !CellRendererComponent ? (\n      <View\n        style={cellStyle}\n        onFocusCapture={this._onCellFocusCapture}\n        {...(onCellLayout && {onLayout: this._onLayout})}>\n        {element}\n        {itemSeparator}\n      </View>\n    ) : (\n      <CellRendererComponent\n        cellKey={cellKey}\n        index={index}\n        item={item}\n        style={cellStyle}\n        onFocusCapture={this._onCellFocusCapture}\n        {...(onCellLayout && {onLayout: this._onLayout})}>\n        {element}\n        {itemSeparator}\n      </CellRendererComponent>\n    );\n\n    return (\n      <VirtualizedListCellContextProvider cellKey={this.props.cellKey}>\n        {result}\n      </VirtualizedListCellContextProvider>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  row: {\n    flexDirection: 'row',\n  },\n  rowReverse: {\n    flexDirection: 'row-reverse',\n  },\n  columnReverse: {\n    flexDirection: 'column-reverse',\n  },\n});\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport typeof VirtualizedList from './VirtualizedList';\n\nimport * as React from 'react';\nimport {useContext, useMemo} from 'react';\n\ntype Context = $ReadOnly<{\n  cellKey: ?string,\n  getScrollMetrics: () => {\n    contentLength: number,\n    dOffset: number,\n    dt: number,\n    offset: number,\n    timestamp: number,\n    velocity: number,\n    visibleLength: number,\n    zoomScale: number,\n  },\n  horizontal: ?boolean,\n  getOutermostParentListRef: () => React.ElementRef<VirtualizedList>,\n  registerAsNestedChild: ({\n    cellKey: string,\n    ref: React.ElementRef<VirtualizedList>,\n  }) => void,\n  unregisterAsNestedChild: ({ref: React.ElementRef<VirtualizedList>}) => void,\n}>;\n\nexport const VirtualizedListContext: React.Context<?Context> =\n  React.createContext(null);\nif (__DEV__) {\n  VirtualizedListContext.displayName = 'VirtualizedListContext';\n}\n\n/**\n * Resets the context. Intended for use by portal-like components (e.g. Modal).\n */\nexport function VirtualizedListContextResetter({\n  children,\n}: {\n  children: React.Node,\n}): React.Node {\n  return (\n    <VirtualizedListContext.Provider value={null}>\n      {children}\n    </VirtualizedListContext.Provider>\n  );\n}\n\n/**\n * Sets the context with memoization. Intended to be used by `VirtualizedList`.\n */\nexport function VirtualizedListContextProvider({\n  children,\n  value,\n}: {\n  children: React.Node,\n  value: Context,\n}): React.Node {\n  // Avoid setting a newly created context object if the values are identical.\n  const context = useMemo(\n    () => ({\n      cellKey: null,\n      getScrollMetrics: value.getScrollMetrics,\n      horizontal: value.horizontal,\n      getOutermostParentListRef: value.getOutermostParentListRef,\n      registerAsNestedChild: value.registerAsNestedChild,\n      unregisterAsNestedChild: value.unregisterAsNestedChild,\n    }),\n    [\n      value.getScrollMetrics,\n      value.horizontal,\n      value.getOutermostParentListRef,\n      value.registerAsNestedChild,\n      value.unregisterAsNestedChild,\n    ],\n  );\n  return (\n    <VirtualizedListContext.Provider value={context}>\n      {children}\n    </VirtualizedListContext.Provider>\n  );\n}\n\n/**\n * Sets the `cellKey`. Intended to be used by `VirtualizedList` for each cell.\n */\nexport function VirtualizedListCellContextProvider({\n  cellKey,\n  children,\n}: {\n  cellKey: string,\n  children: React.Node,\n}): React.Node {\n  // Avoid setting a newly created context object if the values are identical.\n  const currContext = useContext(VirtualizedListContext);\n  const context = useMemo(\n    () => (currContext == null ? null : {...currContext, cellKey}),\n    [currContext, cellKey],\n  );\n  return (\n    <VirtualizedListContext.Provider value={context}>\n      {children}\n    </VirtualizedListContext.Provider>\n  );\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\nimport type {\n  ViewabilityConfig,\n  ViewabilityConfigCallbackPair,\n  ViewToken,\n} from './ViewabilityHelper';\nimport type {ViewStyleProp} from 'react-native/Libraries/StyleSheet/StyleSheet';\nimport type {\n  FocusEvent,\n  LayoutEvent,\n} from 'react-native/Libraries/Types/CoreEventTypes';\n\nimport * as React from 'react';\nimport {typeof ScrollView} from 'react-native';\n\nexport type Item = any;\n\nexport type Separators = {\n  highlight: () => void,\n  unhighlight: () => void,\n  updateProps: (select: 'leading' | 'trailing', newProps: Object) => void,\n  ...\n};\n\nexport type RenderItemProps<ItemT> = {\n  item: ItemT,\n  index: number,\n  separators: Separators,\n  ...\n};\n\nexport type CellRendererProps<ItemT> = $ReadOnly<{\n  cellKey: string,\n  children: React.Node,\n  index: number,\n  item: ItemT,\n  onFocusCapture?: (event: FocusEvent) => void,\n  onLayout?: (event: LayoutEvent) => void,\n  style: ViewStyleProp,\n}>;\n\nexport type RenderItemType<ItemT> = (\n  info: RenderItemProps<ItemT>,\n) => React.Node;\n\ntype RequiredProps = {|\n  /**\n   * The default accessor functions assume this is an Array<{key: string} | {id: string}> but you can override\n   * getItem, getItemCount, and keyExtractor to handle any type of index-based data.\n   */\n  data?: any,\n  /**\n   * A generic accessor for extracting an item from any sort of data blob.\n   */\n  getItem: (data: any, index: number) => ?Item,\n  /**\n   * Determines how many items are in the data blob.\n   */\n  getItemCount: (data: any) => number,\n|};\ntype OptionalProps = {|\n  renderItem?: ?RenderItemType<Item>,\n  /**\n   * `debug` will turn on extra logging and visual overlays to aid with debugging both usage and\n   * implementation, but with a significant perf hit.\n   */\n  debug?: ?boolean,\n  /**\n   * DEPRECATED: Virtualization provides significant performance and memory optimizations, but fully\n   * unmounts react instances that are outside of the render window. You should only need to disable\n   * this for debugging purposes. Defaults to false.\n   */\n  disableVirtualization?: ?boolean,\n  /**\n   * A marker property for telling the list to re-render (since it implements `PureComponent`). If\n   * any of your `renderItem`, Header, Footer, etc. functions depend on anything outside of the\n   * `data` prop, stick it here and treat it immutably.\n   */\n  extraData?: any,\n  // e.g. height, y\n  getItemLayout?: (\n    data: any,\n    index: number,\n  ) => {\n    length: number,\n    offset: number,\n    index: number,\n    ...\n  },\n  horizontal?: ?boolean,\n  /**\n   * How many items to render in the initial batch. This should be enough to fill the screen but not\n   * much more. Note these items will never be unmounted as part of the windowed rendering in order\n   * to improve perceived performance of scroll-to-top actions.\n   */\n  initialNumToRender?: ?number,\n  /**\n   * Instead of starting at the top with the first item, start at `initialScrollIndex`. This\n   * disables the \"scroll to top\" optimization that keeps the first `initialNumToRender` items\n   * always rendered and immediately renders the items starting at this initial index. Requires\n   * `getItemLayout` to be implemented.\n   */\n  initialScrollIndex?: ?number,\n  /**\n   * Reverses the direction of scroll. Uses scale transforms of -1.\n   */\n  inverted?: ?boolean,\n  keyExtractor?: ?(item: Item, index: number) => string,\n  /**\n   * CellRendererComponent allows customizing how cells rendered by\n   * `renderItem`/`ListItemComponent` are wrapped when placed into the\n   * underlying ScrollView. This component must accept event handlers which\n   * notify VirtualizedList of changes within the cell.\n   */\n  CellRendererComponent?: ?React.ComponentType<CellRendererProps<Item>>,\n  /**\n   * Rendered in between each item, but not at the top or bottom. By default, `highlighted` and\n   * `leadingItem` props are provided. `renderItem` provides `separators.highlight`/`unhighlight`\n   * which will update the `highlighted` prop, but you can also add custom props with\n   * `separators.updateProps`.\n   */\n  ItemSeparatorComponent?: ?React.ComponentType<any>,\n  /**\n   * Takes an item from `data` and renders it into the list. Example usage:\n   *\n   *     <FlatList\n   *       ItemSeparatorComponent={Platform.OS !== 'android' && ({highlighted}) => (\n   *         <View style={[style.separator, highlighted && {marginLeft: 0}]} />\n   *       )}\n   *       data={[{title: 'Title Text', key: 'item1'}]}\n   *       ListItemComponent={({item, separators}) => (\n   *         <TouchableHighlight\n   *           onPress={() => this._onPress(item)}\n   *           onShowUnderlay={separators.highlight}\n   *           onHideUnderlay={separators.unhighlight}>\n   *           <View style={{backgroundColor: 'white'}}>\n   *             <Text>{item.title}</Text>\n   *           </View>\n   *         </TouchableHighlight>\n   *       )}\n   *     />\n   *\n   * Provides additional metadata like `index` if you need it, as well as a more generic\n   * `separators.updateProps` function which let's you set whatever props you want to change the\n   * rendering of either the leading separator or trailing separator in case the more common\n   * `highlight` and `unhighlight` (which set the `highlighted: boolean` prop) are insufficient for\n   * your use-case.\n   */\n  ListItemComponent?: ?(React.ComponentType<any> | React.Element<any>),\n  /**\n   * Rendered when the list is empty. Can be a React Component Class, a render function, or\n   * a rendered element.\n   */\n  ListEmptyComponent?: ?(React.ComponentType<any> | React.Element<any>),\n  /**\n   * Rendered at the bottom of all the items. Can be a React Component Class, a render function, or\n   * a rendered element.\n   */\n  ListFooterComponent?: ?(React.ComponentType<any> | React.Element<any>),\n  /**\n   * Styling for internal View for ListFooterComponent\n   */\n  ListFooterComponentStyle?: ViewStyleProp,\n  /**\n   * Rendered at the top of all the items. Can be a React Component Class, a render function, or\n   * a rendered element.\n   */\n  ListHeaderComponent?: ?(React.ComponentType<any> | React.Element<any>),\n  /**\n   * Styling for internal View for ListHeaderComponent\n   */\n  ListHeaderComponentStyle?: ViewStyleProp,\n  /**\n   * The maximum number of items to render in each incremental render batch. The more rendered at\n   * once, the better the fill rate, but responsiveness may suffer because rendering content may\n   * interfere with responding to button taps or other interactions.\n   */\n  maxToRenderPerBatch?: ?number,\n  /**\n   * Called once when the scroll position gets within within `onEndReachedThreshold`\n   * from the logical end of the list.\n   */\n  onEndReached?: ?(info: {distanceFromEnd: number, ...}) => void,\n  /**\n   * How far from the end (in units of visible length of the list) the trailing edge of the\n   * list must be from the end of the content to trigger the `onEndReached` callback.\n   * Thus, a value of 0.5 will trigger `onEndReached` when the end of the content is\n   * within half the visible length of the list.\n   */\n  onEndReachedThreshold?: ?number,\n  /**\n   * If provided, a standard RefreshControl will be added for \"Pull to Refresh\" functionality. Make\n   * sure to also set the `refreshing` prop correctly.\n   */\n  onRefresh?: ?() => void,\n  /**\n   * Used to handle failures when scrolling to an index that has not been measured yet. Recommended\n   * action is to either compute your own offset and `scrollTo` it, or scroll as far as possible and\n   * then try again after more items have been rendered.\n   */\n  onScrollToIndexFailed?: ?(info: {\n    index: number,\n    highestMeasuredFrameIndex: number,\n    averageItemLength: number,\n    ...\n  }) => void,\n  /**\n   * Called once when the scroll position gets within within `onStartReachedThreshold`\n   * from the logical start of the list.\n   */\n  onStartReached?: ?(info: {distanceFromStart: number, ...}) => void,\n  /**\n   * How far from the start (in units of visible length of the list) the leading edge of the\n   * list must be from the start of the content to trigger the `onStartReached` callback.\n   * Thus, a value of 0.5 will trigger `onStartReached` when the start of the content is\n   * within half the visible length of the list.\n   */\n  onStartReachedThreshold?: ?number,\n  /**\n   * Called when the viewability of rows changes, as defined by the\n   * `viewabilityConfig` prop.\n   */\n  onViewableItemsChanged?: ?(info: {\n    viewableItems: Array<ViewToken>,\n    changed: Array<ViewToken>,\n    ...\n  }) => void,\n  persistentScrollbar?: ?boolean,\n  /**\n   * Set this when offset is needed for the loading indicator to show correctly.\n   */\n  progressViewOffset?: number,\n  /**\n   * A custom refresh control element. When set, it overrides the default\n   * <RefreshControl> component built internally. The onRefresh and refreshing\n   * props are also ignored. Only works for vertical VirtualizedList.\n   */\n  refreshControl?: ?React.Element<any>,\n  /**\n   * Set this true while waiting for new data from a refresh.\n   */\n  refreshing?: ?boolean,\n  /**\n   * Note: may have bugs (missing content) in some circumstances - use at your own risk.\n   *\n   * This may improve scroll performance for large lists.\n   */\n  removeClippedSubviews?: boolean,\n  /**\n   * Render a custom scroll component, e.g. with a differently styled `RefreshControl`.\n   */\n  renderScrollComponent?: (props: Object) => React.Element<any>,\n  /**\n   * Amount of time between low-pri item render batches, e.g. for rendering items quite a ways off\n   * screen. Similar fill rate/responsiveness tradeoff as `maxToRenderPerBatch`.\n   */\n  updateCellsBatchingPeriod?: ?number,\n  /**\n   * See `ViewabilityHelper` for flow type and further documentation.\n   */\n  viewabilityConfig?: ViewabilityConfig,\n  /**\n   * List of ViewabilityConfig/onViewableItemsChanged pairs. A specific onViewableItemsChanged\n   * will be called when its corresponding ViewabilityConfig's conditions are met.\n   */\n  viewabilityConfigCallbackPairs?: Array<ViewabilityConfigCallbackPair>,\n  /**\n   * Determines the maximum number of items rendered outside of the visible area, in units of\n   * visible lengths. So if your list fills the screen, then `windowSize={21}` (the default) will\n   * render the visible screen area plus up to 10 screens above and 10 below the viewport. Reducing\n   * this number will reduce memory consumption and may improve performance, but will increase the\n   * chance that fast scrolling may reveal momentary blank areas of unrendered content.\n   */\n  windowSize?: ?number,\n  /**\n   * The legacy implementation is no longer supported.\n   */\n  legacyImplementation?: empty,\n|};\n\nexport type Props = {|\n  ...React.ElementConfig<ScrollView>,\n  ...RequiredProps,\n  ...OptionalProps,\n|};\n\n/**\n * Default Props Helper Functions\n * Use the following helper functions for default values\n */\n\n// horizontalOrDefault(this.props.horizontal)\nexport function horizontalOrDefault(horizontal: ?boolean): boolean {\n  return horizontal ?? false;\n}\n\n// initialNumToRenderOrDefault(this.props.initialNumToRender)\nexport function initialNumToRenderOrDefault(\n  initialNumToRender: ?number,\n): number {\n  return initialNumToRender ?? 10;\n}\n\n// maxToRenderPerBatchOrDefault(this.props.maxToRenderPerBatch)\nexport function maxToRenderPerBatchOrDefault(\n  maxToRenderPerBatch: ?number,\n): number {\n  return maxToRenderPerBatch ?? 10;\n}\n\n// onStartReachedThresholdOrDefault(this.props.onStartReachedThreshold)\nexport function onStartReachedThresholdOrDefault(\n  onStartReachedThreshold: ?number,\n): number {\n  return onStartReachedThreshold ?? 2;\n}\n\n// onEndReachedThresholdOrDefault(this.props.onEndReachedThreshold)\nexport function onEndReachedThresholdOrDefault(\n  onEndReachedThreshold: ?number,\n): number {\n  return onEndReachedThreshold ?? 2;\n}\n\n// windowSizeOrDefault(this.props.windowSize)\nexport function windowSizeOrDefault(windowSize: ?number): number {\n  return windowSize ?? 21;\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\nimport type {ViewToken} from './ViewabilityHelper';\n\nimport VirtualizedList from './VirtualizedList';\nimport {keyExtractor as defaultKeyExtractor} from './VirtualizeUtils';\nimport invariant from 'invariant';\nimport * as React from 'react';\nimport {View} from 'react-native';\n\ntype Item = any;\n\nexport type SectionBase<SectionItemT> = {\n  /**\n   * The data for rendering items in this section.\n   */\n  data: $ReadOnlyArray<SectionItemT>,\n  /**\n   * Optional key to keep track of section re-ordering. If you don't plan on re-ordering sections,\n   * the array index will be used by default.\n   */\n  key?: string,\n  // Optional props will override list-wide props just for this section.\n  renderItem?: ?(info: {\n    item: SectionItemT,\n    index: number,\n    section: SectionBase<SectionItemT>,\n    separators: {\n      highlight: () => void,\n      unhighlight: () => void,\n      updateProps: (select: 'leading' | 'trailing', newProps: Object) => void,\n      ...\n    },\n    ...\n  }) => null | React.Element<any>,\n  ItemSeparatorComponent?: ?React.ComponentType<any>,\n  keyExtractor?: (item: SectionItemT, index?: ?number) => string,\n  ...\n};\n\ntype RequiredProps<SectionT: SectionBase<any>> = {|\n  sections: $ReadOnlyArray<SectionT>,\n|};\n\ntype OptionalProps<SectionT: SectionBase<any>> = {|\n  /**\n   * Default renderer for every item in every section.\n   */\n  renderItem?: (info: {\n    item: Item,\n    index: number,\n    section: SectionT,\n    separators: {\n      highlight: () => void,\n      unhighlight: () => void,\n      updateProps: (select: 'leading' | 'trailing', newProps: Object) => void,\n      ...\n    },\n    ...\n  }) => null | React.Element<any>,\n  /**\n   * Rendered at the top of each section. These stick to the top of the `ScrollView` by default on\n   * iOS. See `stickySectionHeadersEnabled`.\n   */\n  renderSectionHeader?: ?(info: {\n    section: SectionT,\n    ...\n  }) => null | React.Element<any>,\n  /**\n   * Rendered at the bottom of each section.\n   */\n  renderSectionFooter?: ?(info: {\n    section: SectionT,\n    ...\n  }) => null | React.Element<any>,\n  /**\n   * Rendered at the top and bottom of each section (note this is different from\n   * `ItemSeparatorComponent` which is only rendered between items). These are intended to separate\n   * sections from the headers above and below and typically have the same highlight response as\n   * `ItemSeparatorComponent`. Also receives `highlighted`, `[leading/trailing][Item/Separator]`,\n   * and any custom props from `separators.updateProps`.\n   */\n  SectionSeparatorComponent?: ?React.ComponentType<any>,\n  /**\n   * Makes section headers stick to the top of the screen until the next one pushes it off. Only\n   * enabled by default on iOS because that is the platform standard there.\n   */\n  stickySectionHeadersEnabled?: boolean,\n  onEndReached?: ?({distanceFromEnd: number, ...}) => void,\n|};\n\ntype VirtualizedListProps = React.ElementConfig<typeof VirtualizedList>;\n\nexport type Props<SectionT> = {|\n  ...RequiredProps<SectionT>,\n  ...OptionalProps<SectionT>,\n  ...$Diff<\n    VirtualizedListProps,\n    {\n      renderItem: $PropertyType<VirtualizedListProps, 'renderItem'>,\n      data: $PropertyType<VirtualizedListProps, 'data'>,\n      ...\n    },\n  >,\n|};\nexport type ScrollToLocationParamsType = {|\n  animated?: ?boolean,\n  itemIndex: number,\n  sectionIndex: number,\n  viewOffset?: number,\n  viewPosition?: number,\n|};\n\ntype State = {childProps: VirtualizedListProps, ...};\n\n/**\n * Right now this just flattens everything into one list and uses VirtualizedList under the\n * hood. The only operation that might not scale well is concatting the data arrays of all the\n * sections when new props are received, which should be plenty fast for up to ~10,000 items.\n */\nclass VirtualizedSectionList<\n  SectionT: SectionBase<any>,\n> extends React.PureComponent<Props<SectionT>, State> {\n  scrollToLocation(params: ScrollToLocationParamsType) {\n    let index = params.itemIndex;\n    for (let i = 0; i < params.sectionIndex; i++) {\n      index += this.props.getItemCount(this.props.sections[i].data) + 2;\n    }\n    let viewOffset = params.viewOffset || 0;\n    if (this._listRef == null) {\n      return;\n    }\n    const listRef = this._listRef;\n    if (params.itemIndex > 0 && this.props.stickySectionHeadersEnabled) {\n      const frame = listRef\n        .__getListMetrics()\n        .getCellMetricsApprox(index - params.itemIndex, listRef.props);\n      viewOffset += frame.length;\n    }\n    const toIndexParams = {\n      ...params,\n      viewOffset,\n      index,\n    };\n    // $FlowFixMe[incompatible-use]\n    this._listRef.scrollToIndex(toIndexParams);\n  }\n\n  getListRef(): ?React.ElementRef<typeof VirtualizedList> {\n    return this._listRef;\n  }\n\n  render(): React.Node {\n    const {\n      ItemSeparatorComponent, // don't pass through, rendered with renderItem\n      SectionSeparatorComponent,\n      renderItem: _renderItem,\n      renderSectionFooter,\n      renderSectionHeader,\n      sections: _sections,\n      stickySectionHeadersEnabled,\n      ...passThroughProps\n    } = this.props;\n\n    const listHeaderOffset = this.props.ListHeaderComponent ? 1 : 0;\n\n    const stickyHeaderIndices = this.props.stickySectionHeadersEnabled\n      ? ([]: Array<number>)\n      : undefined;\n\n    let itemCount = 0;\n    for (const section of this.props.sections) {\n      // Track the section header indices\n      if (stickyHeaderIndices != null) {\n        stickyHeaderIndices.push(itemCount + listHeaderOffset);\n      }\n\n      // Add two for the section header and footer.\n      itemCount += 2;\n      itemCount += this.props.getItemCount(section.data);\n    }\n    const renderItem = this._renderItem(itemCount);\n\n    return (\n      <VirtualizedList\n        {...passThroughProps}\n        keyExtractor={this._keyExtractor}\n        stickyHeaderIndices={stickyHeaderIndices}\n        renderItem={renderItem}\n        data={this.props.sections}\n        getItem={(sections, index) =>\n          this._getItem(this.props, sections, index)\n        }\n        getItemCount={() => itemCount}\n        onViewableItemsChanged={\n          this.props.onViewableItemsChanged\n            ? this._onViewableItemsChanged\n            : undefined\n        }\n        ref={this._captureRef}\n      />\n    );\n  }\n\n  _getItem(\n    props: Props<SectionT>,\n    sections: ?$ReadOnlyArray<Item>,\n    index: number,\n  ): ?Item {\n    if (!sections) {\n      return null;\n    }\n    let itemIdx = index - 1;\n    for (let i = 0; i < sections.length; i++) {\n      const section = sections[i];\n      const sectionData = section.data;\n      const itemCount = props.getItemCount(sectionData);\n      if (itemIdx === -1 || itemIdx === itemCount) {\n        // We intend for there to be overflow by one on both ends of the list.\n        // This will be for headers and footers. When returning a header or footer\n        // item the section itself is the item.\n        return section;\n      } else if (itemIdx < itemCount) {\n        // If we are in the bounds of the list's data then return the item.\n        return props.getItem(sectionData, itemIdx);\n      } else {\n        itemIdx -= itemCount + 2; // Add two for the header and footer\n      }\n    }\n    return null;\n  }\n\n  // $FlowFixMe[missing-local-annot]\n  _keyExtractor = (item: Item, index: number) => {\n    const info = this._subExtractor(index);\n    return (info && info.key) || String(index);\n  };\n\n  _subExtractor(index: number): ?{\n    section: SectionT,\n    // Key of the section or combined key for section + item\n    key: string,\n    // Relative index within the section\n    index: ?number,\n    // True if this is the section header\n    header?: ?boolean,\n    leadingItem?: ?Item,\n    leadingSection?: ?SectionT,\n    trailingItem?: ?Item,\n    trailingSection?: ?SectionT,\n    ...\n  } {\n    let itemIndex = index;\n    const {getItem, getItemCount, keyExtractor, sections} = this.props;\n    for (let i = 0; i < sections.length; i++) {\n      const section = sections[i];\n      const sectionData = section.data;\n      const key = section.key || String(i);\n      itemIndex -= 1; // The section adds an item for the header\n      if (itemIndex >= getItemCount(sectionData) + 1) {\n        itemIndex -= getItemCount(sectionData) + 1; // The section adds an item for the footer.\n      } else if (itemIndex === -1) {\n        return {\n          section,\n          key: key + ':header',\n          index: null,\n          header: true,\n          trailingSection: sections[i + 1],\n        };\n      } else if (itemIndex === getItemCount(sectionData)) {\n        return {\n          section,\n          key: key + ':footer',\n          index: null,\n          header: false,\n          trailingSection: sections[i + 1],\n        };\n      } else {\n        const extractor =\n          section.keyExtractor || keyExtractor || defaultKeyExtractor;\n        return {\n          section,\n          key:\n            key + ':' + extractor(getItem(sectionData, itemIndex), itemIndex),\n          index: itemIndex,\n          leadingItem: getItem(sectionData, itemIndex - 1),\n          leadingSection: sections[i - 1],\n          trailingItem: getItem(sectionData, itemIndex + 1),\n          trailingSection: sections[i + 1],\n        };\n      }\n    }\n  }\n\n  _convertViewable = (viewable: ViewToken): ?ViewToken => {\n    invariant(viewable.index != null, 'Received a broken ViewToken');\n    const info = this._subExtractor(viewable.index);\n    if (!info) {\n      return null;\n    }\n    const keyExtractorWithNullableIndex = info.section.keyExtractor;\n    const keyExtractorWithNonNullableIndex =\n      this.props.keyExtractor || defaultKeyExtractor;\n    const key =\n      keyExtractorWithNullableIndex != null\n        ? keyExtractorWithNullableIndex(viewable.item, info.index)\n        : keyExtractorWithNonNullableIndex(viewable.item, info.index ?? 0);\n\n    return {\n      ...viewable,\n      index: info.index,\n      key,\n      section: info.section,\n    };\n  };\n\n  _onViewableItemsChanged = ({\n    viewableItems,\n    changed,\n  }: {\n    viewableItems: Array<ViewToken>,\n    changed: Array<ViewToken>,\n    ...\n  }) => {\n    const onViewableItemsChanged = this.props.onViewableItemsChanged;\n    if (onViewableItemsChanged != null) {\n      onViewableItemsChanged({\n        viewableItems: viewableItems\n          .map(this._convertViewable, this)\n          .filter(Boolean),\n        changed: changed.map(this._convertViewable, this).filter(Boolean),\n      });\n    }\n  };\n\n  _renderItem =\n    (listItemCount: number): $FlowFixMe =>\n    // eslint-disable-next-line react/no-unstable-nested-components\n    ({item, index}: {item: Item, index: number, ...}) => {\n      const info = this._subExtractor(index);\n      if (!info) {\n        return null;\n      }\n      const infoIndex = info.index;\n      if (infoIndex == null) {\n        const {section} = info;\n        if (info.header === true) {\n          const {renderSectionHeader} = this.props;\n          return renderSectionHeader ? renderSectionHeader({section}) : null;\n        } else {\n          const {renderSectionFooter} = this.props;\n          return renderSectionFooter ? renderSectionFooter({section}) : null;\n        }\n      } else {\n        const renderItem = info.section.renderItem || this.props.renderItem;\n        const SeparatorComponent = this._getSeparatorComponent(\n          index,\n          info,\n          listItemCount,\n        );\n        invariant(renderItem, 'no renderItem!');\n        return (\n          <ItemWithSeparator\n            SeparatorComponent={SeparatorComponent}\n            LeadingSeparatorComponent={\n              infoIndex === 0 ? this.props.SectionSeparatorComponent : undefined\n            }\n            cellKey={info.key}\n            index={infoIndex}\n            item={item}\n            leadingItem={info.leadingItem}\n            leadingSection={info.leadingSection}\n            prevCellKey={(this._subExtractor(index - 1) || {}).key}\n            // Callback to provide updateHighlight for this item\n            setSelfHighlightCallback={this._setUpdateHighlightFor}\n            setSelfUpdatePropsCallback={this._setUpdatePropsFor}\n            // Provide child ability to set highlight/updateProps for previous item using prevCellKey\n            updateHighlightFor={this._updateHighlightFor}\n            updatePropsFor={this._updatePropsFor}\n            renderItem={renderItem}\n            section={info.section}\n            trailingItem={info.trailingItem}\n            trailingSection={info.trailingSection}\n            inverted={!!this.props.inverted}\n          />\n        );\n      }\n    };\n\n  _updatePropsFor = (cellKey: string, value: any) => {\n    const updateProps = this._updatePropsMap[cellKey];\n    if (updateProps != null) {\n      updateProps(value);\n    }\n  };\n\n  _updateHighlightFor = (cellKey: string, value: boolean) => {\n    const updateHighlight = this._updateHighlightMap[cellKey];\n    if (updateHighlight != null) {\n      updateHighlight(value);\n    }\n  };\n\n  _setUpdateHighlightFor = (\n    cellKey: string,\n    updateHighlightFn: ?(boolean) => void,\n  ) => {\n    if (updateHighlightFn != null) {\n      this._updateHighlightMap[cellKey] = updateHighlightFn;\n    } else {\n      // $FlowFixMe[prop-missing]\n      delete this._updateHighlightFor[cellKey];\n    }\n  };\n\n  _setUpdatePropsFor = (cellKey: string, updatePropsFn: ?(boolean) => void) => {\n    if (updatePropsFn != null) {\n      this._updatePropsMap[cellKey] = updatePropsFn;\n    } else {\n      delete this._updatePropsMap[cellKey];\n    }\n  };\n\n  _getSeparatorComponent(\n    index: number,\n    info?: ?Object,\n    listItemCount: number,\n  ): ?React.ComponentType<any> {\n    info = info || this._subExtractor(index);\n    if (!info) {\n      return null;\n    }\n    const ItemSeparatorComponent =\n      info.section.ItemSeparatorComponent || this.props.ItemSeparatorComponent;\n    const {SectionSeparatorComponent} = this.props;\n    const isLastItemInList = index === listItemCount - 1;\n    const isLastItemInSection =\n      info.index === this.props.getItemCount(info.section.data) - 1;\n    if (SectionSeparatorComponent && isLastItemInSection) {\n      return SectionSeparatorComponent;\n    }\n    if (ItemSeparatorComponent && !isLastItemInSection && !isLastItemInList) {\n      return ItemSeparatorComponent;\n    }\n    return null;\n  }\n\n  _updateHighlightMap: {[string]: (boolean) => void} = {};\n  _updatePropsMap: {[string]: void | (boolean => void)} = {};\n  _listRef: ?React.ElementRef<typeof VirtualizedList>;\n  _captureRef = (ref: null | React$ElementRef<Class<VirtualizedList>>) => {\n    this._listRef = ref;\n  };\n}\n\ntype ItemWithSeparatorCommonProps = $ReadOnly<{|\n  leadingItem: ?Item,\n  leadingSection: ?Object,\n  section: Object,\n  trailingItem: ?Item,\n  trailingSection: ?Object,\n|}>;\n\ntype ItemWithSeparatorProps = $ReadOnly<{|\n  ...ItemWithSeparatorCommonProps,\n  LeadingSeparatorComponent: ?React.ComponentType<any>,\n  SeparatorComponent: ?React.ComponentType<any>,\n  cellKey: string,\n  index: number,\n  item: Item,\n  setSelfHighlightCallback: (\n    cellKey: string,\n    updateFn: ?(boolean) => void,\n  ) => void,\n  setSelfUpdatePropsCallback: (\n    cellKey: string,\n    updateFn: ?(boolean) => void,\n  ) => void,\n  prevCellKey?: ?string,\n  updateHighlightFor: (prevCellKey: string, value: boolean) => void,\n  updatePropsFor: (prevCellKey: string, value: Object) => void,\n  renderItem: Function,\n  inverted: boolean,\n|}>;\n\nfunction ItemWithSeparator(props: ItemWithSeparatorProps): React.Node {\n  const {\n    LeadingSeparatorComponent,\n    // this is the trailing separator and is associated with this item\n    SeparatorComponent,\n    cellKey,\n    prevCellKey,\n    setSelfHighlightCallback,\n    updateHighlightFor,\n    setSelfUpdatePropsCallback,\n    updatePropsFor,\n    item,\n    index,\n    section,\n    inverted,\n  } = props;\n\n  const [leadingSeparatorHiglighted, setLeadingSeparatorHighlighted] =\n    React.useState(false);\n\n  const [separatorHighlighted, setSeparatorHighlighted] = React.useState(false);\n\n  const [leadingSeparatorProps, setLeadingSeparatorProps] = React.useState({\n    leadingItem: props.leadingItem,\n    leadingSection: props.leadingSection,\n    section: props.section,\n    trailingItem: props.item,\n    trailingSection: props.trailingSection,\n  });\n  const [separatorProps, setSeparatorProps] = React.useState({\n    leadingItem: props.item,\n    leadingSection: props.leadingSection,\n    section: props.section,\n    trailingItem: props.trailingItem,\n    trailingSection: props.trailingSection,\n  });\n\n  React.useEffect(() => {\n    setSelfHighlightCallback(cellKey, setSeparatorHighlighted);\n    // $FlowFixMe[incompatible-call]\n    setSelfUpdatePropsCallback(cellKey, setSeparatorProps);\n\n    return () => {\n      setSelfUpdatePropsCallback(cellKey, null);\n      setSelfHighlightCallback(cellKey, null);\n    };\n  }, [\n    cellKey,\n    setSelfHighlightCallback,\n    setSeparatorProps,\n    setSelfUpdatePropsCallback,\n  ]);\n\n  const separators = {\n    highlight: () => {\n      setLeadingSeparatorHighlighted(true);\n      setSeparatorHighlighted(true);\n      if (prevCellKey != null) {\n        updateHighlightFor(prevCellKey, true);\n      }\n    },\n    unhighlight: () => {\n      setLeadingSeparatorHighlighted(false);\n      setSeparatorHighlighted(false);\n      if (prevCellKey != null) {\n        updateHighlightFor(prevCellKey, false);\n      }\n    },\n    updateProps: (\n      select: 'leading' | 'trailing',\n      newProps: Partial<ItemWithSeparatorCommonProps>,\n    ) => {\n      if (select === 'leading') {\n        if (LeadingSeparatorComponent != null) {\n          setLeadingSeparatorProps({...leadingSeparatorProps, ...newProps});\n        } else if (prevCellKey != null) {\n          // update the previous item's separator\n          updatePropsFor(prevCellKey, {...leadingSeparatorProps, ...newProps});\n        }\n      } else if (select === 'trailing' && SeparatorComponent != null) {\n        setSeparatorProps({...separatorProps, ...newProps});\n      }\n    },\n  };\n  const element = props.renderItem({\n    item,\n    index,\n    section,\n    separators,\n  });\n  const leadingSeparator = LeadingSeparatorComponent != null && (\n    <LeadingSeparatorComponent\n      highlighted={leadingSeparatorHiglighted}\n      {...leadingSeparatorProps}\n    />\n  );\n  const separator = SeparatorComponent != null && (\n    <SeparatorComponent\n      highlighted={separatorHighlighted}\n      {...separatorProps}\n    />\n  );\n  return leadingSeparator || separator ? (\n    <View>\n      {inverted === false ? leadingSeparator : separator}\n      {element}\n      {inverted === false ? separator : leadingSeparator}\n    </View>\n  ) : (\n    element\n  );\n}\n\n/* $FlowFixMe[class-object-subtyping] added when improving typing for this\n * parameters */\n// $FlowFixMe[method-unbinding]\nmodule.exports = (VirtualizedSectionList: React.AbstractComponent<\n  React.ElementConfig<typeof VirtualizedSectionList>,\n  $ReadOnly<{\n    getListRef: () => ?React.ElementRef<typeof VirtualizedList>,\n    scrollToLocation: (params: ScrollToLocationParamsType) => void,\n    ...\n  }>,\n>);\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict\n */\n\n'use strict';\n\nfunction clamp(min: number, value: number, max: number): number {\n  if (value < min) {\n    return min;\n  }\n  if (value > max) {\n    return max;\n  }\n  return value;\n}\n\nmodule.exports = clamp;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict\n */\n\n'use strict';\n\n/**\n * Intentional info-level logging for clear separation from ad-hoc console debug logging.\n */\nfunction infoLog(...args: Array<mixed>): void {\n  return console.log(...args);\n}\n\nmodule.exports = infoLog;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\nimport typeof FillRateHelper from './Lists/FillRateHelper';\nimport typeof ViewabilityHelper from './Lists/ViewabilityHelper';\nimport typeof VirtualizedList from './Lists/VirtualizedList';\nimport typeof VirtualizedSectionList from './Lists/VirtualizedSectionList';\n\nimport {typeof VirtualizedListContextResetter} from './Lists/VirtualizedListContext';\nimport {keyExtractor} from './Lists/VirtualizeUtils';\n\nexport type {\n  ViewToken,\n  ViewabilityConfig,\n  ViewabilityConfigCallbackPair,\n} from './Lists/ViewabilityHelper';\nexport type {\n  CellRendererProps,\n  RenderItemProps,\n  RenderItemType,\n  Separators,\n} from './Lists/VirtualizedListProps';\nexport type {\n  Props as VirtualizedSectionListProps,\n  ScrollToLocationParamsType,\n  SectionBase,\n} from './Lists/VirtualizedSectionList';\nexport type {FillRateInfo} from './Lists/FillRateHelper';\n\nmodule.exports = {\n  keyExtractor,\n\n  get VirtualizedList(): VirtualizedList {\n    return require('./Lists/VirtualizedList');\n  },\n  get VirtualizedSectionList(): VirtualizedSectionList {\n    return require('./Lists/VirtualizedSectionList');\n  },\n  get VirtualizedListContextResetter(): VirtualizedListContextResetter {\n    const VirtualizedListContext = require('./Lists/VirtualizedListContext');\n    return VirtualizedListContext.VirtualizedListContextResetter;\n  },\n  get ViewabilityHelper(): ViewabilityHelper {\n    return require('./Lists/ViewabilityHelper');\n  },\n  get FillRateHelper(): FillRateHelper {\n    return require('./Lists/FillRateHelper');\n  },\n};\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nimport DOMRect from '../webapis/dom/geometry/DOMRect';\nimport DOMRectReadOnly from '../webapis/dom/geometry/DOMRectReadOnly';\n\n// $FlowExpectedError[cannot-write] The global isn't writable anywhere but here, where we define it\nglobal.DOMRect = DOMRect;\n\n// $FlowExpectedError[cannot-write] The global isn't writable anywhere but here, where we define it\nglobal.DOMRectReadOnly = DOMRectReadOnly;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @generated SignedSource<<8f82962343a5146622f36c2de071ff6a>>\n * @flow strict-local\n */\n\n/**\n * IMPORTANT: Do NOT modify this file directly.\n *\n * To change the definition of the flags, edit\n *   packages/react-native/scripts/featureflags/ReactNativeFeatureFlags.config.js.\n *\n * To regenerate this code, run the following script from the repo root:\n *   yarn featureflags-update\n */\n\nimport type {TurboModule} from '../../../Libraries/TurboModule/RCTExport';\n\nimport * as TurboModuleRegistry from '../../../Libraries/TurboModule/TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n  +commonTestFlag?: () => boolean;\n  +androidEnablePendingFabricTransactions?: () => boolean;\n  +batchRenderingUpdatesInEventLoop?: () => boolean;\n  +destroyFabricSurfacesInReactInstanceManager?: () => boolean;\n  +enableBackgroundExecutor?: () => boolean;\n  +useModernRuntimeScheduler?: () => boolean;\n  +enableMicrotasks?: () => boolean;\n  +enableSpannableBuildingUnification?: () => boolean;\n  +enableCustomDrawOrderFabric?: () => boolean;\n  +enableFixForClippedSubviewsCrash?: () => boolean;\n  +inspectorEnableCxxInspectorPackagerConnection?: () => boolean;\n  +inspectorEnableModernCDPRegistry?: () => boolean;\n}\n\nconst NativeReactNativeFeatureFlags: ?Spec = TurboModuleRegistry.get<Spec>(\n  'NativeReactNativeFeatureFlagsCxx',\n);\n\nexport default NativeReactNativeFeatureFlags;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @generated SignedSource<<b7ebc6e4360a4b7733335f283300a4bb>>\n * @flow strict-local\n */\n\n/**\n * IMPORTANT: Do NOT modify this file directly.\n *\n * To change the definition of the flags, edit\n *   packages/react-native/scripts/featureflags/ReactNativeFeatureFlags.config.js.\n *\n * To regenerate this code, run the following script from the repo root:\n *   yarn featureflags-update\n */\n\nimport {\n  type Getter,\n  createJavaScriptFlagGetter,\n  createNativeFlagGetter,\n  setOverrides,\n} from './ReactNativeFeatureFlagsBase';\n\nexport type ReactNativeFeatureFlagsJsOnly = {\n  jsOnlyTestFlag: Getter<boolean>,\n  isLayoutAnimationEnabled: Getter<boolean>,\n  animatedShouldDebounceQueueFlush: Getter<boolean>,\n  animatedShouldUseSingleOp: Getter<boolean>,\n  enableAccessToHostTreeInFabric: Getter<boolean>,\n  shouldUseAnimatedObjectForTransform: Getter<boolean>,\n  shouldUseSetNativePropsInFabric: Getter<boolean>,\n  shouldUseRemoveClippedSubviewsAsDefaultOnIOS: Getter<boolean>,\n};\n\nexport type ReactNativeFeatureFlagsJsOnlyOverrides = Partial<ReactNativeFeatureFlagsJsOnly>;\n\nexport type ReactNativeFeatureFlags = {\n  ...ReactNativeFeatureFlagsJsOnly,\n  commonTestFlag: Getter<boolean>,\n  androidEnablePendingFabricTransactions: Getter<boolean>,\n  batchRenderingUpdatesInEventLoop: Getter<boolean>,\n  destroyFabricSurfacesInReactInstanceManager: Getter<boolean>,\n  enableBackgroundExecutor: Getter<boolean>,\n  useModernRuntimeScheduler: Getter<boolean>,\n  enableMicrotasks: Getter<boolean>,\n  enableSpannableBuildingUnification: Getter<boolean>,\n  enableCustomDrawOrderFabric: Getter<boolean>,\n  enableFixForClippedSubviewsCrash: Getter<boolean>,\n  inspectorEnableCxxInspectorPackagerConnection: Getter<boolean>,\n  inspectorEnableModernCDPRegistry: Getter<boolean>,\n}\n\n/**\n * JS-only flag for testing. Do NOT modify.\n */\nexport const jsOnlyTestFlag: Getter<boolean> = createJavaScriptFlagGetter('jsOnlyTestFlag', false);\n\n/**\n * Function used to enable / disabled Layout Animations in React Native.\n */\nexport const isLayoutAnimationEnabled: Getter<boolean> = createJavaScriptFlagGetter('isLayoutAnimationEnabled', true);\n\n/**\n * Enables an experimental flush-queue debouncing in Animated.js.\n */\nexport const animatedShouldDebounceQueueFlush: Getter<boolean> = createJavaScriptFlagGetter('animatedShouldDebounceQueueFlush', false);\n\n/**\n * Enables an experimental mega-operation for Animated.js that replaces many calls to native with a single call into native, to reduce JSI/JNI traffic.\n */\nexport const animatedShouldUseSingleOp: Getter<boolean> = createJavaScriptFlagGetter('animatedShouldUseSingleOp', false);\n\n/**\n * Enables access to the host tree in Fabric using DOM-compatible APIs.\n */\nexport const enableAccessToHostTreeInFabric: Getter<boolean> = createJavaScriptFlagGetter('enableAccessToHostTreeInFabric', false);\n\n/**\n * Enables use of AnimatedObject for animating transform values.\n */\nexport const shouldUseAnimatedObjectForTransform: Getter<boolean> = createJavaScriptFlagGetter('shouldUseAnimatedObjectForTransform', false);\n\n/**\n * Enables use of setNativeProps in JS driven animations.\n */\nexport const shouldUseSetNativePropsInFabric: Getter<boolean> = createJavaScriptFlagGetter('shouldUseSetNativePropsInFabric', true);\n\n/**\n * removeClippedSubviews prop will be used as the default in FlatList on iOS to match Android\n */\nexport const shouldUseRemoveClippedSubviewsAsDefaultOnIOS: Getter<boolean> = createJavaScriptFlagGetter('shouldUseRemoveClippedSubviewsAsDefaultOnIOS', false);\n\n/**\n * Common flag for testing. Do NOT modify.\n */\nexport const commonTestFlag: Getter<boolean> = createNativeFlagGetter('commonTestFlag', false);\n/**\n * To be used with batchRenderingUpdatesInEventLoop. When enbled, the Android mounting layer will concatenate pending transactions to ensure they're applied atomatically\n */\nexport const androidEnablePendingFabricTransactions: Getter<boolean> = createNativeFlagGetter('androidEnablePendingFabricTransactions', false);\n/**\n * When enabled, the RuntimeScheduler processing the event loop will batch all rendering updates and dispatch them together at the end of each iteration of the loop.\n */\nexport const batchRenderingUpdatesInEventLoop: Getter<boolean> = createNativeFlagGetter('batchRenderingUpdatesInEventLoop', false);\n/**\n * When enabled, ReactInstanceManager will clean up Fabric surfaces on destroy().\n */\nexport const destroyFabricSurfacesInReactInstanceManager: Getter<boolean> = createNativeFlagGetter('destroyFabricSurfacesInReactInstanceManager', false);\n/**\n * Enables the use of a background executor to compute layout and commit updates on Fabric (this system is deprecated and should not be used).\n */\nexport const enableBackgroundExecutor: Getter<boolean> = createNativeFlagGetter('enableBackgroundExecutor', false);\n/**\n * When enabled, it uses the modern fork of RuntimeScheduler that allows scheduling tasks with priorities from any thread.\n */\nexport const useModernRuntimeScheduler: Getter<boolean> = createNativeFlagGetter('useModernRuntimeScheduler', false);\n/**\n * Enables the use of microtasks in Hermes (scheduling) and RuntimeScheduler (execution).\n */\nexport const enableMicrotasks: Getter<boolean> = createNativeFlagGetter('enableMicrotasks', false);\n/**\n * Uses new, deduplicated logic for constructing Android Spannables from text fragments\n */\nexport const enableSpannableBuildingUnification: Getter<boolean> = createNativeFlagGetter('enableSpannableBuildingUnification', false);\n/**\n * When enabled, Fabric will use customDrawOrder in ReactViewGroup (similar to old architecture).\n */\nexport const enableCustomDrawOrderFabric: Getter<boolean> = createNativeFlagGetter('enableCustomDrawOrderFabric', false);\n/**\n * Attempt at fixing a crash related to subview clipping on Android. This is a kill switch for the fix\n */\nexport const enableFixForClippedSubviewsCrash: Getter<boolean> = createNativeFlagGetter('enableFixForClippedSubviewsCrash', false);\n/**\n * Flag determining if the C++ implementation of InspectorPackagerConnection should be used instead of the per-platform one. This flag is global and should not be changed across React Host lifetimes.\n */\nexport const inspectorEnableCxxInspectorPackagerConnection: Getter<boolean> = createNativeFlagGetter('inspectorEnableCxxInspectorPackagerConnection', false);\n/**\n * Flag determining if the modern CDP backend should be enabled. This flag is global and should not be changed across React Host lifetimes.\n */\nexport const inspectorEnableModernCDPRegistry: Getter<boolean> = createNativeFlagGetter('inspectorEnableModernCDPRegistry', false);\n\n/**\n * Overrides the feature flags with the provided methods.\n * NOTE: Only JS-only flags can be overridden from JavaScript using this API.\n */\nexport const override = setOverrides;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport type {\n  ReactNativeFeatureFlagsJsOnly,\n  ReactNativeFeatureFlagsJsOnlyOverrides,\n} from './ReactNativeFeatureFlags';\n\nimport NativeReactNativeFeatureFlags from './NativeReactNativeFeatureFlags';\n\nconst accessedFeatureFlags: Set<string> = new Set();\nlet overrides: ?ReactNativeFeatureFlagsJsOnlyOverrides;\n\nexport type Getter<T> = () => T;\n\nfunction createGetter<T: boolean | number | string>(\n  configName: string,\n  customValueGetter: Getter<?T>,\n  defaultValue: T,\n): Getter<T> {\n  let cachedValue: ?T;\n\n  return () => {\n    if (cachedValue == null) {\n      accessedFeatureFlags.add(configName);\n      cachedValue = customValueGetter() ?? defaultValue;\n    }\n    return cachedValue;\n  };\n}\n\nexport function createJavaScriptFlagGetter<\n  K: $Keys<ReactNativeFeatureFlagsJsOnly>,\n>(\n  configName: K,\n  defaultValue: ReturnType<ReactNativeFeatureFlagsJsOnly[K]>,\n): Getter<ReturnType<ReactNativeFeatureFlagsJsOnly[K]>> {\n  return createGetter(\n    configName,\n    () => overrides?.[configName]?.(),\n    defaultValue,\n  );\n}\n\ntype NativeFeatureFlags = $NonMaybeType<typeof NativeReactNativeFeatureFlags>;\n\nexport function createNativeFlagGetter<K: $Keys<NativeFeatureFlags>>(\n  configName: K,\n  defaultValue: ReturnType<$NonMaybeType<NativeFeatureFlags[K]>>,\n): Getter<ReturnType<$NonMaybeType<NativeFeatureFlags[K]>>> {\n  return createGetter(\n    configName,\n    () => NativeReactNativeFeatureFlags?.[configName]?.(),\n    defaultValue,\n  );\n}\n\nexport function getOverrides(): ?ReactNativeFeatureFlagsJsOnlyOverrides {\n  return overrides;\n}\n\nexport function setOverrides(\n  newOverrides: ReactNativeFeatureFlagsJsOnlyOverrides,\n): void {\n  if (overrides != null) {\n    throw new Error('Feature flags cannot be overridden more than once');\n  }\n\n  if (accessedFeatureFlags.size > 0) {\n    const accessedFeatureFlagsStr = Array.from(accessedFeatureFlags).join(', ');\n    throw new Error(\n      `Feature flags were accessed before being overridden: ${accessedFeatureFlagsStr}`,\n    );\n  }\n\n  overrides = newOverrides;\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\nimport type {ViewProps} from '../../../../Libraries/Components/View/ViewPropTypes';\nimport type {HostComponent} from '../../../../Libraries/Renderer/shims/ReactNativeTypes';\nimport type {ColorValue} from '../../../../Libraries/StyleSheet/StyleSheet';\nimport type {WithDefault} from '../../../../Libraries/Types/CodegenTypes';\n\nimport codegenNativeComponent from '../../../../Libraries/Utilities/codegenNativeComponent';\n\ntype NativeProps = $ReadOnly<{|\n  ...ViewProps,\n\n  /**\n   * Whether the indicator should hide when not animating (true by default).\n   *\n   * See https://reactnative.dev/docs/activityindicator#hideswhenstopped-ios\n   */\n  hidesWhenStopped?: WithDefault<boolean, true>,\n\n  /**\n   * Whether to show the indicator (true, the default) or hide it (false).\n   *\n   * See https://reactnative.dev/docs/activityindicator#animating\n   */\n  animating?: WithDefault<boolean, true>,\n\n  /**\n   * The foreground color of the spinner (default is gray).\n   *\n   * See https://reactnative.dev/docs/activityindicator#color\n   */\n  color?: ?ColorValue,\n\n  /**\n   * Size of the indicator (default is 'small').\n   * Passing a number to the size prop is only supported on Android.\n   *\n   * See https://reactnative.dev/docs/activityindicator#size\n   */\n  size?: WithDefault<'small' | 'large', 'small'>,\n|}>;\n\nexport default (codegenNativeComponent<NativeProps>('ActivityIndicatorView', {\n  paperComponentName: 'RCTActivityIndicatorView',\n}): HostComponent<NativeProps>);\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\nimport type {ViewProps} from '../../../../Libraries/Components/View/ViewPropTypes';\nimport type {HostComponent} from '../../../../Libraries/Renderer/shims/ReactNativeTypes';\nimport type {ColorValue} from '../../../../Libraries/StyleSheet/StyleSheet';\nimport type {\n  DirectEventHandler,\n  Float,\n  Int32,\n  WithDefault,\n} from '../../../../Libraries/Types/CodegenTypes';\n\nimport codegenNativeCommands from '../../../../Libraries/Utilities/codegenNativeCommands';\nimport codegenNativeComponent from '../../../../Libraries/Utilities/codegenNativeComponent';\nimport * as React from 'react';\n\ntype DrawerStateEvent = $ReadOnly<{|\n  drawerState: Int32,\n|}>;\n\ntype DrawerSlideEvent = $ReadOnly<{|\n  offset: Float,\n|}>;\n\ntype NativeProps = $ReadOnly<{|\n  ...ViewProps,\n  /**\n   * Determines whether the keyboard gets dismissed in response to a drag.\n   *   - 'none' (the default), drags do not dismiss the keyboard.\n   *   - 'on-drag', the keyboard is dismissed when a drag begins.\n   */\n  keyboardDismissMode?: WithDefault<'none' | 'on-drag', 'none'>,\n\n  /**\n   * Specifies the background color of the drawer. The default value is white.\n   * If you want to set the opacity of the drawer, use rgba. Example:\n   *\n   * ```\n   * return (\n   *   <DrawerLayoutAndroid drawerBackgroundColor=\"rgba(0,0,0,0.5)\">\n   *   </DrawerLayoutAndroid>\n   * );\n   * ```\n   */\n  drawerBackgroundColor: ColorValue,\n\n  /**\n   * Specifies the side of the screen from which the drawer will slide in.\n   */\n  drawerPosition?: WithDefault<'left' | 'right', 'left'>,\n\n  /**\n   * Specifies the width of the drawer, more precisely the width of the view that be pulled in\n   * from the edge of the window.\n   */\n\n  drawerWidth?: WithDefault<Float, null>,\n\n  /**\n   * Specifies the lock mode of the drawer. The drawer can be locked in 3 states:\n   * - unlocked (default), meaning that the drawer will respond (open/close) to touch gestures.\n   * - locked-closed, meaning that the drawer will stay closed and not respond to gestures.\n   * - locked-open, meaning that the drawer will stay opened and not respond to gestures.\n   * The drawer may still be opened and closed programmatically (`openDrawer`/`closeDrawer`).\n   */\n  drawerLockMode?: WithDefault<\n    'unlocked' | 'locked-closed' | 'locked-open',\n    'unlocked',\n  >,\n\n  /**\n   * Function called whenever there is an interaction with the navigation view.\n   */\n  onDrawerSlide?: ?DirectEventHandler<DrawerSlideEvent>,\n\n  /**\n   * Function called when the drawer state has changed. The drawer can be in 3 states:\n   * - Idle, meaning there is no interaction with the navigation view happening at the time\n   * - Dragging, meaning there is currently an interaction with the navigation view\n   * - Settling, meaning that there was an interaction with the navigation view, and the\n   * navigation view is now finishing its closing or opening animation\n   */\n  onDrawerStateChanged?: ?DirectEventHandler<DrawerStateEvent>,\n\n  /**\n   * Function called whenever the navigation view has been opened.\n   */\n  onDrawerOpen?: ?DirectEventHandler<null>,\n\n  /**\n   * Function called whenever the navigation view has been closed.\n   */\n  onDrawerClose?: ?DirectEventHandler<null>,\n\n  /**\n   * Make the drawer take the entire screen and draw the background of the\n   * status bar to allow it to open over the status bar. It will only have an\n   * effect on API 21+.\n   */\n  statusBarBackgroundColor?: ?ColorValue,\n|}>;\n\ntype NativeType = HostComponent<NativeProps>;\n\ninterface NativeCommands {\n  +openDrawer: (viewRef: React.ElementRef<NativeType>) => void;\n  +closeDrawer: (viewRef: React.ElementRef<NativeType>) => void;\n}\n\nexport const Commands: NativeCommands = codegenNativeCommands<NativeCommands>({\n  supportedCommands: ['openDrawer', 'closeDrawer'],\n});\n\nexport default (codegenNativeComponent<NativeProps>(\n  'AndroidDrawerLayout',\n): NativeType);\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\nimport type {ViewProps} from '../../../../Libraries/Components/View/ViewPropTypes';\nimport type {HostComponent} from '../../../../Libraries/Renderer/shims/ReactNativeTypes';\n\nimport codegenNativeComponent from '../../../../Libraries/Utilities/codegenNativeComponent';\n\ntype NativeProps = $ReadOnly<{|\n  ...ViewProps,\n\n  removeClippedSubviews?: ?boolean,\n|}>;\n\ntype NativeType = HostComponent<NativeProps>;\n\nexport default (codegenNativeComponent<NativeProps>(\n  'AndroidHorizontalScrollContentView',\n): NativeType);\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\nimport type {ViewProps} from '../../../../Libraries/Components/View/ViewPropTypes';\nimport type {HostComponent} from '../../../../Libraries/Renderer/shims/ReactNativeTypes';\nimport type {ColorValue} from '../../../../Libraries/StyleSheet/StyleSheet';\nimport type {\n  DirectEventHandler,\n  Float,\n  WithDefault,\n} from '../../../../Libraries/Types/CodegenTypes';\n\nimport codegenNativeCommands from '../../../../Libraries/Utilities/codegenNativeCommands';\nimport codegenNativeComponent from '../../../../Libraries/Utilities/codegenNativeComponent';\nimport * as React from 'react';\n\ntype NativeProps = $ReadOnly<{|\n  ...ViewProps,\n\n  /**\n   * Whether the pull to refresh functionality is enabled.\n   */\n  enabled?: WithDefault<boolean, true>,\n  /**\n   * The colors (at least one) that will be used to draw the refresh indicator.\n   */\n  colors?: ?$ReadOnlyArray<ColorValue>,\n  /**\n   * The background color of the refresh indicator.\n   */\n  progressBackgroundColor?: ?ColorValue,\n  /**\n   * Size of the refresh indicator.\n   */\n  size?: WithDefault<'default' | 'large', 'default'>,\n  /**\n   * Progress view top offset\n   */\n  progressViewOffset?: WithDefault<Float, 0>,\n\n  /**\n   * Called when the view starts refreshing.\n   */\n  onRefresh?: ?DirectEventHandler<null>,\n\n  /**\n   * Whether the view should be indicating an active refresh.\n   */\n  refreshing: boolean,\n|}>;\n\ntype NativeType = HostComponent<NativeProps>;\n\ninterface NativeCommands {\n  +setNativeRefreshing: (\n    viewRef: React.ElementRef<NativeType>,\n    value: boolean,\n  ) => void;\n}\n\nexport const Commands: NativeCommands = codegenNativeCommands<NativeCommands>({\n  supportedCommands: ['setNativeRefreshing'],\n});\n\nexport default (codegenNativeComponent<NativeProps>(\n  'AndroidSwipeRefreshLayout',\n): NativeType);\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport type {ViewProps} from '../../../../Libraries/Components/View/ViewPropTypes';\nimport type {HostComponent} from '../../../../Libraries/Renderer/shims/ReactNativeTypes';\nimport type {ColorValue} from '../../../../Libraries/StyleSheet/StyleSheet';\nimport type {\n  BubblingEventHandler,\n  Int32,\n  WithDefault,\n} from '../../../../Libraries/Types/CodegenTypes';\n\nimport codegenNativeCommands from '../../../../Libraries/Utilities/codegenNativeCommands';\nimport codegenNativeComponent from '../../../../Libraries/Utilities/codegenNativeComponent';\nimport * as React from 'react';\n\ntype SwitchChangeEvent = $ReadOnly<{|\n  value: boolean,\n  target: Int32,\n|}>;\n\ntype NativeProps = $ReadOnly<{|\n  ...ViewProps,\n\n  // Props\n  disabled?: WithDefault<boolean, false>,\n  enabled?: WithDefault<boolean, true>,\n  thumbColor?: ?ColorValue,\n  trackColorForFalse?: ?ColorValue,\n  trackColorForTrue?: ?ColorValue,\n  value?: WithDefault<boolean, false>,\n  on?: WithDefault<boolean, false>,\n  thumbTintColor?: ?ColorValue,\n  trackTintColor?: ?ColorValue,\n\n  // Events\n  onChange?: BubblingEventHandler<SwitchChangeEvent>,\n|}>;\n\ntype NativeType = HostComponent<NativeProps>;\n\ninterface NativeCommands {\n  +setNativeValue: (\n    viewRef: React.ElementRef<NativeType>,\n    value: boolean,\n  ) => void;\n}\n\nexport const Commands: NativeCommands = codegenNativeCommands<NativeCommands>({\n  supportedCommands: ['setNativeValue'],\n});\n\nexport default (codegenNativeComponent<NativeProps>('AndroidSwitch', {\n  interfaceOnly: true,\n}): NativeType);\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport type {ViewProps} from '../../../../Libraries/Components/View/ViewPropTypes';\nimport type {HostComponent} from '../../../../Libraries/Renderer/shims/ReactNativeTypes';\nimport type {ColorValue} from '../../../../Libraries/StyleSheet/StyleSheet';\nimport type {\n  Double,\n  WithDefault,\n} from '../../../../Libraries/Types/CodegenTypes';\n\nimport codegenNativeComponent from '../../../../Libraries/Utilities/codegenNativeComponent';\n\ntype NativeProps = $ReadOnly<{|\n  ...ViewProps,\n\n  //Props\n  styleAttr?: string,\n  typeAttr?: string,\n  indeterminate: boolean,\n  progress?: WithDefault<Double, 0>,\n  animating?: WithDefault<boolean, true>,\n  color?: ?ColorValue,\n  testID?: WithDefault<string, ''>,\n|}>;\n\nexport default (codegenNativeComponent<NativeProps>('AndroidProgressBar', {\n  interfaceOnly: true,\n}): HostComponent<NativeProps>);\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\nimport type {ViewProps} from '../../../../Libraries/Components/View/ViewPropTypes';\nimport type {HostComponent} from '../../../../Libraries/Renderer/shims/ReactNativeTypes';\nimport type {ColorValue} from '../../../../Libraries/StyleSheet/StyleSheet';\nimport type {\n  DirectEventHandler,\n  Float,\n  WithDefault,\n} from '../../../../Libraries/Types/CodegenTypes';\n\nimport codegenNativeCommands from '../../../../Libraries/Utilities/codegenNativeCommands';\nimport codegenNativeComponent from '../../../../Libraries/Utilities/codegenNativeComponent';\nimport * as React from 'react';\n\ntype NativeProps = $ReadOnly<{|\n  ...ViewProps,\n\n  /**\n   * The color of the refresh indicator.\n   */\n  tintColor?: ?ColorValue,\n  /**\n   * Title color.\n   */\n  titleColor?: ?ColorValue,\n  /**\n   * The title displayed under the refresh indicator.\n   */\n  title?: WithDefault<string, null>,\n  /**\n   * Progress view top offset\n   */\n  progressViewOffset?: WithDefault<Float, 0>,\n\n  /**\n   * Called when the view starts refreshing.\n   */\n  onRefresh?: ?DirectEventHandler<null>,\n\n  /**\n   * Whether the view should be indicating an active refresh.\n   */\n  refreshing: boolean,\n|}>;\n\ntype ComponentType = HostComponent<NativeProps>;\n\ninterface NativeCommands {\n  +setNativeRefreshing: (\n    viewRef: React.ElementRef<ComponentType>,\n    refreshing: boolean,\n  ) => void;\n}\n\nexport const Commands: NativeCommands = codegenNativeCommands<NativeCommands>({\n  supportedCommands: ['setNativeRefreshing'],\n});\n\nexport default (codegenNativeComponent<NativeProps>('PullToRefreshView', {\n  paperComponentName: 'RCTRefreshControl',\n  excludedPlatforms: ['android'],\n}): HostComponent<NativeProps>);\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport type {ViewProps} from '../../../../Libraries/Components/View/ViewPropTypes';\nimport type {HostComponent} from '../../../../Libraries/Renderer/shims/ReactNativeTypes';\nimport type {ColorValue} from '../../../../Libraries/StyleSheet/StyleSheet';\n\nimport codegenNativeComponent from '../../../../Libraries/Utilities/codegenNativeComponent';\n\ntype NativeProps = $ReadOnly<{|\n  ...ViewProps,\n  backgroundColor?: ?ColorValue,\n|}>;\n\nexport default (codegenNativeComponent<NativeProps>('InputAccessory', {\n  interfaceOnly: true,\n  paperComponentName: 'RCTInputAccessoryView',\n  excludedPlatforms: ['android'],\n}): HostComponent<NativeProps>);\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\nimport type {ViewProps} from '../../../../Libraries/Components/View/ViewPropTypes';\nimport type {HostComponent} from '../../../../Libraries/Renderer/shims/ReactNativeTypes';\nimport type {\n  DirectEventHandler,\n  Int32,\n  WithDefault,\n} from '../../../../Libraries/Types/CodegenTypes';\n\nimport codegenNativeComponent from '../../../../Libraries/Utilities/codegenNativeComponent';\n\ntype OrientationChangeEvent = $ReadOnly<{|\n  orientation: 'portrait' | 'landscape',\n|}>;\n\ntype NativeProps = $ReadOnly<{|\n  ...ViewProps,\n\n  /**\n   * The `animationType` prop controls how the modal animates.\n   *\n   * See https://reactnative.dev/docs/modal#animationtype\n   */\n  animationType?: WithDefault<'none' | 'slide' | 'fade', 'none'>,\n\n  /**\n   * The `presentationStyle` prop controls how the modal appears.\n   *\n   * See https://reactnative.dev/docs/modal#presentationstyle\n   */\n  presentationStyle?: WithDefault<\n    'fullScreen' | 'pageSheet' | 'formSheet' | 'overFullScreen',\n    'fullScreen',\n  >,\n\n  /**\n   * The `transparent` prop determines whether your modal will fill the\n   * entire view.\n   *\n   * See https://reactnative.dev/docs/modal#transparent\n   */\n  transparent?: WithDefault<boolean, false>,\n\n  /**\n   * The `statusBarTranslucent` prop determines whether your modal should go under\n   * the system statusbar.\n   *\n   * See https://reactnative.dev/docs/modal#statusBarTranslucent\n   */\n  statusBarTranslucent?: WithDefault<boolean, false>,\n\n  /**\n   * The `hardwareAccelerated` prop controls whether to force hardware\n   * acceleration for the underlying window.\n   *\n   * See https://reactnative.dev/docs/modal#hardwareaccelerated\n   */\n  hardwareAccelerated?: WithDefault<boolean, false>,\n\n  /**\n   * The `onRequestClose` callback is called when the user taps the hardware\n   * back button on Android or the menu button on Apple TV.\n   *\n   * This is required on Apple TV and Android.\n   *\n   * See https://reactnative.dev/docs/modal#onrequestclose\n   */\n  onRequestClose?: ?DirectEventHandler<null>,\n\n  /**\n   * The `onShow` prop allows passing a function that will be called once the\n   * modal has been shown.\n   *\n   * See https://reactnative.dev/docs/modal#onshow\n   */\n  onShow?: ?DirectEventHandler<null>,\n\n  /**\n   * The `onDismiss` prop allows passing a function that will be called once\n   * the modal has been dismissed.\n   *\n   * See https://reactnative.dev/docs/modal#ondismiss\n   */\n  onDismiss?: ?DirectEventHandler<null>,\n\n  /**\n   * The `visible` prop determines whether your modal is visible.\n   *\n   * See https://reactnative.dev/docs/modal#visible\n   */\n  visible?: WithDefault<boolean, false>,\n\n  /**\n   * Deprecated. Use the `animationType` prop instead.\n   */\n  animated?: WithDefault<boolean, false>,\n\n  /**\n   * The `supportedOrientations` prop allows the modal to be rotated to any of the specified orientations.\n   *\n   * See https://reactnative.dev/docs/modal#supportedorientations\n   */\n  supportedOrientations?: WithDefault<\n    $ReadOnlyArray<\n      | 'portrait'\n      | 'portrait-upside-down'\n      | 'landscape'\n      | 'landscape-left'\n      | 'landscape-right',\n    >,\n    'portrait',\n  >,\n\n  /**\n   * The `onOrientationChange` callback is called when the orientation changes while the modal is being displayed.\n   *\n   * See https://reactnative.dev/docs/modal#onorientationchange\n   */\n  onOrientationChange?: ?DirectEventHandler<OrientationChangeEvent>,\n\n  /**\n   * The `identifier` is the unique number for identifying Modal components.\n   */\n  identifier?: WithDefault<Int32, 0>,\n|}>;\n\nexport default (codegenNativeComponent<NativeProps>('ModalHostView', {\n  interfaceOnly: true,\n  paperComponentName: 'RCTModalHostView',\n}): HostComponent<NativeProps>);\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\nimport type {ViewProps} from '../../../../Libraries/Components/View/ViewPropTypes';\nimport type {HostComponent} from '../../../../Libraries/Renderer/shims/ReactNativeTypes';\n\nimport codegenNativeComponent from '../../../../Libraries/Utilities/codegenNativeComponent';\n\ntype NativeProps = $ReadOnly<{|\n  ...ViewProps,\n\n  // No props\n|}>;\n\nexport default (codegenNativeComponent<NativeProps>('SafeAreaView', {\n  paperComponentName: 'RCTSafeAreaView',\n  interfaceOnly: true,\n}): HostComponent<NativeProps>);\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport type {ViewProps} from '../../../../Libraries/Components/View/ViewPropTypes';\nimport type {HostComponent} from '../../../../Libraries/Renderer/shims/ReactNativeTypes';\nimport type {ColorValue} from '../../../../Libraries/StyleSheet/StyleSheet';\nimport type {\n  BubblingEventHandler,\n  Int32,\n  WithDefault,\n} from '../../../../Libraries/Types/CodegenTypes';\n\nimport codegenNativeCommands from '../../../../Libraries/Utilities/codegenNativeCommands';\nimport codegenNativeComponent from '../../../../Libraries/Utilities/codegenNativeComponent';\nimport * as React from 'react';\n\ntype SwitchChangeEvent = $ReadOnly<{|\n  value: boolean,\n  target: Int32,\n|}>;\n\ntype NativeProps = $ReadOnly<{|\n  ...ViewProps,\n\n  // Props\n  disabled?: WithDefault<boolean, false>,\n  value?: WithDefault<boolean, false>,\n  tintColor?: ?ColorValue,\n  onTintColor?: ?ColorValue,\n  thumbTintColor?: ?ColorValue,\n\n  // Deprecated props\n  thumbColor?: ?ColorValue,\n  trackColorForFalse?: ?ColorValue,\n  trackColorForTrue?: ?ColorValue,\n\n  // Events\n  onChange?: ?BubblingEventHandler<SwitchChangeEvent>,\n|}>;\n\ntype ComponentType = HostComponent<NativeProps>;\n\ninterface NativeCommands {\n  +setValue: (viewRef: React.ElementRef<ComponentType>, value: boolean) => void;\n}\n\nexport const Commands: NativeCommands = codegenNativeCommands<NativeCommands>({\n  supportedCommands: ['setValue'],\n});\n\nexport default (codegenNativeComponent<NativeProps>('Switch', {\n  paperComponentName: 'RCTSwitch',\n  excludedPlatforms: ['android'],\n}): ComponentType);\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nimport type {TurboModule} from '../../../../Libraries/TurboModule/RCTExport';\n\nimport * as TurboModuleRegistry from '../../../../Libraries/TurboModule/TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n  +isReduceMotionEnabled: (\n    onSuccess: (isReduceMotionEnabled: boolean) => void,\n  ) => void;\n  +isTouchExplorationEnabled: (\n    onSuccess: (isScreenReaderEnabled: boolean) => void,\n  ) => void;\n  +isAccessibilityServiceEnabled?: ?(\n    onSuccess: (isAccessibilityServiceEnabled: boolean) => void,\n  ) => void;\n  +setAccessibilityFocus: (reactTag: number) => void;\n  +announceForAccessibility: (announcement: string) => void;\n  +getRecommendedTimeoutMillis?: (\n    mSec: number,\n    onSuccess: (recommendedTimeoutMillis: number) => void,\n  ) => void;\n}\n\nexport default (TurboModuleRegistry.get<Spec>('AccessibilityInfo'): ?Spec);\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\nimport type {TurboModule} from '../../../../Libraries/TurboModule/RCTExport';\n\nimport * as TurboModuleRegistry from '../../../../Libraries/TurboModule/TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n  +getCurrentBoldTextState: (\n    onSuccess: (isBoldTextEnabled: boolean) => void,\n    onError: (error: Object) => void,\n  ) => void;\n  +getCurrentGrayscaleState: (\n    onSuccess: (isGrayscaleEnabled: boolean) => void,\n    onError: (error: Object) => void,\n  ) => void;\n  +getCurrentInvertColorsState: (\n    onSuccess: (isInvertColorsEnabled: boolean) => void,\n    onError: (error: Object) => void,\n  ) => void;\n  +getCurrentReduceMotionState: (\n    onSuccess: (isReduceMotionEnabled: boolean) => void,\n    onError: (error: Object) => void,\n  ) => void;\n  +getCurrentPrefersCrossFadeTransitionsState?: (\n    onSuccess: (prefersCrossFadeTransitions: boolean) => void,\n    onError: (error: Object) => void,\n  ) => void;\n  +getCurrentReduceTransparencyState: (\n    onSuccess: (isReduceTransparencyEnabled: boolean) => void,\n    onError: (error: Object) => void,\n  ) => void;\n  +getCurrentVoiceOverState: (\n    onSuccess: (isScreenReaderEnabled: boolean) => void,\n    onError: (error: Object) => void,\n  ) => void;\n  +setAccessibilityContentSizeMultipliers: (JSMultipliers: {|\n    +extraSmall?: ?number,\n    +small?: ?number,\n    +medium?: ?number,\n    +large?: ?number,\n    +extraLarge?: ?number,\n    +extraExtraLarge?: ?number,\n    +extraExtraExtraLarge?: ?number,\n    +accessibilityMedium?: ?number,\n    +accessibilityLarge?: ?number,\n    +accessibilityExtraLarge?: ?number,\n    +accessibilityExtraExtraLarge?: ?number,\n    +accessibilityExtraExtraExtraLarge?: ?number,\n  |}) => void;\n  +setAccessibilityFocus: (reactTag: number) => void;\n  +announceForAccessibility: (announcement: string) => void;\n  +announceForAccessibilityWithOptions?: (\n    announcement: string,\n    options: {queue?: boolean},\n  ) => void;\n}\n\nexport default (TurboModuleRegistry.get<Spec>('AccessibilityManager'): ?Spec);\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\nimport type {TurboModule} from '../../../../Libraries/TurboModule/RCTExport';\n\nimport * as TurboModuleRegistry from '../../../../Libraries/TurboModule/TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n  +getConstants: () => {||};\n  +showActionSheetWithOptions: (\n    options: {|\n      +title?: ?string,\n      +message?: ?string,\n      +options: ?Array<string>,\n      +destructiveButtonIndices?: ?Array<number>,\n      +cancelButtonIndex?: ?number,\n      +anchor?: ?number,\n      +tintColor?: ?number,\n      +cancelButtonTintColor?: ?number,\n      +userInterfaceStyle?: ?string,\n      +disabledButtonIndices?: Array<number>,\n    |},\n    callback: (buttonIndex: number) => void,\n  ) => void;\n  +showShareActionSheetWithOptions: (\n    options: {|\n      +message?: ?string,\n      +url?: ?string,\n      +subject?: ?string,\n      +anchor?: ?number,\n      +tintColor?: ?number,\n      +cancelButtonTintColor?: ?number,\n      +excludedActivityTypes?: ?Array<string>,\n      +userInterfaceStyle?: ?string,\n    |},\n    failureCallback: (error: {|\n      +domain: string,\n      +code: string,\n      +userInfo?: ?Object,\n      +message: string,\n    |}) => void,\n    successCallback: (completed: boolean, activityType: ?string) => void,\n  ) => void;\n  +dismissActionSheet?: () => void;\n}\n\nexport default (TurboModuleRegistry.get<Spec>('ActionSheetManager'): ?Spec);\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\nimport type {TurboModule} from '../../../../Libraries/TurboModule/RCTExport';\n\nimport shouldUseTurboAnimatedModule from '../../../../Libraries/Animated/shouldUseTurboAnimatedModule';\nimport * as TurboModuleRegistry from '../../../../Libraries/TurboModule/TurboModuleRegistry';\n\ntype EndResult = {finished: boolean, value?: number, ...};\ntype EndCallback = (result: EndResult) => void;\ntype SaveValueCallback = (value: number) => void;\n\nexport type EventMapping = {|\n  nativeEventPath: Array<string>,\n  animatedValueTag: ?number,\n|};\n\n// The config has different keys depending on the type of the Node\n// TODO(T54896888): Make these types strict\nexport type AnimatedNodeConfig = Object;\nexport type AnimatingNodeConfig = Object;\n\nexport interface Spec extends TurboModule {\n  +startOperationBatch: () => void;\n  +finishOperationBatch: () => void;\n  +createAnimatedNode: (tag: number, config: AnimatedNodeConfig) => void;\n  +updateAnimatedNodeConfig?: (tag: number, config: AnimatedNodeConfig) => void;\n  +getValue: (tag: number, saveValueCallback: SaveValueCallback) => void;\n  +startListeningToAnimatedNodeValue: (tag: number) => void;\n  +stopListeningToAnimatedNodeValue: (tag: number) => void;\n  +connectAnimatedNodes: (parentTag: number, childTag: number) => void;\n  +disconnectAnimatedNodes: (parentTag: number, childTag: number) => void;\n  +startAnimatingNode: (\n    animationId: number,\n    nodeTag: number,\n    config: AnimatingNodeConfig,\n    endCallback: EndCallback,\n  ) => void;\n  +stopAnimation: (animationId: number) => void;\n  +setAnimatedNodeValue: (nodeTag: number, value: number) => void;\n  +setAnimatedNodeOffset: (nodeTag: number, offset: number) => void;\n  +flattenAnimatedNodeOffset: (nodeTag: number) => void;\n  +extractAnimatedNodeOffset: (nodeTag: number) => void;\n  +connectAnimatedNodeToView: (nodeTag: number, viewTag: number) => void;\n  +disconnectAnimatedNodeFromView: (nodeTag: number, viewTag: number) => void;\n  +restoreDefaultValues: (nodeTag: number) => void;\n  +dropAnimatedNode: (tag: number) => void;\n  +addAnimatedEventToView: (\n    viewTag: number,\n    eventName: string,\n    eventMapping: EventMapping,\n  ) => void;\n  +removeAnimatedEventFromView: (\n    viewTag: number,\n    eventName: string,\n    animatedNodeTag: number,\n  ) => void;\n\n  // Events\n  +addListener: (eventName: string) => void;\n  +removeListeners: (count: number) => void;\n\n  // All of the above in a batched mode\n  +queueAndExecuteBatchedOperations?: (operationsAndArgs: Array<any>) => void;\n}\n\nconst NativeModule: ?Spec = !shouldUseTurboAnimatedModule()\n  ? TurboModuleRegistry.get<Spec>('NativeAnimatedModule')\n  : null;\nexport default NativeModule;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\nimport type {TurboModule} from '../../../../Libraries/TurboModule/RCTExport';\n\nimport shouldUseTurboAnimatedModule from '../../../../Libraries/Animated/shouldUseTurboAnimatedModule';\nimport * as TurboModuleRegistry from '../../../../Libraries/TurboModule/TurboModuleRegistry';\n\ntype EndResult = {finished: boolean, value?: number, ...};\ntype EndCallback = (result: EndResult) => void;\ntype SaveValueCallback = (value: number) => void;\n\nexport type EventMapping = {|\n  nativeEventPath: Array<string>,\n  animatedValueTag: ?number,\n|};\n\n// The config has different keys depending on the type of the Node\n// TODO(T54896888): Make these types strict\nexport type AnimatedNodeConfig = Object;\nexport type AnimatingNodeConfig = Object;\n\nexport interface Spec extends TurboModule {\n  +startOperationBatch: () => void;\n  +finishOperationBatch: () => void;\n  +createAnimatedNode: (tag: number, config: AnimatedNodeConfig) => void;\n  +updateAnimatedNodeConfig?: (tag: number, config: AnimatedNodeConfig) => void;\n  +getValue: (tag: number, saveValueCallback: SaveValueCallback) => void;\n  +startListeningToAnimatedNodeValue: (tag: number) => void;\n  +stopListeningToAnimatedNodeValue: (tag: number) => void;\n  +connectAnimatedNodes: (parentTag: number, childTag: number) => void;\n  +disconnectAnimatedNodes: (parentTag: number, childTag: number) => void;\n  +startAnimatingNode: (\n    animationId: number,\n    nodeTag: number,\n    config: AnimatingNodeConfig,\n    endCallback: EndCallback,\n  ) => void;\n  +stopAnimation: (animationId: number) => void;\n  +setAnimatedNodeValue: (nodeTag: number, value: number) => void;\n  +setAnimatedNodeOffset: (nodeTag: number, offset: number) => void;\n  +flattenAnimatedNodeOffset: (nodeTag: number) => void;\n  +extractAnimatedNodeOffset: (nodeTag: number) => void;\n  +connectAnimatedNodeToView: (nodeTag: number, viewTag: number) => void;\n  +disconnectAnimatedNodeFromView: (nodeTag: number, viewTag: number) => void;\n  +restoreDefaultValues: (nodeTag: number) => void;\n  +dropAnimatedNode: (tag: number) => void;\n  +addAnimatedEventToView: (\n    viewTag: number,\n    eventName: string,\n    eventMapping: EventMapping,\n  ) => void;\n  +removeAnimatedEventFromView: (\n    viewTag: number,\n    eventName: string,\n    animatedNodeTag: number,\n  ) => void;\n\n  // Events\n  +addListener: (eventName: string) => void;\n  +removeListeners: (count: number) => void;\n\n  // All of the above in a batched mode\n  +queueAndExecuteBatchedOperations?: (operationsAndArgs: Array<any>) => void;\n}\n\nconst NativeModule: ?Spec = shouldUseTurboAnimatedModule()\n  ? TurboModuleRegistry.get<Spec>('NativeAnimatedTurboModule')\n  : null;\n\nexport default NativeModule;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\nimport type {TurboModule} from '../../../../Libraries/TurboModule/RCTExport';\n\nimport * as TurboModuleRegistry from '../../../../Libraries/TurboModule/TurboModuleRegistry';\n\nexport type AppStateConstants = {|\n  initialAppState: string,\n|};\n\nexport type AppState = {|app_state: string|};\n\nexport interface Spec extends TurboModule {\n  +getConstants: () => AppStateConstants;\n  +getCurrentAppState: (\n    success: (appState: AppState) => void,\n    error: (error: Object) => void,\n  ) => void;\n\n  // Events\n  +addListener: (eventName: string) => void;\n  +removeListeners: (count: number) => void;\n}\n\nexport default (TurboModuleRegistry.getEnforcing<Spec>('AppState'): Spec);\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nimport type {TurboModule} from '../../../../Libraries/TurboModule/RCTExport';\n\nimport * as TurboModuleRegistry from '../../../../Libraries/TurboModule/TurboModuleRegistry';\n\nexport type ColorSchemeName = 'light' | 'dark';\n\nexport type AppearancePreferences = {|\n  // TODO: (hramos) T52919652 Use ?ColorSchemeName once codegen supports union\n  // types.\n  /* 'light' | 'dark' */\n  colorScheme?: ?string,\n|};\n\nexport interface Spec extends TurboModule {\n  // TODO: (hramos) T52919652 Use ?ColorSchemeName once codegen supports union\n  // types.\n  /* 'light' | 'dark' */\n  +getColorScheme: () => ?string;\n  +setColorScheme?: (colorScheme: string) => void;\n\n  // RCTEventEmitter\n  +addListener: (eventName: string) => void;\n  +removeListeners: (count: number) => void;\n}\n\nexport default (TurboModuleRegistry.get<Spec>('Appearance'): ?Spec);\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\nimport type {TurboModule} from '../../../../Libraries/TurboModule/RCTExport';\n\nimport * as TurboModuleRegistry from '../../../../Libraries/TurboModule/TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n  +getConstants: () => {|BLOB_URI_SCHEME: ?string, BLOB_URI_HOST: ?string|};\n  +addNetworkingHandler: () => void;\n  +addWebSocketHandler: (id: number) => void;\n  +removeWebSocketHandler: (id: number) => void;\n  +sendOverSocket: (blob: Object, socketID: number) => void;\n  +createFromParts: (parts: Array<Object>, withId: string) => void;\n  +release: (blobId: string) => void;\n}\n\nconst NativeModule = TurboModuleRegistry.get<Spec>('BlobModule');\n\nlet constants = null;\nlet NativeBlobModule = null;\n\nif (NativeModule != null) {\n  NativeBlobModule = {\n    getConstants(): {|BLOB_URI_SCHEME: ?string, BLOB_URI_HOST: ?string|} {\n      if (constants == null) {\n        constants = NativeModule.getConstants();\n      }\n      return constants;\n    },\n    addNetworkingHandler(): void {\n      NativeModule.addNetworkingHandler();\n    },\n    addWebSocketHandler(id: number): void {\n      NativeModule.addWebSocketHandler(id);\n    },\n    removeWebSocketHandler(id: number): void {\n      NativeModule.removeWebSocketHandler(id);\n    },\n    sendOverSocket(blob: Object, socketID: number): void {\n      NativeModule.sendOverSocket(blob, socketID);\n    },\n    createFromParts(parts: Array<Object>, withId: string): void {\n      NativeModule.createFromParts(parts, withId);\n    },\n    release(blobId: string): void {\n      NativeModule.release(blobId);\n    },\n  };\n}\n\nexport default (NativeBlobModule: ?Spec);\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\nimport type {TurboModule} from '../../../../Libraries/TurboModule/RCTExport';\n\nimport * as TurboModuleRegistry from '../../../../Libraries/TurboModule/TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n  +startReportAProblemFlow: () => void;\n  +setExtraData: (extraData: Object, extraFiles: Object) => void;\n}\n\nexport default (TurboModuleRegistry.get<Spec>('BugReporting'): ?Spec);\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nimport type {TurboModule} from '../../../../Libraries/TurboModule/RCTExport';\n\nimport * as TurboModuleRegistry from '../../../../Libraries/TurboModule/TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n  +getConstants: () => {||};\n  +getString: () => Promise<string>;\n  +setString: (content: string) => void;\n}\n\nexport default (TurboModuleRegistry.getEnforcing<Spec>('Clipboard'): Spec);\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nimport type {TurboModule} from '../../../../Libraries/TurboModule/RCTExport';\n\nimport * as TurboModuleRegistry from '../../../../Libraries/TurboModule/TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n  +reload: () => void;\n  +reloadWithReason?: (reason: string) => void;\n  +onFastRefresh?: () => void;\n  +setHotLoadingEnabled: (isHotLoadingEnabled: boolean) => void;\n  +setIsDebuggingRemotely: (isDebuggingRemotelyEnabled: boolean) => void;\n  +setProfilingEnabled: (isProfilingEnabled: boolean) => void;\n  +toggleElementInspector: () => void;\n  +addMenuItem: (title: string) => void;\n\n  // Events\n  +addListener: (eventName: string) => void;\n  +removeListeners: (count: number) => void;\n\n  // iOS only.\n  +setIsShakeToShowDevMenuEnabled: (enabled: boolean) => void;\n}\n\nexport default (TurboModuleRegistry.getEnforcing<Spec>('DevSettings'): Spec);\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nimport type {TurboModule} from '../../../../Libraries/TurboModule/RCTExport';\n\nimport * as TurboModuleRegistry from '../../../../Libraries/TurboModule/TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n  +invokeDefaultBackPressHandler: () => void;\n}\n\nexport default (TurboModuleRegistry.get<Spec>('DeviceEventManager'): ?Spec);\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nimport type {TurboModule} from '../../../../Libraries/TurboModule/RCTExport';\n\nimport * as TurboModuleRegistry from '../../../../Libraries/TurboModule/TurboModuleRegistry';\n\nexport type DisplayMetricsAndroid = {|\n  width: number,\n  height: number,\n  scale: number,\n  fontScale: number,\n  densityDpi: number,\n|};\n\nexport type DisplayMetrics = {|\n  width: number,\n  height: number,\n  scale: number,\n  fontScale: number,\n|};\n\nexport type DimensionsPayload = {|\n  window?: DisplayMetrics,\n  screen?: DisplayMetrics,\n  windowPhysicalPixels?: DisplayMetricsAndroid,\n  screenPhysicalPixels?: DisplayMetricsAndroid,\n|};\n\nexport type DeviceInfoConstants = {|\n  +Dimensions: DimensionsPayload,\n  +isIPhoneX_deprecated?: boolean,\n|};\n\nexport interface Spec extends TurboModule {\n  +getConstants: () => DeviceInfoConstants;\n}\n\nconst NativeModule: Spec = TurboModuleRegistry.getEnforcing<Spec>('DeviceInfo');\nlet constants: ?DeviceInfoConstants = null;\n\nconst NativeDeviceInfo = {\n  getConstants(): DeviceInfoConstants {\n    if (constants == null) {\n      constants = NativeModule.getConstants();\n    }\n    return constants;\n  },\n};\n\nexport default NativeDeviceInfo;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nimport type {TurboModule} from '../../../../Libraries/TurboModule/RCTExport';\n\nimport * as TurboModuleRegistry from '../../../../Libraries/TurboModule/TurboModuleRegistry';\n\n/* 'buttonClicked' | 'dismissed' */\ntype DialogAction = string;\n/*\n  buttonPositive = -1,\n  buttonNegative = -2,\n  buttonNeutral = -3\n*/\ntype DialogButtonKey = number;\nexport type DialogOptions = {|\n  title?: string,\n  message?: string,\n  buttonPositive?: string,\n  buttonNegative?: string,\n  buttonNeutral?: string,\n  items?: Array<string>,\n  cancelable?: boolean,\n|};\n\nexport interface Spec extends TurboModule {\n  +getConstants: () => {|\n    +buttonClicked: DialogAction,\n    +dismissed: DialogAction,\n    +buttonPositive: DialogButtonKey,\n    +buttonNegative: DialogButtonKey,\n    +buttonNeutral: DialogButtonKey,\n  |};\n  +showAlert: (\n    config: DialogOptions,\n    onError: (error: string) => void,\n    onAction: (action: DialogAction, buttonKey?: DialogButtonKey) => void,\n  ) => void;\n}\n\nexport default (TurboModuleRegistry.get<Spec>('DialogManagerAndroid'): ?Spec);\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nimport type {TurboModule} from '../../../../Libraries/TurboModule/RCTExport';\n\nimport * as TurboModuleRegistry from '../../../../Libraries/TurboModule/TurboModuleRegistry';\n\nconst Platform = require('../../../../Libraries/Utilities/Platform');\n\nexport type StackFrame = {|\n  column: ?number,\n  file: ?string,\n  lineNumber: ?number,\n  methodName: string,\n  collapse?: boolean,\n|};\nexport type ExceptionData = {\n  message: string,\n  originalMessage: ?string,\n  name: ?string,\n  componentStack: ?string,\n  stack: Array<StackFrame>,\n  id: number,\n  isFatal: boolean,\n  // flowlint-next-line unclear-type:off\n  extraData?: Object,\n  ...\n};\nexport interface Spec extends TurboModule {\n  // Deprecated: Use `reportException`\n  +reportFatalException: (\n    message: string,\n    stack: Array<StackFrame>,\n    exceptionId: number,\n  ) => void;\n  // Deprecated: Use `reportException`\n  +reportSoftException: (\n    message: string,\n    stack: Array<StackFrame>,\n    exceptionId: number,\n  ) => void;\n  +reportException?: (data: ExceptionData) => void;\n  +updateExceptionMessage: (\n    message: string,\n    stack: Array<StackFrame>,\n    exceptionId: number,\n  ) => void;\n  // TODO(T53311281): This is a noop on iOS now. Implement it.\n  +dismissRedbox?: () => void;\n}\n\nconst NativeModule =\n  TurboModuleRegistry.getEnforcing<Spec>('ExceptionsManager');\n\nconst ExceptionsManager = {\n  reportFatalException(\n    message: string,\n    stack: Array<StackFrame>,\n    exceptionId: number,\n  ) {\n    NativeModule.reportFatalException(message, stack, exceptionId);\n  },\n  reportSoftException(\n    message: string,\n    stack: Array<StackFrame>,\n    exceptionId: number,\n  ) {\n    NativeModule.reportSoftException(message, stack, exceptionId);\n  },\n  updateExceptionMessage(\n    message: string,\n    stack: Array<StackFrame>,\n    exceptionId: number,\n  ) {\n    NativeModule.updateExceptionMessage(message, stack, exceptionId);\n  },\n  dismissRedbox(): void {\n    if (Platform.OS !== 'ios' && NativeModule.dismissRedbox) {\n      // TODO(T53311281): This is a noop on iOS now. Implement it.\n      NativeModule.dismissRedbox();\n    }\n  },\n  reportException(data: ExceptionData): void {\n    if (NativeModule.reportException) {\n      NativeModule.reportException(data);\n      return;\n    }\n    if (data.isFatal) {\n      ExceptionsManager.reportFatalException(data.message, data.stack, data.id);\n    } else {\n      ExceptionsManager.reportSoftException(data.message, data.stack, data.id);\n    }\n  },\n};\n\nexport default ExceptionsManager;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\nimport type {TurboModule} from '../../../../Libraries/TurboModule/RCTExport';\n\nimport * as TurboModuleRegistry from '../../../../Libraries/TurboModule/TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n  +readAsDataURL: (data: Object) => Promise<string>;\n  +readAsText: (data: Object, encoding: string) => Promise<string>;\n}\n\nexport default (TurboModuleRegistry.getEnforcing<Spec>(\n  'FileReaderModule',\n): Spec);\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict\n */\n\nimport type {TurboModule} from '../../../../Libraries/TurboModule/RCTExport';\n\nimport * as TurboModuleRegistry from '../../../../Libraries/TurboModule/TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n  +setGlobalOptions: (options: {|+debug?: ?boolean|}) => void;\n  +setContext: (context: string) => void;\n  +beginScroll: () => void;\n  +endScroll: () => void;\n}\n\nexport default (TurboModuleRegistry.get<Spec>('FrameRateLogger'): ?Spec);\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nimport type {TurboModule} from '../../../../Libraries/TurboModule/RCTExport';\n\nimport * as TurboModuleRegistry from '../../../../Libraries/TurboModule/TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n  +notifyTaskFinished: (taskId: number) => void;\n  +notifyTaskRetry: (taskId: number) => Promise<boolean>;\n}\n\nexport default (TurboModuleRegistry.get<Spec>('HeadlessJsTaskSupport'): ?Spec);\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nimport type {TurboModule} from '../../../../Libraries/TurboModule/RCTExport';\n\nimport * as TurboModuleRegistry from '../../../../Libraries/TurboModule/TurboModuleRegistry';\n\nexport type I18nManagerConstants = {|\n  doLeftAndRightSwapInRTL: boolean,\n  isRTL: boolean,\n  localeIdentifier?: ?string,\n|};\n\nexport interface Spec extends TurboModule {\n  +getConstants: () => I18nManagerConstants;\n  allowRTL: (allowRTL: boolean) => void;\n  forceRTL: (forceRTL: boolean) => void;\n  swapLeftAndRightInRTL: (flipStyles: boolean) => void;\n}\n\nexport default (TurboModuleRegistry.get<Spec>('I18nManager'): ?Spec);\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\nimport type {TurboModule} from '../../../../Libraries/TurboModule/RCTExport';\n\nimport * as TurboModuleRegistry from '../../../../Libraries/TurboModule/TurboModuleRegistry';\n\nexport type ImageSize = {\n  width: number,\n  height: number,\n  ...\n};\n\nexport interface Spec extends TurboModule {\n  +abortRequest: (requestId: number) => void;\n  +getConstants: () => {||};\n  +getSize: (uri: string) => Promise<ImageSize>;\n  +getSizeWithHeaders: (uri: string, headers: Object) => Promise<ImageSize>;\n  +prefetchImage: (uri: string, requestId: number) => Promise<boolean>;\n  +queryCache: (uris: Array<string>) => Promise<Object>;\n}\n\nexport default (TurboModuleRegistry.getEnforcing<Spec>('ImageLoader'): Spec);\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nimport type {TurboModule} from '../../../../Libraries/TurboModule/RCTExport';\n\nimport * as TurboModuleRegistry from '../../../../Libraries/TurboModule/TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n  +getInitialURL: () => Promise<string>;\n  +canOpenURL: (url: string) => Promise<boolean>;\n  +openURL: (url: string) => Promise<void>;\n  +openSettings: () => Promise<void>;\n  +sendIntent: (\n    action: string,\n    extras: ?Array<{\n      key: string,\n      value: string | number | boolean, // TODO(T67672788): Union types are not type safe\n      ...\n    }>,\n  ) => Promise<void>;\n}\n\nexport default (TurboModuleRegistry.get<Spec>('IntentAndroid'): ?Spec);\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nimport type {TurboModule} from '../../../../Libraries/TurboModule/RCTExport';\n\nimport * as TurboModuleRegistry from '../../../../Libraries/TurboModule/TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n  +captureComplete: (path: string, error: ?string) => void;\n}\n\nexport default (TurboModuleRegistry.get<Spec>('JSCHeapCapture'): ?Spec);\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nimport type {TurboModule} from '../../../../Libraries/TurboModule/RCTExport';\n\nimport * as TurboModuleRegistry from '../../../../Libraries/TurboModule/TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n  +operationComplete: (token: number, result: ?string, error: ?string) => void;\n}\n\nexport default (TurboModuleRegistry.get<Spec>('JSCSamplingProfiler'): ?Spec);\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nimport type {TurboModule} from '../../../../Libraries/TurboModule/RCTExport';\n\nimport * as TurboModuleRegistry from '../../../../Libraries/TurboModule/TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n  +addListener: (eventName: string) => void;\n  +removeListeners: (count: number) => void;\n}\n\nexport default (TurboModuleRegistry.get<Spec>('KeyboardObserver'): ?Spec);\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nimport type {TurboModule} from '../../../../Libraries/TurboModule/RCTExport';\n\nimport * as TurboModuleRegistry from '../../../../Libraries/TurboModule/TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n  // Common interface\n  +getInitialURL: () => Promise<string>;\n  +canOpenURL: (url: string) => Promise<boolean>;\n  +openURL: (url: string) => Promise<void>;\n  +openSettings: () => Promise<void>;\n\n  // Events\n  +addListener: (eventName: string) => void;\n  +removeListeners: (count: number) => void;\n}\n\nexport default (TurboModuleRegistry.get<Spec>('LinkingManager'): ?Spec);\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nimport type {TurboModule} from '../../../../Libraries/TurboModule/RCTExport';\n\nimport * as TurboModuleRegistry from '../../../../Libraries/TurboModule/TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n  // RCTEventEmitter\n  +addListener: (eventName: string) => void;\n  +removeListeners: (count: number) => void;\n}\n\nexport default (TurboModuleRegistry.get<Spec>('ModalManager'): ?Spec);\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\nimport type {TurboModule} from '../../../../Libraries/TurboModule/RCTExport';\n\nimport * as TurboModuleRegistry from '../../../../Libraries/TurboModule/TurboModuleRegistry';\n\ntype Header = [string, string];\n\nexport interface Spec extends TurboModule {\n  +sendRequest: (\n    method: string,\n    url: string,\n    requestId: number,\n    headers: Array<Header>,\n    data: Object,\n    responseType: string,\n    useIncrementalUpdates: boolean,\n    timeout: number,\n    withCredentials: boolean,\n  ) => void;\n  +abortRequest: (requestId: number) => void;\n  +clearCookies: (callback: (result: boolean) => void) => void;\n\n  // RCTEventEmitter\n  +addListener: (eventName: string) => void;\n  +removeListeners: (count: number) => void;\n}\n\nexport default (TurboModuleRegistry.getEnforcing<Spec>('Networking'): Spec);\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict\n */\n\nimport type {TurboModule} from '../../../../Libraries/TurboModule/RCTExport';\n\nimport * as TurboModuleRegistry from '../../../../Libraries/TurboModule/TurboModuleRegistry';\n\n// TODO: Use proper enum types.\nexport type PermissionStatus = string;\nexport type PermissionType = string;\n/*\nexport type PermissionStatus = 'granted' | 'denied' | 'never_ask_again';\nexport type PermissionType =\n  | 'android.permission.READ_CALENDAR'\n  | 'android.permission.WRITE_CALENDAR'\n  | 'android.permission.CAMERA'\n  | 'android.permission.READ_CONTACTS'\n  | 'android.permission.WRITE_CONTACTS'\n  | 'android.permission.GET_ACCOUNTS'\n  | 'android.permission.ACCESS_BACKGROUND_LOCATION'\n  | 'android.permission.ACCESS_FINE_LOCATION'\n  | 'android.permission.ACCESS_COARSE_LOCATION'\n  | 'android.permission.RECORD_AUDIO'\n  | 'android.permission.READ_PHONE_STATE'\n  | 'android.permission.CALL_PHONE'\n  | 'android.permission.READ_CALL_LOG'\n  | 'android.permission.WRITE_CALL_LOG'\n  | 'com.android.voicemail.permission.ADD_VOICEMAIL'\n  | 'com.android.voicemail.permission.READ_VOICEMAIL'\n  | 'com.android.voicemail.permission.WRITE_VOICEMAIL'\n  | 'android.permission.USE_SIP'\n  | 'android.permission.PROCESS_OUTGOING_CALLS'\n  | 'android.permission.BODY_SENSORS'\n  | 'android.permission.BODY_SENSORS_BACKGROUND'\n  | 'android.permission.SEND_SMS'\n  | 'android.permission.RECEIVE_SMS'\n  | 'android.permission.READ_SMS'\n  | 'android.permission.RECEIVE_WAP_PUSH'\n  | 'android.permission.RECEIVE_MMS'\n  | 'android.permission.READ_EXTERNAL_STORAGE'\n  | 'android.permission.READ_MEDIA_IMAGES',\n  | 'android.permission.READ_MEDIA_VIDEO',\n  | 'android.permission.READ_MEDIA_AUDIO',\n  | 'android.permission.READ_MEDIA_VISUAL_USER_SELECTED'\n  | 'android.permission.WRITE_EXTERNAL_STORAGE'\n  | 'android.permission.BLUETOOTH_CONNECT'\n  | 'android.permission.BLUETOOTH_SCAN'\n  | 'android.permission.BLUETOOTH_ADVERTISE'\n  | 'android.permission.ACCESS_MEDIA_LOCATION'\n  | 'android.permission.ACCEPT_HANDOVER'\n  | 'android.permission.ACTIVITY_RECOGNITION'\n  | 'android.permission.ANSWER_PHONE_CALLS'\n  | 'android.permission.READ_PHONE_NUMBERS'\n  | 'android.permission.UWB_RANGING'\n  | 'android.permission.POST_NOTIFICATIONS'\n  | 'android.permission.NEARBY_WIFI_DEVICES';\n*/\n\nexport interface Spec extends TurboModule {\n  +checkPermission: (permission: PermissionType) => Promise<boolean>;\n  +requestPermission: (permission: PermissionType) => Promise<PermissionStatus>;\n  +shouldShowRequestPermissionRationale: (\n    permission: string,\n  ) => Promise<boolean>;\n  +requestMultiplePermissions: (\n    permissions: Array<PermissionType>,\n  ) => Promise<{[permission: PermissionType]: PermissionStatus, ...}>;\n}\n\nexport default (TurboModuleRegistry.get<Spec>('PermissionsAndroid'): ?Spec);\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nimport type {TurboModule} from '../../../../Libraries/TurboModule/RCTExport';\n\nimport * as TurboModuleRegistry from '../../../../Libraries/TurboModule/TurboModuleRegistry';\n\nexport type ReactNativeVersionAndroid = {|\n  major: number,\n  minor: number,\n  patch: number,\n  prerelease: ?number,\n|};\n\nexport type PlatformConstantsAndroid = {|\n  isTesting: boolean,\n  isDisableAnimations?: boolean,\n  reactNativeVersion: ReactNativeVersionAndroid,\n  Version: number,\n  Release: string,\n  Serial: string,\n  Fingerprint: string,\n  Model: string,\n  ServerHost?: string,\n  uiMode: string,\n  Brand: string,\n  Manufacturer: string,\n|};\n\nexport interface Spec extends TurboModule {\n  +getConstants: () => PlatformConstantsAndroid;\n  +getAndroidID: () => string;\n}\n\nexport default (TurboModuleRegistry.getEnforcing<Spec>(\n  'PlatformConstants',\n): Spec);\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\nimport type {TurboModule} from '../../../../Libraries/TurboModule/RCTExport';\n\nimport * as TurboModuleRegistry from '../../../../Libraries/TurboModule/TurboModuleRegistry';\n\ntype Permissions = {|\n  alert: boolean,\n  badge: boolean,\n  sound: boolean,\n|};\n\ntype Notification = {|\n  +alertTitle?: ?string,\n  +alertBody?: ?string,\n  +userInfo?: ?Object,\n  /**\n   * Identifier for the notification category. See the [Apple documentation](https://developer.apple.com/documentation/usernotifications/declaring_your_actionable_notification_types)\n   * for more details.\n   */\n  +category?: ?string,\n  /**\n   * Actual type: string | number\n   *\n   * Schedule notifications using EITHER `fireDate` or `fireIntervalSeconds`.\n   * If both are specified, `fireDate` takes precedence.\n   * If you use `presentLocalNotification`, both will be ignored\n   * and the notification will be shown immediately.\n   */\n  +fireDate?: ?number,\n  /**\n   * Seconds from now to display the notification.\n   *\n   * Schedule notifications using EITHER `fireDate` or `fireIntervalSeconds`.\n   * If both are specified, `fireDate` takes precedence.\n   * If you use `presentLocalNotification`, both will be ignored\n   * and the notification will be shown immediately.\n   */\n  +fireIntervalSeconds?: ?number,\n  /** Badge count to display on the app icon. */\n  +applicationIconBadgeNumber?: ?number,\n  /** Whether to silence the notification sound. */\n  +isSilent?: ?boolean,\n  /**\n   * Custom notification sound. Can only be set when creating notifications.\n   * This will be null for notifications retrieved via\n   * getScheduledLocalNotifications or getDeliveredNotifications.\n   */\n  +soundName?: ?string,\n  /** DEPRECATED. This was used for iOS's legacy UILocalNotification. */\n  +alertAction?: ?string,\n  /** DEPRECATED. Use `fireDate` or `fireIntervalSeconds` instead. */\n  +repeatInterval?: ?string,\n|};\n\nexport interface Spec extends TurboModule {\n  +getConstants: () => {||};\n  +onFinishRemoteNotification: (\n    notificationId: string,\n    /**\n     * Type:\n     *  'UIBackgroundFetchResultNewData' |\n     *  'UIBackgroundFetchResultNoData' |\n     *  'UIBackgroundFetchResultFailed'\n     */\n    fetchResult: string,\n  ) => void;\n  +setApplicationIconBadgeNumber: (num: number) => void;\n  +getApplicationIconBadgeNumber: (callback: (num: number) => void) => void;\n  +requestPermissions: (permission: {|\n    +alert: boolean,\n    +badge: boolean,\n    +sound: boolean,\n  |}) => Promise<Permissions>;\n  +abandonPermissions: () => void;\n  +checkPermissions: (callback: (permissions: Permissions) => void) => void;\n  +presentLocalNotification: (notification: Notification) => void;\n  +scheduleLocalNotification: (notification: Notification) => void;\n  +cancelAllLocalNotifications: () => void;\n  +cancelLocalNotifications: (userInfo: Object) => void;\n  +getInitialNotification: () => Promise<?Notification>;\n  +getScheduledLocalNotifications: (\n    callback: (notification: Notification) => void,\n  ) => void;\n  +removeAllDeliveredNotifications: () => void;\n  +removeDeliveredNotifications: (identifiers: Array<string>) => void;\n  +getDeliveredNotifications: (\n    callback: (notification: Array<Notification>) => void,\n  ) => void;\n  +getAuthorizationStatus: (\n    callback: (authorizationStatus: number) => void,\n  ) => void;\n  +addListener: (eventType: string) => void;\n  +removeListeners: (count: number) => void;\n}\n\nexport default (TurboModuleRegistry.get<Spec>(\n  'PushNotificationManager',\n): ?Spec);\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\nimport type {TurboModule} from '../../../../Libraries/TurboModule/RCTExport';\n\nimport * as TurboModuleRegistry from '../../../../Libraries/TurboModule/TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n  +setExtraData: (extraData: Object, forIdentifier: string) => void;\n  +dismiss: () => void;\n}\n\nexport default (TurboModuleRegistry.get<Spec>('RedBox'): ?Spec);\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nimport type {TurboModule} from '../../../../Libraries/TurboModule/RCTExport';\n\nimport * as TurboModuleRegistry from '../../../../Libraries/TurboModule/TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n  +fetchSegment: (\n    segmentId: number,\n    options: Object, // flowlint-line unclear-type: off\n    callback: (error: ?Object) => void, // flowlint-line unclear-type: off\n  ) => void;\n  +getSegment?: (\n    segmentId: number,\n    options: Object, // flowlint-line unclear-type: off\n    callback: (error: ?Object, path: ?string) => void, // flowlint-line unclear-type: off\n  ) => void;\n}\n\nexport default (TurboModuleRegistry.getEnforcing<Spec>('SegmentFetcher'): Spec);\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nimport type {TurboModule} from '../../../../Libraries/TurboModule/RCTExport';\n\nimport * as TurboModuleRegistry from '../../../../Libraries/TurboModule/TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n  +getConstants: () => {||};\n  +share: (\n    content: {|title?: string, message?: string|},\n    dialogTitle?: string,\n  ) => Promise<{|action: string|}>;\n}\n\nexport default (TurboModuleRegistry.get<Spec>('ShareModule'): ?Spec);\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nimport type {TurboModule} from '../../../../Libraries/TurboModule/RCTExport';\n\nimport * as TurboModuleRegistry from '../../../../Libraries/TurboModule/TurboModuleRegistry';\n\n/**\n * Native Module used for playing sounds in native platform.\n */\nexport interface Spec extends TurboModule {\n  +playTouchSound: () => void;\n}\n\nexport default (TurboModuleRegistry.get<Spec>('SoundManager'): ?Spec);\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nimport type {TurboModule} from '../../../../Libraries/TurboModule/RCTExport';\n\nimport * as TurboModuleRegistry from '../../../../Libraries/TurboModule/TurboModuleRegistry';\n\nexport type SourceCodeConstants = {|\n  scriptURL: string,\n|};\n\nexport interface Spec extends TurboModule {\n  +getConstants: () => SourceCodeConstants;\n}\n\nconst NativeModule = TurboModuleRegistry.getEnforcing<Spec>('SourceCode');\nlet constants = null;\n\nconst NativeSourceCode = {\n  getConstants(): SourceCodeConstants {\n    if (constants == null) {\n      constants = NativeModule.getConstants();\n    }\n\n    return constants;\n  },\n};\n\nexport default NativeSourceCode;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nimport type {TurboModule} from '../../../../Libraries/TurboModule/RCTExport';\n\nimport * as TurboModuleRegistry from '../../../../Libraries/TurboModule/TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n  +getConstants: () => {|\n    +HEIGHT: number,\n    +DEFAULT_BACKGROUND_COLOR: number,\n  |};\n  +setColor: (color: number, animated: boolean) => void;\n  +setTranslucent: (translucent: boolean) => void;\n\n  /**\n   *  - statusBarStyles can be:\n   *    - 'default'\n   *    - 'dark-content'\n   */\n  +setStyle: (statusBarStyle?: ?string) => void;\n  +setHidden: (hidden: boolean) => void;\n}\n\nconst NativeModule = TurboModuleRegistry.getEnforcing<Spec>('StatusBarManager');\nlet constants = null;\n\nconst NativeStatusBarManager = {\n  getConstants(): {|\n    +HEIGHT: number,\n    +DEFAULT_BACKGROUND_COLOR?: number,\n  |} {\n    if (constants == null) {\n      constants = NativeModule.getConstants();\n    }\n    return constants;\n  },\n\n  setColor(color: number, animated: boolean): void {\n    NativeModule.setColor(color, animated);\n  },\n\n  setTranslucent(translucent: boolean): void {\n    NativeModule.setTranslucent(translucent);\n  },\n\n  /**\n   *  - statusBarStyles can be:\n   *    - 'default'\n   *    - 'dark-content'\n   */\n  setStyle(statusBarStyle?: ?string): void {\n    NativeModule.setStyle(statusBarStyle);\n  },\n\n  setHidden(hidden: boolean): void {\n    NativeModule.setHidden(hidden);\n  },\n};\n\nexport default NativeStatusBarManager;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nimport type {TurboModule} from '../../../../Libraries/TurboModule/RCTExport';\n\nimport * as TurboModuleRegistry from '../../../../Libraries/TurboModule/TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n  +getConstants: () => {|\n    +HEIGHT: number,\n    +DEFAULT_BACKGROUND_COLOR?: number,\n  |};\n\n  // TODO(T47754272) Can we remove this method?\n  +getHeight: (callback: (result: {|height: number|}) => void) => void;\n  +setNetworkActivityIndicatorVisible: (visible: boolean) => void;\n  +addListener: (eventType: string) => void;\n  +removeListeners: (count: number) => void;\n\n  /**\n   *  - statusBarStyles can be:\n   *    - 'default'\n   *    - 'dark-content'\n   *    - 'light-content'\n   */\n  +setStyle: (statusBarStyle?: ?string, animated: boolean) => void;\n  /**\n   *  - withAnimation can be: 'none' | 'fade' | 'slide'\n   */\n  +setHidden: (hidden: boolean, withAnimation: string) => void;\n}\n\nconst NativeModule = TurboModuleRegistry.getEnforcing<Spec>('StatusBarManager');\nlet constants = null;\n\nconst NativeStatusBarManager = {\n  getConstants(): {|\n    +HEIGHT: number,\n    +DEFAULT_BACKGROUND_COLOR?: number,\n  |} {\n    if (constants == null) {\n      constants = NativeModule.getConstants();\n    }\n    return constants;\n  },\n\n  // TODO(T47754272) Can we remove this method?\n  getHeight(callback: (result: {|height: number|}) => void): void {\n    NativeModule.getHeight(callback);\n  },\n\n  setNetworkActivityIndicatorVisible(visible: boolean): void {\n    NativeModule.setNetworkActivityIndicatorVisible(visible);\n  },\n\n  addListener(eventType: string): void {\n    NativeModule.addListener(eventType);\n  },\n\n  removeListeners(count: number): void {\n    NativeModule.removeListeners(count);\n  },\n\n  /**\n   *  - statusBarStyles can be:\n   *    - 'default'\n   *    - 'dark-content'\n   *    - 'light-content'\n   */\n  setStyle(statusBarStyle?: ?string, animated: boolean): void {\n    NativeModule.setStyle(statusBarStyle, animated);\n  },\n\n  /**\n   *  - withAnimation can be: 'none' | 'fade' | 'slide'\n   */\n  setHidden(hidden: boolean, withAnimation: string): void {\n    NativeModule.setHidden(hidden, withAnimation);\n  },\n};\n\nexport default NativeStatusBarManager;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nimport type {TurboModule} from '../../../../Libraries/TurboModule/RCTExport';\n\nimport * as TurboModuleRegistry from '../../../../Libraries/TurboModule/TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n  +createTimer: (\n    callbackID: number,\n    duration: number,\n    jsSchedulingTime: number,\n    repeats: boolean,\n  ) => void;\n  +deleteTimer: (timerID: number) => void;\n  +setSendIdleEvents: (sendIdleEvents: boolean) => void;\n}\n\nexport default (TurboModuleRegistry.get<Spec>('Timing'): ?Spec);\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nimport type {TurboModule} from '../../../../Libraries/TurboModule/RCTExport';\n\nimport * as TurboModuleRegistry from '../../../../Libraries/TurboModule/TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n  +getConstants: () => {|\n    SHORT: number,\n    LONG: number,\n    TOP: number,\n    BOTTOM: number,\n    CENTER: number,\n  |};\n  +show: (message: string, duration: number) => void;\n  +showWithGravity: (\n    message: string,\n    duration: number,\n    gravity: number,\n  ) => void;\n  +showWithGravityAndOffset: (\n    message: string,\n    duration: number,\n    gravity: number,\n    xOffset: number,\n    yOffset: number,\n  ) => void;\n}\n\nexport default (TurboModuleRegistry.getEnforcing<Spec>('ToastAndroid'): Spec);\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\nimport type {RootTag} from '../../../../Libraries/TurboModule/RCTExport';\nimport type {TurboModule} from '../../../../Libraries/TurboModule/RCTExport';\n\nimport * as TurboModuleRegistry from '../../../../Libraries/TurboModule/TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n  +getConstants: () => Object;\n  +createView: (\n    reactTag: number,\n    viewName: string,\n    rootTag: RootTag,\n    props: Object,\n  ) => void;\n  +updateView: (reactTag: number, viewName: string, props: Object) => void;\n  +findSubviewIn: (\n    reactTag: number,\n    point: Array<number>,\n    callback: (\n      nativeViewTag: number,\n      left: number,\n      top: number,\n      width: number,\n      height: number,\n    ) => void,\n  ) => void;\n  +dispatchViewManagerCommand: (\n    reactTag: number,\n    commandID: number, // number || string\n    commandArgs: ?Array<any>,\n  ) => void;\n  +measure: (\n    reactTag: number,\n    callback: (\n      left: number,\n      top: number,\n      width: number,\n      height: number,\n      pageX: number,\n      pageY: number,\n    ) => void,\n  ) => void;\n  +measureInWindow: (\n    reactTag: number,\n    callback: (x: number, y: number, width: number, height: number) => void,\n  ) => void;\n  +viewIsDescendantOf: (\n    reactTag: number,\n    ancestorReactTag: number,\n    callback: (result: Array<boolean>) => void,\n  ) => void;\n  +measureLayout: (\n    reactTag: number,\n    ancestorReactTag: number,\n    errorCallback: (error: Object) => void,\n    callback: (\n      left: number,\n      top: number,\n      width: number,\n      height: number,\n    ) => void,\n  ) => void;\n  +measureLayoutRelativeToParent: (\n    reactTag: number,\n    errorCallback: (error: Object) => void,\n    callback: (\n      left: number,\n      top: number,\n      width: number,\n      height: number,\n    ) => void,\n  ) => void;\n  +setJSResponder: (reactTag: number, blockNativeResponder: boolean) => void;\n  +clearJSResponder: () => void;\n  +configureNextLayoutAnimation: (\n    config: Object,\n    callback: () => void, // check what is returned here\n    errorCallback: (error: Object) => void,\n  ) => void;\n  +setChildren: (containerTag: number, reactTags: Array<number>) => void;\n  +manageChildren: (\n    containerTag: number,\n    moveFromIndices: Array<number>,\n    moveToIndices: Array<number>,\n    addChildReactTags: Array<number>,\n    addAtIndices: Array<number>,\n    removeAtIndices: Array<number>,\n  ) => void;\n\n  // Android only\n  +getConstantsForViewManager?: (viewManagerName: string) => ?Object;\n  +getDefaultEventTypes?: () => Array<string>;\n  +setLayoutAnimationEnabledExperimental?: (enabled: boolean) => void;\n  +sendAccessibilityEvent?: (reactTag: number, eventType: number) => void;\n  +showPopupMenu?: (\n    reactTag: number,\n    items: Array<string>,\n    error: (error: Object) => void,\n    success: (event: string, selected?: number) => void,\n  ) => void;\n  +dismissPopupMenu?: () => void;\n\n  // ios only\n  +lazilyLoadView?: (name: string) => Object; // revisit return\n  +focus?: (reactTag: number) => void;\n  +blur?: (reactTag: number) => void;\n}\n\nexport default (TurboModuleRegistry.getEnforcing<Spec>('UIManager'): Spec);\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nimport type {TurboModule} from '../../../../Libraries/TurboModule/RCTExport';\n\nimport * as TurboModuleRegistry from '../../../../Libraries/TurboModule/TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n  +getConstants: () => {||};\n  +vibrate: (pattern: number) => void;\n\n  // Android only\n  +vibrateByPattern: (pattern: Array<number>, repeat: number) => void;\n  +cancel: () => void;\n}\n\nexport default (TurboModuleRegistry.getEnforcing<Spec>('Vibration'): Spec);\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\nimport type {TurboModule} from '../../../../Libraries/TurboModule/RCTExport';\n\nimport * as TurboModuleRegistry from '../../../../Libraries/TurboModule/TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n  +connect: (\n    url: string,\n    protocols: ?Array<string>,\n    options: {|headers?: Object|},\n    socketID: number,\n  ) => void;\n  +send: (message: string, forSocketID: number) => void;\n  +sendBinary: (base64String: string, forSocketID: number) => void;\n  +ping: (socketID: number) => void;\n  +close: (code: number, reason: string, socketID: number) => void;\n\n  // RCTEventEmitter\n  +addListener: (eventName: string) => void;\n  +removeListeners: (count: number) => void;\n}\n\nexport default (TurboModuleRegistry.getEnforcing<Spec>(\n  'WebSocketModule',\n): Spec);\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\n/**\n * The JSDoc comments in this file have been extracted from [DOMRect](https://developer.mozilla.org/en-US/docs/Web/API/DOMRect).\n * Content by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/DOMRect/contributors.txt),\n * licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).\n */\n\nimport DOMRectReadOnly, {type DOMRectLike} from './DOMRectReadOnly';\n\n// flowlint unsafe-getters-setters:off\n\n/**\n * A `DOMRect` describes the size and position of a rectangle.\n * The type of box represented by the `DOMRect` is specified by the method or property that returned it.\n *\n * This is a (mostly) spec-compliant version of `DOMRect` (https://developer.mozilla.org/en-US/docs/Web/API/DOMRect).\n */\nexport default class DOMRect extends DOMRectReadOnly {\n  /**\n   * The x coordinate of the `DOMRect`'s origin.\n   */\n  get x(): number {\n    return this.__getInternalX();\n  }\n\n  set x(x: ?number) {\n    this.__setInternalX(x);\n  }\n\n  /**\n   * The y coordinate of the `DOMRect`'s origin.\n   */\n  get y(): number {\n    return this.__getInternalY();\n  }\n\n  set y(y: ?number) {\n    this.__setInternalY(y);\n  }\n\n  /**\n   * The width of the `DOMRect`.\n   */\n  get width(): number {\n    return this.__getInternalWidth();\n  }\n\n  set width(width: ?number) {\n    this.__setInternalWidth(width);\n  }\n\n  /**\n   * The height of the `DOMRect`.\n   */\n  get height(): number {\n    return this.__getInternalHeight();\n  }\n\n  set height(height: ?number) {\n    this.__setInternalHeight(height);\n  }\n\n  /**\n   * Creates a new `DOMRect` object with a given location and dimensions.\n   */\n  static fromRect(rect?: ?DOMRectLike): DOMRect {\n    if (!rect) {\n      return new DOMRect();\n    }\n\n    return new DOMRect(rect.x, rect.y, rect.width, rect.height);\n  }\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\n/**\n * The JSDoc comments in this file have been extracted from [DOMRectReadOnly](https://developer.mozilla.org/en-US/docs/Web/API/DOMRectReadOnly).\n * Content by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/DOMRectReadOnly/contributors.txt),\n * licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).\n */\n\n// flowlint sketchy-null:off, unsafe-getters-setters:off\n\nexport interface DOMRectLike {\n  x?: ?number;\n  y?: ?number;\n  width?: ?number;\n  height?: ?number;\n}\n\nfunction castToNumber(value: mixed): number {\n  return value ? Number(value) : 0;\n}\n\n/**\n * The `DOMRectReadOnly` interface specifies the standard properties used by `DOMRect` to define a rectangle whose properties are immutable.\n *\n * This is a (mostly) spec-compliant version of `DOMRectReadOnly` (https://developer.mozilla.org/en-US/docs/Web/API/DOMRectReadOnly).\n */\nexport default class DOMRectReadOnly {\n  _x: number;\n  _y: number;\n  _width: number;\n  _height: number;\n\n  constructor(x: ?number, y: ?number, width: ?number, height: ?number) {\n    this.__setInternalX(x);\n    this.__setInternalY(y);\n    this.__setInternalWidth(width);\n    this.__setInternalHeight(height);\n  }\n\n  /**\n   * The x coordinate of the `DOMRectReadOnly`'s origin.\n   */\n  get x(): number {\n    return this._x;\n  }\n\n  /**\n   * The y coordinate of the `DOMRectReadOnly`'s origin.\n   */\n  get y(): number {\n    return this._y;\n  }\n\n  /**\n   * The width of the `DOMRectReadOnly`.\n   */\n  get width(): number {\n    return this._width;\n  }\n\n  /**\n   * The height of the `DOMRectReadOnly`.\n   */\n  get height(): number {\n    return this._height;\n  }\n\n  /**\n   * Returns the top coordinate value of the `DOMRect` (has the same value as `y`, or `y + height` if `height` is negative).\n   */\n  get top(): number {\n    const height = this._height;\n    const y = this._y;\n\n    if (height < 0) {\n      return y + height;\n    }\n\n    return y;\n  }\n\n  /**\n   * Returns the right coordinate value of the `DOMRect` (has the same value as ``x + width`, or `x` if `width` is negative).\n   */\n  get right(): number {\n    const width = this._width;\n    const x = this._x;\n\n    if (width < 0) {\n      return x;\n    }\n\n    return x + width;\n  }\n\n  /**\n   * Returns the bottom coordinate value of the `DOMRect` (has the same value as `y + height`, or `y` if `height` is negative).\n   */\n  get bottom(): number {\n    const height = this._height;\n    const y = this._y;\n\n    if (height < 0) {\n      return y;\n    }\n\n    return y + height;\n  }\n\n  /**\n   * Returns the left coordinate value of the `DOMRect` (has the same value as `x`, or `x + width` if `width` is negative).\n   */\n  get left(): number {\n    const width = this._width;\n    const x = this._x;\n\n    if (width < 0) {\n      return x + width;\n    }\n\n    return x;\n  }\n\n  toJSON(): {\n    x: number,\n    y: number,\n    width: number,\n    height: number,\n    top: number,\n    left: number,\n    bottom: number,\n    right: number,\n  } {\n    const {x, y, width, height, top, left, bottom, right} = this;\n    return {x, y, width, height, top, left, bottom, right};\n  }\n\n  /**\n   * Creates a new `DOMRectReadOnly` object with a given location and dimensions.\n   */\n  static fromRect(rect?: ?DOMRectLike): DOMRectReadOnly {\n    if (!rect) {\n      return new DOMRectReadOnly();\n    }\n\n    return new DOMRectReadOnly(rect.x, rect.y, rect.width, rect.height);\n  }\n\n  __getInternalX(): number {\n    return this._x;\n  }\n\n  __getInternalY(): number {\n    return this._y;\n  }\n\n  __getInternalWidth(): number {\n    return this._width;\n  }\n\n  __getInternalHeight(): number {\n    return this._height;\n  }\n\n  __setInternalX(x: ?number) {\n    this._x = castToNumber(x);\n  }\n\n  __setInternalY(y: ?number) {\n    this._y = castToNumber(y);\n  }\n\n  __setInternalWidth(width: ?number) {\n    this._width = castToNumber(width);\n  }\n\n  __setInternalHeight(height: ?number) {\n    this._height = castToNumber(height);\n  }\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\n// flowlint unsafe-getters-setters:off\n\nimport type {\n  HostComponent,\n  INativeMethods,\n  InternalInstanceHandle,\n  MeasureInWindowOnSuccessCallback,\n  MeasureLayoutOnSuccessCallback,\n  MeasureOnSuccessCallback,\n  ViewConfig,\n} from '../../../../../Libraries/Renderer/shims/ReactNativeTypes';\nimport type {ElementRef} from 'react';\n\nimport TextInputState from '../../../../../Libraries/Components/TextInput/TextInputState';\nimport {getFabricUIManager} from '../../../../../Libraries/ReactNative/FabricUIManager';\nimport {create as createAttributePayload} from '../../../../../Libraries/ReactNative/ReactFabricPublicInstance/ReactNativeAttributePayload';\nimport warnForStyleProps from '../../../../../Libraries/ReactNative/ReactFabricPublicInstance/warnForStyleProps';\nimport ReadOnlyElement, {getBoundingClientRect} from './ReadOnlyElement';\nimport ReadOnlyNode from './ReadOnlyNode';\nimport {\n  getPublicInstanceFromInternalInstanceHandle,\n  getShadowNode,\n} from './ReadOnlyNode';\nimport nullthrows from 'nullthrows';\n\nconst noop = () => {};\n\nexport default class ReactNativeElement\n  extends ReadOnlyElement\n  implements INativeMethods\n{\n  // These need to be accessible from `ReactFabricPublicInstanceUtils`.\n  __nativeTag: number;\n  __internalInstanceHandle: InternalInstanceHandle;\n\n  _viewConfig: ViewConfig;\n\n  constructor(\n    tag: number,\n    viewConfig: ViewConfig,\n    internalInstanceHandle: InternalInstanceHandle,\n  ) {\n    super(internalInstanceHandle);\n\n    this.__nativeTag = tag;\n    this.__internalInstanceHandle = internalInstanceHandle;\n    this._viewConfig = viewConfig;\n  }\n\n  get offsetHeight(): number {\n    return Math.round(\n      getBoundingClientRect(this, {includeTransform: false}).height,\n    );\n  }\n\n  get offsetLeft(): number {\n    const node = getShadowNode(this);\n\n    if (node != null) {\n      const offset = nullthrows(getFabricUIManager()).getOffset(node);\n      if (offset != null) {\n        return Math.round(offset[2]);\n      }\n    }\n\n    return 0;\n  }\n\n  get offsetParent(): ReadOnlyElement | null {\n    const node = getShadowNode(this);\n\n    if (node != null) {\n      const offset = nullthrows(getFabricUIManager()).getOffset(node);\n      // For children of the root node we currently return offset data\n      // but a `null` parent because the root node is not accessible\n      // in JavaScript yet.\n      if (offset != null && offset[0] != null) {\n        const offsetParentInstanceHandle = offset[0];\n        const offsetParent = getPublicInstanceFromInternalInstanceHandle(\n          offsetParentInstanceHandle,\n        );\n        // $FlowExpectedError[incompatible-type] The value returned by `getOffset` is always an instance handle for `ReadOnlyElement`.\n        const offsetParentElement: ReadOnlyElement | null = offsetParent;\n        return offsetParentElement;\n      }\n    }\n\n    return null;\n  }\n\n  get offsetTop(): number {\n    const node = getShadowNode(this);\n\n    if (node != null) {\n      const offset = nullthrows(getFabricUIManager()).getOffset(node);\n      if (offset != null) {\n        return Math.round(offset[1]);\n      }\n    }\n\n    return 0;\n  }\n\n  get offsetWidth(): number {\n    return Math.round(\n      getBoundingClientRect(this, {includeTransform: false}).width,\n    );\n  }\n\n  /**\n   * React Native compatibility methods\n   */\n\n  blur(): void {\n    // $FlowFixMe[incompatible-exact] Migrate all usages of `NativeMethods` to an interface to fix this.\n    TextInputState.blurTextInput(this);\n  }\n\n  focus() {\n    // $FlowFixMe[incompatible-exact] Migrate all usages of `NativeMethods` to an interface to fix this.\n    TextInputState.focusTextInput(this);\n  }\n\n  measure(callback: MeasureOnSuccessCallback) {\n    const node = getShadowNode(this);\n    if (node != null) {\n      nullthrows(getFabricUIManager()).measure(node, callback);\n    }\n  }\n\n  measureInWindow(callback: MeasureInWindowOnSuccessCallback) {\n    const node = getShadowNode(this);\n    if (node != null) {\n      nullthrows(getFabricUIManager()).measureInWindow(node, callback);\n    }\n  }\n\n  measureLayout(\n    relativeToNativeNode: number | ElementRef<HostComponent<mixed>>,\n    onSuccess: MeasureLayoutOnSuccessCallback,\n    onFail?: () => void /* currently unused */,\n  ) {\n    if (!(relativeToNativeNode instanceof ReadOnlyNode)) {\n      if (__DEV__) {\n        console.error(\n          'Warning: ref.measureLayout must be called with a ref to a native component.',\n        );\n      }\n\n      return;\n    }\n\n    const toStateNode = getShadowNode(this);\n    const fromStateNode = getShadowNode(relativeToNativeNode);\n\n    if (toStateNode != null && fromStateNode != null) {\n      nullthrows(getFabricUIManager()).measureLayout(\n        toStateNode,\n        fromStateNode,\n        onFail != null ? onFail : noop,\n        onSuccess != null ? onSuccess : noop,\n      );\n    }\n  }\n\n  setNativeProps(nativeProps: {...}): void {\n    if (__DEV__) {\n      warnForStyleProps(nativeProps, this._viewConfig.validAttributes);\n    }\n\n    const updatePayload = createAttributePayload(\n      nativeProps,\n      this._viewConfig.validAttributes,\n    );\n\n    const node = getShadowNode(this);\n\n    if (node != null && updatePayload != null) {\n      nullthrows(getFabricUIManager()).setNativeProps(node, updatePayload);\n    }\n  }\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\n// flowlint unsafe-getters-setters:off\n\nimport type ReadOnlyElement from './ReadOnlyElement';\n\nimport {getFabricUIManager} from '../../../../../Libraries/ReactNative/FabricUIManager';\nimport ReadOnlyNode, {getShadowNode} from './ReadOnlyNode';\nimport {getElementSibling} from './utilities/Traversal';\nimport nullthrows from 'nullthrows';\n\nexport default class ReadOnlyCharacterData extends ReadOnlyNode {\n  get nextElementSibling(): ReadOnlyElement | null {\n    return getElementSibling(this, 'next');\n  }\n\n  get previousElementSibling(): ReadOnlyElement | null {\n    return getElementSibling(this, 'previous');\n  }\n\n  get data(): string {\n    const shadowNode = getShadowNode(this);\n\n    if (shadowNode != null) {\n      return nullthrows(getFabricUIManager()).getTextContent(shadowNode);\n    }\n\n    return '';\n  }\n\n  get length(): number {\n    return this.data.length;\n  }\n\n  /**\n   * @override\n   */\n  get textContent(): string | null {\n    return this.data;\n  }\n\n  /**\n   * @override\n   */\n  get nodeValue(): string {\n    return this.data;\n  }\n\n  substringData(offset: number, count: number): string {\n    const data = this.data;\n    if (offset < 0) {\n      throw new TypeError(\n        `Failed to execute 'substringData' on 'CharacterData': The offset ${offset} is negative.`,\n      );\n    }\n    if (offset > data.length) {\n      throw new TypeError(\n        `Failed to execute 'substringData' on 'CharacterData': The offset ${offset} is greater than the node's length (${data.length}).`,\n      );\n    }\n    let adjustedCount = count < 0 || count > data.length ? data.length : count;\n    return data.slice(offset, offset + adjustedCount);\n  }\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\n// flowlint unsafe-getters-setters:off\n\nimport type HTMLCollection from '../oldstylecollections/HTMLCollection';\n\nimport {getFabricUIManager} from '../../../../../Libraries/ReactNative/FabricUIManager';\nimport DOMRect from '../geometry/DOMRect';\nimport {createHTMLCollection} from '../oldstylecollections/HTMLCollection';\nimport ReadOnlyNode, {\n  getChildNodes,\n  getInstanceHandle,\n  getShadowNode,\n} from './ReadOnlyNode';\nimport {getElementSibling} from './utilities/Traversal';\nimport nullthrows from 'nullthrows';\n\nexport default class ReadOnlyElement extends ReadOnlyNode {\n  get childElementCount(): number {\n    return getChildElements(this).length;\n  }\n\n  get children(): HTMLCollection<ReadOnlyElement> {\n    return createHTMLCollection(getChildElements(this));\n  }\n\n  get clientHeight(): number {\n    const node = getShadowNode(this);\n\n    if (node != null) {\n      const innerSize = nullthrows(getFabricUIManager()).getInnerSize(node);\n      if (innerSize != null) {\n        return innerSize[1];\n      }\n    }\n\n    return 0;\n  }\n\n  get clientLeft(): number {\n    const node = getShadowNode(this);\n\n    if (node != null) {\n      const borderSize = nullthrows(getFabricUIManager()).getBorderSize(node);\n      if (borderSize != null) {\n        return borderSize[3];\n      }\n    }\n\n    return 0;\n  }\n\n  get clientTop(): number {\n    const node = getShadowNode(this);\n\n    if (node != null) {\n      const borderSize = nullthrows(getFabricUIManager()).getBorderSize(node);\n      if (borderSize != null) {\n        return borderSize[0];\n      }\n    }\n\n    return 0;\n  }\n\n  get clientWidth(): number {\n    const node = getShadowNode(this);\n\n    if (node != null) {\n      const innerSize = nullthrows(getFabricUIManager()).getInnerSize(node);\n      if (innerSize != null) {\n        return innerSize[0];\n      }\n    }\n\n    return 0;\n  }\n\n  get firstElementChild(): ReadOnlyElement | null {\n    const childElements = getChildElements(this);\n\n    if (childElements.length === 0) {\n      return null;\n    }\n\n    return childElements[0];\n  }\n\n  get id(): string {\n    const instanceHandle = getInstanceHandle(this);\n    // TODO: migrate off this private React API\n    // $FlowExpectedError[incompatible-use]\n    const props = instanceHandle?.stateNode?.canonical?.currentProps;\n    return props?.id ?? props?.nativeID ?? '';\n  }\n\n  get lastElementChild(): ReadOnlyElement | null {\n    const childElements = getChildElements(this);\n\n    if (childElements.length === 0) {\n      return null;\n    }\n\n    return childElements[childElements.length - 1];\n  }\n\n  get nextElementSibling(): ReadOnlyElement | null {\n    return getElementSibling(this, 'next');\n  }\n\n  get nodeName(): string {\n    return this.tagName;\n  }\n\n  get nodeType(): number {\n    return ReadOnlyNode.ELEMENT_NODE;\n  }\n\n  get nodeValue(): string | null {\n    return null;\n  }\n\n  set nodeValue(value: string): void {}\n\n  get previousElementSibling(): ReadOnlyElement | null {\n    return getElementSibling(this, 'previous');\n  }\n\n  get scrollHeight(): number {\n    const node = getShadowNode(this);\n\n    if (node != null) {\n      const scrollSize = nullthrows(getFabricUIManager()).getScrollSize(node);\n      if (scrollSize != null) {\n        return scrollSize[1];\n      }\n    }\n\n    return 0;\n  }\n\n  get scrollLeft(): number {\n    const node = getShadowNode(this);\n\n    if (node != null) {\n      const scrollPosition = nullthrows(getFabricUIManager()).getScrollPosition(\n        node,\n      );\n      if (scrollPosition != null) {\n        return scrollPosition[0];\n      }\n    }\n\n    return 0;\n  }\n\n  get scrollTop(): number {\n    const node = getShadowNode(this);\n\n    if (node != null) {\n      const scrollPosition = nullthrows(getFabricUIManager()).getScrollPosition(\n        node,\n      );\n      if (scrollPosition != null) {\n        return scrollPosition[1];\n      }\n    }\n\n    return 0;\n  }\n\n  get scrollWidth(): number {\n    const node = getShadowNode(this);\n\n    if (node != null) {\n      const scrollSize = nullthrows(getFabricUIManager()).getScrollSize(node);\n      if (scrollSize != null) {\n        return scrollSize[0];\n      }\n    }\n\n    return 0;\n  }\n\n  get tagName(): string {\n    const node = getShadowNode(this);\n\n    if (node != null) {\n      return nullthrows(getFabricUIManager()).getTagName(node);\n    }\n\n    return '';\n  }\n\n  get textContent(): string | null {\n    const shadowNode = getShadowNode(this);\n\n    if (shadowNode != null) {\n      return nullthrows(getFabricUIManager()).getTextContent(shadowNode);\n    }\n\n    return '';\n  }\n\n  getBoundingClientRect(): DOMRect {\n    return getBoundingClientRect(this, {includeTransform: true});\n  }\n\n  /**\n   * Pointer Capture APIs\n   */\n  hasPointerCapture(pointerId: number): boolean {\n    const node = getShadowNode(this);\n    if (node != null) {\n      return nullthrows(getFabricUIManager()).hasPointerCapture(\n        node,\n        pointerId,\n      );\n    }\n    return false;\n  }\n\n  setPointerCapture(pointerId: number): void {\n    const node = getShadowNode(this);\n    if (node != null) {\n      nullthrows(getFabricUIManager()).setPointerCapture(node, pointerId);\n    }\n  }\n\n  releasePointerCapture(pointerId: number): void {\n    const node = getShadowNode(this);\n    if (node != null) {\n      nullthrows(getFabricUIManager()).releasePointerCapture(node, pointerId);\n    }\n  }\n}\n\nfunction getChildElements(node: ReadOnlyNode): $ReadOnlyArray<ReadOnlyElement> {\n  // $FlowIssue[incompatible-call]\n  return getChildNodes(node).filter(\n    childNode => childNode instanceof ReadOnlyElement,\n  );\n}\n\n/**\n * The public API for `getBoundingClientRect` always includes transform,\n * so we use this internal version to get the data without transform to\n * implement methods like `offsetWidth` and `offsetHeight`.\n */\nexport function getBoundingClientRect(\n  node: ReadOnlyElement,\n  {includeTransform}: {includeTransform: boolean},\n): DOMRect {\n  const shadowNode = getShadowNode(node);\n\n  if (shadowNode != null) {\n    const rect = nullthrows(getFabricUIManager()).getBoundingClientRect(\n      shadowNode,\n      includeTransform,\n    );\n\n    if (rect) {\n      return new DOMRect(rect[0], rect[1], rect[2], rect[3]);\n    }\n  }\n\n  // Empty rect if any of the above failed\n  return new DOMRect(0, 0, 0, 0);\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\n// flowlint unsafe-getters-setters:off\n\nimport type {\n  InternalInstanceHandle,\n  Node as ShadowNode,\n} from '../../../../../Libraries/Renderer/shims/ReactNativeTypes';\nimport type NodeList from '../oldstylecollections/NodeList';\nimport type ReadOnlyElement from './ReadOnlyElement';\n\nimport {getFabricUIManager} from '../../../../../Libraries/ReactNative/FabricUIManager';\nimport {createNodeList} from '../oldstylecollections/NodeList';\nimport nullthrows from 'nullthrows';\n\n// We initialize this lazily to avoid a require cycle\n// (`ReadOnlyElement` also depends on `ReadOnlyNode`).\nlet ReadOnlyElementClass: Class<ReadOnlyElement>;\n\nexport default class ReadOnlyNode {\n  constructor(internalInstanceHandle: InternalInstanceHandle) {\n    setInstanceHandle(this, internalInstanceHandle);\n  }\n\n  get childNodes(): NodeList<ReadOnlyNode> {\n    const childNodes = getChildNodes(this);\n    return createNodeList(childNodes);\n  }\n\n  get firstChild(): ReadOnlyNode | null {\n    const childNodes = getChildNodes(this);\n\n    if (childNodes.length === 0) {\n      return null;\n    }\n\n    return childNodes[0];\n  }\n\n  get isConnected(): boolean {\n    const shadowNode = getShadowNode(this);\n\n    if (shadowNode == null) {\n      return false;\n    }\n\n    return nullthrows(getFabricUIManager()).isConnected(shadowNode);\n  }\n\n  get lastChild(): ReadOnlyNode | null {\n    const childNodes = getChildNodes(this);\n\n    if (childNodes.length === 0) {\n      return null;\n    }\n\n    return childNodes[childNodes.length - 1];\n  }\n\n  get nextSibling(): ReadOnlyNode | null {\n    const [siblings, position] = getNodeSiblingsAndPosition(this);\n\n    if (position === siblings.length - 1) {\n      // this node is the last child of its parent, so there is no next sibling.\n      return null;\n    }\n\n    return siblings[position + 1];\n  }\n\n  /**\n   * @abstract\n   */\n  get nodeName(): string {\n    throw new TypeError(\n      '`nodeName` is abstract and must be implemented in a subclass of `ReadOnlyNode`',\n    );\n  }\n\n  /**\n   * @abstract\n   */\n  get nodeType(): number {\n    throw new TypeError(\n      '`nodeType` is abstract and must be implemented in a subclass of `ReadOnlyNode`',\n    );\n  }\n\n  /**\n   * @abstract\n   */\n  get nodeValue(): string | null {\n    throw new TypeError(\n      '`nodeValue` is abstract and must be implemented in a subclass of `ReadOnlyNode`',\n    );\n  }\n\n  get parentElement(): ReadOnlyElement | null {\n    const parentNode = this.parentNode;\n\n    if (ReadOnlyElementClass == null) {\n      // We initialize this lazily to avoid a require cycle.\n      ReadOnlyElementClass = require('./ReadOnlyElement').default;\n    }\n\n    if (parentNode instanceof ReadOnlyElementClass) {\n      return parentNode;\n    }\n\n    return null;\n  }\n\n  get parentNode(): ReadOnlyNode | null {\n    const shadowNode = getShadowNode(this);\n\n    if (shadowNode == null) {\n      return null;\n    }\n\n    const parentInstanceHandle = nullthrows(getFabricUIManager()).getParentNode(\n      shadowNode,\n    );\n\n    if (parentInstanceHandle == null) {\n      return null;\n    }\n\n    return (\n      getPublicInstanceFromInternalInstanceHandle(parentInstanceHandle) ?? null\n    );\n  }\n\n  get previousSibling(): ReadOnlyNode | null {\n    const [siblings, position] = getNodeSiblingsAndPosition(this);\n\n    if (position === 0) {\n      // this node is the first child of its parent, so there is no previous sibling.\n      return null;\n    }\n\n    return siblings[position - 1];\n  }\n\n  /**\n   * @abstract\n   */\n  get textContent(): string | null {\n    throw new TypeError(\n      '`textContent` is abstract and must be implemented in a subclass of `ReadOnlyNode`',\n    );\n  }\n\n  compareDocumentPosition(otherNode: ReadOnlyNode): number {\n    // Quick check to avoid having to call into Fabric if the nodes are the same.\n    if (otherNode === this) {\n      return 0;\n    }\n\n    const shadowNode = getShadowNode(this);\n    const otherShadowNode = getShadowNode(otherNode);\n\n    if (shadowNode == null || otherShadowNode == null) {\n      return ReadOnlyNode.DOCUMENT_POSITION_DISCONNECTED;\n    }\n\n    return nullthrows(getFabricUIManager()).compareDocumentPosition(\n      shadowNode,\n      otherShadowNode,\n    );\n  }\n\n  contains(otherNode: ReadOnlyNode): boolean {\n    if (otherNode === this) {\n      return true;\n    }\n\n    const position = this.compareDocumentPosition(otherNode);\n    // eslint-disable-next-line no-bitwise\n    return (position & ReadOnlyNode.DOCUMENT_POSITION_CONTAINED_BY) !== 0;\n  }\n\n  getRootNode(): ReadOnlyNode {\n    // eslint-disable-next-line consistent-this\n    let lastKnownParent: ReadOnlyNode = this;\n    let nextPossibleParent: ?ReadOnlyNode = this.parentNode;\n\n    while (nextPossibleParent != null) {\n      lastKnownParent = nextPossibleParent;\n      nextPossibleParent = nextPossibleParent.parentNode;\n    }\n\n    return lastKnownParent;\n  }\n\n  hasChildNodes(): boolean {\n    return getChildNodes(this).length > 0;\n  }\n\n  /*\n   * Node types, as returned by the `nodeType` property.\n   */\n\n  /**\n   * Type of Element, HTMLElement and ReactNativeElement instances.\n   */\n  static ELEMENT_NODE: number = 1;\n  /**\n   * Currently Unused in React Native.\n   */\n  static ATTRIBUTE_NODE: number = 2;\n  /**\n   * Text nodes.\n   */\n  static TEXT_NODE: number = 3;\n  /**\n   * @deprecated Unused in React Native.\n   */\n  static CDATA_SECTION_NODE: number = 4;\n  /**\n   * @deprecated\n   */\n  static ENTITY_REFERENCE_NODE: number = 5;\n  /**\n   * @deprecated\n   */\n  static ENTITY_NODE: number = 6;\n  /**\n   * @deprecated Unused in React Native.\n   */\n  static PROCESSING_INSTRUCTION_NODE: number = 7;\n  /**\n   * @deprecated Unused in React Native.\n   */\n  static COMMENT_NODE: number = 8;\n  /**\n   * @deprecated Unused in React Native.\n   */\n  static DOCUMENT_NODE: number = 9;\n  /**\n   * @deprecated Unused in React Native.\n   */\n  static DOCUMENT_TYPE_NODE: number = 10;\n  /**\n   * @deprecated Unused in React Native.\n   */\n  static DOCUMENT_FRAGMENT_NODE: number = 11;\n  /**\n   * @deprecated\n   */\n  static NOTATION_NODE: number = 12;\n\n  /*\n   * Document position flags. Used to check the return value of\n   * `compareDocumentPosition()`.\n   */\n\n  /**\n   * Both nodes are in different documents.\n   */\n  static DOCUMENT_POSITION_DISCONNECTED: number = 1;\n  /**\n   * `otherNode` precedes the node in either a pre-order depth-first traversal of a tree containing both\n   * (e.g., as an ancestor or previous sibling or a descendant of a previous sibling or previous sibling of an ancestor)\n   * or (if they are disconnected) in an arbitrary but consistent ordering.\n   */\n  static DOCUMENT_POSITION_PRECEDING: number = 2;\n  /**\n   * `otherNode` follows the node in either a pre-order depth-first traversal of a tree containing both\n   * (e.g., as a descendant or following sibling or a descendant of a following sibling or following sibling of an ancestor)\n   * or (if they are disconnected) in an arbitrary but consistent ordering.\n   */\n  static DOCUMENT_POSITION_FOLLOWING: number = 4;\n  /**\n   * `otherNode` is an ancestor of the node.\n   */\n  static DOCUMENT_POSITION_CONTAINS: number = 8;\n  /**\n   * `otherNode` is a descendant of the node.\n   */\n  static DOCUMENT_POSITION_CONTAINED_BY: number = 16;\n  /**\n   * @deprecated Unused in React Native.\n   */\n  static DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC: number = 32;\n}\n\nconst INSTANCE_HANDLE_KEY = Symbol('internalInstanceHandle');\n\nexport function getInstanceHandle(node: ReadOnlyNode): InternalInstanceHandle {\n  // $FlowExpectedError[prop-missing]\n  return node[INSTANCE_HANDLE_KEY];\n}\n\nfunction setInstanceHandle(\n  node: ReadOnlyNode,\n  instanceHandle: InternalInstanceHandle,\n): void {\n  // $FlowExpectedError[prop-missing]\n  node[INSTANCE_HANDLE_KEY] = instanceHandle;\n}\n\nexport function getShadowNode(node: ReadOnlyNode): ?ShadowNode {\n  // Lazy import Fabric here to avoid DOM Node APIs classes from having side-effects.\n  // With a static import we can't use these classes for Paper-only variants.\n  const ReactFabric = require('../../../../../Libraries/Renderer/shims/ReactFabric');\n  return ReactFabric.getNodeFromInternalInstanceHandle(getInstanceHandle(node));\n}\n\nexport function getChildNodes(\n  node: ReadOnlyNode,\n): $ReadOnlyArray<ReadOnlyNode> {\n  const shadowNode = getShadowNode(node);\n\n  if (shadowNode == null) {\n    return [];\n  }\n\n  const childNodeInstanceHandles = nullthrows(\n    getFabricUIManager(),\n  ).getChildNodes(shadowNode);\n  return childNodeInstanceHandles\n    .map(instanceHandle =>\n      getPublicInstanceFromInternalInstanceHandle(instanceHandle),\n    )\n    .filter(Boolean);\n}\n\nfunction getNodeSiblingsAndPosition(\n  node: ReadOnlyNode,\n): [$ReadOnlyArray<ReadOnlyNode>, number] {\n  const parent = node.parentNode;\n  if (parent == null) {\n    // This node is the root or it's disconnected.\n    return [[node], 0];\n  }\n\n  const siblings = getChildNodes(parent);\n  const position = siblings.indexOf(node);\n\n  if (position === -1) {\n    throw new TypeError(\"Missing node in parent's child node list\");\n  }\n\n  return [siblings, position];\n}\n\nexport function getPublicInstanceFromInternalInstanceHandle(\n  instanceHandle: InternalInstanceHandle,\n): ?ReadOnlyNode {\n  // Lazy import Fabric here to avoid DOM Node APIs classes from having side-effects.\n  // With a static import we can't use these classes for Paper-only variants.\n  const ReactFabric = require('../../../../../Libraries/Renderer/shims/ReactFabric');\n  const mixedPublicInstance =\n    ReactFabric.getPublicInstanceFromInternalInstanceHandle(instanceHandle);\n  // $FlowExpectedError[incompatible-return] React defines public instances as \"mixed\" because it can't access the definition from React Native.\n  return mixedPublicInstance;\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\n// flowlint unsafe-getters-setters:off\n\nimport ReadOnlyCharacterData from './ReadOnlyCharacterData';\nimport ReadOnlyNode from './ReadOnlyNode';\n\nexport default class ReadOnlyText extends ReadOnlyCharacterData {\n  /**\n   * @override\n   */\n  get nodeName(): string {\n    return '#text';\n  }\n\n  /**\n   * @override\n   */\n  get nodeType(): number {\n    return ReadOnlyNode.TEXT_NODE;\n  }\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\nimport type ReadOnlyElement from '../ReadOnlyElement';\nimport type ReadOnlyNode from '../ReadOnlyNode';\n\nimport {getChildNodes} from '../ReadOnlyNode';\n\n// We initialize this lazily to avoid a require cycle\n// (`ReadOnlyElement` also depends on `Traversal`).\nlet ReadOnlyElementClass: Class<ReadOnlyElement>;\n\nexport function getElementSibling(\n  node: ReadOnlyNode,\n  direction: 'next' | 'previous',\n): ReadOnlyElement | null {\n  const parent = node.parentNode;\n  if (parent == null) {\n    // This node is the root or it's disconnected.\n    return null;\n  }\n\n  const childNodes = getChildNodes(parent);\n\n  const startPosition = childNodes.indexOf(node);\n  if (startPosition === -1) {\n    return null;\n  }\n\n  const increment = direction === 'next' ? 1 : -1;\n\n  let position = startPosition + increment;\n\n  if (ReadOnlyElementClass == null) {\n    // We initialize this lazily to avoid a require cycle.\n    ReadOnlyElementClass = require('../ReadOnlyElement').default;\n  }\n\n  while (\n    childNodes[position] != null &&\n    !(childNodes[position] instanceof ReadOnlyElementClass)\n  ) {\n    position = position + increment;\n  }\n\n  return childNodes[position] ?? null;\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict\n */\n\n/**\n * This definition is different from the current built-in type `$ArrayLike`\n * provided by Flow, in that this is an interface and that one is an object.\n *\n * The difference is important because, when using objects, Flow thinks\n * a `length` property would be copied over when using the spread operator,\n * which is incorrect.\n */\nexport interface ArrayLike<T> extends Iterable<T> {\n  // This property should've been read-only as well, but Flow doesn't handle\n  // read-only indexers correctly (thinks reads are writes and fails).\n  [indexer: number]: T;\n  +length: number;\n}\n\nexport function* createValueIterator<T>(arrayLike: ArrayLike<T>): Iterator<T> {\n  for (let i = 0; i < arrayLike.length; i++) {\n    yield arrayLike[i];\n  }\n}\n\nexport function* createKeyIterator<T>(\n  arrayLike: ArrayLike<T>,\n): Iterator<number> {\n  for (let i = 0; i < arrayLike.length; i++) {\n    yield i;\n  }\n}\n\nexport function* createEntriesIterator<T>(\n  arrayLike: ArrayLike<T>,\n): Iterator<[number, T]> {\n  for (let i = 0; i < arrayLike.length; i++) {\n    yield [i, arrayLike[i]];\n  }\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict\n */\n\n// flowlint unsafe-getters-setters:off\n\nimport type {ArrayLike} from './ArrayLikeUtils';\n\nimport {createValueIterator} from './ArrayLikeUtils';\n\n// IMPORTANT: The type definition for this module is defined in `HTMLCollection.js.flow`\n// because Flow only supports indexers in classes in declaration files.\n\n// $FlowIssue[prop-missing] Flow doesn't understand [Symbol.iterator]() {} and thinks this class doesn't implement the Iterable<T> interface.\nexport default class HTMLCollection<T> implements Iterable<T>, ArrayLike<T> {\n  _length: number;\n\n  /**\n   * Use `createHTMLCollection` to create instances of this class.\n   *\n   * @private This is not defined in the declaration file, so users will not see\n   *          the signature of the constructor.\n   */\n  constructor(elements: $ReadOnlyArray<T>) {\n    for (let i = 0; i < elements.length; i++) {\n      Object.defineProperty(this, i, {\n        value: elements[i],\n        enumerable: true,\n        configurable: false,\n        writable: false,\n      });\n    }\n\n    this._length = elements.length;\n  }\n\n  get length(): number {\n    return this._length;\n  }\n\n  item(index: number): T | null {\n    if (index < 0 || index >= this._length) {\n      return null;\n    }\n\n    // assigning to the interface allows us to access the indexer property in a\n    // type-safe way.\n    // eslint-disable-next-line consistent-this\n    const arrayLike: ArrayLike<T> = this;\n    return arrayLike[index];\n  }\n\n  /**\n   * @deprecated Unused in React Native.\n   */\n  namedItem(name: string): T | null {\n    return null;\n  }\n\n  // $FlowIssue[unsupported-syntax] Flow does not support computed properties in classes.\n  [Symbol.iterator](): Iterator<T> {\n    return createValueIterator(this);\n  }\n}\n\n/**\n * This is an internal method to create instances of `HTMLCollection`,\n * which avoids leaking its constructor to end users.\n * We can do that because the external definition of `HTMLCollection` lives in\n * `HTMLCollection.js.flow`, not here.\n */\nexport function createHTMLCollection<T>(\n  elements: $ReadOnlyArray<T>,\n): HTMLCollection<T> {\n  return new HTMLCollection(elements);\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict\n */\n\n// flowlint unsafe-getters-setters:off\n\nimport type {ArrayLike} from './ArrayLikeUtils';\n\nimport {\n  createEntriesIterator,\n  createKeyIterator,\n  createValueIterator,\n} from './ArrayLikeUtils';\n\n// IMPORTANT: The Flow type definition for this module is defined in `NodeList.js.flow`\n// because Flow only supports indexers in classes in declaration files.\n\n// $FlowIssue[prop-missing] Flow doesn't understand [Symbol.iterator]() {} and thinks this class doesn't implement the Iterable<T> interface.\nexport default class NodeList<T> implements Iterable<T>, ArrayLike<T> {\n  _length: number;\n\n  /**\n   * Use `createNodeList` to create instances of this class.\n   *\n   * @private This is not defined in the declaration file, so users will not see\n   *          the signature of the constructor.\n   */\n  constructor(elements: $ReadOnlyArray<T>) {\n    for (let i = 0; i < elements.length; i++) {\n      Object.defineProperty(this, i, {\n        value: elements[i],\n        writable: false,\n      });\n    }\n    this._length = elements.length;\n  }\n\n  get length(): number {\n    return this._length;\n  }\n\n  item(index: number): T | null {\n    if (index < 0 || index >= this._length) {\n      return null;\n    }\n\n    // assigning to the interface allows us to access the indexer property in a\n    // type-safe way.\n    // eslint-disable-next-line consistent-this\n    const arrayLike: ArrayLike<T> = this;\n    return arrayLike[index];\n  }\n\n  entries(): Iterator<[number, T]> {\n    return createEntriesIterator(this);\n  }\n\n  forEach<ThisType>(\n    callbackFn: (value: T, index: number, array: NodeList<T>) => mixed,\n    thisArg?: ThisType,\n  ): void {\n    // assigning to the interface allows us to access the indexer property in a\n    // type-safe way.\n    // eslint-disable-next-line consistent-this\n    const arrayLike: ArrayLike<T> = this;\n\n    for (let index = 0; index < this._length; index++) {\n      if (thisArg == null) {\n        callbackFn(arrayLike[index], index, this);\n      } else {\n        callbackFn.call(thisArg, arrayLike[index], index, this);\n      }\n    }\n  }\n\n  keys(): Iterator<number> {\n    return createKeyIterator(this);\n  }\n\n  values(): Iterator<T> {\n    return createValueIterator(this);\n  }\n\n  // $FlowIssue[unsupported-syntax] Flow does not support computed properties in classes.\n  [Symbol.iterator](): Iterator<T> {\n    return createValueIterator(this);\n  }\n}\n\n/**\n * This is an internal method to create instances of `NodeList`,\n * which avoids leaking its constructor to end users.\n * We can do that because the external definition of `NodeList` lives in\n * `NodeList.js.flow`, not here.\n */\nexport function createNodeList<T>(elements: $ReadOnlyArray<T>): NodeList<T> {\n  return new NodeList(elements);\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nimport NativePerformanceObserver from './NativePerformanceObserver';\nimport {warnNoNativePerformanceObserver} from './PerformanceObserver';\n\ntype EventCountsForEachCallbackType =\n  | (() => void)\n  | ((value: number) => void)\n  | ((value: number, key: string) => void)\n  | ((value: number, key: string, map: Map<string, number>) => void);\n\nlet cachedEventCounts: ?Map<string, number>;\n\nfunction getCachedEventCounts(): Map<string, number> {\n  if (cachedEventCounts) {\n    return cachedEventCounts;\n  }\n  if (!NativePerformanceObserver) {\n    warnNoNativePerformanceObserver();\n    return new Map();\n  }\n\n  cachedEventCounts = new Map<string, number>(\n    NativePerformanceObserver.getEventCounts(),\n  );\n  // $FlowFixMe[incompatible-call]\n  global.queueMicrotask(() => {\n    // To be consistent with the calls to the API from the same task,\n    // but also not to refetch the data from native too often,\n    // schedule to invalidate the cache later,\n    // after the current task is guaranteed to have finished.\n    cachedEventCounts = null;\n  });\n  return cachedEventCounts ?? new Map();\n}\n/**\n * Implementation of the EventCounts Web Performance API\n * corresponding to the standard in\n * https://www.w3.org/TR/event-timing/#eventcounts\n */\nexport default class EventCounts {\n  // flowlint unsafe-getters-setters:off\n  get size(): number {\n    return getCachedEventCounts().size;\n  }\n\n  entries(): Iterator<[string, number]> {\n    return getCachedEventCounts().entries();\n  }\n\n  forEach(callback: EventCountsForEachCallbackType): void {\n    return getCachedEventCounts().forEach(callback);\n  }\n\n  get(key: string): ?number {\n    return getCachedEventCounts().get(key);\n  }\n\n  has(key: string): boolean {\n    return getCachedEventCounts().has(key);\n  }\n\n  keys(): Iterator<string> {\n    return getCachedEventCounts().keys();\n  }\n\n  values(): Iterator<number> {\n    return getCachedEventCounts().values();\n  }\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n * @oncall react_native\n */\n\n// flowlint unsafe-getters-setters:off\n\ntype MemoryInfoLike = {\n  jsHeapSizeLimit: ?number,\n  totalJSHeapSize: ?number,\n  usedJSHeapSize: ?number,\n};\n\n// Read-only object with JS memory information. This is returned by the performance.memory API.\nexport default class MemoryInfo {\n  _jsHeapSizeLimit: ?number;\n  _totalJSHeapSize: ?number;\n  _usedJSHeapSize: ?number;\n\n  constructor(memoryInfo: ?MemoryInfoLike) {\n    if (memoryInfo != null) {\n      this._jsHeapSizeLimit = memoryInfo.jsHeapSizeLimit;\n      this._totalJSHeapSize = memoryInfo.totalJSHeapSize;\n      this._usedJSHeapSize = memoryInfo.usedJSHeapSize;\n    }\n  }\n\n  /**\n   * The maximum size of the heap, in bytes, that is available to the context\n   */\n  get jsHeapSizeLimit(): ?number {\n    return this._jsHeapSizeLimit;\n  }\n\n  /**\n   * The total allocated heap size, in bytes\n   */\n  get totalJSHeapSize(): ?number {\n    return this._totalJSHeapSize;\n  }\n\n  /**\n   * The currently active segment of JS heap, in bytes.\n   */\n  get usedJSHeapSize(): ?number {\n    return this._usedJSHeapSize;\n  }\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nimport type {TurboModule} from '../../../../Libraries/TurboModule/RCTExport';\n\nimport * as TurboModuleRegistry from '../../../../Libraries/TurboModule/TurboModuleRegistry';\n\nexport type NativeMemoryInfo = {[key: string]: ?number};\n\nexport type ReactNativeStartupTiming = {[key: string]: ?number};\n\nexport interface Spec extends TurboModule {\n  +mark: (name: string, startTime: number) => void;\n  +measure: (\n    name: string,\n    startTime: number,\n    endTime: number,\n    duration?: number,\n    startMark?: string,\n    endMark?: string,\n  ) => void;\n  +getSimpleMemoryInfo: () => NativeMemoryInfo;\n  +getReactNativeStartupTiming: () => ReactNativeStartupTiming;\n}\n\nexport default (TurboModuleRegistry.get<Spec>('NativePerformanceCxx'): ?Spec);\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nimport type {TurboModule} from '../../../../Libraries/TurboModule/RCTExport';\n\nimport * as TurboModuleRegistry from '../../../../Libraries/TurboModule/TurboModuleRegistry';\n\nexport type RawPerformanceEntryType = number;\n\nexport type RawPerformanceEntry = {|\n  name: string,\n  entryType: RawPerformanceEntryType,\n  startTime: number,\n  duration: number,\n  // For \"event\" entries only:\n  processingStart?: number,\n  processingEnd?: number,\n  interactionId?: number,\n|};\n\nexport type GetPendingEntriesResult = {|\n  entries: $ReadOnlyArray<RawPerformanceEntry>,\n  droppedEntriesCount: number,\n|};\n\nexport interface Spec extends TurboModule {\n  +startReporting: (entryType: RawPerformanceEntryType) => void;\n  +stopReporting: (entryType: RawPerformanceEntryType) => void;\n  +setIsBuffered: (\n    entryTypes: $ReadOnlyArray<RawPerformanceEntryType>,\n    isBuffered: boolean,\n  ) => void;\n  +popPendingEntries: () => GetPendingEntriesResult;\n  +setOnPerformanceEntryCallback: (callback?: () => void) => void;\n  +logRawEntry: (entry: RawPerformanceEntry) => void;\n  +getEventCounts: () => $ReadOnlyArray<[string, number]>;\n  +setDurationThreshold: (\n    entryType: RawPerformanceEntryType,\n    durationThreshold: number,\n  ) => void;\n  +clearEntries: (\n    entryType: RawPerformanceEntryType,\n    entryName?: string,\n  ) => void;\n  +getEntries: (\n    entryType?: RawPerformanceEntryType,\n    entryName?: string,\n  ) => $ReadOnlyArray<RawPerformanceEntry>;\n  +getSupportedPerformanceEntryTypes: () => $ReadOnlyArray<RawPerformanceEntryType>;\n}\n\nexport default (TurboModuleRegistry.get<Spec>(\n  'NativePerformanceObserverCxx',\n): ?Spec);\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict\n */\n\n// flowlint unsafe-getters-setters:off\n\nimport type {HighResTimeStamp, PerformanceEntryType} from './PerformanceEntry';\nimport type {PerformanceEntryList} from './PerformanceObserver';\n\nimport warnOnce from '../../../../Libraries/Utilities/warnOnce';\nimport EventCounts from './EventCounts';\nimport MemoryInfo from './MemoryInfo';\nimport NativePerformance from './NativePerformance';\nimport NativePerformanceObserver from './NativePerformanceObserver';\nimport {ALWAYS_LOGGED_ENTRY_TYPES, PerformanceEntry} from './PerformanceEntry';\nimport {warnNoNativePerformanceObserver} from './PerformanceObserver';\nimport {\n  performanceEntryTypeToRaw,\n  rawToPerformanceEntry,\n} from './RawPerformanceEntry';\nimport {RawPerformanceEntryTypeValues} from './RawPerformanceEntry';\nimport ReactNativeStartupTiming from './ReactNativeStartupTiming';\n\ntype DetailType = mixed;\n\nexport type PerformanceMarkOptions = {\n  detail?: DetailType,\n  startTime?: HighResTimeStamp,\n};\n\ndeclare var global: {\n  // This value is defined directly via JSI, if available.\n  +nativePerformanceNow?: ?() => number,\n};\n\nconst getCurrentTimeStamp: () => HighResTimeStamp = global.nativePerformanceNow\n  ? global.nativePerformanceNow\n  : () => Date.now();\n\n// We want some of the performance entry types to be always logged,\n// even if they are not currently observed - this is either to be able to\n// retrieve them at any time via Performance.getEntries* or to refer by other entries\n// (such as when measures may refer to marks, even if the latter are not observed)\nif (NativePerformanceObserver?.setIsBuffered) {\n  NativePerformanceObserver?.setIsBuffered(\n    ALWAYS_LOGGED_ENTRY_TYPES.map(performanceEntryTypeToRaw),\n    true,\n  );\n}\n\nexport class PerformanceMark extends PerformanceEntry {\n  detail: DetailType;\n\n  constructor(markName: string, markOptions?: PerformanceMarkOptions) {\n    super({\n      name: markName,\n      entryType: 'mark',\n      startTime: markOptions?.startTime ?? getCurrentTimeStamp(),\n      duration: 0,\n    });\n\n    if (markOptions) {\n      this.detail = markOptions.detail;\n    }\n  }\n}\n\nexport type TimeStampOrName = HighResTimeStamp | string;\n\nexport type PerformanceMeasureOptions = {\n  detail?: DetailType,\n  start?: TimeStampOrName,\n  end?: TimeStampOrName,\n  duration?: HighResTimeStamp,\n};\n\nexport class PerformanceMeasure extends PerformanceEntry {\n  detail: DetailType;\n\n  constructor(measureName: string, measureOptions?: PerformanceMeasureOptions) {\n    super({\n      name: measureName,\n      entryType: 'measure',\n      startTime: 0,\n      duration: measureOptions?.duration ?? 0,\n    });\n\n    if (measureOptions) {\n      this.detail = measureOptions.detail;\n    }\n  }\n}\n\nfunction warnNoNativePerformance() {\n  warnOnce(\n    'missing-native-performance',\n    'Missing native implementation of Performance',\n  );\n}\n\n/**\n * Partial implementation of the Performance interface for RN,\n * corresponding to the standard in\n * https://www.w3.org/TR/user-timing/#extensions-performance-interface\n */\nexport default class Performance {\n  eventCounts: EventCounts = new EventCounts();\n\n  // Get the current JS memory information.\n  get memory(): MemoryInfo {\n    if (NativePerformance?.getSimpleMemoryInfo) {\n      // JSI API implementations may have different variants of names for the JS\n      // heap information we need here. We will parse the result based on our\n      // guess of the implementation for now.\n      const memoryInfo = NativePerformance.getSimpleMemoryInfo();\n      if (memoryInfo.hasOwnProperty('hermes_heapSize')) {\n        // We got memory information from Hermes\n        const {\n          hermes_heapSize: totalJSHeapSize,\n          hermes_allocatedBytes: usedJSHeapSize,\n        } = memoryInfo;\n\n        return new MemoryInfo({\n          jsHeapSizeLimit: null, // We don't know the heap size limit from Hermes.\n          totalJSHeapSize,\n          usedJSHeapSize,\n        });\n      } else {\n        // JSC and V8 has no native implementations for memory information in JSI::Instrumentation\n        return new MemoryInfo();\n      }\n    }\n\n    return new MemoryInfo();\n  }\n\n  // Startup metrics is not used in web, but only in React Native.\n  get rnStartupTiming(): ReactNativeStartupTiming {\n    if (NativePerformance?.getReactNativeStartupTiming) {\n      const {\n        startTime,\n        endTime,\n        initializeRuntimeStart,\n        initializeRuntimeEnd,\n        executeJavaScriptBundleEntryPointStart,\n        executeJavaScriptBundleEntryPointEnd,\n      } = NativePerformance.getReactNativeStartupTiming();\n      return new ReactNativeStartupTiming({\n        startTime,\n        endTime,\n        initializeRuntimeStart,\n        initializeRuntimeEnd,\n        executeJavaScriptBundleEntryPointStart,\n        executeJavaScriptBundleEntryPointEnd,\n      });\n    }\n    return new ReactNativeStartupTiming();\n  }\n\n  mark(\n    markName: string,\n    markOptions?: PerformanceMarkOptions,\n  ): PerformanceMark {\n    const mark = new PerformanceMark(markName, markOptions);\n\n    if (NativePerformance?.mark) {\n      NativePerformance.mark(markName, mark.startTime);\n    } else {\n      warnNoNativePerformance();\n    }\n\n    return mark;\n  }\n\n  clearMarks(markName?: string): void {\n    if (!NativePerformanceObserver?.clearEntries) {\n      warnNoNativePerformanceObserver();\n      return;\n    }\n\n    NativePerformanceObserver?.clearEntries(\n      RawPerformanceEntryTypeValues.MARK,\n      markName,\n    );\n  }\n\n  measure(\n    measureName: string,\n    startMarkOrOptions?: string | PerformanceMeasureOptions,\n    endMark?: string,\n  ): PerformanceMeasure {\n    let options;\n    let startMarkName,\n      endMarkName = endMark,\n      duration,\n      startTime = 0,\n      endTime = 0;\n\n    if (typeof startMarkOrOptions === 'string') {\n      startMarkName = startMarkOrOptions;\n    } else if (startMarkOrOptions !== undefined) {\n      options = startMarkOrOptions;\n      if (endMark !== undefined) {\n        throw new TypeError(\n          \"Performance.measure: Can't have both options and endMark\",\n        );\n      }\n      if (options.start === undefined && options.end === undefined) {\n        throw new TypeError(\n          'Performance.measure: Must have at least one of start/end specified in options',\n        );\n      }\n      if (\n        options.start !== undefined &&\n        options.end !== undefined &&\n        options.duration !== undefined\n      ) {\n        throw new TypeError(\n          \"Performance.measure: Can't have both start/end and duration explicitly in options\",\n        );\n      }\n\n      if (typeof options.start === 'number') {\n        startTime = options.start;\n      } else {\n        startMarkName = options.start;\n      }\n\n      if (typeof options.end === 'number') {\n        endTime = options.end;\n      } else {\n        endMarkName = options.end;\n      }\n\n      duration = options.duration ?? duration;\n    }\n\n    const measure = new PerformanceMeasure(measureName, options);\n\n    if (NativePerformance?.measure) {\n      NativePerformance.measure(\n        measureName,\n        startTime,\n        endTime,\n        duration,\n        startMarkName,\n        endMarkName,\n      );\n    } else {\n      warnNoNativePerformance();\n    }\n\n    return measure;\n  }\n\n  clearMeasures(measureName?: string): void {\n    if (!NativePerformanceObserver?.clearEntries) {\n      warnNoNativePerformanceObserver();\n      return;\n    }\n\n    NativePerformanceObserver?.clearEntries(\n      RawPerformanceEntryTypeValues.MEASURE,\n      measureName,\n    );\n  }\n\n  /**\n   * Returns a double, measured in milliseconds.\n   * https://developer.mozilla.org/en-US/docs/Web/API/Performance/now\n   */\n  now(): HighResTimeStamp {\n    return getCurrentTimeStamp();\n  }\n\n  /**\n   * An extension that allows to get back to JS all currently logged marks/measures\n   * (in our case, be it from JS or native), see\n   * https://www.w3.org/TR/performance-timeline/#extensions-to-the-performance-interface\n   */\n  getEntries(): PerformanceEntryList {\n    if (!NativePerformanceObserver?.getEntries) {\n      warnNoNativePerformanceObserver();\n      return [];\n    }\n    return NativePerformanceObserver.getEntries().map(rawToPerformanceEntry);\n  }\n\n  getEntriesByType(entryType: PerformanceEntryType): PerformanceEntryList {\n    if (!ALWAYS_LOGGED_ENTRY_TYPES.includes(entryType)) {\n      console.warn(\n        `Performance.getEntriesByType: Only valid for ${JSON.stringify(\n          ALWAYS_LOGGED_ENTRY_TYPES,\n        )} entry types, got ${entryType}`,\n      );\n      return [];\n    }\n\n    if (!NativePerformanceObserver?.getEntries) {\n      warnNoNativePerformanceObserver();\n      return [];\n    }\n    return NativePerformanceObserver.getEntries(\n      performanceEntryTypeToRaw(entryType),\n    ).map(rawToPerformanceEntry);\n  }\n\n  getEntriesByName(\n    entryName: string,\n    entryType?: PerformanceEntryType,\n  ): PerformanceEntryList {\n    if (\n      entryType !== undefined &&\n      !ALWAYS_LOGGED_ENTRY_TYPES.includes(entryType)\n    ) {\n      console.warn(\n        `Performance.getEntriesByName: Only valid for ${JSON.stringify(\n          ALWAYS_LOGGED_ENTRY_TYPES,\n        )} entry types, got ${entryType}`,\n      );\n      return [];\n    }\n\n    if (!NativePerformanceObserver?.getEntries) {\n      warnNoNativePerformanceObserver();\n      return [];\n    }\n    return NativePerformanceObserver.getEntries(\n      entryType != null ? performanceEntryTypeToRaw(entryType) : undefined,\n      entryName,\n    ).map(rawToPerformanceEntry);\n  }\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict\n */\n\nexport type HighResTimeStamp = number;\nexport type PerformanceEntryType = 'mark' | 'measure' | 'event';\n\nexport type PerformanceEntryJSON = {\n  name: string,\n  entryType: PerformanceEntryType,\n  startTime: HighResTimeStamp,\n  duration: HighResTimeStamp,\n  ...\n};\n\nexport const ALWAYS_LOGGED_ENTRY_TYPES: $ReadOnlyArray<PerformanceEntryType> = [\n  'mark',\n  'measure',\n];\n\nexport class PerformanceEntry {\n  name: string;\n  entryType: PerformanceEntryType;\n  startTime: HighResTimeStamp;\n  duration: HighResTimeStamp;\n\n  constructor(init: {\n    name: string,\n    entryType: PerformanceEntryType,\n    startTime: HighResTimeStamp,\n    duration: HighResTimeStamp,\n  }) {\n    this.name = init.name;\n    this.entryType = init.entryType;\n    this.startTime = init.startTime;\n    this.duration = init.duration;\n  }\n\n  toJSON(): PerformanceEntryJSON {\n    return {\n      name: this.name,\n      entryType: this.entryType,\n      startTime: this.startTime,\n      duration: this.duration,\n    };\n  }\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict\n */\n\nimport type {HighResTimeStamp, PerformanceEntryJSON} from './PerformanceEntry';\n\nimport {PerformanceEntry} from './PerformanceEntry';\n\nexport type PerformanceEventTimingJSON = {\n  ...PerformanceEntryJSON,\n  processingStart: HighResTimeStamp,\n  processingEnd: HighResTimeStamp,\n  interactionId: number,\n  ...\n};\n\nexport default class PerformanceEventTiming extends PerformanceEntry {\n  processingStart: HighResTimeStamp;\n  processingEnd: HighResTimeStamp;\n  interactionId: number;\n\n  constructor(init: {\n    name: string,\n    startTime?: HighResTimeStamp,\n    duration?: HighResTimeStamp,\n    processingStart?: HighResTimeStamp,\n    processingEnd?: HighResTimeStamp,\n    interactionId?: number,\n  }) {\n    super({\n      name: init.name,\n      entryType: 'event',\n      startTime: init.startTime ?? 0,\n      duration: init.duration ?? 0,\n    });\n    this.processingStart = init.processingStart ?? 0;\n    this.processingEnd = init.processingEnd ?? 0;\n    this.interactionId = init.interactionId ?? 0;\n  }\n\n  toJSON(): PerformanceEventTimingJSON {\n    return {\n      ...super.toJSON(),\n      processingStart: this.processingStart,\n      processingEnd: this.processingEnd,\n      interactionId: this.interactionId,\n    };\n  }\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict\n */\n\nimport type {HighResTimeStamp, PerformanceEntryType} from './PerformanceEntry';\n\nimport warnOnce from '../../../../Libraries/Utilities/warnOnce';\nimport NativePerformanceObserver from './NativePerformanceObserver';\nimport {PerformanceEntry} from './PerformanceEntry';\nimport PerformanceEventTiming from './PerformanceEventTiming';\nimport {\n  performanceEntryTypeToRaw,\n  rawToPerformanceEntry,\n  rawToPerformanceEntryType,\n} from './RawPerformanceEntry';\n\nexport type PerformanceEntryList = $ReadOnlyArray<PerformanceEntry>;\n\nexport class PerformanceObserverEntryList {\n  _entries: PerformanceEntryList;\n\n  constructor(entries: PerformanceEntryList) {\n    this._entries = entries;\n  }\n\n  getEntries(): PerformanceEntryList {\n    return this._entries;\n  }\n\n  getEntriesByType(type: PerformanceEntryType): PerformanceEntryList {\n    return this._entries.filter(entry => entry.entryType === type);\n  }\n\n  getEntriesByName(\n    name: string,\n    type?: PerformanceEntryType,\n  ): PerformanceEntryList {\n    if (type === undefined) {\n      return this._entries.filter(entry => entry.name === name);\n    } else {\n      return this._entries.filter(\n        entry => entry.name === name && entry.entryType === type,\n      );\n    }\n  }\n}\n\nexport type PerformanceObserverCallback = (\n  list: PerformanceObserverEntryList,\n  observer: PerformanceObserver,\n  // The number of buffered entries which got dropped from the buffer due to the buffer being full:\n  droppedEntryCount?: number,\n) => void;\n\nexport type PerformanceObserverInit =\n  | {\n      entryTypes: Array<PerformanceEntryType>,\n    }\n  | {\n      type: PerformanceEntryType,\n      durationThreshold?: HighResTimeStamp,\n    };\n\ntype PerformanceObserverConfig = {|\n  callback: PerformanceObserverCallback,\n  // Map of {entryType: durationThreshold}\n  entryTypes: $ReadOnlyMap<PerformanceEntryType, ?number>,\n|};\n\nconst observerCountPerEntryType: Map<PerformanceEntryType, number> = new Map();\nconst registeredObservers: Map<PerformanceObserver, PerformanceObserverConfig> =\n  new Map();\nlet isOnPerformanceEntryCallbackSet: boolean = false;\n\n// This is a callback that gets scheduled and periodically called from the native side\nconst onPerformanceEntry = () => {\n  if (!NativePerformanceObserver) {\n    return;\n  }\n  const entryResult = NativePerformanceObserver.popPendingEntries();\n  const rawEntries = entryResult?.entries ?? [];\n  const droppedEntriesCount = entryResult?.droppedEntriesCount;\n  if (rawEntries.length === 0) {\n    return;\n  }\n  const entries = rawEntries.map(rawToPerformanceEntry);\n  for (const [observer, observerConfig] of registeredObservers.entries()) {\n    const entriesForObserver: PerformanceEntryList = entries.filter(entry => {\n      if (!observerConfig.entryTypes.has(entry.entryType)) {\n        return false;\n      }\n      const durationThreshold = observerConfig.entryTypes.get(entry.entryType);\n      return entry.duration >= (durationThreshold ?? 0);\n    });\n    observerConfig.callback(\n      new PerformanceObserverEntryList(entriesForObserver),\n      observer,\n      droppedEntriesCount,\n    );\n  }\n};\n\nexport function warnNoNativePerformanceObserver() {\n  warnOnce(\n    'missing-native-performance-observer',\n    'Missing native implementation of PerformanceObserver',\n  );\n}\n\nfunction applyDurationThresholds() {\n  const durationThresholds: Map<PerformanceEntryType, ?number> = Array.from(\n    registeredObservers.values(),\n  )\n    .map(config => config.entryTypes)\n    .reduce(\n      (accumulator, currentValue) => union(accumulator, currentValue),\n      new Map(),\n    );\n\n  for (const [entryType, durationThreshold] of durationThresholds) {\n    NativePerformanceObserver?.setDurationThreshold(\n      performanceEntryTypeToRaw(entryType),\n      durationThreshold ?? 0,\n    );\n  }\n}\n\nfunction getSupportedPerformanceEntryTypes(): $ReadOnlyArray<PerformanceEntryType> {\n  if (!NativePerformanceObserver) {\n    return Object.freeze([]);\n  }\n  if (!NativePerformanceObserver.getSupportedPerformanceEntryTypes) {\n    // fallback if getSupportedPerformanceEntryTypes is not defined on native side\n    return Object.freeze(['mark', 'measure', 'event']);\n  }\n  return Object.freeze(\n    NativePerformanceObserver.getSupportedPerformanceEntryTypes().map(\n      rawToPerformanceEntryType,\n    ),\n  );\n}\n\n/**\n * Implementation of the PerformanceObserver interface for RN,\n * corresponding to the standard in https://www.w3.org/TR/performance-timeline/\n *\n * @example\n * const observer = new PerformanceObserver((list, _observer) => {\n *   const entries = list.getEntries();\n *   entries.forEach(entry => {\n *     reportEvent({\n *       eventName: entry.name,\n *       startTime: entry.startTime,\n *       endTime: entry.startTime + entry.duration,\n *       processingStart: entry.processingStart,\n *       processingEnd: entry.processingEnd,\n *       interactionId: entry.interactionId,\n *     });\n *   });\n * });\n * observer.observe({ type: \"event\" });\n */\nexport default class PerformanceObserver {\n  _callback: PerformanceObserverCallback;\n  _type: 'single' | 'multiple' | void;\n\n  constructor(callback: PerformanceObserverCallback) {\n    this._callback = callback;\n  }\n\n  observe(options: PerformanceObserverInit): void {\n    if (!NativePerformanceObserver) {\n      warnNoNativePerformanceObserver();\n      return;\n    }\n\n    this._validateObserveOptions(options);\n\n    let requestedEntryTypes;\n\n    if (options.entryTypes) {\n      this._type = 'multiple';\n      requestedEntryTypes = new Map(\n        options.entryTypes.map(t => [t, undefined]),\n      );\n    } else {\n      this._type = 'single';\n      requestedEntryTypes = new Map([\n        [options.type, options.durationThreshold],\n      ]);\n    }\n\n    // The same observer may receive multiple calls to \"observe\", so we need\n    // to check what is new on this call vs. previous ones.\n    const currentEntryTypes = registeredObservers.get(this)?.entryTypes;\n    const nextEntryTypes = currentEntryTypes\n      ? union(requestedEntryTypes, currentEntryTypes)\n      : requestedEntryTypes;\n\n    // This `observe` call is a no-op because there are no new things to observe.\n    if (currentEntryTypes && currentEntryTypes.size === nextEntryTypes.size) {\n      return;\n    }\n\n    registeredObservers.set(this, {\n      callback: this._callback,\n      entryTypes: nextEntryTypes,\n    });\n\n    if (!isOnPerformanceEntryCallbackSet) {\n      NativePerformanceObserver.setOnPerformanceEntryCallback(\n        onPerformanceEntry,\n      );\n      isOnPerformanceEntryCallbackSet = true;\n    }\n\n    // We only need to start listenening to new entry types being observed in\n    // this observer.\n    const newEntryTypes = currentEntryTypes\n      ? difference(\n          new Set(requestedEntryTypes.keys()),\n          new Set(currentEntryTypes.keys()),\n        )\n      : new Set(requestedEntryTypes.keys());\n    for (const type of newEntryTypes) {\n      if (!observerCountPerEntryType.has(type)) {\n        const rawType = performanceEntryTypeToRaw(type);\n        NativePerformanceObserver.startReporting(rawType);\n      }\n      observerCountPerEntryType.set(\n        type,\n        (observerCountPerEntryType.get(type) ?? 0) + 1,\n      );\n    }\n    applyDurationThresholds();\n  }\n\n  disconnect(): void {\n    if (!NativePerformanceObserver) {\n      warnNoNativePerformanceObserver();\n      return;\n    }\n\n    const observerConfig = registeredObservers.get(this);\n    if (!observerConfig) {\n      return;\n    }\n\n    // Disconnect this observer\n    for (const type of observerConfig.entryTypes.keys()) {\n      const numberOfObserversForThisType =\n        observerCountPerEntryType.get(type) ?? 0;\n      if (numberOfObserversForThisType === 1) {\n        observerCountPerEntryType.delete(type);\n        NativePerformanceObserver.stopReporting(\n          performanceEntryTypeToRaw(type),\n        );\n      } else if (numberOfObserversForThisType !== 0) {\n        observerCountPerEntryType.set(type, numberOfObserversForThisType - 1);\n      }\n    }\n\n    // Disconnect all observers if this was the last one\n    registeredObservers.delete(this);\n    if (registeredObservers.size === 0) {\n      NativePerformanceObserver.setOnPerformanceEntryCallback(undefined);\n      isOnPerformanceEntryCallbackSet = false;\n    }\n\n    applyDurationThresholds();\n  }\n\n  _validateObserveOptions(options: PerformanceObserverInit): void {\n    const {type, entryTypes, durationThreshold} = options;\n\n    if (!type && !entryTypes) {\n      throw new TypeError(\n        \"Failed to execute 'observe' on 'PerformanceObserver': An observe() call must not include both entryTypes and type arguments.\",\n      );\n    }\n\n    if (entryTypes && type) {\n      throw new TypeError(\n        \"Failed to execute 'observe' on 'PerformanceObserver': An observe() call must include either entryTypes or type arguments.\",\n      );\n    }\n\n    if (this._type === 'multiple' && type) {\n      throw new Error(\n        \"Failed to execute 'observe' on 'PerformanceObserver': This observer has performed observe({entryTypes:...}, therefore it cannot perform observe({type:...})\",\n      );\n    }\n\n    if (this._type === 'single' && entryTypes) {\n      throw new Error(\n        \"Failed to execute 'observe' on 'PerformanceObserver': This PerformanceObserver has performed observe({type:...}, therefore it cannot perform observe({entryTypes:...})\",\n      );\n    }\n\n    if (entryTypes && durationThreshold !== undefined) {\n      throw new TypeError(\n        \"Failed to execute 'observe' on 'PerformanceObserver': An observe() call must not include both entryTypes and durationThreshold arguments.\",\n      );\n    }\n  }\n\n  static supportedEntryTypes: $ReadOnlyArray<PerformanceEntryType> =\n    getSupportedPerformanceEntryTypes();\n}\n\n// As a Set union, except if value exists in both, we take minimum\nfunction union<T>(\n  a: $ReadOnlyMap<T, ?number>,\n  b: $ReadOnlyMap<T, ?number>,\n): Map<T, ?number> {\n  const res = new Map<T, ?number>();\n  for (const [k, v] of a) {\n    if (!b.has(k)) {\n      res.set(k, v);\n    } else {\n      res.set(k, Math.min(v ?? 0, b.get(k) ?? 0));\n    }\n  }\n  return res;\n}\n\nfunction difference<T>(a: $ReadOnlySet<T>, b: $ReadOnlySet<T>): Set<T> {\n  return new Set([...a].filter(x => !b.has(x)));\n}\n\nexport {PerformanceEventTiming};\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict\n */\n\nimport type {\n  RawPerformanceEntry,\n  RawPerformanceEntryType,\n} from './NativePerformanceObserver';\nimport type {PerformanceEntryType} from './PerformanceEntry';\n\nimport {PerformanceEntry} from './PerformanceEntry';\nimport PerformanceEventTiming from './PerformanceEventTiming';\n\nexport const RawPerformanceEntryTypeValues = {\n  UNDEFINED: 0,\n  MARK: 1,\n  MEASURE: 2,\n  EVENT: 3,\n};\n\nexport function rawToPerformanceEntry(\n  entry: RawPerformanceEntry,\n): PerformanceEntry {\n  if (entry.entryType === RawPerformanceEntryTypeValues.EVENT) {\n    return new PerformanceEventTiming({\n      name: entry.name,\n      startTime: entry.startTime,\n      duration: entry.duration,\n      processingStart: entry.processingStart,\n      processingEnd: entry.processingEnd,\n      interactionId: entry.interactionId,\n    });\n  } else {\n    return new PerformanceEntry({\n      name: entry.name,\n      entryType: rawToPerformanceEntryType(entry.entryType),\n      startTime: entry.startTime,\n      duration: entry.duration,\n    });\n  }\n}\n\nexport function rawToPerformanceEntryType(\n  type: RawPerformanceEntryType,\n): PerformanceEntryType {\n  switch (type) {\n    case RawPerformanceEntryTypeValues.MARK:\n      return 'mark';\n    case RawPerformanceEntryTypeValues.MEASURE:\n      return 'measure';\n    case RawPerformanceEntryTypeValues.EVENT:\n      return 'event';\n    case RawPerformanceEntryTypeValues.UNDEFINED:\n      throw new TypeError(\n        \"rawToPerformanceEntryType: UNDEFINED can't be cast to PerformanceEntryType\",\n      );\n    default:\n      throw new TypeError(\n        `rawToPerformanceEntryType: unexpected performance entry type received: ${type}`,\n      );\n  }\n}\n\nexport function performanceEntryTypeToRaw(\n  type: PerformanceEntryType,\n): RawPerformanceEntryType {\n  switch (type) {\n    case 'mark':\n      return RawPerformanceEntryTypeValues.MARK;\n    case 'measure':\n      return RawPerformanceEntryTypeValues.MEASURE;\n    case 'event':\n      return RawPerformanceEntryTypeValues.EVENT;\n    default:\n      // Verify exhaustive check with Flow\n      (type: empty);\n      throw new TypeError(\n        `performanceEntryTypeToRaw: unexpected performance entry type received: ${type}`,\n      );\n  }\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n * @oncall react_native\n */\n\n// flowlint unsafe-getters-setters:off\n\ntype ReactNativeStartupTimingLike = {\n  startTime: ?number,\n  endTime: ?number,\n  initializeRuntimeStart: ?number,\n  initializeRuntimeEnd: ?number,\n  executeJavaScriptBundleEntryPointStart: ?number,\n  executeJavaScriptBundleEntryPointEnd: ?number,\n};\n\n// Read-only object with RN startup timing information.\n// This is returned by the performance.reactNativeStartup API.\nexport default class ReactNativeStartupTiming {\n  // All time information here are in ms. The values may be null if not provided.\n  // We do NOT match web spect here for two reasons:\n  // 1. The `ReactNativeStartupTiming` is non-standard API\n  // 2. The timing information is relative to the time origin, which means `0` has valid meaning\n  _startTime: ?number;\n  _endTime: ?number;\n  _initializeRuntimeStart: ?number;\n  _initializeRuntimeEnd: ?number;\n  _executeJavaScriptBundleEntryPointStart: ?number;\n  _executeJavaScriptBundleEntryPointEnd: ?number;\n\n  constructor(startUpTiming: ?ReactNativeStartupTimingLike) {\n    if (startUpTiming != null) {\n      this._startTime = startUpTiming.startTime;\n      this._endTime = startUpTiming.endTime;\n      this._initializeRuntimeStart = startUpTiming.initializeRuntimeStart;\n      this._initializeRuntimeEnd = startUpTiming.initializeRuntimeEnd;\n      this._executeJavaScriptBundleEntryPointStart =\n        startUpTiming.executeJavaScriptBundleEntryPointStart;\n      this._executeJavaScriptBundleEntryPointEnd =\n        startUpTiming.executeJavaScriptBundleEntryPointEnd;\n    }\n  }\n\n  /**\n   * Start time of the RN app startup process. This is provided by the platform by implementing the `ReactMarker.setAppStartTime` API in the native platform code.\n   */\n  get startTime(): ?number {\n    return this._startTime;\n  }\n\n  /**\n   * End time of the RN app startup process. This is equal to `executeJavaScriptBundleEntryPointEnd`.\n   */\n  get endTime(): ?number {\n    return this._endTime;\n  }\n\n  /**\n   * Start time when RN runtime get initialized. This is when RN infra first kicks in app startup process.\n   */\n  get initializeRuntimeStart(): ?number {\n    return this._initializeRuntimeStart;\n  }\n\n  /**\n   * End time when RN runtime get initialized. This is the last marker before ends of the app startup process.\n   */\n  get initializeRuntimeEnd(): ?number {\n    return this._initializeRuntimeEnd;\n  }\n\n  /**\n   * Start time of JS bundle being executed. This indicates the RN JS bundle is loaded and start to be evaluated.\n   */\n  get executeJavaScriptBundleEntryPointStart(): ?number {\n    return this._executeJavaScriptBundleEntryPointStart;\n  }\n\n  /**\n   * End time of JS bundle being executed. This indicates all the synchronous entry point jobs are finished.\n   */\n  get executeJavaScriptBundleEntryPointEnd(): ?number {\n    return this._executeJavaScriptBundleEntryPointEnd;\n  }\n}\n"],"names":["_interopRequireDefault","require","_classCallCheck2","_createClass2","InteractionManager","Batchinator","default","callback","delayMS","this","_delay","_callback","key","value","options","arguments","length","undefined","abort","_taskHandle","cancel","_this","timeoutHandle","setTimeout","runAfterInteractions","clearTimeout","module","exports","_invariant","CellRenderMask","numCells","invariant","_numCells","_regions","first","last","isSpacer","cells","_this$_regions","_this$_findRegion","_findRegion","_this$_findRegion2","_slicedToArray2","firstIntersect","firstIntersectIdx","_this$_findRegion3","_this$_findRegion4","lastIntersect","lastIntersectIdx","newLeadRegion","newTailRegion","newMainRegion","Object","assign","push","replacementRegions","concat","numRegionsToDelete","splice","apply","_toConsumableArray2","other","every","region","i","cellIdx","firstIdx","lastIdx","middleIdx","Math","floor","middleRegion","ChildListCollection","_cellKeyToChildren","Map","_childrenToCellKey","list","cellKey","_this$_cellKeyToChild","has","cellLists","get","Set","add","set","delete","size","fn","listSet","values","_this$_cellKeyToChild2","_this$_cellKeyToChild3","Info","any_blank_count","any_blank_ms","any_blank_speed_sum","mostly_blank_count","mostly_blank_ms","pixels_blank","pixels_sampled","pixels_scrolled","total_time_spent","sample_count","_listeners","_minSampleCount","_sampleRate","FillRateHelper","listMetrics","_anyBlankStartTime","_enabled","_info","_mostlyBlankStartTime","_samplesStartTime","_listMetrics","random","_resetData","global","performance","now","start","info","forEach","listener","props","cellsAroundViewport","scrollMetrics","getItemCount","data","dOffset","offset","velocity","visibleLength","round","abs","scrollSpeed","blankTop","firstFrame","getCellMetrics","isMounted","min","max","blankBottom","lastFrame","bottomEdge","blankness","deactivateAndFlush","console","warn","remove","filter","sampleRate","minSampleCount","_VirtualizeUtils","ListMetricsAggregator","_averageCellLength","_cellMetrics","_highestMeasuredCellIndex","_measuredCellsLength","_measuredCellsCount","_orientation","horizontal","rtl","_ref","cellIndex","orientation","layout","_invalidateIfOrientationChanged","next","index","_selectLength","flowRelativeOffset","curr","dLength","_ref2","_contentLength","frame","_props$keyExtractor","getItem","getItemLayout","keyExtractor","defaultKeyExtractor","_getItemLayout","Number","isInteger","getCellMetricsApprox","frameMetrics","remainder","_this$_contentLength","referenceContentLength","_this$_orientation","contentLength","_selectOffset","_this$_orientation2","clear","_ref3","width","height","_ref4","x","y","React","e","r","__esModule","t","_getRequireWildcardCache","n","__proto__","a","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","_interopRequireWildcard","WeakMap","_callSuper","o","_getPrototypeOf2","_possibleConstructorReturn2","_isNativeReflectConstruct","Reflect","construct","constructor","Boolean","prototype","valueOf","_React$PureComponent","StateSafePureComponent","_inAsyncStateUpdate","_installSetStateHooks","_inherits2","partialState","_this2","_get2","state","ret","err","that","newProps","newState","PureComponent","ViewabilityHelper","config","viewAreaCoveragePercentThreshold","_hasInteracted","_timers","_viewableIndices","_viewableItems","_config","scrollOffset","viewportHeight","renderRange","itemCount","_this$_config","itemVisiblePercentThreshold","viewAreaMode","viewablePercentThreshold","viewableIndices","firstVisible","JSON","stringify","idx","metrics","top","bottom","_isViewable","createViewToken","onViewableItemsChanged","waitForInteraction","computeViewableItems","v","ii","minimumViewTime","handle","_onUpdateSync","viewableIndicesToCheck","includes","prevItems","nextItems","map","viewable","changed","_ref5","isViewable","viewableItems","Array","from","viewabilityConfig","itemLength","_isEntirelyVisible","pixels","visibleHeight","_getPixelsVisible","maxToRenderPerBatch","windowSize","prev","_scrollMetrics$zoomSc","zoomScale","visibleBegin","visibleEnd","overscanLength","fillPreference","overscanBegin","overscanEnd","_elementsThatOverlapO","elementsThatOverlapOffsets","_elementsThatOverlapO2","overscanFirst","overscanLast","visible","newCellCount","newRangeCount","maxNewCells","firstWillAddMore","firstShouldIncrement","lastWillAddMore","lastShouldIncrement","Error","item","id","String","offsets","result","offsetIndex","currentOffset","left","right","mid","scaledOffsetStart","scaledOffsetEnd","_Batchinator","_clamp","_infoLog","_CellRenderMask","_ChildListCollection","_FillRateHelper","_ListMetricsAggregator","_StateSafePureComponent","_ViewabilityHelper","_VirtualizedListCellRenderer","_VirtualizedListContext","_VirtualizedListProps","_nullthrows","_reactNative","_jsxRuntime","_excluded","_usedIndexForKey","_keylessItemComponentName","getScrollingThreshold","threshold","VirtualizedList","_StateSafePureCompone","_this$props$updateCel","_this$props$maintainV","_this$props$maintainV2","_getScrollMetrics","_scrollMetrics","_getOutermostParentListRef","_isNestedWithSameOrientation","context","getOutermostParentListRef","_registerAsNestedChild","childList","_nestedChildLists","ref","recordInteraction","_unregisterAsNestedChild","_onUpdateSeparators","keys","_cellRefs","updateSeparatorProps","_getSpacerKey","isVertical","_footerLength","_hasTriggeredInitialScrollToIndex","_hasMore","_hasWarned","_headerLength","_hiPriInProgress","_indicesToKeys","_lastFocusedCellKey","_offsetFromParentVirtualizedList","_pendingViewabilityUpdate","_prevParentOffset","dt","timestamp","_scrollRef","_sentStartForContentLength","_sentEndForContentLength","_viewabilityTuples","_captureScrollRef","_defaultRenderScrollComponent","_props$refreshing","onRefresh","onContentSizeChange","otherProps","_objectWithoutProperties2","jsx","View","refreshing","ScrollView","refreshControl","RefreshControl","progressViewOffset","_onCellLayout","notifyCellLayout","nativeEvent","_scheduleCellsToRenderUpdate","_triggerRemeasureForChildListsInCell","_computeBlankness","_updateViewableItems","_onCellFocusCapture","_updateCellsToRender","_onCellUnmount","notifyCellUnmounted","_onLayout","measureLayoutRelativeToContainingList","onLayout","_maybeCallOnEdgeReached","_onLayoutEmpty","_onLayoutFooter","_getFooterCellKey","_onLayoutHeader","_onContentSizeChange","notifyListContentLayout","_maybeScrollToInitialScrollIndex","_convertParentScrollMetrics","getContentLength","_onScroll","onScroll","timeStamp","layoutMeasurement","contentSize","_offsetFromScrollEvent","_this$_convertParentS","perf","infoLog","prevDt","pendingScrollUpdateCount","setState","_fillRateHelper","activate","_onScrollBeginDrag","tuple","viewabilityHelper","onScrollBeginDrag","_onScrollEndDrag","onScrollEndDrag","_onMomentumScrollBegin","onMomentumScrollBegin","_onMomentumScrollEnd","onMomentumScrollEnd","_adjustCellsAroundViewport","renderMask","_createRenderMask","_getNonViewportRenderRegions","equals","_createViewToken","_keyExtractor","focusedCellIndex","_getItemKey","heightOfCellsBeforeFocused","heightOfCellsAfterFocused","_checkProps","_updateCellsToRenderBatcher","updateCellsBatchingPeriod","viewabilityConfigCallbackPairs","pair","_this$props","initialRenderRegion","_initialRenderRegion","minIndexForVisible","maintainVisibleContentPosition","firstVisibleItemKey","initialScrollIndex","params","animated","veryLast","scrollToOffset","_this$props2","onScrollToIndexFailed","viewOffset","viewPosition","getHighestMeasuredCellIndex","averageItemLength","getAverageCellLength","highestMeasuredFrameIndex","getCellOffsetApprox","_this$props3","scrollToIndex","scrollRef","scrollTo","hasContentLength","_scrollToParamsFromOffset","cartOffset","cartesianOffset","flashScrollIndicators","getScrollResponder","getScrollableNode","findNodeHandle","getScrollRef","setNativeProps","_this$context","__isNative","windowSizeOrDefault","newCellsAroundViewport","onEndReachedThreshold","onEndReachedThresholdOrDefault","_this$_scrollMetrics","distanceFromEnd","_constrainToItemCount","disableVirtualization","renderAhead","maxToRenderPerBatchOrDefault","computeWindowedRenderLimits","childIdx","_findFirstChildWithMore","cellKeyForIndex","anyInCell","hasMore","registerAsNestedChild","unregisterAsNestedChild","dispose","stickyHeaderIndices","stickyIndicesFromProps","inversionStyle","prevCellKey","_this$props4","CellRendererComponent","ItemSeparatorComponent","ListHeaderComponent","ListItemComponent","debug","renderItem","stickyOffset","end","_loop","shouldListenForLayout","enabled","onUpdateSeparators","onCellFocusCapture","onUnmount","onCellLayout","nestedContext","horizontalOrDefault","_this$props$scrollEve","_this3","_this$props5","ListEmptyComponent","ListFooterComponent","_this$props6","inverted","styles","horizontallyInverted","verticallyInverted","element","isValidElement","VirtualizedListCellContextProvider","_getCellKey","children","collapsable","style","StyleSheet","compose","ListHeaderComponentStyle","cloneElement","event","spacerKey","renderRegions","enumerateRegions","lastRegion","lastSpacer","section","clamp","firstMetrics","lastMetrics","spacerSize","_defineProperty2","_pushCells","ListFooterComponentStyle","scrollProps","scrollEventThrottle","invertStickyHeaders","isInvertedVirtualizedList","VirtualizedListContextProvider","getScrollMetrics","renderScrollComponent","jsxs","_renderDebugOverlay","prevProps","_this$props7","extraData","resetViewableIndices","hiPriInProgress","computeBlankness","forEachInCell","_this4","measureLayout","error","stack","normalize","framesInLayout","windowTop","frameLast","windowLen","visTop","visLen","debugOverlayBase","debugOverlay","f","debugOverlayFrame","debugOverlayFrameLast","debugOverlayFrameVis","I18nManager","isRTL","_this$props8","onStartReached","onStartReachedThreshold","onEndReached","_this$_scrollMetrics2","distanceFromStart","isWithinStartThreshold","isWithinEndThreshold","contentWidth","contentHeight","contentOffset","nullthrows","scrollToEnd","_e$nativeEvent","_this$_orientation3","_shouldRenderWithPriority","schedule","_this$state$cellsArou","_this$_scrollMetrics3","hiPri","onStartReachedThresholdOrDefault","distTop","distBottom","_this5","onUpdate","hint","additionalRegions","allRegions","addCells","initialRegion","stickyIndicesSet","_ensureClosestStickyHeader","_props$initialScrollI","firstCellIndex","initialNumToRenderOrDefault","initialNumToRender","itemIdx","prevState","_newProps$maintainVis","_newProps$maintainVis2","maintainVisibleContentPositionAdjustment","prevFirstVisibleItemKey","newFirstVisibleItemKey","firstVisibleItemIndex","_findItemIndexWithKey","constrainedCells","lastPossibleCellIndex","maxFirst","type","displayName","contextType","VirtualizedListContext","create","Platform","OS","transform","scale","scaleY","scaleX","flex","position","borderColor","borderWidth","backgroundColor","_React$Component","CellRenderer","_len","args","_key","separatorProps","highlighted","leadingItem","_separators","highlight","unhighlight","updateProps","select","createElement","separators","_renderElement","itemSeparator","cellStyle","rowReverse","columnReverse","row","onFocusCapture","Component","flexDirection","currContext","useContext","useMemo","Provider","_react","createContext","_VirtualizedList","VirtualizedSectionList","_subExtractor","_convertViewable","_info$index","keyExtractorWithNullableIndex","keyExtractorWithNonNullableIndex","_onViewableItemsChanged","_renderItem","listItemCount","infoIndex","header","renderSectionHeader","renderSectionFooter","SeparatorComponent","_getSeparatorComponent","ItemWithSeparator","LeadingSeparatorComponent","SectionSeparatorComponent","leadingSection","setSelfHighlightCallback","_setUpdateHighlightFor","setSelfUpdatePropsCallback","_setUpdatePropsFor","updateHighlightFor","_updateHighlightFor","updatePropsFor","_updatePropsFor","trailingItem","trailingSection","_updatePropsMap","updateHighlight","_updateHighlightMap","updateHighlightFn","updatePropsFn","_captureRef","_listRef","itemIndex","sectionIndex","sections","listRef","stickySectionHeadersEnabled","__getListMetrics","toIndexParams","passThroughProps","listHeaderOffset","_getItem","sectionData","isLastItemInList","isLastItemInSection","_React$useState","useState","_React$useState2","leadingSeparatorHiglighted","setLeadingSeparatorHighlighted","_React$useState3","_React$useState4","separatorHighlighted","setSeparatorHighlighted","_React$useState5","_React$useState6","leadingSeparatorProps","setLeadingSeparatorProps","_React$useState7","_React$useState8","setSeparatorProps","useEffect","leadingSeparator","separator","_console","log","VirtualizedListContextResetter","_DOMRect","_DOMRectReadOnly","DOMRect","DOMRectReadOnly","NativeReactNativeFeatureFlags","_ReactNativeFeatureFlagsBase","createJavaScriptFlagGetter","createNativeFlagGetter","setOverrides","configName","defaultValue","createGetter","_overrides","_overrides$configName","overrides","_NativeReactNativeFea","newOverrides","accessedFeatureFlags","accessedFeatureFlagsStr","join","_NativeReactNativeFeatureFlags","customValueGetter","cachedValue","_customValueGetter","NativeComponentRegistry","__INTERNAL_VIEW_CONFIG","uiViewClassName","validAttributes","hidesWhenStopped","animating","color","process","ConditionallyIgnoredEventHandlers","dispatchCommand","directEventTypes","topDrawerSlide","registrationName","topDrawerStateChanged","topDrawerOpen","topDrawerClose","keyboardDismissMode","drawerBackgroundColor","drawerPosition","drawerWidth","drawerLockMode","statusBarBackgroundColor","onDrawerSlide","onDrawerStateChanged","onDrawerOpen","onDrawerClose","openDrawer","closeDrawer","removeClippedSubviews","topRefresh","colors","progressBackgroundColor","setNativeRefreshing","bubblingEventTypes","topChange","phasedRegistrationNames","captured","bubbled","disabled","thumbColor","trackColorForFalse","trackColorForTrue","on","thumbTintColor","trackTintColor","onChange","setNativeValue","styleAttr","typeAttr","indeterminate","progress","testID","tintColor","titleColor","title","topRequestClose","topShow","topDismiss","topOrientationChange","animationType","presentationStyle","transparent","statusBarTranslucent","hardwareAccelerated","supportedOrientations","identifier","onRequestClose","onShow","onDismiss","onOrientationChange","onTintColor","setValue","TurboModuleRegistry","_shouldUseTurboAnimatedModule","NativeModule","shouldUseTurboAnimatedModule","getEnforcing","constants","NativeBlobModule","getConstants","addNetworkingHandler","addWebSocketHandler","removeWebSocketHandler","sendOverSocket","blob","socketID","createFromParts","parts","withId","release","blobId","NativeDeviceInfo","ExceptionsManager","reportFatalException","message","exceptionId","reportSoftException","updateExceptionMessage","dismissRedbox","reportException","isFatal","NativeSourceCode","NativeStatusBarManager","setColor","setTranslucent","translucent","setStyle","statusBarStyle","setHidden","hidden","getHeight","setNetworkActivityIndicatorVisible","addListener","eventType","removeListeners","count","withAnimation","_DOMRectReadOnly2","__getInternalX","__setInternalX","__getInternalY","__setInternalY","__getInternalWidth","__setInternalWidth","__getInternalHeight","__setInternalHeight","rect","castToNumber","_x","_y","_width","_height","_TextInputState","_FabricUIManager","_ReactNativeAttributePayload","_ReadOnlyElement2","_ReadOnlyNode","noop","_ReadOnlyElement","ReactNativeElement","tag","viewConfig","internalInstanceHandle","__nativeTag","__internalInstanceHandle","_viewConfig","getBoundingClientRect","includeTransform","node","getShadowNode","getFabricUIManager","getOffset","offsetParentInstanceHandle","getPublicInstanceFromInternalInstanceHandle","TextInputState","blurTextInput","focusTextInput","measure","measureInWindow","relativeToNativeNode","onSuccess","onFail","ReadOnlyNode","toStateNode","fromStateNode","nativeProps","updatePayload","createAttributePayload","ReadOnlyElement","_ReadOnlyNode2","_Traversal","ReadOnlyCharacterData","getElementSibling","shadowNode","getTextContent","TypeError","adjustedCount","slice","_HTMLCollection","getChildElements","createHTMLCollection","innerSize","getInnerSize","borderSize","getBorderSize","childElements","_instanceHandle$state","_instanceHandle$state2","_props$id","instanceHandle","getInstanceHandle","stateNode","canonical","currentProps","nativeID","tagName","ELEMENT_NODE","scrollSize","getScrollSize","scrollPosition","getScrollPosition","getTagName","pointerId","hasPointerCapture","setPointerCapture","releasePointerCapture","getChildNodes","childNode","ReadOnlyElementClass","_NodeList","INSTANCE_HANDLE_KEY","childNodes","createNodeList","isConnected","_getNodeSiblingsAndPo","getNodeSiblingsAndPosition","_getNodeSiblingsAndPo2","siblings","parentNode","_getPublicInstanceFro","parentInstanceHandle","getParentNode","_getNodeSiblingsAndPo3","_getNodeSiblingsAndPo4","otherNode","otherShadowNode","DOCUMENT_POSITION_DISCONNECTED","compareDocumentPosition","DOCUMENT_POSITION_CONTAINED_BY","lastKnownParent","nextPossibleParent","ATTRIBUTE_NODE","TEXT_NODE","CDATA_SECTION_NODE","ENTITY_REFERENCE_NODE","ENTITY_NODE","PROCESSING_INSTRUCTION_NODE","COMMENT_NODE","DOCUMENT_NODE","DOCUMENT_TYPE_NODE","DOCUMENT_FRAGMENT_NODE","NOTATION_NODE","DOCUMENT_POSITION_PRECEDING","DOCUMENT_POSITION_FOLLOWING","DOCUMENT_POSITION_CONTAINS","DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC","Symbol","getNodeFromInternalInstanceHandle","parent","indexOf","_ReadOnlyCharacterData","_ReadOnlyCharacterDat","ReadOnlyText","direction","_childNodes$position","startPosition","increment","arrayLike","elements","HTMLCollection","_ArrayLikeUtils","enumerable","configurable","writable","_length","name","iterator","createValueIterator","NodeList","createEntriesIterator","callbackFn","thisArg","createKeyIterator","cachedEventCounts","_NativePerformanceObserver","_PerformanceObserver","getCachedEventCounts","_cachedEventCounts","NativePerformanceObserver","getEventCounts","queueMicrotask","warnNoNativePerformanceObserver","EventCounts","entries","MemoryInfo","memoryInfo","_jsHeapSizeLimit","jsHeapSizeLimit","_totalJSHeapSize","totalJSHeapSize","_usedJSHeapSize","usedJSHeapSize","_warnOnce","_EventCounts","_MemoryInfo","_NativePerformance","_PerformanceEntry3","_RawPerformanceEntry","_ReactNativeStartupTiming","getCurrentTimeStamp","nativePerformanceNow","Date","setIsBuffered","ALWAYS_LOGGED_ENTRY_TYPES","performanceEntryTypeToRaw","PerformanceMark","_PerformanceEntry","markName","markOptions","_markOptions$startTim","entryType","startTime","duration","detail","PerformanceEntry","PerformanceMeasure","_PerformanceEntry2","measureName","measureOptions","_measureOptions$durat","warnNoNativePerformance","warnOnce","Performance","eventCounts","NativePerformance","getSimpleMemoryInfo","hermes_heapSize","hermes_allocatedBytes","getReactNativeStartupTiming","_NativePerformance$ge","endTime","initializeRuntimeStart","initializeRuntimeEnd","executeJavaScriptBundleEntryPointStart","executeJavaScriptBundleEntryPointEnd","ReactNativeStartupTiming","mark","clearEntries","RawPerformanceEntryTypeValues","MARK","startMarkOrOptions","endMark","startMarkName","endMarkName","_options$duration","MEASURE","getEntries","rawToPerformanceEntry","entryName","init","PerformanceEventTiming","_init$startTime","_init$duration","_init$processingStart","_init$processingEnd","_init$interactionId","processingStart","processingEnd","interactionId","_PerformanceEventTiming","PerformanceObserverEntryList","_entries","entry","observerCountPerEntryType","registeredObservers","isOnPerformanceEntryCallbackSet","onPerformanceEntry","_entryResult$entries","entryResult","popPendingEntries","rawEntries","droppedEntriesCount","observerConfig","entriesForObserver","entryTypes","durationThreshold","observer","applyDurationThresholds","durationThresholds","reduce","accumulator","currentValue","union","setDurationThreshold","b","res","_b$get","_ref6","k","PerformanceObserver","_registeredObservers$","requestedEntryTypes","_validateObserveOptions","_type","currentEntryTypes","nextEntryTypes","setOnPerformanceEntryCallback","newEntryTypes","_observerCountPerEntr","rawType","startReporting","_observerCountPerEntr2","numberOfObserversForThisType","stopReporting","supportedEntryTypes","getSupportedPerformanceEntryTypes","freeze","rawToPerformanceEntryType","EVENT","UNDEFINED","startUpTiming","_startTime","_endTime","_initializeRuntimeStart","_initializeRuntimeEnd","_executeJavaScriptBundleEntryPointStart","_executeJavaScriptBundleEntryPointEnd"],"sourceRoot":""}