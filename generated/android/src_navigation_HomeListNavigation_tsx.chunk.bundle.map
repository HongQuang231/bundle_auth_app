{"version":3,"file":"src_navigation_HomeListNavigation_tsx.chunk.bundle","mappings":"wNAAAA,EAAAC,EAAA,YACAC,EAAAD,EAAA,OACAE,EAAAF,EAAA,OACAG,EACgD,SAAAC,EAAAC,GAAA,IAAAA,GAAAD,GAAAA,EAAAE,WAAA,OAAAF,EAAA,UAAAA,GAAA,iBAAAA,GAAA,mBAAAA,EAAA,OAAAG,QAAAH,GAAA,IAAAI,EAAAC,EAAAJ,GAAA,GAAAG,GAAAA,EAAAE,IAAAN,GAAA,OAAAI,EAAAG,IAAAP,GAAA,IAAAQ,EAAA,CAAAC,UAAA,MAAAC,EAAAC,OAAAC,gBAAAD,OAAAE,yBAAA,QAAAC,KAAAd,EAAA,eAAAc,GAAA,GAAAC,eAAAC,KAAAhB,EAAAc,GAAA,KAAAG,EAAAP,EAAAC,OAAAE,yBAAAb,EAAAc,GAAA,KAAAG,IAAAA,EAAAV,KAAAU,EAAAC,KAAAP,OAAAC,eAAAJ,EAAAM,EAAAG,GAAAT,EAAAM,GAAAd,EAAAc,EAAA,QAAAN,EAAAL,QAAAH,EAAAI,GAAAA,EAAAc,IAAAlB,EAAAQ,GAAAA,CAAA,CADhDW,CAAAvB,EAAA,QACAwB,EAAAzB,EAAAC,EAAA,QAAgDyB,EAAAzB,EAAA,gBAAAS,EAAAL,GAAA,sBAAAsB,QAAA,gBAAArB,EAAA,IAAAqB,QAAAlB,EAAA,IAAAkB,QAAA,OAAAjB,EAAA,SAAAL,GAAA,OAAAA,EAAAI,EAAAH,CAAA,GAAAD,EAAA,CAEhD,IA4BMuB,EAASC,EAAAA,WAAWC,OAAO,CAC/BC,UAAW,CACTC,KAAM,EACNC,eAAgB,UAElBC,KAAM,CACJC,UAAW,UAEbC,KAAM,CACJC,SAAS,EAAAC,EAAAA,QAAO,IAChBC,SAAUC,EAAAA,QAASC,WACnBC,MAAOC,EAAAA,UAAUC,UACjBT,UAAW,UAEbU,SAAU,CACRC,gBAAgB,EAAAR,EAAAA,QAAO,IACvBS,kBAAkB,EAAAT,EAAAA,QAAO,OAE1BU,EAAAA,QA9CkB,SAAHC,GAA8B,IAAzBC,EAAGD,EAAHC,IACrB,OACE,EAAAxB,EAAAyB,KAACjD,EAAAkD,gBAAe,CACdC,OAAQ,CACNC,IAAK,0FAEPC,MAAO3B,EAAOG,UAAUyB,UACxB,EAAA9B,EAAA+B,MAACvD,EAAAwD,KAAI,CACHH,MAAO,CACLI,WAAY,SACZ1B,eAAgB,SAChBD,KAAM,GACNwB,SAAA,EACF,EAAA9B,EAAAyB,KAAChD,EAAAyD,KAAI,CAACC,kBAAkB,EAAON,MAAO3B,EAAOQ,KAAKoB,SAC/CN,KAEH,EAAAxB,EAAAyB,KAAC1B,EAAAjB,QAAS,CACR+C,MAAO,CAACO,MAAO,OAAQC,OAAQ,OAC/BV,OAAQ,CACNC,IAAK,iFAEPU,WAAYC,EAAAA,QAAUD,WAAWE,cAK3C,C,yGChCA,IAAAC,EAAAlE,EAAA,OACAmE,EAEkD,SAAA/D,EAAAC,GAAA,IAAAA,GAAAD,GAAAA,EAAAE,WAAA,OAAAF,EAAA,UAAAA,GAAA,iBAAAA,GAAA,mBAAAA,EAAA,OAAAG,QAAAH,GAAA,IAAAI,EAAAC,EAAAJ,GAAA,GAAAG,GAAAA,EAAAE,IAAAN,GAAA,OAAAI,EAAAG,IAAAP,GAAA,IAAAQ,EAAA,CAAAC,UAAA,MAAAC,EAAAC,OAAAC,gBAAAD,OAAAE,yBAAA,QAAAC,KAAAd,EAAA,eAAAc,GAAA,GAAAC,eAAAC,KAAAhB,EAAAc,GAAA,KAAAG,EAAAP,EAAAC,OAAAE,yBAAAb,EAAAc,GAAA,KAAAG,IAAAA,EAAAV,KAAAU,EAAAC,KAAAP,OAAAC,eAAAJ,EAAAM,EAAAG,GAAAT,EAAAM,GAAAd,EAAAc,EAAA,QAAAN,EAAAL,QAAAH,EAAAI,GAAAA,EAAAc,IAAAlB,EAAAQ,GAAAA,CAAA,CAFlDW,CAAAvB,EAAA,QACAoE,EAAArE,EAAAC,EAAA,QACAqE,EAAArE,EAAA,OAAkDyB,EAAAzB,EAAA,gBAAAS,EAAAL,GAAA,sBAAAsB,QAAA,gBAAArB,EAAA,IAAAqB,QAAAlB,EAAA,IAAAkB,QAAA,OAAAjB,EAAA,SAAAL,GAAA,OAAAA,EAAAI,EAAAH,CAAA,GAAAD,EAAA,CAahD2C,EAAAA,QAXoB,SAACuB,GACrB,IAAMC,GAAS,EAAAC,EAAAA,YACfC,EAAgC,MAANF,OAAM,EAANA,EAAQG,OAA3BzB,EAAGwB,EAAHxB,IAAK0B,EAAUF,EAAVE,WACNC,GAAc,EAAAC,EAAAA,UAAQ,WAC1B,OAAOC,EAAAA,QAAMC,MAAK,kBAAMC,EAAAA,UAAUC,aAAahC,EAAK,KAAK0B,IAAa,GACxE,GAAG,CAAC1B,EAAK0B,IACT,OACE,EAAAlD,EAAAyB,KAACiB,EAAA5D,QAAM2E,SAAQ,CAACC,UAAU,EAAA1D,EAAAyB,KAACkB,EAAA7D,QAAY,CAAC0C,IAAK,KAAOM,UAClD,EAAA9B,EAAAyB,KAAC0B,EAAW7D,OAAAqE,OAAA,GAAKd,KAGvB,C,yGChBA,IAAArE,EAAAD,EAAA,OACAqF,EAAAtF,EAAAC,EAAA,OAEAqE,EAAArE,EAAA,OACAsF,EAAAtF,EAAA,MAEAuF,EAAAxF,EAAAC,EAAA,QAA8CyB,EAAAzB,EAAA,OAsC5C+C,EAAAA,QAhC+B,SAAHC,GAAgB,IAAXwC,EAAIxC,EAAJwC,KAC1BhF,GAAK,EAAAiF,EAAAA,kBAALjF,EACDkF,GAAa,EAAAC,EAAAA,iBAiBnB,OACE,EAAAlE,EAAA+B,MAACvD,EAAAwD,KAAI,CAAeH,MAAO3B,EAAAA,QAAOiE,aAAarC,SAAA,EAC7C,EAAA9B,EAAAyB,KAACqC,EAAAhF,QAAM,CAAC+C,MAAO3B,EAAAA,QAAOkE,UAAUtC,SAAE/C,EAAM,MAAJgF,OAAI,EAAJA,EAAMM,SAC1C,EAAArE,EAAAyB,KAACjD,EAAA8F,SAAQ,CACPC,qBAAmB,EACnBC,8BAA8B,EAC9BC,gCAAgC,EAChCC,YAAU,EACVX,KAAMA,EAAKY,aACXC,WAxBiB,SAAHC,GAAmC,IAA9BC,EAAID,EAAJC,KACvB,OACE,EAAA9E,EAAA+B,MAACvD,EAAAuG,iBAAgB,CACfC,QAAS,kBACPF,EAAKG,KACDhB,EAAWiB,SAASJ,EAAKG,MACzBE,EAAAA,MAAMC,MAAMrG,EAAE,WAAYA,EAAE,kCAAkC,EAEpE8C,MAAO3B,EAAAA,QAAOmF,QAAQvD,SAAA,EACtB,EAAA9B,EAAAyB,KAACjD,EAAAwD,KAAI,CAACH,MAAO3B,EAAAA,QAAOoF,SAASxD,SAAEgD,EAAKS,WACpC,EAAAvF,EAAAyB,KAACqC,EAAAhF,QAAM,CAAAgD,SAAM,MAAJgD,OAAI,EAAJA,EAAMU,qBAGrB,MAGazB,EAAK0B,GAYpB,C,yFC5CA,IAAAjH,EAAAD,EAAA,OACAmH,EAAAnH,EAAA,OAAkD+C,EAAAA,QAEnCnB,EAAAA,WAAWC,OAAO,CAC/B+D,aAAc,CACZwB,gBAAiBC,EAAAA,MAAMC,WACvBzE,eAAgB,EAChB0E,aAAc,GAGhB1B,UAAW,CACTpD,MAAO4E,EAAAA,MAAM1D,KACb6D,WAAYC,EAAAA,KAAKC,iBACjBtF,QAAS,GAGX0E,QAAS,CACPpD,WAAY,SACZ1B,eAAgB,SAChBI,QAAS,GACTuF,OAAQ,GAGVZ,SAAU,CACRlD,MAAO,GACPC,OAAQ,GACRyD,aAAc,GACdH,gBAAiBC,EAAAA,MAAMO,MACvBlE,WAAY,SACZ1B,eAAgB,SAChB6F,YAAaR,EAAAA,MAAMS,MACnBC,cAAe,K,+JC/BnBZ,EAAAnH,EAAA,OACAgI,EAAAhI,EAAA,OAMuB+C,EAAAA,aAAG,CACxBkF,SAAQ,EAADC,EAAA3H,UAAA,EAAA2H,EAAA3H,SAAA,GACJ4H,EAAAA,eAAeC,SAAW,CAAC1B,KAAM,KACjCyB,EAAAA,eAAeE,oBAAsB,CAAC3B,KAAM,MAI3B3D,EAAAA,UAAG,SAACuF,GAExB,IAAKA,EAAK,OAAO,KACjB,IAAM5B,EAAU,MAAH4B,OAAG,EAAHA,EAAKC,MAAM,KAAK,GACvB7D,EAAY,MAAH4D,OAAG,EAAHA,EAAKC,MAAM,KAAK,GAC/B,IAAK7D,EAAQ,OAAO,KACpB,IAAM8D,EAAaC,EAAAA,YAAYC,uBAAuBhE,GAEtD,MAA6B,SAAzB8D,EAAWG,UACN,CACLC,KAAM,YAAW,IAAIC,MAAOC,YAC5BC,aAAcrC,EAAK6B,MAAM,KAAKS,MAC9BC,gBAAiB,GAEe,aAAzBT,EAAWG,UACb,CACLC,KAAM,YAAW,IAAIC,MAAOC,YAC5BC,aAAcrC,EAAK6B,MAAM,KAAKS,MAC9BC,gBAAiB,EACjBC,mBAAoBV,EAAWW,oBAC/BC,WAAYZ,EAAWa,YACvBC,iBAAkBd,EAAWe,MAEnB,IAChB,EAE6BxG,EAAAA,iBAAG,SAACwD,GAC/B,GACgB,kBAAdA,EAAKqC,MACS,kBAAdrC,EAAKqC,MACS,kBAAdrC,EAAKqC,MACS,2BAAdrC,EAAKqC,MACS,mBAAdrC,EAAKqC,MACS,kBAAdrC,EAAKqC,MACS,0BAAdrC,EAAKqC,MACS,kBAAdrC,EAAKqC,MACS,yBAAdrC,EAAKqC,MACS,uBAAdrC,EAAKqC,MACS,yBAAdrC,EAAKqC,MACS,qBAAdrC,EAAKqC,MACS,2BAAdrC,EAAKqC,MACS,2BAAdrC,EAAKqC,MACS,2CAAdrC,EAAKqC,MACS,2CAAdrC,EAAKqC,MACS,0CAAdrC,EAAKqC,MACS,0CAAdrC,EAAKqC,MACS,uBAAdrC,EAAKqC,MACS,sBAAdrC,EAAKqC,KACL,CACA,IAAMY,EAAUC,KAAKC,MAAMnD,EAAKiD,SAChC,GAAIA,EACF,MAAO,uBAAsB,IAAIX,MAAOC,aAAaU,EAAQG,YAC7C,uBAAdpD,EAAKqC,MAA+C,sBAAdrC,EAAKqC,KACvC,EACA,KACFY,EAAQN,sBAAsBM,EAAQJ,cAAc7C,EAAKqC,MAEjE,CACA,MAAO,EAmBT,C,6FC3FA,IAAAgB,EAAA5J,EAAA,OACAmH,EAAAnH,EAAA,OAA+CyB,EAAAzB,EAAA,OAmCP+C,EAAAA,WAAG,CACzC,CACEmE,GAAI,EACJpB,KAAM,wBACNM,aAAc,CACZ,CACEc,GAAI,EACJD,iBAAkB,YAClBD,SAAS,EAAAvF,EAAAyB,KAAC0G,EAAAC,YAAW,CAAChG,MAAO,GAAIC,OAAQ,KACzC4C,KAAMyB,EAAAA,eAAe2B,UACrBC,YAAa,8BACbC,iBAAkB,IAClBC,SAAU,KAgBhB,CACE/C,GAAI,EACJpB,KAAM,kBACNM,aAAc,CACZ,CACEc,GAAI,EACJD,iBAAkB,WAClBD,SAAS,EAAAvF,EAAAyB,KAAC0G,EAAAM,WAAU,CAACrG,MAAO,GAAIC,OAAQ,KACxC4C,KAAMyB,EAAAA,eAAeC,SACrB2B,YAAa,8BACbC,iBAAkB,IAClBC,SAAU,K,yIC3ElBhK,EAAAD,EAAA,OAQAqF,EAAAtF,EAAAC,EAAA,QACAmK,EAAAnK,EAAA,MACAoK,EAAArK,EAAAC,EAAA,QACAqK,EAAArK,EAAA,OACAqE,EAAArE,EAAA,OACAsF,EAAAtF,EAAA,MACAmE,EAkBuF,SAAA/D,EAAAC,GAAA,IAAAA,GAAAD,GAAAA,EAAAE,WAAA,OAAAF,EAAA,UAAAA,GAAA,iBAAAA,GAAA,mBAAAA,EAAA,OAAAG,QAAAH,GAAA,IAAAI,EAAAC,EAAAJ,GAAA,GAAAG,GAAAA,EAAAE,IAAAN,GAAA,OAAAI,EAAAG,IAAAP,GAAA,IAAAQ,EAAA,CAAAC,UAAA,MAAAC,EAAAC,OAAAC,gBAAAD,OAAAE,yBAAA,QAAAC,KAAAd,EAAA,eAAAc,GAAA,GAAAC,eAAAC,KAAAhB,EAAAc,GAAA,KAAAG,EAAAP,EAAAC,OAAAE,yBAAAb,EAAAc,GAAA,KAAAG,IAAAA,EAAAV,KAAAU,EAAAC,KAAAP,OAAAC,eAAAJ,EAAAM,EAAAG,GAAAT,EAAAM,GAAAd,EAAAc,EAAA,QAAAN,EAAAL,QAAAH,EAAAI,GAAAA,EAAAc,IAAAlB,EAAAQ,GAAAA,CAAA,CAlBvFW,CAAAvB,EAAA,QACAsK,EAAAtK,EAAA,OACAuK,EAAAxK,EAAAC,EAAA,QACAwK,EAAAxK,EAAA,OAYAyK,EAAA1K,EAAAC,EAAA,QACA0K,EAAA3K,EAAAC,EAAA,QACA2K,EAAA3K,EAAA,OACA4K,EAAA5K,EAAA,MAAuFyB,EAAAzB,EAAA,gBAAAS,EAAAL,GAAA,sBAAAsB,QAAA,gBAAArB,EAAA,IAAAqB,QAAAlB,EAAA,IAAAkB,QAAA,OAAAjB,EAAA,SAAAL,GAAA,OAAAA,EAAAI,EAAAH,CAAA,GAAAD,EAAA,CA6LrF2C,EAAAA,QA3LwB,WACxB,IAAOvC,GAAK,EAAAiF,EAAAA,kBAALjF,EACDkF,GAAa,EAAAC,EAAAA,iBACZkF,GAAe,EAAAC,EAAAA,iBAAe,SAAAC,GAAK,OAAIA,EAAMC,OAAO,IAApDH,YACPI,GAAkC,EAAAC,EAAAA,UAA0B,IAAGC,GAAA,EAAAC,EAAA7K,SAAA0K,EAAA,GAA7CI,GAAFF,EAAA,GAAcA,EAAA,IAExBG,GAAkB,EAAAC,EAAAA,2BAExB,EAAAC,EAAAA,YAAU,WACR,IAAqBxI,EAAfyI,GAAezI,GAAA,EAAA0I,EAAAnL,UAAG,YACtB,IAAM+H,QAAYqD,EAAAA,QAAQC,gBAC1B,GAAItD,EAAK,CACP,IAAMuD,GAAc,EAAAC,EAAAA,WAAUxD,GAC1BuD,GACFnG,EAAWiB,SAASwB,EAAAA,QAAeC,SAAUyD,EAEjD,CACF,IAAC,WARoB,OAAA7I,EAAA+I,MAAA,KAAAC,UAAA,GASrBP,IAEA,IACOQ,EADDC,EAAsBP,EAAAA,QAAQQ,iBAClC,OAAKF,GAAA,EAAAP,EAAAnL,UACL,UAAA+F,GAAkB,IAAVgC,EAAGhC,EAAHgC,IACN,GAAIA,EAAK,CACP,IAAMuD,GAAc,EAAAC,EAAAA,WAAUxD,GAC1BuD,GACFnG,EAAWiB,SAASwB,EAAAA,QAAeC,SAAUyD,EAEjD,CACF,IAAC,SAAAO,GAAA,OAAAH,EAAAF,MAAA,KAAAC,UAAA,IAEH,OAAO,kBAAME,EAAoBG,QAAS,CAC5C,GAAG,IAMcC,GAAA,EAAAZ,EAAAnL,UAAG,YAClB,IAAMgM,QAAkBjB,EAAgBkB,cACxC,GAAID,EAAU,CACZ,IAAME,EAAaF,EAASG,KAAI,SAAAC,GAAS,IAADC,EACtC,OAAA7L,OAAAqE,OAAA,GACKuH,EAAK,CACRvG,aAAkB,MAAJuG,GAAkB,OAAdC,EAAJD,EAAMvG,mBAAF,EAAJwG,EAAoBF,KAAI,SAAAG,GAAO,OAC3CC,EAAcD,EAAQ,KAG5B,IACAxB,EAAaoB,EACf,CACF,IAbA,IAAiBH,EAeXQ,EAAgB,SAACD,GACrB,OAAQA,EAAQ9C,aACd,IAAK,2BACH,OAAAhJ,OAAAqE,OAAA,GACKyH,EAAQ,CACX7F,SAAS,EAAAvF,EAAAyB,KAACsH,EAAAX,YAAW,CAAChG,MAAO,GAAIC,OAAQ,KACzC4C,KAAMyB,EAAAA,QAAe2B,YAEzB,IAAK,0BACH,OAAA/I,OAAAqE,OAAA,GACKyH,EAAQ,CACX7F,SAAS,EAAAvF,EAAAyB,KAACsH,EAAAN,WAAU,CAACrG,MAAO,GAAIC,OAAQ,KACxC4C,KAAMyB,EAAAA,QAAeC,WAEzB,IAAK,uBACH,OAAArH,OAAAqE,OAAA,GACKyH,EAAQ,CACX7F,SAAS,EAAAvF,EAAAyB,KAACsH,EAAAuC,QAAO,CAAClJ,MAAO,GAAIC,OAAQ,KACrC4C,KAAM,OAEV,IAAK,uBACH,OAAA3F,OAAAqE,OAAA,GACKyH,EAAQ,CACX7F,SAAS,EAAAvF,EAAAyB,KAACsH,EAAAwC,QAAO,CAACnJ,MAAO,GAAIC,OAAQ,KACrC4C,KAAM,OAEV,IAAK,2BACH,OAAA3F,OAAAqE,OAAA,GACKyH,EAAQ,CACX7F,SAAS,EAAAvF,EAAAyB,KAACsH,EAAAyC,YAAW,CAACpJ,MAAO,GAAIC,OAAQ,KACzC4C,KAAM,OAEV,IAAK,0BACH,OAAA3F,OAAAqE,OAAA,GACKyH,EAAQ,CACX7F,SAAS,EAAAvF,EAAAyB,KAACsH,EAAA0C,WAAU,CAACrJ,MAAO,GAAIC,OAAQ,KACxC4C,KAAM,OAEV,IAAK,sBACH,OAAA3F,OAAAqE,OAAA,GACKyH,EAAQ,CACX7F,SAAS,EAAAvF,EAAAyB,KAACsH,EAAA2C,OAAM,CAACtJ,MAAO,GAAIC,OAAQ,KACpC4C,KAAM,OAEV,IAAK,uBACH,OAAA3F,OAAAqE,OAAA,GACKyH,EAAQ,CACX7F,SAAS,EAAAvF,EAAAyB,KAACsH,EAAA4C,QAAO,CAACvJ,MAAO,GAAIC,OAAQ,KACrC4C,KAAM,OAEV,QACE,OAAA3F,OAAAqE,OAAA,GACKyH,EAAQ,CACX7F,SAAS,EAAAvF,EAAAyB,KAACsH,EAAA6C,YAAW,CAACxJ,MAAO,GAAIC,OAAQ,KACzC4C,KAAM,OAGd,EAMA,OACE,EAAAjF,EAAA+B,MAACvD,EAAAkD,gBAAe,CACdG,MAAO,CACLgK,UAAW,IACXlG,gBAAiBC,EAAAA,QAAMO,OAEzB7D,WAAW,QACXX,OAAQ,CACNC,IAAK,qFACLE,SAAA,EACF,EAAA9B,EAAA+B,MAAC2G,EAAAoD,aAAY,CAACjK,MAAO3B,EAAAA,QAAO6L,UAAUjK,SAAA,EACpC,EAAA9B,EAAA+B,MAACvD,EAAAuG,iBAAgB,CACfC,QAhByB,WAC/Bf,EAAWiB,SAASwB,EAAAA,QAAesF,eACrC,EAeQnK,MAAO,CAAC3B,EAAAA,QAAO+L,SAASnK,SAAA,EACxB,EAAA9B,EAAAyB,KAACjD,EAAAwD,KAAI,CAACH,MAAO3B,EAAAA,QAAOgM,SAASpK,UAC3B,EAAA9B,EAAAyB,KAACjD,EAAA2N,MAAK,CACJ/J,MAAO,GACPC,OAAQ,GACRV,OAAQ,CACNC,IACEwH,EAAYgD,UACZ,4HAIR,EAAApM,EAAA+B,MAACvD,EAAAwD,KAAI,CAACH,MAAO,CAACqE,OAAQ,GAAGpE,SAAA,EACvB,EAAA9B,EAAA+B,MAACiH,EAAAlK,QAAM,CAAC+C,MAAO,CAAC3B,EAAAA,QAAOQ,KAAM,CAACG,SAAU,KAAKiB,SAAA,CAC1C/C,EAAE,kBACH,EAAAiB,EAAAyB,KAACsH,EAAAsD,WAAU,CAACjK,MAAO,GAAIC,OAAQ,SAEjC,EAAArC,EAAAyB,KAACuH,EAAAlK,QAAM,CACLwN,cAAe,EACfzK,MAAO,CAAC3B,EAAAA,QAAOQ,KAAM,CAACG,SAAU,GAAIuB,MAAO,MAAMN,UAChC,MAAXsH,OAAW,EAAXA,EAAamD,WAAY,KAAiB,MAAXnD,OAAW,EAAXA,EAAaoD,mBAIxD,EAAAxM,EAAAyB,KAACjD,EAAAwD,KAAI,CAACH,MAAO,CAAC4K,YAAa,UAY7B,EAAAzM,EAAAyB,KAACjD,EAAAwD,KAAI,CAACH,MAAO3B,EAAAA,QAAOwM,QAAQ5K,SAQzB6K,EAAAA,WAAWC,OAAS,IACnB,EAAA5M,EAAAyB,KAACjD,EAAA8F,SAAQ,CACPP,KAAM4I,EAAAA,WACNnI,8BAA8B,EAC9BI,WAAY,SAAAE,GAAI,OACd,EAAA9E,EAAAyB,KAACjD,EAAAwD,KAAI,CAAAF,UACH,EAAA9B,EAAAyB,KAACkH,EAAA7J,QAAa,CAACiF,KAAMe,EAAKA,QADjBA,EAAKA,KAAKW,GAEd,QAOrB,C,0FC7NA,IAAAjH,EAAAD,EAAA,OACAmH,EAAAnH,EAAA,OACAG,EAA4D,SAAAC,EAAAC,GAAA,IAAAA,GAAAD,GAAAA,EAAAE,WAAA,OAAAF,EAAA,UAAAA,GAAA,iBAAAA,GAAA,mBAAAA,EAAA,OAAAG,QAAAH,GAAA,IAAAI,EAAAC,EAAAJ,GAAA,GAAAG,GAAAA,EAAAE,IAAAN,GAAA,OAAAI,EAAAG,IAAAP,GAAA,IAAAQ,EAAA,CAAAC,UAAA,MAAAC,EAAAC,OAAAC,gBAAAD,OAAAE,yBAAA,QAAAC,KAAAd,EAAA,eAAAc,GAAA,GAAAC,eAAAC,KAAAhB,EAAAc,GAAA,KAAAG,EAAAP,EAAAC,OAAAE,yBAAAb,EAAAc,GAAA,KAAAG,IAAAA,EAAAV,KAAAU,EAAAC,KAAAP,OAAAC,eAAAJ,EAAAM,EAAAG,GAAAT,EAAAM,GAAAd,EAAAc,EAAA,QAAAN,EAAAL,QAAAH,EAAAI,GAAAA,EAAAc,IAAAlB,EAAAQ,GAAAA,CAAA,CAA5DW,CAAAvB,EAAA,QAA4D,SAAAS,EAAAL,GAAA,sBAAAsB,QAAA,gBAAArB,EAAA,IAAAqB,QAAAlB,EAAA,IAAAkB,QAAA,OAAAjB,EAAA,SAAAL,GAAA,OAAAA,EAAAI,EAAAH,CAAA,GAAAD,EAAA,CAAA2C,EAAAA,QAE7CnB,EAAAA,WAAWC,OAAO,CAC/ByM,QAAS,CAEPC,SAAU,WACVnH,gBAAiBC,EAAAA,MAAMO,OAEzBuG,QAAS,CACPI,SAAU,WACVnH,gBAAiBC,EAAAA,MAAMO,MACvB/D,MAAO,OACP2K,oBAAqB,GACrBC,qBAAsB,GACtBC,IAAK,IACLC,kBAAmB,GACnBC,OAAQ,EACR9K,OAAQ+K,EAAAA,aAAe,KAGzBC,cAAe,CACbJ,KAAM,GACNE,OAAQ,EACRD,kBAAmB,IAGrBI,KAAM,CACJR,SAAU,WACVG,KAAM,GACNM,OAAQ,GACRC,YAAa,EACbC,YAAa,QACbC,YAAa9H,EAAAA,MAAMO,MACnBR,gBAAiB,UACjBG,aAAc,IACd1D,MAAO,IAGTuL,SAAU,CACR3M,MAAO4E,EAAAA,MAAMO,MACb1F,UAAW,SACXI,SAAUC,EAAAA,QAAS8M,UAGrB7B,UAAW,CACT1K,iBAAkB,GAClBwM,cAAe,MACftN,eAAgB,gBAChB0B,WAAY,UAGdgK,QAAS,CACPhK,WAAY,SACZ6L,UAAW,GACXD,cAAe,MACfE,UAAW,GAEb7B,SAAU,CACR9J,MAAO,GACPC,OAAQ,GACRyD,aAAc,GACdkI,SAAU,UAGZtN,KAAM,CACJM,MAAO4E,EAAAA,MAAMO,Q,wFC7Df7E,EAAAA,QAN4B,CAC5B2M,cAAe,gBACfC,kBAAmB,oBACnBC,qBAAsB,uBACtBC,gBAAiB,kBACjBC,WAAY,a,yGCLd,IAAAC,EAAA/P,EAAA,OACAgQ,EAAAhQ,EAAA,OACAE,EAAAF,EAAA,OACAiQ,EAS4D,SAAA7P,EAAAC,GAAA,IAAAA,GAAAD,GAAAA,EAAAE,WAAA,OAAAF,EAAA,UAAAA,GAAA,iBAAAA,GAAA,mBAAAA,EAAA,OAAAG,QAAAH,GAAA,IAAAI,EAAAC,EAAAJ,GAAA,GAAAG,GAAAA,EAAAE,IAAAN,GAAA,OAAAI,EAAAG,IAAAP,GAAA,IAAAQ,EAAA,CAAAC,UAAA,MAAAC,EAAAC,OAAAC,gBAAAD,OAAAE,yBAAA,QAAAC,KAAAd,EAAA,eAAAc,GAAA,GAAAC,eAAAC,KAAAhB,EAAAc,GAAA,KAAAG,EAAAP,EAAAC,OAAAE,yBAAAb,EAAAc,GAAA,KAAAG,IAAAA,EAAAV,KAAAU,EAAAC,KAAAP,OAAAC,eAAAJ,EAAAM,EAAAG,GAAAT,EAAAM,GAAAd,EAAAc,EAAA,QAAAN,EAAAL,QAAAH,EAAAI,GAAAA,EAAAc,IAAAlB,EAAAQ,GAAAA,CAAA,CAT5DW,CAAAvB,EAAA,OACAkQ,EAAAlQ,EAAA,OACAmQ,EAAApQ,EAAAC,EAAA,QACAoQ,EAAArQ,EAAAC,EAAA,QACAqQ,EAAAtQ,EAAAC,EAAA,QACAsQ,EAAAvQ,EAAAC,EAAA,QAEAuQ,GADAxQ,EAAAC,EAAA,QACAD,EAAAC,EAAA,SACAwQ,EAAAzQ,EAAAC,EAAA,QACAyQ,EAAA1Q,EAAAC,EAAA,QAA4DyB,EAAAzB,EAAA,gBAAAS,EAAAL,GAAA,sBAAAsB,QAAA,gBAAArB,EAAA,IAAAqB,QAAAlB,EAAA,IAAAkB,QAAA,OAAAjB,EAAA,SAAAL,GAAA,OAAAA,EAAAI,EAAAH,CAAA,GAAAD,EAAA,CAC5D,IAAMsQ,GAAQ,EAAAC,EAAAA,8BAERC,EAAa,CACjB,CACE3N,IAAK,WACL0B,WAAY,cACZkM,eAAgB,YAElB,CACE5N,IAAK,YACL0B,WAAY,iBACZkM,eAAgB,aAElB,CACE5N,IAAK,SACL0B,WAAY,MACZkM,eAAgB,WAoClB9N,EAAAA,QAhCyB,SAACuB,GAC1B,OACE,EAAA7C,EAAA+B,MAAA/B,EAAAqP,SAAA,CAAAvN,SAAA,EACE,EAAA9B,EAAAyB,KAAC8M,EAAAe,aAAY,CAACC,MAAO,CAACC,EAAAA,iBACtB,EAAAxP,EAAAyB,KAAC8M,EAAAkB,oBAAmBnQ,OAAAqE,OAAA,CAClB+L,cAAeC,EAAAA,SACXnB,EAAG,CACPoB,MAAKtQ,OAAAqE,OAAA,GAAM6K,EAAIqB,MAAUD,EAAAA,SAAO9N,UAChC,EAAA9B,EAAA+B,MAACtD,EAAAqR,cAAa,CAAAhO,SAAA,EACZ,EAAA9B,EAAA+B,MAACkN,EAAMc,UAAS,CACdC,cAAe,CACbC,aAAa,GACbnO,SAAA,EACF,EAAA9B,EAAAyB,KAACwN,EAAMiB,OAAM,CACXC,cAAetN,EACfwB,KAAM+L,EAAAA,QAAsB/B,WAC5BgC,UAAWC,EAAAA,UAEZnB,EAAWlE,KAAI,SAACsF,EAAQC,GAAK,OAC5B,EAAAxQ,EAAAyB,KAACwN,EAAMiB,OAAM,CAEX7L,KAAMkM,EAAOnB,eACbiB,UAAWI,EAAAA,QACXN,cAAe,CAAC3O,IAAK+O,EAAO/O,IAAK0B,WAAYqN,EAAOrN,aAH/CqN,EAAOnB,eAIZ,QAGN,EAAApP,EAAAyB,KAACmN,EAAA9P,QAAK,CAAC4R,OAAQC,EAAAA,kBAKzB,C","sources":["webpack:///./src/app/components/Splash/index.tsx","webpack:///./src/app/components/withComponent/index.tsx","webpack:///./src/app/home-list-services/component/Task/index.tsx","webpack:///./src/app/home-list-services/component/Task/styles.ts","webpack:///./src/app/home-list-services/handleDeepLink.tsx","webpack:///./src/app/home-list-services/helper.tsx","webpack:///./src/app/home-list-services/index.tsx","webpack:///./src/app/home-list-services/styles.ts","webpack:///./src/constants/NavigationNameAccount.ts","webpack:///./src/navigation/HomeListNavigation.tsx"],"sourcesContent":["import React from 'react';\nimport {StyleSheet, View, ImageBackground} from 'react-native';\nimport {MD3Colors, Text} from 'react-native-paper';\nimport FontSize, {SizeDP} from '../../../constants/Size';\nimport FastImage from 'react-native-fast-image';\n\nconst SplashScreen = ({app}: {app: string}) => {\n  return (\n    <ImageBackground\n      source={{\n        uri: 'https://res.cloudinary.com/de0sqyhr9/image/upload/v1745662431/background_3x_z7dvqo.png',\n      }}\n      style={styles.container}>\n      <View\n        style={{\n          alignItems: 'center',\n          justifyContent: 'center',\n          flex: 1,\n        }}>\n        <Text allowFontScaling={false} style={styles.text}>\n          {app}\n        </Text>\n        <FastImage\n          style={{width: '100%', height: '90%'}}\n          source={{\n            uri: 'https://res.cloudinary.com/de0sqyhr9/image/upload/v1745663546/logo_mmwu8t.gif',\n          }}\n          resizeMode={FastImage.resizeMode.contain}\n        />\n      </View>\n    </ImageBackground>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n  },\n  icon: {\n    textAlign: 'center',\n  },\n  text: {\n    padding: SizeDP(16),\n    fontSize: FontSize.FontBigger,\n    color: MD3Colors.primary20,\n    textAlign: 'center',\n  },\n  progress: {\n    marginVertical: SizeDP(16),\n    marginHorizontal: SizeDP(32),\n  },\n});\n\nexport default SplashScreen;\n","import {Federated} from '@callstack/repack/client';\nimport React, {useMemo} from 'react';\nimport SplashScreen from '../../components/Splash';\nimport {useRoute} from '@react-navigation/native';\n\nconst WithComponent = (props: any) => {\n  const router = useRoute<any>();\n  const {app, moduleName} = router?.params;\n  const ComponentCM = useMemo(() => {\n    return React.lazy(() => Federated.importModule(app, `./${moduleName}`));\n  }, [app, moduleName]);\n  return (\n    <React.Suspense fallback={<SplashScreen app={''} />}>\n      <ComponentCM {...props} />\n    </React.Suspense>\n  );\n};\n\nexport default WithComponent;\n","import {Alert, FlatList, Image, TouchableOpacity, View} from 'react-native';\nimport styles from './styles';\nimport {FC} from 'react';\nimport {useNavigation} from '@react-navigation/native';\nimport {useTranslation} from 'react-i18next';\nimport {IIconHome, IMenuServices, IServices, ITask} from '../../helper';\nimport TextCM from '../../../components/Text';\n\ntype Props = {\n  data: IMenuServices;\n};\n\nconst TaskComponent: FC<Props> = ({data}) => {\n  const {t} = useTranslation();\n  const navigation = useNavigation<any>();\n\n  const renderItemList = ({item}: {item: IServices}) => {\n    return (\n      <TouchableOpacity\n        onPress={() =>\n          item.path\n            ? navigation.navigate(item.path)\n            : Alert.alert(t('CM.noti'), t('NT.notification.inprocess_noti'))\n        }\n        style={styles.ctnIcon}>\n        <View style={styles.viewIcon}>{item.imgPath}</View>\n        <TextCM>{item?.nameTranslateKey}</TextCM>\n      </TouchableOpacity>\n    );\n  };\n\n  return (\n    <View key={data.id} style={styles.ctnContainer}>\n      <TextCM style={styles.TextTitle}>{t(data?.name)}</TextCM>\n      <FlatList\n        nestedScrollEnabled\n        showsVerticalScrollIndicator={false}\n        showsHorizontalScrollIndicator={false}\n        horizontal\n        data={data.servicesList}\n        renderItem={renderItemList}\n      />\n    </View>\n  );\n};\n\nexport default TaskComponent;\n","import {StyleSheet} from 'react-native';\nimport {Color, Font} from '../../../../constants';\n\nexport default StyleSheet.create({\n  ctnContainer: {\n    backgroundColor: Color.Background,\n    marginVertical: 8,\n    borderRadius: 8,\n  },\n\n  TextTitle: {\n    color: Color.Text,\n    fontFamily: Font.InterSemiBold600,\n    padding: 8,\n  },\n\n  ctnIcon: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 16,\n    rowGap: 8,\n  },\n\n  viewIcon: {\n    width: 38,\n    height: 38,\n    borderRadius: 19,\n    backgroundColor: Color.White,\n    alignItems: 'center',\n    justifyContent: 'center',\n    shadowColor: Color.Black,\n    shadowOpacity: 0.1,\n  },\n});\n","import {NavigationName} from '../../constants';\nimport {CommonUtils} from '../../utils';\nimport {\n  INotification,\n  INotificationItem,\n} from '../screens/notification/interface';\n\nexport let configScreen = {\n  screens: {\n    [NavigationName.ERequest]: {path: ''},\n    [NavigationName.SigneContractScreen]: {path: ''},\n  },\n};\n\nexport const handleUrl = (url: string | null) => {\n  // 1 for my ticket, 2 for ticket required\n  if (!url) return null;\n  const path = url?.split('?')[0];\n  const params = url?.split('?')[1];\n  if (!params) return null;\n  const listParams = CommonUtils.parseQueryParamsString(params);\n\n  if (listParams._typeView === 'mine') {\n    return {\n      type: `details_${new Date().getTime()}`,\n      dataTicketId: path.split('/').pop(),\n      selectTabBottom: 1,\n    };\n  } else if (listParams._typeView === 'required') {\n    return {\n      type: `details_${new Date().getTime()}`,\n      dataTicketId: path.split('/').pop(),\n      selectTabBottom: 2,\n      recipientDetailsId: listParams._recipientDetailsId,\n      userTaskId: listParams._userTaskId,\n      notifyActionType: listParams.from,\n    };\n  } else return null;\n};\n\nexport const handleDirectNoti = (item: INotification) => {\n  if (\n    item.type === 'ticket_create' ||\n    item.type === 'ticket_update' ||\n    item.type === 'ticket_cancel' ||\n    item.type === 'ticket_require_confirm' ||\n    item.type === 'ticket_confirm' ||\n    item.type === 'ticket_reject' ||\n    item.type === 'ticket_require_review' ||\n    item.type === 'ticket_review' ||\n    item.type === 'ticket_review_reject' ||\n    item.type === 'ticket_assign_user' ||\n    item.type === 'ticket_update_status' ||\n    item.type === 'ticket_authorize' ||\n    item.type === 'ticket_remind_workflow' ||\n    item.type === 'ticket_remind_usertask' ||\n    item.type === 'ticket_remind_workflow_overdue_onetime' ||\n    item.type === 'ticket_remind_usertask_overdue_onetime' ||\n    item.type === 'ticket_remind_workflow_overdue_period' ||\n    item.type === 'ticket_remind_usertask_overdue_period' ||\n    item.type === 'ticket_tag_comment' ||\n    item.type === 'acl_ticket_create'\n  ) {\n    const content = JSON.parse(item.content) as INotificationItem;\n    if (content) {\n      return `kitaDemo://details_${new Date().getTime()}/${content.ticketId}/${\n        item.type === 'ticket_tag_comment' || item.type === 'acl_ticket_create'\n          ? 1\n          : 2\n      }/${content.recipientDetailsId}/${content.userTaskId}/${item.type}`;\n    }\n  }\n  return '';\n\n  // if (item.type === 'ticket_delete') {\n  //   viewList('ticket', 'delete');\n  //   return;\n  // }\n\n  // if (\n  //   item.type === 'service_group_create' ||\n  //   item.type === 'service_group_update'\n  // ) {\n  //   viewList('service-group', 'update');\n  //   return;\n  // }\n\n  // if (item.type === 'service_group_delete') {\n  //   viewList('service-group', 'delete');\n  //   return;\n  // }\n};\n","import {IceContract, IceRequest, IceTask} from '../../assets/images';\nimport {NavigationName} from '../../constants';\n\nexport interface IIconHome {\n  id: number;\n  pathImage: any;\n  title?: string;\n  direct?: string;\n}\n\nexport interface ITask {\n  id: string;\n  header: string;\n  listData: IIconHome[];\n}\n\nexport interface IMenuServices {\n  id?: number;\n  name?: string;\n  nameTranslateKey?: string;\n  description?: string;\n  descriptionTranslateKey?: string;\n  sequence?: number;\n  servicesList?: IServices[];\n}\n\nexport interface IServices {\n  id: number;\n  serviceName: string;\n  nameTranslateKey: string;\n  path: any;\n  imgPath: any;\n  descTranslateKey: string;\n  sequence: number;\n}\n\nexport const DUMMY_DATA: IMenuServices[] = [\n  {\n    id: 1,\n    name: 'HM.sign_certification',\n    servicesList: [\n      {\n        id: 1,\n        nameTranslateKey: 'eContract',\n        imgPath: <IceContract width={18} height={18} />,\n        path: NavigationName.eContract,\n        serviceName: 'eContract.home.manager.desc',\n        descTranslateKey: '1',\n        sequence: 1,\n      },\n      // {\n      //   id: 2,\n      //   title: 'CeCA',\n      //   pathImage: <IconCECA width={(18)} height={(18)} />,\n      //   direct: 'eContractScreen',\n      // },\n      // {\n      //   id: 3,\n      //   title: 'eConDrive',\n      //   pathImage: <IceConDrive width={(18)} height={(18)} />,\n      //   direct: 'eContractScreen',\n      // },\n    ],\n  },\n  {\n    id: 2,\n    name: 'HO.home.manager',\n    servicesList: [\n      {\n        id: 1,\n        nameTranslateKey: 'eRequest',\n        imgPath: <IceRequest width={18} height={18} />,\n        path: NavigationName.ERequest,\n        serviceName: 'eContract.home.manager.desc',\n        descTranslateKey: '1',\n        sequence: 1,\n      },\n      // {\n      //   id: 2,\n      //   nameTranslateKey: 'eTask',\n      //   imgPath: <IceTask width={18} height={18} />,\n      //   path: NavigationName.eTasks,\n      //   serviceName: '',\n      //   descTranslateKey: '1',\n      //   sequence: 1,\n      // },\n      // {\n      //   id: 3,\n      //   title: 'eForm',\n      //   pathImage: <IceForm width={(18)} height={(18)} />,\n      //   direct: 'EKYCWebview',\n      // },\n      // {\n      //   id: 4,\n      //   title: 'eFlow',\n      //   pathImage: <IceFlow width={(18)} height={(18)} />,\n      //   direct: 'eContractScreen',\n      // },\n    ],\n  },\n  // {\n  //   id: '3',\n  //   header: 'Dịch vụ - Tiện ích',\n  //   listData: [\n  //     {\n  //       id: 1,\n  //       title: 'Vay nhanh',\n  //       pathImage: <IconiVay width={(18)} height={(18)} />,\n  //       direct: 'eContractScreen',\n  //     },\n  //     {\n  //       id: 2,\n  //       title: 'eAccount',\n  //       pathImage: <IceAccount width={(18)} height={(18)} />,\n  //       direct: 'eContractScreen',\n  //     },\n  //   ],\n  // },\n];\n","import {\n  FlatList,\n  Image,\n  ImageBackground,\n  Linking,\n  TouchableOpacity,\n  View,\n} from 'react-native';\nimport styles from './styles';\nimport {SafeAreaView} from 'react-native-safe-area-context';\nimport TaskComponent from './component/Task';\nimport {DUMMY_DATA, IMenuServices, IServices} from './helper.tsx';\nimport {useNavigation} from '@react-navigation/native';\nimport {useTranslation} from 'react-i18next';\nimport React, {useEffect, useState} from 'react';\nimport {useAppSelector} from '../../hooks/useRedux.ts';\nimport NavigationName from '../../constants/NavigationName.ts';\nimport {\n  IcCeCa,\n  IceAccount,\n  IceConDrive,\n  IceContract,\n  IceFlow,\n  IceForm,\n  IceRequest,\n  IceTask,\n  IconAccount,\n  IcWaveHand,\n} from '../../assets/images/index.ts';\nimport TextCM from '../components/Text/index.tsx';\nimport Color from '../../constants/Color.ts';\nimport {handleUrl} from './handleDeepLink.tsx';\nimport {useAccountInfoServices} from '../../hooks/apiHooks/useAccountInfoServices.tsx';\n\nconst HomeScreenHostApp = () => {\n  const {t} = useTranslation();\n  const navigation = useNavigation<any>();\n  const {dataAccount} = useAppSelector(state => state.account);\n  const [menuSwaps, setMenuSwaps] = useState<IMenuServices[]>([]);\n\n  const AccountServices = useAccountInfoServices();\n\n  useEffect(() => {\n    const checkInitialURL = async () => {\n      const url = await Linking.getInitialURL();\n      if (url) {\n        const dataFromUrl = handleUrl(url);\n        if (dataFromUrl) {\n          navigation.navigate(NavigationName.ERequest, dataFromUrl);\n        }\n      }\n    };\n    checkInitialURL();\n\n    const linkingSubscription = Linking.addEventListener(\n      'url',\n      async ({url}) => {\n        if (url) {\n          const dataFromUrl = handleUrl(url);\n          if (dataFromUrl) {\n            navigation.navigate(NavigationName.ERequest, dataFromUrl);\n          }\n        }\n      },\n    );\n    return () => linkingSubscription.remove();\n  }, []);\n\n  // useEffect(() => {\n  //   getMenuView();\n  // }, []);\n\n  const getMenuView = async () => {\n    const dataResp = (await AccountServices.getMenuView()) as IMenuServices[];\n    if (dataResp) {\n      const filterData = dataResp.map(menu => {\n        return {\n          ...menu,\n          servicesList: menu?.servicesList?.map(service =>\n            checkpathIcon(service),\n          ),\n        };\n      });\n      setMenuSwaps(filterData);\n    }\n  };\n\n  const checkpathIcon = (service: IServices) => {\n    switch (service.serviceName) {\n      case 'switchApp.eContract.name':\n        return {\n          ...service,\n          imgPath: <IceContract width={18} height={18} />,\n          path: NavigationName.eContract,\n        };\n      case 'switchApp.eRequest.name':\n        return {\n          ...service,\n          imgPath: <IceRequest width={18} height={18} />,\n          path: NavigationName.ERequest,\n        };\n      case 'switchApp.eTask.name':\n        return {\n          ...service,\n          imgPath: <IceTask width={18} height={18} />,\n          path: null,\n        };\n      case 'switchApp.eForm.name':\n        return {\n          ...service,\n          imgPath: <IceForm width={18} height={18} />,\n          path: null,\n        };\n      case 'switchApp.eConDrive.name':\n        return {\n          ...service,\n          imgPath: <IceConDrive width={18} height={18} />,\n          path: null,\n        };\n      case 'switchApp.eAccount.name':\n        return {\n          ...service,\n          imgPath: <IceAccount width={18} height={18} />,\n          path: null,\n        };\n      case 'switchApp.ceca.name':\n        return {\n          ...service,\n          imgPath: <IcCeCa width={18} height={18} />,\n          path: null,\n        };\n      case 'switchApp.eFlow.name':\n        return {\n          ...service,\n          imgPath: <IceFlow width={18} height={18} />,\n          path: null,\n        };\n      default:\n        return {\n          ...service,\n          imgPath: <IconAccount width={18} height={18} />,\n          path: null,\n        };\n    }\n  };\n\n  const handleGoToAccountSetting = () => {\n    navigation.navigate(NavigationName.AccountSetting);\n  };\n\n  return (\n    <ImageBackground\n      style={{\n        minHeight: 247,\n        backgroundColor: Color.White,\n      }}\n      resizeMode=\"cover\"\n      source={{\n        uri: 'https://res.cloudinary.com/de0sqyhr9/image/upload/v1745662431/imgBg_3x_n16k9r.png',\n      }}>\n      <SafeAreaView style={styles.ctnHeader}>\n        <TouchableOpacity\n          onPress={handleGoToAccountSetting}\n          style={[styles.ctnLeft]}>\n          <View style={styles.ctnImage}>\n            <Image\n              width={40}\n              height={40}\n              source={{\n                uri:\n                  dataAccount.imageUrl ||\n                  'https://lh3.googleusercontent.com/-cw77lUnOvmI/AAAAAAAAAAI/AAAAAAAAAAA/WMNck32dKbc/s181-c/104220521160525129167.jpg',\n              }}\n            />\n          </View>\n          <View style={{rowGap: 8}}>\n            <TextCM style={[styles.text, {fontSize: 16}]}>\n              {t('HO.home.hello')}\n              <IcWaveHand width={20} height={20} />\n            </TextCM>\n            <TextCM\n              numberOfLines={1}\n              style={[styles.text, {fontSize: 12, width: 150}]}>\n              {'' + dataAccount?.firstName + ' ' + dataAccount?.lastName}\n            </TextCM>\n          </View>\n        </TouchableOpacity>\n        <View style={{marginRight: 20}}>\n          {/* <TouchableOpacity\n              style={{\n                position: 'relative',\n              }}>\n              <IcBell width={(22)} height={(22)} />\n              <View style={styles.noti}>\n                <Text style={styles.textNoti}>99+</Text>\n              </View>\n            </TouchableOpacity> */}\n        </View>\n      </SafeAreaView>\n      <View style={styles.ctnHome}>\n        {/* <View style={styles.ctnTextSearch}>\n            <TextFieldCM\n              label=\"Nhập để tìm kiếm\"\n              inputContainerStyle={{backgroundColor: Color.White}}\n              viewIconLeft={<IcSearch />}\n            />\n          </View> */}\n        {DUMMY_DATA.length > 0 && (\n          <FlatList\n            data={DUMMY_DATA}\n            showsVerticalScrollIndicator={false}\n            renderItem={item => (\n              <View key={item.item.id}>\n                <TaskComponent data={item.item} />\n              </View>\n            )}\n          />\n        )}\n      </View>\n    </ImageBackground>\n  );\n};\n\nexport default HomeScreenHostApp;\n","import {StyleSheet} from 'react-native';\nimport {Color} from '../../constants';\nimport FontSize, {ScreenHeight} from '../../constants/Size';\n\nexport default StyleSheet.create({\n  ctnMain: {\n    // flex: 1,\n    position: 'relative',\n    backgroundColor: Color.White,\n  },\n  ctnHome: {\n    position: 'absolute',\n    backgroundColor: Color.White,\n    width: '100%',\n    borderTopLeftRadius: 16,\n    borderTopRightRadius: 16,\n    top: 190,\n    paddingHorizontal: 16,\n    zIndex: 2,\n    height: ScreenHeight - 190,\n  },\n\n  ctnTextSearch: {\n    top: -20,\n    zIndex: 1,\n    paddingHorizontal: 16,\n  },\n\n  noti: {\n    position: 'absolute',\n    top: -10,\n    right: -20,\n    borderWidth: 2,\n    borderStyle: 'solid',\n    borderColor: Color.White,\n    backgroundColor: '#E14337',\n    borderRadius: 100,\n    width: 35,\n  },\n\n  textNoti: {\n    color: Color.White,\n    textAlign: 'center',\n    fontSize: FontSize.FontTiny,\n  },\n\n  ctnHeader: {\n    marginHorizontal: 16,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n\n  ctnLeft: {\n    alignItems: 'center',\n    columnGap: 14,\n    flexDirection: 'row',\n    marginTop: 3,\n  },\n  ctnImage: {\n    width: 40,\n    height: 40,\n    borderRadius: 20,\n    overflow: 'hidden',\n  },\n\n  text: {\n    color: Color.White,\n  },\n});\n","const NavigationNameAccount = {\n  AccountScreen: 'AccountScreen',\n  InformationScreen: 'InformationScreen',\n  ChangePasswordScreen: 'ChangePasswordScreen',\n  PasswordSetting: 'PasswordSetting',\n  HomeScreen: 'HomeScreen',\n};\n\nexport default NavigationNameAccount;\n","import {createNativeStackNavigator} from '@react-navigation/native-stack';\nimport {ApplicationProvider, IconRegistry} from '@ui-kitten/components';\nimport {PaperProvider} from 'react-native-paper';\nimport * as eva from '@eva-design/eva';\nimport {EvaIconsPack} from '@ui-kitten/eva-icons';\nimport {default as theme} from '../../custom-theme.json'; // <-- Import app theme\nimport {default as mapping} from '../../mapping.json'; // <-- Import app mapping\nimport Toast from 'react-native-toast-message';\nimport NavigationNameAccount from '../constants/NavigationNameAccount';\nimport React from 'react';\nimport toastConfig from '../utils/ToastConfig';\nimport HomeScreenHostApp from '../app/home-list-services';\nimport WithComponent from '../app/components/withComponent';\nconst Stack = createNativeStackNavigator();\n\nconst listScreen = [\n  {\n    app: 'eRequest',\n    moduleName: 'eRequestApp',\n    navigationName: 'ERequest',\n  },\n  {\n    app: 'eContract',\n    moduleName: 'createContract',\n    navigationName: 'eContract',\n  },\n  {\n    app: 'eTasks',\n    moduleName: 'App',\n    navigationName: 'eTasks',\n  },\n];\n\nconst HomeListNavigation = (props: any) => {\n  return (\n    <>\n      <IconRegistry icons={[EvaIconsPack]} />\n      <ApplicationProvider\n        customMapping={mapping as any}\n        {...eva}\n        theme={{...eva.light, ...theme}}>\n        <PaperProvider>\n          <Stack.Navigator\n            screenOptions={{\n              headerShown: false,\n            }}>\n            <Stack.Screen\n              initialParams={props}\n              name={NavigationNameAccount.HomeScreen}\n              component={HomeScreenHostApp}\n            />\n            {listScreen.map((screen, index) => (\n              <Stack.Screen\n                key={screen.navigationName}\n                name={screen.navigationName}\n                component={WithComponent}\n                initialParams={{app: screen.app, moduleName: screen.moduleName}}\n              />\n            ))}\n          </Stack.Navigator>\n          <Toast config={toastConfig} />\n        </PaperProvider>\n      </ApplicationProvider>\n    </>\n  );\n};\n\nexport default HomeListNavigation;\n"],"names":["_interopRequireDefault","require","_reactNative","_reactNativePaper","_Size","e","r","__esModule","default","t","_getRequireWildcardCache","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","_interopRequireWildcard","_reactNativeFastImage","_jsxRuntime","WeakMap","styles","StyleSheet","create","container","flex","justifyContent","icon","textAlign","text","padding","SizeDP","fontSize","FontSize","FontBigger","color","MD3Colors","primary20","progress","marginVertical","marginHorizontal","exports","_ref","app","jsx","ImageBackground","source","uri","style","children","jsxs","View","alignItems","Text","allowFontScaling","width","height","resizeMode","FastImage","contain","_client","_react","_Splash","_native","props","router","useRoute","_router$params","params","moduleName","ComponentCM","useMemo","React","lazy","Federated","importModule","Suspense","fallback","assign","_styles","_reactI18next","_Text","data","useTranslation","navigation","useNavigation","ctnContainer","TextTitle","name","FlatList","nestedScrollEnabled","showsVerticalScrollIndicator","showsHorizontalScrollIndicator","horizontal","servicesList","renderItem","_ref2","item","TouchableOpacity","onPress","path","navigate","Alert","alert","ctnIcon","viewIcon","imgPath","nameTranslateKey","id","_constants","backgroundColor","Color","Background","borderRadius","fontFamily","Font","InterSemiBold600","rowGap","White","shadowColor","Black","shadowOpacity","_utils","screens","_defineProperty2","NavigationName","ERequest","SigneContractScreen","url","split","listParams","CommonUtils","parseQueryParamsString","_typeView","type","Date","getTime","dataTicketId","pop","selectTabBottom","recipientDetailsId","_recipientDetailsId","userTaskId","_userTaskId","notifyActionType","from","content","JSON","parse","ticketId","_images","IceContract","eContract","serviceName","descTranslateKey","sequence","IceRequest","_reactNativeSafeAreaContext","_Task","_helper","_useRedux","_NavigationName","_index","_index2","_Color","_handleDeepLink","_useAccountInfoServices","dataAccount","useAppSelector","state","account","_useState","useState","_useState2","_slicedToArray2","setMenuSwaps","AccountServices","useAccountInfoServices","useEffect","checkInitialURL","_asyncToGenerator2","Linking","getInitialURL","dataFromUrl","handleUrl","apply","arguments","_ref3","linkingSubscription","addEventListener","_x","remove","_ref4","dataResp","getMenuView","filterData","map","menu","_menu$servicesList","service","checkpathIcon","IceTask","IceForm","IceConDrive","IceAccount","IcCeCa","IceFlow","IconAccount","minHeight","SafeAreaView","ctnHeader","AccountSetting","ctnLeft","ctnImage","Image","imageUrl","IcWaveHand","numberOfLines","firstName","lastName","marginRight","ctnHome","DUMMY_DATA","length","ctnMain","position","borderTopLeftRadius","borderTopRightRadius","top","paddingHorizontal","zIndex","ScreenHeight","ctnTextSearch","noti","right","borderWidth","borderStyle","borderColor","textNoti","FontTiny","flexDirection","columnGap","marginTop","overflow","AccountScreen","InformationScreen","ChangePasswordScreen","PasswordSetting","HomeScreen","_nativeStack","_components","eva","_evaIcons","_customTheme","_mapping","_reactNativeToastMessage","_NavigationNameAccount","_ToastConfig","_homeListServices","_withComponent","Stack","createNativeStackNavigator","listScreen","navigationName","Fragment","IconRegistry","icons","EvaIconsPack","ApplicationProvider","customMapping","mapping","theme","light","PaperProvider","Navigator","screenOptions","headerShown","Screen","initialParams","NavigationNameAccount","component","HomeScreenHostApp","screen","index","WithComponent","config","toastConfig"],"sourceRoot":""}