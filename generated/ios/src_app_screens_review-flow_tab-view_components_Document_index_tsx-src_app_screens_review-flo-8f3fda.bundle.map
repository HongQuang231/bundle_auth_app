{"version":3,"file":"src_app_screens_review-flow_tab-view_components_Document_index_tsx-src_app_screens_review-flo-8f3fda.bundle","mappings":"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","sources":["webpack:///./src/app/screens/review-flow/tab-view/components/Document/index.tsx","webpack:///./src/app/screens/review-flow/tab-view/components/Document/styles.ts","webpack:///./src/app/screens/review-flow/tab-view/listTasks/index.tsx","webpack:///./src/app/screens/review-flow/tab-view/listTasks/styles.ts","webpack:///./src/app/screens/search-ticket/components/BottomShetFilter/index.tsx","webpack:///./src/app/screens/search-ticket/components/ModalDate/index.tsx","webpack:///./src/app/screens/search-ticket/helper.ts","webpack:///./src/app/screens/search-ticket/index.tsx","webpack:///./src/app/screens/search-ticket/styles.ts"],"sourcesContent":["//import liraries\nimport React, {useEffect, useState} from 'react';\nimport {\n  Platform,\n  ScrollView,\n  Share,\n  TouchableOpacity,\n  View,\n} from 'react-native';\nimport styles from './styles';\nimport {useAppSelector} from '../../../../../../hooks/useRedux';\nimport {IPostMessageUserTask, STATUS_TASK} from '../../../interface';\nimport TableCM from '../../../../../components/Table';\nimport {SizeDP} from '../../../../../../constants/Size';\nimport TextCM from '../../../../../components/Text';\nimport {\n  IconDownload,\n  IconTrash,\n  IconUpload,\n  IconView,\n} from '../../../../../../assets/images';\nimport PagingCM from '../../../../../components/Paging';\nimport {useNavigation} from '@react-navigation/native';\nimport {CommonUtils, DateUtils} from '../../../../../../utils';\nimport Toast from 'react-native-toast-message';\nimport {\n  IInfoFile,\n  IInfoFileRelative,\n} from '../../../../ticket-detail/components/TabView/components/Document/interface';\nimport NavigationName from '../../../../../../constants/NavigationName';\nimport {useTranslation} from 'react-i18next';\nimport {useReviewServices} from '../../../../../../hooks/apiHooks/useReviewTicketServices';\nimport RNFS, {DownloadFileOptions} from 'react-native-fs';\nimport ReactNativeBlobUtil from 'react-native-blob-util';\nimport ModalFullScreen from '../../../../../components/ModalFullScreen';\nimport ViewFileScreen from '../../../../ticket-detail/components/TabView/components/Document/ViewFileWebView';\nimport {getConfig} from '../../../../../../services/httpClient';\ntype Props = {\n  dataUserTask: IPostMessageUserTask;\n};\n// create a component\nconst Document = ({dataUserTask}: Props) => {\n  const pageSize = 3;\n  const {t} = useTranslation();\n  const navigation = useNavigation<any>();\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalItems, setTotalItems] = useState<number>(0);\n  const [dataRelative, setDataRelative] = useState<any[]>([]);\n  const [isViewFile, setIsViewFile] = useState<boolean>(false);\n  const [urlViewFile, setUrlViewFile] = useState<string>('');\n  const [viewNameFile, setViewNameFile] = useState<string>('');\n  const {dataTicketRedux} = useAppSelector(state => state.ticket);\n  const {accessToken} = useAppSelector(state => state.common);\n  const {dataAccount} = useAppSelector(state => state.account);\n  const ReviewTicketServices = useReviewServices();\n  useEffect(() => {\n    getFileByUserTask(currentPage);\n  }, [currentPage]);\n\n  const getFileByUserTask = async (page: number) => {\n    try {\n      const params = {\n        page: page - 1,\n        size: pageSize,\n        sort: 'createdDate,desc',\n      };\n      const dataResp = await ReviewTicketServices.getListAttachmentsUserTask(\n        dataTicketRedux.id,\n        dataUserTask._userTaskId,\n        params,\n        accessToken,\n      );\n      if (dataResp) {\n        let filterData = [];\n        if (dataAccount?.orgIn?.includes('/1978/5742')) {\n          filterData = dataResp?.data.filter((d: any) => {\n            return !(d.resource == 'eform' && d.type == 'upload_img');\n          });\n        } else {\n          filterData = dataResp?.data;\n        }\n\n        if (filterData?.length === 0) {\n          if (page > 1) {\n            setCurrentPage(page - 1);\n          } else {\n            setDataRelative([]);\n            setTotalItems(0);\n          }\n          return;\n        }\n        setTotalItems(dataResp?.totalRecords);\n        convertDataFileToTable(filterData);\n      }\n    } catch (error) {}\n  };\n\n  const getListFile = async () => {\n    try {\n      const dataFile = await ReviewTicketServices.getListFileReview(\n        dataTicketRedux.id,\n        dataUserTask._userTaskId,\n        accessToken,\n      );\n    } catch (error) {}\n  };\n\n  const renderActionInfoFile = (\n    isInfoFile = true,\n    data: IInfoFile | IInfoFileRelative,\n  ) => {\n    return (\n      <View style={styles.ctnAction}>\n        <TouchableOpacity\n          onPress={() => handleViewFile(isInfoFile, data)}\n          hitSlop={SizeDP(15)}>\n          <IconView width={SizeDP(16)} height={SizeDP(16)} />\n        </TouchableOpacity>\n        <TouchableOpacity\n          onPress={() => handleDownload(data, isInfoFile)}\n          hitSlop={SizeDP(15)}>\n          <IconDownload width={SizeDP(16)} height={SizeDP(16)} />\n        </TouchableOpacity>\n        {!isInfoFile &&\n          (data as IInfoFileRelative).allowDeleted &&\n          dataUserTask._status === STATUS_TASK.TASK_SEARCH && (\n            <TouchableOpacity\n              onPress={() => handleClearFile(data?.id?.toString())}\n              hitSlop={SizeDP(15)}>\n              <IconTrash width={SizeDP(16)} height={SizeDP(16)} />\n            </TouchableOpacity>\n          )}\n      </View>\n    );\n  };\n\n  const handleViewFile = async (\n    isInfoFile = true,\n    data: IInfoFile | IInfoFileRelative,\n  ) => {\n    setViewNameFile((data as IInfoFileRelative).fileName?.split('.')?.[0]);\n    try {\n      Toast.show({\n        type: 'info',\n        text1: t('CM.info'),\n        text2: t('TK.viewFile'),\n      });\n      const formData = new FormData();\n      if (!isInfoFile && (data as any).resource === 'ewriter') {\n        const base64String = await getFiles(\n          (data as any).userTaskId,\n          (data as any)?.fileRepositoryId,\n          (data as any)?.fileName,\n        );\n        formData.append('file', base64String);\n        const dataView = await ReviewTicketServices.viewFile(\n          formData,\n          accessToken,\n        );\n        if (dataView?.code == 1) {\n          setIsViewFile(true);\n          setUrlViewFile(dataView.message);\n        } else {\n          Toast.show({\n            type: 'error',\n            text1: t('CM.noti'),\n            text2: t('CM.error'),\n          });\n        }\n        return;\n      }\n      let keyName: string = (data as any).name;\n      if (isInfoFile) {\n        keyName = (data as IInfoFile).keyName;\n      } else {\n        keyName = (data as IInfoFileRelative).name;\n      }\n      let bucketName: string = data.bucketName;\n      if (!data.bucketName) {\n        const arr = (data as any)?.name?.split('.s3-hfx03.fptcloud.com:443/');\n        keyName = arr[1];\n        bucketName = arr[0].split('https://')[1];\n      }\n      formData.append('keyName', keyName);\n      formData.append('bucketName', bucketName);\n      formData.append('beanName', data.beanName);\n      const dataView = await ReviewTicketServices.viewFile(\n        formData,\n        accessToken,\n      );\n      if (dataView?.code == 1) {\n        setIsViewFile(true);\n        setUrlViewFile(dataView.message);\n      } else {\n        Toast.show({\n          type: 'error',\n          text1: t('CM.info'),\n          text2: t('CM.error'),\n        });\n      }\n    } catch (error) {\n      Toast.show({\n        type: 'error',\n        text1: t('CM.info'),\n        text2: t('CM.error'),\n      });\n    }\n  };\n\n  const getFiles = async (\n    userTaskId: string,\n    fileId: any,\n    fileName: string,\n  ) => {\n    try {\n      const type = fileName?.split('.')?.[1];\n      const path = `${ReactNativeBlobUtil.fs.dirs.DocumentDir}/${new Date()\n        .getTime()\n        .toString()}.${type}`;\n      const dataBase64 = await ReactNativeBlobUtil.config({\n        path: path,\n      })\n        .fetch(\n          'GET',\n          `${getConfig().BASE_URL}/services/erequest/api/tickets/${\n            dataTicketRedux.id\n          }/userTaskId/${userTaskId}/fileId/${fileId}`,\n        )\n        .then(res => {\n          let status = res.info().status;\n          if (status == 200) {\n            let base64Str = res.path();\n            return base64Str;\n          } else return null;\n        })\n        .catch(() => null);\n      const file = {\n        uri: Platform.OS === 'ios' ? dataBase64 : 'file://' + dataBase64,\n        name: `${new Date().getTime().toString()}.${type}`,\n        type: CommonUtils.getMimeType(fileName),\n      };\n      return file;\n    } catch (error) {}\n  };\n\n  const handleClearFile = async (idFile: string) => {\n    try {\n      const data = await ReviewTicketServices.deleteFileRelative(\n        idFile,\n        accessToken,\n      );\n      await getFileByUserTask(currentPage);\n      Toast.show({\n        type: 'success',\n        text1: t('CM.info'),\n        text2: t('TK.deleteFileSuccess'),\n      });\n    } catch (error) {\n      console.log(error);\n\n      Toast.show({\n        type: 'error',\n        text1: t('CM.info'),\n        text2: t('TK.deleteFileErr'),\n      });\n    }\n  };\n\n  const handleDownload = async (\n    data: IInfoFile | IInfoFileRelative,\n    isInfoFile: boolean,\n  ) => {\n    let fileName: string = (data as any).fileName;\n    if (isInfoFile) {\n      fileName = (data as IInfoFile).keyName.replace('/', '_');\n    } else {\n      fileName = (data as IInfoFileRelative).fileName;\n    }\n\n    const toFile = `${\n      Platform.OS === 'android'\n        ? RNFS.DownloadDirectoryPath\n        : RNFS.DocumentDirectoryPath\n    }/${new Date().getTime()}_${fileName}`;\n\n    if (isInfoFile) {\n      // await downloadFileInfoForm(\n      //   toFile,\n      //   data.id,\n      //   (data as IInfoFile)?.notionId,\n      // );\n    } else {\n      if (!data.bucketName) {\n        await downloadFileNotBucketName(toFile, data.name);\n      } else {\n        await downloadFileWithBucketName(toFile, data.id);\n      }\n    }\n  };\n\n  const downloadFileNotBucketName = async (toFile: string, fromUrl: string) => {\n    const options: DownloadFileOptions = {\n      fromUrl: fromUrl,\n      toFile,\n      background: true,\n      begin: (res: any) => {\n        console.log('Download has begun', res);\n      },\n      progress: (res: any) => {\n        let percentage = (res.bytesWritten / res.contentLength) * 100;\n        // setProgress(percentage);\n      },\n      connectionTimeout: 1000 * 5,\n    };\n    try {\n      const result = await RNFS.downloadFile(options).promise;\n      if (result.statusCode === 200) {\n        if (Platform.OS === 'ios') {\n          const dataShare = await Share.share({\n            url: toFile,\n          });\n          if (dataShare.action == Share.dismissedAction) {\n            Toast.show({\n              type: 'error',\n              text1: t('CM.noti'),\n              text2: t('CM.downloadFail'),\n            });\n          } else {\n            Toast.show({\n              type: 'success',\n              text1: t('CM.noti'),\n              text2: t('CM.downloadSuccess'),\n            });\n          }\n        } else {\n          Toast.show({\n            type: 'success',\n            text1: t('CM.noti'),\n            text2: t('CM.downloadSuccess'),\n          });\n        }\n      } else {\n        Toast.show({\n          type: 'error',\n          text1: t('CM.noti'),\n          text2: t('CM.downloadFail'),\n        });\n      }\n    } catch (err: any) {\n      Toast.show({\n        type: 'error',\n        text1: t('CM.noti'),\n        text2: t('CM.downloadFail'),\n      });\n    }\n  };\n\n  const downloadFileWithBucketName = async (toFile: string, id: any) => {\n    try {\n      Toast.show({\n        type: 'info',\n        text1: t('CM.noti'),\n        text2: t('CM.pleaseWait'),\n      });\n      const dataBase64 = await ReactNativeBlobUtil.fetch(\n        'GET',\n        `${\n          getConfig().BASE_URL\n        }/services/erequest/api/attachments/download-file?attachmentId=${id}`,\n      )\n        .then(res => {\n          let status = res.info().status;\n          if (status == 200) {\n            let base64Str = res.base64();\n            return base64Str;\n          } else return null;\n        })\n        .catch(() => null);\n      if (dataBase64) {\n        try {\n          await RNFS.writeFile(toFile, dataBase64, 'base64');\n        } catch (error) {\n          console.log(error);\n        }\n        if (Platform.OS === 'ios') {\n          const dataShare = await Share.share({\n            url: toFile,\n          });\n          if (dataShare.action == Share.dismissedAction) {\n            Toast.show({\n              type: 'error',\n              text1: t('CM.noti'),\n              text2: t('CM.downloadFail'),\n            });\n          } else {\n            Toast.show({\n              type: 'success',\n              text1: t('CM.noti'),\n              text2: t('CM.downloadSuccess'),\n            });\n          }\n        } else {\n          Toast.show({\n            type: 'success',\n            text1: t('CM.noti'),\n            text2: t('CM.downloadSuccess'),\n          });\n        }\n      } else {\n        Toast.show({\n          type: 'error',\n          text1: t('CM.noti'),\n          text2: t('CM.downloadFail'),\n        });\n      }\n    } catch (error) {\n      Toast.show({\n        type: 'error',\n        text1: t('CM.noti'),\n        text2: t('CM.downloadFail'),\n      });\n    }\n  };\n\n  const getFileName = (fileName: any) => {\n    if (!fileName) return '';\n    return fileName?.split('.')?.slice(0, -1)?.join('.');\n  };\n\n  const getFormat = (name: string, resource: any) => {\n    if (name) {\n      if (\n        name.split('.').pop() == 'docx' &&\n        resource === 'ewriter' &&\n        dataAccount?.orgIn?.includes('/1978/5742')\n      ) {\n        return 'pdf';\n      } else {\n        return name.split('.').pop();\n      }\n    }\n    return '';\n  };\n\n  const convertDataFileToTable = (data: IInfoFileRelative[]) => {\n    const newData = data.map((infoFile: IInfoFileRelative, index: number) => ({\n      STT: String((currentPage - 1) * pageSize + 1 + index),\n      keyName: (\n        <TextCM style={styles.txtText} numberOfLines={1}>\n          {getFileName(infoFile?.fileName)}\n        </TextCM>\n      ),\n      createdBy: infoFile.createdBy,\n      documentSize: CommonUtils.getSize(infoFile.size),\n      type: getFormat(infoFile?.fileName, (infoFile as any).resource),\n      lastModifiedDate: DateUtils.convertDateToDDMMYYYY_H_M(\n        infoFile.lastModifiedDate,\n      ),\n      action: renderActionInfoFile(false, infoFile),\n    }));\n    setDataRelative(newData);\n  };\n\n  const handleUploadFile = async () => {\n    try {\n      const file = await CommonUtils.handleGetFile();\n      if (!file) return;\n\n      const formData = new FormData();\n      formData.append('uploadFile', file);\n      formData.append(\n        'attachmentJson',\n        JSON.stringify({\n          ticketId: dataTicketRedux?.id,\n          userTaskId: dataUserTask._userTaskId,\n        }),\n      );\n      const data = await ReviewTicketServices.uploadFileRelative(\n        formData,\n        accessToken,\n      );\n      if (data) {\n        await getFileByUserTask(currentPage);\n        Toast.show({\n          type: 'success',\n          text1: t('CM.info'),\n          text2: t('TK.uploadFileSuccess'),\n        });\n      } else {\n        Toast.show({\n          type: 'error',\n          text1: t('CM.info'),\n          text2: t('TK.uploadFileErr'),\n        });\n      }\n    } catch (error) {\n      console.log(error);\n\n      Toast.show({\n        type: 'error',\n        text1: t('CM.info'),\n        text2: t('TK.uploadFileErr'),\n      });\n    }\n  };\n\n  return (\n    <View style={styles.ctnMain}>\n      <ScrollView style={styles.ctnBody}>\n        <View style={styles.ctnForm}>\n          <View style={styles.viewForm}>\n            <TextCM style={styles.txtTitle}>{t('RV.document')}</TextCM>\n            {dataUserTask._status === STATUS_TASK.TASK_SEARCH && (\n              <TouchableOpacity onPress={handleUploadFile} hitSlop={SizeDP(15)}>\n                <IconUpload width={SizeDP(16)} height={SizeDP(16)} />\n              </TouchableOpacity>\n            )}\n          </View>\n          <TableCM\n            stickyLeft={true}\n            stickyColumnLeftIndex={1}\n            tableHeaders={[\n              'STT',\n              'keyName',\n              'createdBy',\n              'documentSize',\n              'type',\n              'lastModifiedDate',\n              'action',\n            ]}\n            tableData={dataRelative}\n          />\n          {totalItems > 0 && (\n            <PagingCM\n              collectionSize={totalItems}\n              currentPage={currentPage}\n              pageSize={pageSize}\n              onPageChange={currentPage => setCurrentPage(currentPage)}\n            />\n          )}\n        </View>\n\n        {/* <View style={styles.ctnForm}>\n          <TextCM style={styles.txtTitle}>{t('TK.templateInfo')}</TextCM>\n          <TableCM\n            stickyLeft={true}\n            stickyColumnLeftIndex={1}\n            tableHeaders={[\n              'STT',\n              'keyName',\n              'createdBy',\n              'documentSize',\n              'type',\n              'lastModifiedDate',\n              'action',\n            ]}\n            tableData={[]}\n          />\n        </View> */}\n      </ScrollView>\n      <ModalFullScreen\n        isVisible={isViewFile}\n        children={\n          <ViewFileScreen\n            url={urlViewFile}\n            onClose={() => setIsViewFile(false)}\n            name={viewNameFile}\n          />\n        }\n      />\n    </View>\n  );\n};\n\n//make this component available to the app\nexport default Document;\n","import {StyleSheet} from 'react-native';\nimport FontSize, {SizeDP} from '../../../../../../constants/Size';\nimport {Color, Font} from '../../../../../../constants';\n\nexport default StyleSheet.create({\n  ctnMain: {\n    // padding: SizeDP(16),\n    backgroundColor: '#F8FAFE',\n    flex: 1,\n  },\n  ctnBody: {\n    backgroundColor: '#fff',\n    flex: 1,\n    paddingHorizontal: SizeDP(16),\n  },\n  txtTitle: {\n    fontSize: FontSize.FontBase,\n    fontFamily: Font.InterSemiBold600,\n    color: Color.colorText,\n  },\n  ctnForm: {\n    rowGap: SizeDP(15),\n    marginBottom: SizeDP(20),\n  },\n  ctnAction: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    columnGap: SizeDP(10),\n  },\n  txtText: {\n    fontSize: FontSize.FontTiny,\n    fontFamily: Font.InterRegular400,\n    color: '#00204DCC',\n  },\n\n  viewForm: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    marginRight: SizeDP(12),\n  },\n});\n","import {useEffect, useMemo, useState} from 'react';\nimport {Alert, Image, Pressable, View} from 'react-native';\nimport TextCM from '../../../../components/Text';\nimport {Divider, Icon, List, ListItem} from '@ui-kitten/components';\nimport {Font, String} from '../../../../../constants';\nimport {IJob} from '../components/BackgroundFlow/interface';\nimport InfoBodyScreen from '../../../review-eid/components/Info';\nimport {DateUtils} from '../../../../../utils';\nimport {Iconhigh, Iconlow, Iconmedium} from '../../../../../assets/images';\nimport BottomSheetCM from '../../../../components/BottomSheet';\nimport {useTicketServices} from '../../../../../hooks/apiHooks/useTicketServices';\nimport {IAccount} from '../../../../../model/interface/account.interface';\nimport {useTranslation} from 'react-i18next';\nimport styles from './styles';\nimport {useAppSelector} from '../../../../../hooks/useRedux';\nimport {Status} from '../../../../../model/enum/common.enum';\ntype Props = {\n  dataTask: IJob;\n};\n\nconst TaskItem = ({dataTask}: Props) => {\n  const {t} = useTranslation();\n  const [showMoreData, setShowMoreData] = useState(false);\n  const [showMoreUser, setShowMoreUser] = useState(false);\n  const [showMoreOwner, setShowMoreOwner] = useState(false);\n  const [listUserOwner, setListUserOwner] = useState<IAccount[]>([]);\n\n  const TicketServices = useTicketServices();\n\n  const {dataTicketRedux} = useAppSelector(state => state.ticket);\n\n  useEffect(() => {\n    getListUserOwner();\n  }, []);\n\n  const getListUserOwner = async () => {\n    const listEmail = dataTask.owner?.split(',');\n    if (listEmail) {\n      const data = await TicketServices.getMultiLoginAccount(listEmail);\n      if (data) {\n        setListUserOwner(data);\n      }\n    }\n  };\n\n  const toogleMoreUser = () => setShowMoreUser(!showMoreUser);\n  const toogleMoreOwner = () => setShowMoreOwner(!showMoreOwner);\n\n  const getStatusType = (task: IJob) => {\n    if (task?.attrJson?.type === 'todo') {\n      return 'todo';\n    } else if (task?.attrJson?.type === 'processing') {\n      return 'processing';\n    } else if (task?.attrJson?.type === 'completed') {\n      return 'completed';\n    } else if (task?.attrJson?.type === 'approved') {\n      return 'approved';\n    } else {\n      return task.statusType;\n    }\n  };\n\n  const getTimeEstimate = (startDate: string, dueDate: string) => {\n    if (startDate && dueDate) {\n      const endTime = Math.floor(new Date(dueDate).getTime());\n      const currentTime = Math.floor(new Date(startDate).getTime());\n      const time = endTime - currentTime;\n      return DateUtils.convertTime(time);\n    } else {\n      return '---';\n    }\n  };\n\n  const getPriority = (priority: string) => {\n    switch (priority) {\n      case '3':\n        return <Iconhigh width={16} height={16} />;\n      case '2':\n        return <Iconmedium width={16} height={16} />;\n      case '1':\n        return <Iconlow width={16} height={16} />;\n      default:\n        return <TextCM>---</TextCM>;\n    }\n  };\n\n  const getValueAssnee = (data: any, isAssnee = true) => {\n    return (\n      <Pressable\n        onPress={isAssnee ? toogleMoreUser : toogleMoreOwner}\n        style={styles.ctnListUser}>\n        {data?.map((user: any, index: any) => (\n          <>\n            {index <= 1 ? (\n              <Image\n                key={index}\n                style={{position: 'absolute', left: index * 20}}\n                width={28}\n                height={28}\n                borderRadius={14}\n                source={{\n                  uri:\n                    user?.[isAssnee ? 'avatar' : 'imageUrl'] ||\n                    String.DEFAULT_IMAGE,\n                }}\n              />\n            ) : (\n              <View key={index} style={styles.ctnAdd}>\n                <TextCM>{`+${data?.length - 2}`}</TextCM>\n              </View>\n            )}\n          </>\n        ))}\n      </Pressable>\n    );\n  };\n\n  const dataInfo: any[] = useMemo(() => {\n    return [\n      {\n        key: 'RV.owner',\n        type: 'normal',\n        value: {\n          onlyIcon: getValueAssnee(listUserOwner, false),\n        },\n      },\n      {\n        key: 'RV.userAction',\n        type: 'normal',\n        value: {\n          onlyIcon: getValueAssnee(dataTask.assignTaskList),\n        },\n      },\n      {\n        key: 'RV.status',\n        type: 'status',\n        value: {\n          status: getStatusType(dataTask),\n        },\n      },\n      {\n        key: 'Estimate',\n        type: 'normal',\n        value: {\n          name: getTimeEstimate(dataTask.startDate, dataTask.dueDate),\n        },\n      },\n      {\n        key: 'HM.priority',\n        type: 'normal',\n        value: {\n          onlyIcon: getPriority(dataTask.priority),\n        },\n      },\n      {\n        key: 'RV.listTask.startDate',\n        type: 'normal',\n        value: {\n          name: DateUtils.convertDateToDDMMYYYY_H_M(dataTask.startDate),\n        },\n      },\n      {\n        key: 'RV.listTask.endDate',\n        type: 'normal',\n        value: {\n          name: DateUtils.convertDateToDDMMYYYY_H_M(dataTask.dueDate),\n        },\n      },\n      {\n        key: 'RV.listTask.action',\n        type: 'normal',\n        value: {\n          onlyIcon: (\n            <Pressable\n              onPress={() => {\n                if (dataTicketRedux.ticketStatus === Status.voided) return;\n                Alert.alert(t('NT.notification.inprocess_noti'));\n              }}\n              style={{\n                width: 28,\n                height: 28,\n                backgroundColor: '#F2ECFD',\n                borderRadius: 14,\n                justifyContent: 'center',\n                alignItems: 'center',\n              }}>\n              <Icon fill={'#6F2CED'} name=\"edit-2\" width={16} height={16} />\n            </Pressable>\n          ),\n        },\n      },\n    ];\n  }, [listUserOwner]);\n\n  const toggleShowMoreData = () => {\n    setShowMoreData(!showMoreData);\n  };\n\n  return (\n    <View style={{paddingHorizontal: 10}}>\n      <Pressable onPress={toggleShowMoreData} style={styles.ctnHeader}>\n        <View style={styles.ctnBodyHeader}>\n          <View style={[showMoreData && styles.rotate]}>\n            <Icon\n              fill={'#6F2CED'}\n              width={16}\n              height={16}\n              name=\"play-circle-outline\"\n            />\n          </View>\n          <TextCM style={styles.textTitle}>{t('RV.listTask.title')}</TextCM>\n        </View>\n        <TextCM style={styles.tastName}>{dataTask.name}</TextCM>\n      </Pressable>\n\n      {showMoreData && (\n        <View style={{backgroundColor: '#fff', paddingHorizontal: 16}}>\n          <InfoBodyScreen dataInfo={dataInfo} />\n        </View>\n      )}\n      <Divider style={{marginTop: 10}} />\n\n      <BottomSheetCM\n        isVisible={showMoreUser}\n        title={t('RV.listTask.listUserAction')}\n        onClose={toogleMoreUser}\n        renderContent={\n          <List\n            data={dataTask.assignTaskList}\n            renderItem={({item}) => (\n              <ListItem\n                children={\n                  <View style={styles.listUser}>\n                    <Image\n                      width={28}\n                      height={28}\n                      borderRadius={14}\n                      source={{uri: item.avatar || String.DEFAULT_IMAGE}}\n                    />\n                    <View>\n                      <TextCM style={styles.textname}>{item.name}</TextCM>\n                      <TextCM>{item.email}</TextCM>\n                    </View>\n                  </View>\n                }\n              />\n            )}\n          />\n        }\n      />\n\n      <BottomSheetCM\n        isVisible={showMoreOwner}\n        title={t('RV.listTask.listOwner')}\n        onClose={toogleMoreOwner}\n        renderContent={\n          <List\n            data={listUserOwner}\n            renderItem={({item}) => (\n              <ListItem\n                children={\n                  <View style={styles.listUser}>\n                    <Image\n                      width={28}\n                      height={28}\n                      borderRadius={14}\n                      source={{uri: item.imageUrl || String.DEFAULT_IMAGE}}\n                    />\n                    <View>\n                      <TextCM style={styles.textname}>\n                        {item.firstName + ' ' + item.lastName || '---'}\n                      </TextCM>\n                      <TextCM>{item.email}</TextCM>\n                    </View>\n                  </View>\n                }\n              />\n            )}\n          />\n        }\n      />\n    </View>\n  );\n};\n\nexport default TaskItem;\n","import {StyleSheet} from 'react-native';\nimport {Font} from '../../../../../constants';\n\nexport default StyleSheet.create({\n  ctnHeader: {\n    backgroundColor: '#fff',\n    flexDirection: 'row',\n    alignItems: 'flex-start',\n    justifyContent: 'space-between',\n    columnGap: 30,\n  },\n  ctnBodyHeader: {flexDirection: 'row', alignItems: 'center', columnGap: 8},\n  rotate: {\n    transform: [{rotate: '90deg'}],\n  },\n  textTitle: {\n    color: '#00204DE5',\n    fontSize: 12,\n    fontFamily: Font.InterSemiBold600,\n  },\n  tastName: {\n    flex: 1,\n    fontSize: 12,\n    color: '#366AE2',\n    fontFamily: Font.InterRegular400,\n  },\n\n  listUser: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    columnGap: 16,\n  },\n  textname: {\n    fontSize: 14,\n    fontFamily: Font.InterSemiBold600,\n  },\n  ctnListUser: {\n    flexDirection: 'row',\n    position: 'relative',\n  },\n  ctnAdd: {\n    position: 'absolute',\n    left: 2 * 20,\n    width: 28,\n    height: 28,\n    borderRadius: 14,\n    backgroundColor: '#F4F4F4',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n","import {Icon, Input, List, ListItem} from '@ui-kitten/components';\nimport {IDropDown} from '../../../../components/DropDownList';\nimport {useEffect, useState} from 'react';\nimport {Dimensions, TouchableOpacity} from 'react-native';\nimport useDebounce from '../../../../../hooks/useDebounce';\nimport TextCM from '../../../../components/Text';\nimport {useTranslation} from 'react-i18next';\ntype Props = {\n  data: IDropDown[];\n  dataSelect: any[];\n  setDataSelect: (value: any[]) => void;\n  isSearch?: boolean;\n  onRefresh?: (callback: () => void) => void;\n  getMore?: () => void;\n  placeholder?: string;\n  isi18n?: boolean;\n};\n\nconst BottomSheetFilter = ({\n  data,\n  dataSelect,\n  setDataSelect,\n  isSearch = false,\n  onRefresh,\n  getMore,\n  placeholder,\n  isi18n = false,\n}: Props) => {\n  const {t} = useTranslation();\n  const [refreshing, setIsRefreshing] = useState<boolean>(false);\n  const [dataValue, setDataValue] = useState(data);\n  const [value, setValue] = useState<string>('');\n  const debouncedValue = useDebounce(value, 500);\n\n  const [screenW, setScreenW] = useState({\n    width: Dimensions.get('window').width,\n    height: Dimensions.get('window').height,\n  });\n\n  useEffect(() => {\n    const sub = Dimensions.addEventListener('change', ({window}) => {\n      setScreenW({\n        width: window.width,\n        height: window.height,\n      });\n    });\n\n    return () => sub.remove();\n  }, []);\n\n  useEffect(() => {\n    filterValue(debouncedValue);\n  }, [debouncedValue]);\n\n  const filterValue = (debouncedValue: string) => {\n    setDataValue(\n      data.filter(item =>\n        item.label.toLowerCase().includes(debouncedValue.toLowerCase()),\n      ),\n    );\n  };\n\n  const handleOnRefresh = async () => {\n    if (!isSearch) return;\n    setIsRefreshing(true);\n    onRefresh?.(() => setIsRefreshing(false));\n  };\n\n  const getMoreData = () => {\n    if (!isSearch) return;\n    getMore?.();\n  };\n\n  return (\n    <>\n      {isSearch && (\n        <Input\n          allowFontScaling={false}\n          value={value}\n          onChangeText={setValue}\n          placeholder={placeholder}\n          style={{backgroundColor: '#fff'}}\n          accessoryRight={\n            value ? (\n              <TouchableOpacity hitSlop={15} onPress={() => setValue('')}>\n                <Icon name=\"close-outline\" />\n              </TouchableOpacity>\n            ) : undefined\n          }\n        />\n      )}\n      <List\n        showsVerticalScrollIndicator={false}\n        style={{backgroundColor: '#fff', height: (screenW.height / 3) * 2}}\n        data={dataValue}\n        onEndReachedThreshold={0.5}\n        onRefresh={handleOnRefresh}\n        refreshing={refreshing}\n        onEndReached={getMoreData}\n        renderItem={({item}: {item: any}) => (\n          <ListItem\n            onPress={() => {\n              if (!dataSelect.includes(item.value)) {\n                setDataSelect([...dataSelect, item.value]);\n              } else {\n                setDataSelect(\n                  dataSelect.filter(status => status !== item.value),\n                );\n              }\n            }}\n            title={props => (\n              <TextCM {...props}>\n                {isi18n ? t(`${item.label}`) : item.label}\n              </TextCM>\n            )}\n            accessoryRight={\n              dataSelect.includes(item.value) ? (\n                <Icon\n                  fill=\"#06B7E8\"\n                  width={14}\n                  height={14}\n                  name=\"checkmark-outline\"\n                />\n              ) : undefined\n            }\n          />\n        )}\n      />\n    </>\n  );\n};\n\nexport default BottomSheetFilter;\n","import {Button, Modal, RangeCalendar} from '@ui-kitten/components';\nimport {View} from 'react-native';\nimport styles from '../../styles';\nimport TextCM from '../../../../components/Text';\nimport {useTranslation} from 'react-i18next';\n\ntype Props = {\n  onClose: () => void;\n  visible: boolean;\n  rangeDate: {};\n  onConfirm: (rangeDate: {}) => void;\n};\n\nconst ModalPickerDate = ({onClose, visible, rangeDate, onConfirm}: Props) => {\n  const {t} = useTranslation();\n\n  return (\n    <Modal\n      backdropStyle={styles.backdrop}\n      onBackdropPress={onClose}\n      visible={visible}>\n      <RangeCalendar\n        style={{backgroundColor: '#fff'}}\n        range={rangeDate}\n        onSelect={nextRange => onConfirm(nextRange)}\n        min={new Date(1900, 0, 0)}\n        max={new Date()}\n        renderFooter={() => (\n          <View\n            style={{\n              alignItems: 'center',\n              justifyContent: 'flex-end',\n              flexDirection: 'row',\n              columnGap: 6,\n              marginRight: 16,\n              marginTop: 16,\n            }}>\n            <Button\n              onPress={() => onConfirm({})}\n              size=\"small\"\n              status=\"info\"\n              appearance=\"outline\"\n              children={props => <TextCM {...props}>{t('CM.undo')}</TextCM>}\n            />\n            <Button\n              onPress={onClose}\n              size=\"small\"\n              appearance=\"outline\"\n              status=\"primary\"\n              children={props => <TextCM {...props}>{t('CM.select')}</TextCM>}\n            />\n          </View>\n        )}\n      />\n    </Modal>\n  );\n};\n\nexport default ModalPickerDate;\n","export const listFilter = [\n  {\n    label: 'Trạng thái giao dịch', //CM.statusCard\n    value: 'status',\n  },\n  {\n    label: 'Nhóm dịch vụ',//HM.groupService\n    value: 'group',\n  },\n  {\n    label: 'Quy trình', //SR.modeler\n    value: 'modeler',\n  },\n  {\n    label: 'Mức độ ưu tiên', //HM.priority\n    value: 'priority',\n  },\n  {\n    label: 'Ngày tạo', //TK.createDate\n    value: 'created_at',\n  },\n  {\n    label: 'Hạn hoàn thành', // SR.due_date\n    value: 'due_date',\n  },\n  {\n    label: 'Trễ hạn', //TK.late\n    value: 'late',\n  },\n];\n","import {\n  CalendarRange,\n  Divider,\n  Icon,\n  Input,\n  Layout,\n  List,\n  ListItem,\n} from '@ui-kitten/components';\nimport {SafeAreaView, useSafeAreaInsets} from 'react-native-safe-area-context';\nimport {\n  Keyboard,\n  ScrollView,\n  StatusBar,\n  TouchableOpacity,\n  TouchableWithoutFeedback,\n  useWindowDimensions,\n  View,\n} from 'react-native';\nimport {useEffect, useRef, useState} from 'react';\nimport {useNavigation, useRoute} from '@react-navigation/native';\nimport {Color, Font, NavigationName} from '../../../constants';\nimport {IServices, ITicket} from '../../../model/interface/service.interface';\nimport {useAppSelector} from '../../../hooks/useRedux';\nimport {debounce, isEmpty} from 'lodash';\nimport {dataListStatusTicket} from '../my-ticket/helper';\nimport {useTranslation} from 'react-i18next';\nimport BottomSheetCM from '../../components/BottomSheet';\nimport TextCM from '../../components/Text';\nimport {IDropDown} from '../../components/DropDownList';\nimport {\n  dataPrioritySelect,\n  dataStatus,\n} from '../home/component/AddTicketRelative/helper';\nimport {listFilter} from './helper';\nimport {Propity, Status} from '../../../model/enum/common.enum';\nimport ModalPickerDate from './components/ModalDate';\nimport {IListModelerByService} from './interface';\nimport BottomSheetFilter from './components/BottomShetFilter';\nimport {dataListStatusTicketFollow} from '../ticket-follow/helper';\nimport {DateUtils} from '../../../utils';\nimport styles from './styles';\nimport {TYPE_SCREEN} from '../../../constants/Size';\nimport {useTicketServices} from '../../../hooks/apiHooks/useTicketServices';\nimport React from 'react';\n\nconst SearchTicketScreen = () => {\n  const {t} = useTranslation();\n  const router = useRoute<any>();\n  const searchFrom = router?.params?.type;\n  const navigation = useNavigation<any>();\n  const inset = useSafeAreaInsets();\n  const inputRef = useRef<any>(null);\n  const [listDataTicket, setListDataTicket] = useState<ITicket[]>([]);\n  const [value, setValue] = useState('');\n  const [totalRecoders, setTotalRecoders] = useState<number>(0);\n  const [totalPages, setTotalPages] = useState<number>(0);\n  const [pageModeler, setPageModeler] = useState<number>(0);\n  const [page, setPage] = useState<number>(0);\n  const [reloading, setReloading] = useState<boolean>(false);\n  const {dataAccount} = useAppSelector(state => state.account);\n  const {accessToken} = useAppSelector(state => state.common);\n\n  const [debounceSearchText, setDebounceSearch] = useState<string>('');\n  const ListServices = useTicketServices();\n  const debouncedSearch = debounce((text: string) => {\n    setDebounceSearch(text);\n  }, 300);\n  const [isVisibleSelect, setIsVisibleSelect] = useState<string>('');\n  const [groupService, setGroupService] = useState<string[]>([]);\n  const [groupStatusTicket, setGroupStatusTicket] = useState<string[]>([]);\n  const [groupServices, setGroupServices] = useState<IDropDown[]>([]);\n  const [groupModelerSelect, setGroupModelerSelect] = useState<string[]>([]);\n  const [groupModeler, setGroupModeler] = useState<IDropDown[]>([]);\n  const [priority, setPriority] = useState<Propity[]>([]);\n  const [rangeDate, setRangeDate] = useState<CalendarRange<Date>>({});\n  const [rangeEstimateDate, setRangeEstimateDate] = useState<\n    CalendarRange<Date>\n  >({});\n  const [rangeDelayDate, setRangeDelayDate] = useState<CalendarRange<Date>>({});\n\n  const {width} = useWindowDimensions();\n\n  useEffect(() => {\n    getGroupService();\n  }, []);\n\n  useEffect(() => {\n    setPageModeler(0);\n    setGroupModelerSelect([]);\n    setGroupModeler([]);\n    getListModelerByListServiceId(0, groupService);\n  }, [groupService]);\n\n  useEffect(() => {\n    debouncedSearch(value);\n    return () => {\n      debouncedSearch.cancel();\n    };\n  }, [value]);\n\n  useEffect(() => {\n    if (isClearData()) {\n      setListDataTicket([]);\n      setTotalRecoders(0);\n      setPage(0);\n      return;\n    }\n    if (searchFrom === 'my-ticket') {\n      getTicketFromMyTicket(\n        debounceSearchText,\n        groupStatusTicket,\n        priority,\n        groupService,\n        rangeDate,\n        rangeDelayDate,\n        rangeEstimateDate,\n        groupModelerSelect,\n      );\n    } else {\n      getTicketFromTicketFollow(\n        debounceSearchText,\n        groupStatusTicket,\n        rangeDate,\n        groupModelerSelect,\n        groupService,\n      );\n    }\n    setPage(0);\n  }, [\n    debounceSearchText,\n    groupStatusTicket,\n    priority,\n    groupService,\n    rangeDate,\n    rangeDelayDate,\n    rangeEstimateDate,\n    groupModelerSelect,\n  ]);\n\n  const isClearData = () => {\n    return (\n      groupStatusTicket.length == 0 &&\n      priority.length == 0 &&\n      groupService.length == 0 &&\n      Object.keys(rangeDate).length == 0 &&\n      Object.keys(rangeEstimateDate).length == 0 &&\n      Object.keys(rangeDelayDate).length == 0 &&\n      groupModelerSelect.length == 0 &&\n      !debounceSearchText\n    );\n  };\n\n  const getTicketFromMyTicket = (\n    search: string,\n    groupStatusTicket: string[],\n    priority: any[],\n    service: string[],\n    rangeDate: any,\n    rangeDelayDate: any,\n    rangeEstimateDate: any,\n    groupModelerSelect: any[],\n  ) => {\n    if (\n      groupStatusTicket.length > 0 ||\n      priority.length > 0 ||\n      service.length > 0 ||\n      Object.keys(rangeDate).length > 0 ||\n      Object.keys(rangeEstimateDate).length > 0 ||\n      Object.keys(rangeDelayDate).length > 0 ||\n      groupModelerSelect.length > 0 ||\n      !isEmpty(search)\n    ) {\n      getListTicket(\n        0,\n        search,\n        groupStatusTicket,\n        priority,\n        service,\n        rangeDate,\n        rangeDelayDate,\n        rangeEstimateDate,\n        groupModelerSelect,\n      );\n    } else {\n      setListDataTicket([]);\n    }\n  };\n\n  const getTicketFromTicketFollow = (\n    search: string,\n    groupStatusTicket: string[],\n    rangeDate: any,\n    groupModelerSelect: any[],\n    service: string[],\n  ) => {\n    if (\n      service.length > 0 ||\n      groupStatusTicket.length > 0 ||\n      Object.keys(rangeDate).length > 0 ||\n      groupModelerSelect.length > 0 ||\n      !isEmpty(search)\n    ) {\n      getListTicketFollow(\n        0,\n        search,\n        groupStatusTicket,\n        rangeDate,\n        groupModelerSelect,\n        service,\n      );\n    } else {\n      setListDataTicket([]);\n    }\n  };\n\n  const getGroupService = async () => {\n    try {\n      const data = await ListServices.getServiceMenu(\n        page,\n        1000000,\n        '',\n        accessToken,\n      );\n      const filterData = data.content.map((item: IServices) => {\n        return {\n          label: item.serviceName,\n          value: item.id,\n        };\n      });\n      setGroupServices(filterData);\n    } catch (error) {}\n  };\n\n  const getListModelerByListServiceId = async (\n    page: number,\n    groupModelerSelect: string[],\n  ) => {\n    try {\n      const params = {\n        page: page,\n        size: 1000,\n        sort: 'createdDate,desc',\n      };\n      const body = {\n        serviceId: groupModelerSelect || [],\n      };\n      const data = await ListServices.getListModelerByListServiceId(\n        params,\n        body,\n      );\n      if (data) {\n        setTotalPages(data?.totalPages);\n        const filterData = data?.content?.map((item: IListModelerByService) => {\n          return {\n            label: item.name,\n            value: item.id,\n          };\n        });\n        if (page === 0) {\n          setGroupModeler(filterData);\n        } else {\n          setGroupModeler([...groupModeler, ...filterData]);\n        }\n      }\n    } catch (error) {}\n  };\n\n  const onRefreshModeler = async (callback: any) => {\n    setPageModeler(0);\n    await getListModelerByListServiceId(0, groupModelerSelect);\n    callback();\n  };\n\n  const getMoreDataModeler = async () => {\n    if (pageModeler < totalPages) {\n      await getListModelerByListServiceId(pageModeler + 1, groupModelerSelect);\n      setPageModeler(prevPage => prevPage + 1);\n    }\n  };\n\n  const getListTicket = async (\n    page: number,\n    search: string,\n    groupStatusTicket: string[],\n    priority: any[],\n    service: string[],\n    rangeDate: any,\n    rangeDelayDate: any,\n    rangeEstimateDate: any,\n    groupModelerSelect: any[],\n  ) => {\n    try {\n      const bodySubmit = {\n        createdBy: dataAccount?.email ?? '',\n        myTicket: true,\n        textSearch: search,\n        ticketStatus: groupStatusTicket || [],\n        priority: priority || [],\n        service: service || [],\n        delayDateFrom: rangeDelayDate.startDate || null,\n        delayDateTo: rangeDelayDate.endDate || null,\n        endDate: rangeDate.endDate || null,\n        estimateDateFrom: rangeEstimateDate.startDate || null,\n        estimateDateTo: rangeEstimateDate.endDate || null,\n        startDate: rangeDate.startDate || null,\n        workflow: groupModelerSelect || [],\n      };\n      const data = await ListServices.getTicketList(\n        page,\n        50,\n        'createdDate,desc',\n        accessToken,\n        bodySubmit,\n      );\n\n      if (page === 0) {\n        setListDataTicket(data?.content);\n      } else {\n        setListDataTicket([...listDataTicket, ...data?.content]);\n      }\n      setTotalRecoders(Number(data?.page?.totalRecords));\n    } catch (error) {\n    } finally {\n      setReloading(false);\n    }\n  };\n\n  const getListTicketFollow = async (\n    page: number,\n    searchText: string,\n    groupStatusTicket: string[],\n    rangeDate: any,\n    groupModelerSelect: any[],\n    service: string[],\n  ) => {\n    try {\n      const search = {\n        keyWord: searchText,\n        terms: {\n          status:\n            groupStatusTicket.length > 0\n              ? groupStatusTicket\n              : [\n                  Status.processing,\n                  Status.accepted,\n                  Status.rejected,\n                  Status.voided,\n                ],\n        },\n        from: rangeDate.startDate || null,\n        to: rangeDate.endDate || null,\n        id: null,\n        field: 'createdDate',\n      };\n      if (groupModelerSelect && groupModelerSelect.length > 0) {\n        (search as any).terms.modelerId = groupModelerSelect;\n      }\n      if (service && service.length > 0) {\n        (search as any).terms.serviceId = service;\n      }\n\n      const data = await ListServices.getTicketListFollow(\n        page,\n        50,\n        'createdDate,desc',\n        search,\n        accessToken,\n      );\n      if (data) {\n        if (page === 0) {\n          setListDataTicket(data?.content);\n        } else {\n          setListDataTicket([...listDataTicket, ...data?.content]);\n        }\n        setTotalRecoders(Number(data?.page?.totalRecords));\n      }\n    } catch (error) {\n    } finally {\n      setReloading(false);\n    }\n  };\n\n  const fetchNextPage = () => {\n    if (listDataTicket.length < totalRecoders) {\n      setPage(page + 1);\n      if (searchFrom === 'my-ticket') {\n        getListTicket(\n          page + 1,\n          debounceSearchText,\n          groupStatusTicket,\n          priority,\n          groupService,\n          rangeDate,\n          rangeDelayDate,\n          rangeEstimateDate,\n          groupModelerSelect,\n        );\n      } else {\n        getListTicketFollow(\n          page + 1,\n          debounceSearchText,\n          groupStatusTicket,\n          rangeDate,\n          groupModelerSelect,\n          groupService,\n        );\n      }\n    }\n  };\n\n  const onRefresh = () => {\n    setPage(0);\n    if (searchFrom === 'my-ticket') {\n      getListTicket(\n        1,\n        debounceSearchText,\n        groupStatusTicket,\n        priority,\n        groupService,\n        rangeDate,\n        rangeDelayDate,\n        rangeEstimateDate,\n        groupModelerSelect,\n      );\n    } else {\n      getListTicketFollow(\n        1,\n        debounceSearchText,\n        groupStatusTicket,\n        rangeDate,\n        groupModelerSelect,\n        groupService,\n      );\n    }\n  };\n\n  const renderItem = ({\n    item,\n    index,\n  }: {\n    item: ITicket;\n    index: number;\n  }): React.ReactElement => {\n    const dataStatus =\n      searchFrom === 'my-ticket'\n        ? dataListStatusTicket.find(data => data.status === item.ticketStatus)\n        : dataListStatusTicketFollow.find(data => data.status === item.status);\n    return (\n      <ListItem\n        onPress={() => {\n          navigation.navigate(NavigationName.BottomTabNavigationTicketDetail, {\n            dataTicketId:\n              searchFrom === 'my-ticket'\n                ? item?.id\n                : item?.resourceId?.substr(4),\n            email: searchFrom === 'my-ticket' ? item.createdBy : item.owner,\n            status:\n              searchFrom === 'my-ticket' ? item.ticketStatus : item.status,\n            selectTabBottom: searchFrom === 'my-ticket' ? 1 : 2, // 1: tab from my ticket, 2: tab from ticket following,\n            recipientDetailsId: item.implementId,\n            userTaskId: item.recipientId,\n          });\n        }}>\n        <View style={styles.ctnMain}>\n          <View style={styles.ctnBody}>\n            <Icon\n              width={30}\n              height={30}\n              fill={dataStatus?.color}\n              name=\"credit-card-outline\"\n            />\n            <View\n              style={{\n                flex: 1,\n                gap: 4,\n              }}>\n              <TextCM\n                style={{\n                  fontFamily: Font.InterSemiBold600,\n                  fontSize: 16,\n                }}>\n                {`${\n                  searchFrom === 'my-ticket' ? item.title : item.resourceName\n                }`}\n              </TextCM>\n              <TextCM>\n                {`${\n                  searchFrom === 'my-ticket'\n                    ? `${t('SR.modeler')}: ${item.serviceName || '---'}`\n                    : `${t('TK.step')}: ` + item.notionName\n                }`}\n              </TextCM>\n              <View\n                style={{\n                  flexDirection: 'row',\n                  alignItems: 'center',\n                  justifyContent:\n                    width >= TYPE_SCREEN.mobile\n                      ? 'flex-start'\n                      : 'space-between',\n                  columnGap: width >= TYPE_SCREEN.mobile ? 20 : 0,\n                }}>\n                <TextCM\n                  style={{\n                    fontStyle: 'italic',\n                    fontSize: 12,\n                  }}>\n                  {`${t('SR.created_at')}: ` +\n                    DateUtils.convertDateToDDMMYYYY_H_M(item.createdDate)}\n                </TextCM>\n                <View\n                  style={{\n                    backgroundColor: dataStatus?.bgColor,\n                    borderRadius: 4,\n                    paddingHorizontal: 4,\n                    paddingVertical: 2,\n                    minWidth: 100,\n                  }}>\n                  <TextCM\n                    style={{\n                      color: dataStatus?.color,\n                      fontSize: 12,\n                      textAlign: 'center',\n                    }}>\n                    {t(\n                      `TK.${\n                        searchFrom === 'my-ticket'\n                          ? item.ticketStatus\n                          : item.status\n                      }`,\n                    )}\n                  </TextCM>\n                </View>\n              </View>\n            </View>\n          </View>\n          <View>\n            <Icon width={20} height={20} name=\"chevron-right-outline\" />\n          </View>\n        </View>\n      </ListItem>\n    );\n  };\n\n  const renderListFilterStatus = () => {\n    const getDataStatus =\n      searchFrom === 'my-ticket'\n        ? dataStatus\n        : [\n            {label: 'TK.processing', value: Status.processing},\n            {label: 'TK.completed', value: Status.accepted},\n            {label: 'TK.voided', value: Status.voided},\n            {label: 'TK.rejected', value: Status.rejected},\n            {label: 'TK.overdue', value: Status.overdue},\n          ];\n    return (\n      <>\n        <BottomSheetFilter\n          isi18n={true}\n          data={getDataStatus}\n          dataSelect={groupStatusTicket}\n          setDataSelect={setGroupStatusTicket}\n        />\n      </>\n    );\n  };\n\n  const getBorderColor = (value: string) => {\n    switch (value) {\n      case 'status':\n        if (groupStatusTicket.length == 0) return Color.borderColor;\n        return '#048EC7';\n      case 'group':\n        return groupService.length === 0 ? Color.borderColor : '#048EC7';\n      case 'priority':\n        if (priority.length == 0) return Color.borderColor;\n        return '#048EC7';\n      case 'modeler':\n        if (groupModelerSelect.length == 0) return Color.borderColor;\n        return '#048EC7';\n      case 'created_at':\n        return Object.keys(rangeDate).length > 0\n          ? '#048EC7'\n          : Color.borderColor;\n      case 'due_date':\n        return Object.keys(rangeEstimateDate).length > 0\n          ? '#048EC7'\n          : Color.borderColor;\n      case 'late':\n        return Object.keys(rangeDelayDate).length > 0\n          ? '#048EC7'\n          : Color.borderColor;\n      default:\n        return Color.borderColor;\n    }\n  };\n\n  const getListFilter = () => {\n    if (searchFrom === 'my-ticket') {\n      return listFilter;\n    } else\n      return listFilter.filter(\n        data =>\n          data.value === 'status' ||\n          data.value === 'created_at' ||\n          data.value === 'group' ||\n          data.value === 'modeler',\n      );\n  };\n\n  const getLabelOfListFilter = (item: {label: string; value: string}) => {\n    switch (item.value) {\n      case 'created_at':\n        return getDate(rangeDate, item.value);\n      case 'due_date':\n        return getDate(rangeEstimateDate, item.value);\n      case 'late':\n        return getDate(rangeDelayDate, item.value);\n      case 'group':\n        return getLabelOfGroup(groupService, item.value, item.value);\n      case 'priority':\n        return getLabel(priority, item.value);\n      case 'modeler':\n        return getLabelOfGroup(groupModelerSelect, item.value, item.value);\n      case 'status':\n        return getLabel(groupStatusTicket, item.value);\n      default:\n        return '';\n    }\n  };\n\n  const getLabelOfGroup = (\n    listSelect: any,\n    defaultLabel: string,\n    type: string,\n  ) => {\n    if (listSelect?.length === 0) return t(`SR.${defaultLabel}`);\n    if (listSelect?.length === 1) {\n      if (type === 'modeler') {\n        return groupModeler?.find(modeler => modeler.value === listSelect[0])\n          ?.label;\n      } else {\n        return groupServices?.find(service => service.value === listSelect[0])\n          ?.label;\n      }\n    }\n    if (listSelect?.length > 1)\n      if (type === 'modeler') {\n        return `${\n          groupModeler.find(modeler => modeler.value === listSelect[0])?.label\n        } + ${(listSelect.length - 1).toString()}`;\n      } else {\n        return `${\n          groupServices?.find(service => service.value === listSelect[0])?.label\n        } + ${(listSelect.length - 1).toString()}`;\n      }\n  };\n\n  const getLabel = (listSelect: any, defaultLabel: string) => {\n    if (listSelect?.length === 0) return t(`SR.${defaultLabel}`);\n    if (listSelect?.length === 1) return t(`TK.${listSelect[0]}`);\n    if (listSelect?.length > 1)\n      return t(`TK.${listSelect[0]}`) + ` + ${listSelect?.length - 1}`;\n  };\n\n  const getDate = (rangeDate: any, defaultLabel: string) => {\n    if (Object.keys(rangeDate).length === 0) return t(`SR.${defaultLabel}`);\n    if (!rangeDate.endDate) {\n      return `${DateUtils.convertDateToDDMMYYYY(rangeDate.startDate)} - now`;\n    }\n    return `${DateUtils.convertDateToDDMMYYYY(\n      rangeDate.startDate,\n    )} - ${DateUtils.convertDateToDDMMYYYY(rangeDate.endDate)}`;\n  };\n\n  return (\n    <>\n      <StatusBar\n        barStyle={'dark-content'}\n        backgroundColor={Color.Transparent}\n      />\n      <TouchableWithoutFeedback onPress={() => Keyboard.dismiss()}>\n        <SafeAreaView\n          edges={['top']}\n          style={{backgroundColor: Color.BgPrimary, flex: 1}}>\n          <>\n            <Input\n              style={{\n                backgroundColor: Color.BgPrimary,\n                borderWidth: 0,\n              }}\n              textStyle={{color: '#fff'}}\n              placeholderTextColor={'#fff'}\n              ref={inputRef}\n              placeholder={t('SR.searchTicket')}\n              value={value}\n              status=\"basic\"\n              autoFocus\n              allowFontScaling={false}\n              onChangeText={nextValue => setValue(nextValue)}\n              accessoryLeft={\n                <TouchableOpacity onPress={() => navigation.goBack()}>\n                  <Icon name=\"arrow-back\" fill=\"#ffffff\" />\n                </TouchableOpacity>\n              }\n              accessoryRight={\n                value ? (\n                  <TouchableOpacity onPress={() => setValue('')}>\n                    <Icon name=\"close-outline\" fill=\"#ffffff\" />\n                  </TouchableOpacity>\n                ) : undefined\n              }\n            />\n            <Divider />\n            <Layout\n              style={{\n                flex: 1,\n                paddingBottom: inset.bottom,\n                backgroundColor: '#fff',\n              }}\n              level=\"1\">\n              <View>\n                <ScrollView\n                  showsHorizontalScrollIndicator={false}\n                  contentContainerStyle={{\n                    columnGap: 10,\n                    padding: 10,\n                  }}\n                  horizontal>\n                  {getListFilter().map(item => (\n                    <TouchableOpacity\n                      onPress={() => {\n                        setIsVisibleSelect(item.value);\n                      }}\n                      key={item.label}\n                      style={[\n                        {\n                          borderColor: getBorderColor(item.value),\n                        },\n                        styles.ctnFilter,\n                      ]}>\n                      <TextCM>{getLabelOfListFilter(item)}</TextCM>\n                      <Icon\n                        width={16}\n                        height={16}\n                        name={\n                          isVisibleSelect === item.value\n                            ? 'chevron-up-outline'\n                            : 'chevron-down-outline'\n                        }\n                      />\n                    </TouchableOpacity>\n                  ))}\n                </ScrollView>\n              </View>\n\n              {!isClearData() && (\n                <List\n                  style={{backgroundColor: '#fff', flex: 1}}\n                  showsVerticalScrollIndicator={false}\n                  data={listDataTicket}\n                  renderItem={renderItem}\n                  refreshing={reloading}\n                  onRefresh={onRefresh}\n                  onEndReached={fetchNextPage}\n                  onEndReachedThreshold={0.5}\n                  ListEmptyComponent={() => (\n                    <View style={{margin: 10, flex: 1}}>\n                      <TextCM>{t('CM.emptyData')}</TextCM>\n                    </View>\n                  )}\n                />\n              )}\n            </Layout>\n          </>\n        </SafeAreaView>\n      </TouchableWithoutFeedback>\n\n      <BottomSheetCM\n        isVisible={isVisibleSelect === 'status'}\n        title={t('SR.selectStatus')}\n        onClose={() => setIsVisibleSelect('')}\n        renderContent={renderListFilterStatus()}\n      />\n\n      <BottomSheetCM\n        isVisible={isVisibleSelect === 'priority'}\n        title={t('HM.priotitySelect')}\n        onClose={() => setIsVisibleSelect('')}\n        renderContent={\n          <BottomSheetFilter\n            isi18n={true}\n            data={dataPrioritySelect}\n            dataSelect={priority}\n            setDataSelect={setPriority}\n          />\n        }\n      />\n\n      <BottomSheetCM\n        isVisible={isVisibleSelect === 'group'}\n        title={t('SR.selectGroup')}\n        onClose={() => setIsVisibleSelect('')}\n        renderContent={\n          <BottomSheetFilter\n            data={groupServices}\n            dataSelect={groupService}\n            setDataSelect={setGroupService}\n          />\n        }\n      />\n\n      {isVisibleSelect === 'modeler' && (\n        <BottomSheetCM\n          isVisible={isVisibleSelect === 'modeler'}\n          title={t('SR.selectService')}\n          onClose={() => setIsVisibleSelect('')}\n          renderContent={\n            <BottomSheetFilter\n              data={groupModeler}\n              dataSelect={groupModelerSelect}\n              setDataSelect={setGroupModelerSelect}\n              isSearch={true}\n              placeholder={t('SR.selectService')}\n              onRefresh={onRefreshModeler}\n              getMore={getMoreDataModeler}\n            />\n          }\n        />\n      )}\n\n      <ModalPickerDate\n        onClose={() => setIsVisibleSelect('')}\n        visible={isVisibleSelect === 'created_at'}\n        onConfirm={setRangeDate}\n        rangeDate={rangeDate}\n      />\n\n      <ModalPickerDate\n        onClose={() => setIsVisibleSelect('')}\n        visible={isVisibleSelect === 'due_date'}\n        onConfirm={setRangeEstimateDate}\n        rangeDate={rangeEstimateDate}\n      />\n\n      <ModalPickerDate\n        onClose={() => setIsVisibleSelect('')}\n        visible={isVisibleSelect === 'late'}\n        onConfirm={setRangeDelayDate}\n        rangeDate={rangeDelayDate}\n      />\n    </>\n  );\n};\n\nexport default SearchTicketScreen;\n","import {StyleSheet} from 'react-native';\n\nexport default StyleSheet.create({\n  backdrop: {\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n  },\n  ctnMain: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    flex: 1,\n    gap: 10,\n  },\n  ctnBody: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 10,\n  },\n  ctnFilter: {\n    flexDirection: 'row',\n    columnGap: 6,\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderWidth: 1,\n    paddingHorizontal: 10,\n    paddingVertical: 6,\n    borderRadius: 6,\n  },\n});\n"],"names":["_react","e","r","__esModule","default","t","_getRequireWildcardCache","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","_interopRequireWildcard","require","_reactNative","_styles","_interopRequireDefault","_useRedux","_interface","_Table","_Size","_Text","_images","_Paging","_native","_utils","_reactNativeToastMessage","_reactI18next","_useReviewTicketServices","_reactNativeFs","_reactNativeBlobUtil","_ModalFullScreen","_ViewFileWebView","_httpClient","_jsxRuntime","WeakMap","exports","_ref","dataUserTask","useTranslation","_useState","useNavigation","useState","_useState2","_slicedToArray2","currentPage","setCurrentPage","_useState3","_useState4","totalItems","setTotalItems","_useState5","_useState6","dataRelative","setDataRelative","_useState7","_useState8","isViewFile","setIsViewFile","_useState9","_useState10","urlViewFile","setUrlViewFile","_useState11","_useState12","viewNameFile","setViewNameFile","dataTicketRedux","useAppSelector","state","ticket","accessToken","common","dataAccount","account","ReviewTicketServices","useReviewServices","useEffect","getFileByUserTask","_ref2","_ref3","_ref4","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","_asyncToGenerator2","page","params","size","sort","dataResp","getListAttachmentsUserTask","id","_userTaskId","_dataAccount$orgIn","_filterData","filterData","orgIn","includes","data","filter","d","resource","type","length","totalRecords","convertDataFileToTable","error","_x","apply","arguments","renderActionInfoFile","getListFileReview","isInfoFile","undefined","jsxs","View","style","styles","ctnAction","children","jsx","TouchableOpacity","onPress","handleViewFile","hitSlop","SizeDP","IconView","width","height","handleDownload","IconDownload","allowDeleted","_status","STATUS_TASK","TASK_SEARCH","_data$id","handleClearFile","toString","IconTrash","_fileName","_fileName$split","fileName","split","Toast","show","text1","text2","formData","FormData","base64String","getFiles","userTaskId","fileRepositoryId","append","dataView","viewFile","code","message","keyName","name","bucketName","_name","arr","beanName","fileId","_fileName$split2","path","ReactNativeBlobUtil","fs","dirs","DocumentDir","Date","getTime","dataBase64","config","fetch","getConfig","BASE_URL","then","res","info","status","catch","uri","Platform","OS","CommonUtils","getMimeType","_x2","_x3","_x4","idFile","deleteFileRelative","console","log","_x5","replace","toFile","RNFS","DownloadDirectoryPath","DocumentDirectoryPath","downloadFileWithBucketName","downloadFileNotBucketName","_x6","_x7","fromUrl","options","background","begin","progress","bytesWritten","contentLength","connectionTimeout","downloadFile","promise","statusCode","Share","share","url","action","dismissedAction","err","_x8","_x9","base64","writeFile","_x10","_x11","newData","map","infoFile","index","STT","String","txtText","numberOfLines","_fileName$split3","_fileName$split3$slic","slice","join","createdBy","documentSize","getSize","pop","_dataAccount$orgIn2","lastModifiedDate","DateUtils","convertDateToDDMMYYYY_H_M","handleUploadFile","file","handleGetFile","JSON","stringify","ticketId","uploadFileRelative","ctnMain","ScrollView","ctnBody","ctnForm","viewForm","txtTitle","IconUpload","stickyLeft","stickyColumnLeftIndex","tableHeaders","tableData","collectionSize","pageSize","onPageChange","isVisible","onClose","_constants","StyleSheet","create","backgroundColor","flex","paddingHorizontal","fontSize","FontSize","FontBase","fontFamily","Font","InterSemiBold600","color","Color","colorText","rowGap","marginBottom","flexDirection","alignItems","justifyContent","columnGap","FontTiny","InterRegular400","marginRight","_components","_Info","_BottomSheet","_useTicketServices","_common","dataTask","showMoreData","setShowMoreData","showMoreUser","setShowMoreUser","showMoreOwner","setShowMoreOwner","listUserOwner","setListUserOwner","TicketServices","useTicketServices","getListUserOwner","_dataTask$owner","listEmail","owner","getMultiLoginAccount","toogleMoreUser","toogleMoreOwner","getTimeEstimate","startDate","dueDate","time","Math","floor","convertTime","getPriority","priority","Iconhigh","Iconmedium","Iconlow","getValueAssnee","isAssnee","Pressable","ctnListUser","user","Fragment","Image","position","left","borderRadius","source","DEFAULT_IMAGE","ctnAdd","dataInfo","useMemo","key","value","onlyIcon","assignTaskList","task","_task$attrJson","attrJson","_task$attrJson2","_task$attrJson3","_task$attrJson4","statusType","ticketStatus","Status","voided","Alert","alert","Icon","fill","ctnHeader","ctnBodyHeader","rotate","textTitle","tastName","Divider","marginTop","title","renderContent","List","renderItem","item","ListItem","listUser","avatar","textname","email","imageUrl","firstName","lastName","transform","_useDebounce","dataSelect","setDataSelect","_ref$isSearch","isSearch","onRefresh","getMore","placeholder","_ref$isi18n","isi18n","refreshing","setIsRefreshing","dataValue","setDataValue","setValue","debouncedValue","useDebounce","Dimensions","screenW","setScreenW","sub","addEventListener","window","remove","filterValue","label","toLowerCase","handleOnRefresh","Input","allowFontScaling","onChangeText","accessoryRight","showsVerticalScrollIndicator","onEndReachedThreshold","onEndReached","concat","_toConsumableArray2","props","assign","visible","rangeDate","onConfirm","Modal","backdropStyle","backdrop","onBackdropPress","RangeCalendar","range","onSelect","nextRange","min","max","renderFooter","Button","appearance","_reactNativeSafeAreaContext","_lodash","_helper","_helper2","_helper3","_ModalDate","_BottomShetFilter","_helper4","_router$params","router","useRoute","searchFrom","navigation","inset","useSafeAreaInsets","inputRef","useRef","listDataTicket","setListDataTicket","totalRecoders","setTotalRecoders","totalPages","setTotalPages","pageModeler","setPageModeler","setPage","_useState13","_useState14","reloading","setReloading","_useState15","_useState16","debounceSearchText","setDebounceSearch","ListServices","debouncedSearch","debounce","text","_useState17","_useState18","isVisibleSelect","setIsVisibleSelect","_useState19","_useState20","groupService","setGroupService","_useState21","_useState22","groupStatusTicket","setGroupStatusTicket","_useState23","_useState24","groupServices","setGroupServices","_useState25","_useState26","groupModelerSelect","setGroupModelerSelect","_useState27","_useState28","groupModeler","setGroupModeler","_useState29","_useState30","setPriority","_useState31","_useState32","setRangeDate","_useState33","_useState34","rangeEstimateDate","setRangeEstimateDate","_useState35","_useState36","rangeDelayDate","setRangeDelayDate","useWindowDimensions","getGroupService","getListModelerByListServiceId","cancel","isClearData","getTicketFromMyTicket","getTicketFromTicketFollow","getDataStatus","keys","search","service","isEmpty","getListTicket","getListTicketFollow","getServiceMenu","content","serviceName","body","serviceId","_data$content","onRefreshModeler","callback","getMoreDataModeler","prevPage","_dataAccount$email","_data$page","bodySubmit","myTicket","textSearch","delayDateFrom","delayDateTo","endDate","estimateDateFrom","estimateDateTo","workflow","getTicketList","Number","_x12","searchText","keyWord","terms","processing","accepted","rejected","from","to","field","modelerId","_data$page2","getTicketListFollow","_x13","_x14","_x15","_x16","_x17","_x18","getBorderColor","borderColor","getLabelOfListFilter","getDate","getLabelOfGroup","getLabel","listSelect","defaultLabel","_groupModeler$find","find","modeler","_groupServices$find","_groupModeler$find2","_groupServices$find2","convertDateToDDMMYYYY","StatusBar","barStyle","Transparent","TouchableWithoutFeedback","Keyboard","dismiss","SafeAreaView","edges","BgPrimary","borderWidth","textStyle","placeholderTextColor","ref","autoFocus","nextValue","accessoryLeft","goBack","Layout","paddingBottom","bottom","level","showsHorizontalScrollIndicator","contentContainerStyle","padding","horizontal","listFilter","ctnFilter","dataStatus","dataListStatusTicket","dataListStatusTicketFollow","_item$resourceId","navigate","NavigationName","BottomTabNavigationTicketDetail","dataTicketId","resourceId","substr","selectTabBottom","recipientDetailsId","implementId","recipientId","gap","resourceName","notionName","TYPE_SCREEN","mobile","fontStyle","createdDate","bgColor","paddingVertical","minWidth","textAlign","ListEmptyComponent","margin","overdue","dataPrioritySelect"],"sourceRoot":""}