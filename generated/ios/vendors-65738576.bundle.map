{"version":3,"file":"vendors-65738576.bundle","mappings":"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","sources":["webpack:///./node_modules/react-native-safe-area-context/src/InitialWindow.native.ts","webpack:///./node_modules/react-native-safe-area-context/src/NativeSafeAreaProvider.tsx","webpack:///./node_modules/react-native-safe-area-context/src/SafeAreaContext.tsx","webpack:///./node_modules/react-native-safe-area-context/src/SafeAreaView.tsx","webpack:///./node_modules/react-native-safe-area-context/src/index.tsx","webpack:///./node_modules/react-native-safe-area-context/src/specs/NativeSafeAreaContext.ts","webpack:///./node_modules/react-native-safe-area-context/src/specs/NativeSafeAreaProvider.ts","webpack:///./node_modules/react-native-safe-area-context/src/specs/NativeSafeAreaView.ts","webpack:///./node_modules/react-native-screens/src/TransitionProgressContext.tsx","webpack:///./node_modules/react-native-screens/src/components/FullWindowOverlay.tsx","webpack:///./node_modules/react-native-screens/src/components/Screen.tsx","webpack:///./node_modules/react-native-screens/src/components/ScreenContainer.tsx","webpack:///./node_modules/react-native-screens/src/components/ScreenStack.tsx","webpack:///./node_modules/react-native-screens/src/components/ScreenStackHeaderConfig.tsx","webpack:///./node_modules/react-native-screens/src/components/SearchBar.tsx","webpack:///./node_modules/react-native-screens/src/components/helpers/DelayedFreeze.tsx","webpack:///./node_modules/react-native-screens/src/core.ts"],"sourcesContent":["import type { Metrics } from './SafeArea.types';\nimport NativeSafeAreaContext from './specs/NativeSafeAreaContext';\n\nexport const initialWindowMetrics = (NativeSafeAreaContext?.getConstants?.()\n  ?.initialWindowMetrics ?? null) as Metrics | null;\n\n/**\n * @deprecated\n */\nexport const initialWindowSafeAreaInsets = initialWindowMetrics?.insets;\n","import NativeSafeAreaProvider from './specs/NativeSafeAreaProvider';\n\nexport { NativeSafeAreaProvider };\n","import * as React from 'react';\nimport { Dimensions, StyleSheet, type ViewProps } from 'react-native';\nimport { NativeSafeAreaProvider } from './NativeSafeAreaProvider';\nimport type {\n  EdgeInsets,\n  InsetChangedEvent,\n  Metrics,\n  Rect,\n} from './SafeArea.types';\n\nconst isDev = process.env.NODE_ENV !== 'production';\n\nexport const SafeAreaInsetsContext = React.createContext<EdgeInsets | null>(\n  null,\n);\nif (isDev) {\n  SafeAreaInsetsContext.displayName = 'SafeAreaInsetsContext';\n}\n\nexport const SafeAreaFrameContext = React.createContext<Rect | null>(null);\nif (isDev) {\n  SafeAreaFrameContext.displayName = 'SafeAreaFrameContext';\n}\n\nexport interface SafeAreaProviderProps extends ViewProps {\n  children?: React.ReactNode;\n  initialMetrics?: Metrics | null;\n  /**\n   * @deprecated\n   */\n  initialSafeAreaInsets?: EdgeInsets | null;\n}\n\nexport function SafeAreaProvider({\n  children,\n  initialMetrics,\n  initialSafeAreaInsets,\n  style,\n  ...others\n}: SafeAreaProviderProps) {\n  const parentInsets = useParentSafeAreaInsets();\n  const parentFrame = useParentSafeAreaFrame();\n  const [insets, setInsets] = React.useState<EdgeInsets | null>(\n    initialMetrics?.insets ?? initialSafeAreaInsets ?? parentInsets ?? null,\n  );\n  const [frame, setFrame] = React.useState<Rect>(\n    initialMetrics?.frame ??\n      parentFrame ?? {\n        // Backwards compat so we render anyway if we don't have frame.\n        x: 0,\n        y: 0,\n        width: Dimensions.get('window').width,\n        height: Dimensions.get('window').height,\n      },\n  );\n  const onInsetsChange = React.useCallback((event: InsetChangedEvent) => {\n    const {\n      nativeEvent: { frame: nextFrame, insets: nextInsets },\n    } = event;\n\n    setFrame((curFrame) => {\n      if (\n        // Backwards compat with old native code that won't send frame.\n        nextFrame &&\n        (nextFrame.height !== curFrame.height ||\n          nextFrame.width !== curFrame.width ||\n          nextFrame.x !== curFrame.x ||\n          nextFrame.y !== curFrame.y)\n      ) {\n        return nextFrame;\n      } else {\n        return curFrame;\n      }\n    });\n\n    setInsets((curInsets) => {\n      if (\n        !curInsets ||\n        nextInsets.bottom !== curInsets.bottom ||\n        nextInsets.left !== curInsets.left ||\n        nextInsets.right !== curInsets.right ||\n        nextInsets.top !== curInsets.top\n      ) {\n        return nextInsets;\n      } else {\n        return curInsets;\n      }\n    });\n  }, []);\n\n  return (\n    <NativeSafeAreaProvider\n      style={[styles.fill, style]}\n      onInsetsChange={onInsetsChange}\n      {...others}\n    >\n      {insets != null ? (\n        <SafeAreaFrameContext.Provider value={frame}>\n          <SafeAreaInsetsContext.Provider value={insets}>\n            {children}\n          </SafeAreaInsetsContext.Provider>\n        </SafeAreaFrameContext.Provider>\n      ) : null}\n    </NativeSafeAreaProvider>\n  );\n}\n\nconst styles = StyleSheet.create({\n  fill: { flex: 1 },\n});\n\nfunction useParentSafeAreaInsets(): EdgeInsets | null {\n  return React.useContext(SafeAreaInsetsContext);\n}\n\nfunction useParentSafeAreaFrame(): Rect | null {\n  return React.useContext(SafeAreaFrameContext);\n}\n\nconst NO_INSETS_ERROR =\n  'No safe area value available. Make sure you are rendering `<SafeAreaProvider>` at the top of your app.';\n\nexport function useSafeAreaInsets(): EdgeInsets {\n  const insets = React.useContext(SafeAreaInsetsContext);\n  if (insets == null) {\n    throw new Error(NO_INSETS_ERROR);\n  }\n  return insets;\n}\n\nexport function useSafeAreaFrame(): Rect {\n  const frame = React.useContext(SafeAreaFrameContext);\n  if (frame == null) {\n    throw new Error(NO_INSETS_ERROR);\n  }\n  return frame;\n}\n\nexport type WithSafeAreaInsetsProps = {\n  insets: EdgeInsets;\n};\n\nexport function withSafeAreaInsets<T>(\n  WrappedComponent: React.ComponentType<T & WithSafeAreaInsetsProps>,\n): React.ForwardRefExoticComponent<\n  React.PropsWithoutRef<T> & React.RefAttributes<unknown>\n> {\n  return React.forwardRef((props: T, ref: React.Ref<unknown>) => {\n    const insets = useSafeAreaInsets();\n    return <WrappedComponent {...props} insets={insets} ref={ref} />;\n  });\n}\n\n/**\n * @deprecated\n */\nexport function useSafeArea(): EdgeInsets {\n  return useSafeAreaInsets();\n}\n\n/**\n * @deprecated\n */\nexport const SafeAreaConsumer = SafeAreaInsetsContext.Consumer;\n\n/**\n * @deprecated\n */\nexport const SafeAreaContext = SafeAreaInsetsContext;\n","import * as React from 'react';\nimport type {\n  Edge,\n  EdgeMode,\n  EdgeRecord,\n  NativeSafeAreaViewInstance,\n  NativeSafeAreaViewProps,\n} from './SafeArea.types';\nimport NativeSafeAreaView from './specs/NativeSafeAreaView';\nimport { useMemo } from 'react';\n\nconst defaultEdges: Record<Edge, EdgeMode> = {\n  top: 'additive',\n  left: 'additive',\n  bottom: 'additive',\n  right: 'additive',\n};\n\nexport type SafeAreaViewProps = NativeSafeAreaViewProps;\n\nexport const SafeAreaView = React.forwardRef<\n  NativeSafeAreaViewInstance,\n  SafeAreaViewProps\n>(({ edges, ...props }, ref) => {\n  const nativeEdges = useMemo(() => {\n    if (edges == null) {\n      return defaultEdges;\n    }\n\n    const edgesObj = Array.isArray(edges)\n      ? edges.reduce<EdgeRecord>((acc, edge: Edge) => {\n          acc[edge] = 'additive';\n          return acc;\n        }, {})\n      : // ts has trouble with refining readonly arrays.\n        (edges as EdgeRecord);\n\n    // make sure that we always pass all edges, required for fabric\n    const requiredEdges: Record<Edge, EdgeMode> = {\n      top: edgesObj.top ?? 'off',\n      right: edgesObj.right ?? 'off',\n      bottom: edgesObj.bottom ?? 'off',\n      left: edgesObj.left ?? 'off',\n    };\n\n    return requiredEdges;\n  }, [edges]);\n\n  return <NativeSafeAreaView {...props} edges={nativeEdges} ref={ref} />;\n});\n","'use client';\n\nexport * from './SafeAreaContext';\nexport * from './SafeAreaView';\nexport * from './InitialWindow';\nexport * from './SafeArea.types';\n","import { TurboModule, TurboModuleRegistry } from 'react-native';\nimport type { Double } from 'react-native/Libraries/Types/CodegenTypes';\n\nexport interface Spec extends TurboModule {\n  getConstants: () => {\n    initialWindowMetrics?: {\n      insets: {\n        top: Double;\n        right: Double;\n        bottom: Double;\n        left: Double;\n      };\n      frame: {\n        x: Double;\n        y: Double;\n        width: Double;\n        height: Double;\n      };\n    };\n  };\n}\n\nexport default TurboModuleRegistry.get<Spec>('RNCSafeAreaContext');\n","import type {\n  DirectEventHandler,\n  Double,\n} from 'react-native/Libraries/Types/CodegenTypes';\nimport codegenNativeComponent from 'react-native/Libraries/Utilities/codegenNativeComponent';\nimport type { ViewProps, HostComponent } from 'react-native';\n\nexport type Event = Readonly<{\n  insets: Readonly<{\n    top: Double;\n    right: Double;\n    bottom: Double;\n    left: Double;\n  }>;\n  frame: Readonly<{\n    x: Double;\n    y: Double;\n    width: Double;\n    height: Double;\n  }>;\n}>;\n\nexport interface NativeProps extends ViewProps {\n  onInsetsChange?: DirectEventHandler<Event>;\n}\n\nexport default codegenNativeComponent<NativeProps>(\n  'RNCSafeAreaProvider',\n) as HostComponent<NativeProps>;\n","import codegenNativeComponent from 'react-native/Libraries/Utilities/codegenNativeComponent';\nimport type { WithDefault } from 'react-native/Libraries/Types/CodegenTypes';\nimport type { ViewProps, HostComponent } from 'react-native';\n\nexport interface NativeProps extends ViewProps {\n  mode?: WithDefault<'padding' | 'margin', 'padding'>;\n  edges?: Readonly<{\n    top: string;\n    right: string;\n    bottom: string;\n    left: string;\n  }>;\n}\n\nexport default codegenNativeComponent<NativeProps>('RNCSafeAreaView', {\n  interfaceOnly: true,\n}) as HostComponent<NativeProps>;\n","import * as React from 'react';\nimport { Animated } from 'react-native';\n\ntype TransitionProgressContextBody = {\n  progress: Animated.Value;\n  closing: Animated.Value;\n  goingForward: Animated.Value;\n};\n\nexport default React.createContext<TransitionProgressContextBody | undefined>(\n  undefined\n);\n","import React, { PropsWithChildren, ReactNode } from 'react';\nimport { Platform, StyleProp, View, ViewStyle } from 'react-native';\n\n// Native components\nimport FullWindowOverlayNativeComponent from '../fabric/FullWindowOverlayNativeComponent';\nconst NativeFullWindowOverlay: React.ComponentType<\n  PropsWithChildren<{\n    style: StyleProp<ViewStyle>;\n  }>\n> = FullWindowOverlayNativeComponent as any;\n\nfunction FullWindowOverlay(props: { children: ReactNode }) {\n  if (Platform.OS !== 'ios') {\n    console.warn('Using FullWindowOverlay is only valid on iOS devices.');\n    return <View {...props} />;\n  }\n  return (\n    <NativeFullWindowOverlay\n      style={{ position: 'absolute', width: '100%', height: '100%' }}>\n      {props.children}\n    </NativeFullWindowOverlay>\n  );\n}\n\nexport default FullWindowOverlay;\n","import React from 'react';\nimport { Animated, View, Platform } from 'react-native';\n\nimport TransitionProgressContext from '../TransitionProgressContext';\nimport DelayedFreeze from './helpers/DelayedFreeze';\nimport { ScreenProps } from 'react-native-screens';\n\nimport {\n  freezeEnabled,\n  isNativePlatformSupported,\n  screensEnabled,\n} from '../core';\n\n// Native components\nimport ScreenNativeComponent from '../fabric/ScreenNativeComponent';\nimport ModalScreenNativeComponent from '../fabric/ModalScreenNativeComponent';\n\nexport const NativeScreen: React.ComponentType<ScreenProps> =\n  ScreenNativeComponent as React.ComponentType<ScreenProps>;\nconst AnimatedNativeScreen = Animated.createAnimatedComponent(NativeScreen);\nconst AnimatedNativeModalScreen = Animated.createAnimatedComponent(\n  ModalScreenNativeComponent as React.ComponentType<ScreenProps>\n);\n\n// Incomplete type, all accessible properties available at:\n// react-native/Libraries/Components/View/ReactNativeViewViewConfig.js\ninterface ViewConfig extends View {\n  viewConfig: {\n    validAttributes: {\n      style: {\n        display: boolean;\n      };\n    };\n  };\n  _viewConfig: {\n    validAttributes: {\n      style: {\n        display: boolean;\n      };\n    };\n  };\n}\n\nexport const InnerScreen = React.forwardRef<View, ScreenProps>(\n  function InnerScreen(props, ref) {\n    const innerRef = React.useRef<ViewConfig | null>(null);\n    React.useImperativeHandle(ref, () => innerRef.current!, []);\n\n    const setRef = (ref: ViewConfig) => {\n      innerRef.current = ref;\n      props.onComponentRef?.(ref);\n    };\n\n    const closing = React.useRef(new Animated.Value(0)).current;\n    const progress = React.useRef(new Animated.Value(0)).current;\n    const goingForward = React.useRef(new Animated.Value(0)).current;\n\n    const {\n      enabled = screensEnabled(),\n      freezeOnBlur = freezeEnabled(),\n      ...rest\n    } = props;\n\n    // To maintain default behavior of formSheet stack presentation style and to have reasonable\n    // defaults for new medium-detent iOS API we need to set defaults here\n    const {\n      sheetAllowedDetents = 'large',\n      sheetLargestUndimmedDetent = 'all',\n      sheetGrabberVisible = false,\n      sheetCornerRadius = -1.0,\n      sheetExpandsWhenScrolledToEdge = true,\n      stackPresentation,\n    } = rest;\n\n    if (enabled && isNativePlatformSupported) {\n      // Due to how Yoga resolves layout, we need to have different components for modal nad non-modal screens\n      const AnimatedScreen =\n        Platform.OS === 'android' ||\n        stackPresentation === undefined ||\n        stackPresentation === 'push' ||\n        stackPresentation === 'containedModal' ||\n        stackPresentation === 'containedTransparentModal'\n          ? AnimatedNativeScreen\n          : AnimatedNativeModalScreen;\n\n      let {\n        // Filter out active prop in this case because it is unused and\n        // can cause problems depending on react-native version:\n        // https://github.com/react-navigation/react-navigation/issues/4886\n        active,\n        activityState,\n        children,\n        isNativeStack,\n        gestureResponseDistance,\n        onGestureCancel,\n        ...props\n      } = rest;\n\n      if (active !== undefined && activityState === undefined) {\n        console.warn(\n          'It appears that you are using old version of react-navigation library. Please update @react-navigation/bottom-tabs, @react-navigation/stack and @react-navigation/drawer to version 5.10.0 or above to take full advantage of new functionality added to react-native-screens'\n        );\n        activityState = active !== 0 ? 2 : 0; // in the new version, we need one of the screens to have value of 2 after the transition\n      }\n\n      const handleRef = (ref: ViewConfig) => {\n        if (ref?.viewConfig?.validAttributes?.style) {\n          ref.viewConfig.validAttributes.style = {\n            ...ref.viewConfig.validAttributes.style,\n            display: false,\n          };\n          setRef(ref);\n        } else if (ref?._viewConfig?.validAttributes?.style) {\n          ref._viewConfig.validAttributes.style = {\n            ...ref._viewConfig.validAttributes.style,\n            display: false,\n          };\n          setRef(ref);\n        }\n      };\n\n      return (\n        <DelayedFreeze freeze={freezeOnBlur && activityState === 0}>\n          <AnimatedScreen\n            {...props}\n            activityState={activityState}\n            sheetAllowedDetents={sheetAllowedDetents}\n            sheetLargestUndimmedDetent={sheetLargestUndimmedDetent}\n            sheetGrabberVisible={sheetGrabberVisible}\n            sheetCornerRadius={sheetCornerRadius}\n            sheetExpandsWhenScrolledToEdge={sheetExpandsWhenScrolledToEdge}\n            gestureResponseDistance={{\n              start: gestureResponseDistance?.start ?? -1,\n              end: gestureResponseDistance?.end ?? -1,\n              top: gestureResponseDistance?.top ?? -1,\n              bottom: gestureResponseDistance?.bottom ?? -1,\n            }}\n            // This prevents showing blank screen when navigating between multiple screens with freezing\n            // https://github.com/software-mansion/react-native-screens/pull/1208\n            ref={handleRef}\n            onTransitionProgress={\n              !isNativeStack\n                ? undefined\n                : Animated.event(\n                    [\n                      {\n                        nativeEvent: {\n                          progress,\n                          closing,\n                          goingForward,\n                        },\n                      },\n                    ],\n                    { useNativeDriver: true }\n                  )\n            }\n            onGestureCancel={\n              onGestureCancel ??\n              (() => {\n                // for internal use\n              })\n            }>\n            {!isNativeStack ? ( // see comment of this prop in types.tsx for information why it is needed\n              children\n            ) : (\n              <TransitionProgressContext.Provider\n                value={{\n                  progress,\n                  closing,\n                  goingForward,\n                }}>\n                {children}\n              </TransitionProgressContext.Provider>\n            )}\n          </AnimatedScreen>\n        </DelayedFreeze>\n      );\n    } else {\n      // same reason as above\n      let {\n        active,\n        activityState,\n        style,\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        onComponentRef,\n        ...props\n      } = rest;\n\n      if (active !== undefined && activityState === undefined) {\n        activityState = active !== 0 ? 2 : 0;\n      }\n      return (\n        <Animated.View\n          style={[style, { display: activityState !== 0 ? 'flex' : 'none' }]}\n          ref={setRef}\n          {...props}\n        />\n      );\n    }\n  }\n);\n\n// context to be used when the user wants to use enhanced implementation\n// e.g. to use `useReanimatedTransitionProgress` (see `reanimated` folder in repo)\nexport const ScreenContext = React.createContext(InnerScreen);\n\nconst Screen: React.FC<ScreenProps> = props => {\n  const ScreenWrapper = React.useContext(ScreenContext) || InnerScreen;\n\n  return <ScreenWrapper {...props} />;\n};\n\nexport default Screen;\n","import { Platform, View } from 'react-native';\nimport React from 'react';\nimport { ScreenContainerProps } from 'react-native-screens';\nimport { isNativePlatformSupported, screensEnabled } from '../core';\n\n// Native components\nimport ScreenContainerNativeComponent from '../fabric/ScreenContainerNativeComponent';\nimport ScreenNavigationContainerNativeComponent from '../fabric/ScreenNavigationContainerNativeComponent';\n\nexport const NativeScreenContainer: React.ComponentType<ScreenContainerProps> =\n  Platform.OS !== 'web' ? (ScreenContainerNativeComponent as any) : View;\nexport const NativeScreenNavigationContainer: React.ComponentType<ScreenContainerProps> =\n  Platform.OS !== 'web'\n    ? (ScreenNavigationContainerNativeComponent as any)\n    : View;\n\nfunction ScreenContainer(props: ScreenContainerProps) {\n  const { enabled = screensEnabled(), hasTwoStates, ...rest } = props;\n\n  if (enabled && isNativePlatformSupported) {\n    if (hasTwoStates) {\n      const ScreenNavigationContainer =\n        Platform.OS === 'ios'\n          ? NativeScreenNavigationContainer\n          : NativeScreenContainer;\n      return <ScreenNavigationContainer {...rest} />;\n    }\n    return <NativeScreenContainer {...rest} />;\n  }\n  return <View {...rest} />;\n}\n\nexport default ScreenContainer;\n","import React from 'react';\nimport { ScreenStackProps, freezeEnabled } from 'react-native-screens';\nimport DelayedFreeze from './helpers/DelayedFreeze';\n\n// Native components\nimport ScreenStackNativeComponent from '../fabric/ScreenStackNativeComponent';\nconst NativeScreenStack: React.ComponentType<ScreenStackProps> =\n  ScreenStackNativeComponent as any;\n\nfunction ScreenStack(props: ScreenStackProps) {\n  const { children, gestureDetectorBridge, ...rest } = props;\n  const ref = React.useRef(null);\n  const size = React.Children.count(children);\n  // freezes all screens except the top one\n  const childrenWithFreeze = React.Children.map(children, (child, index) => {\n    // @ts-expect-error it's either SceneView in v6 or RouteView in v5\n    const { props, key } = child;\n    const descriptor = props?.descriptor ?? props?.descriptors?.[key];\n    const isFreezeEnabled =\n      descriptor?.options?.freezeOnBlur ?? freezeEnabled();\n\n    return (\n      <DelayedFreeze freeze={isFreezeEnabled && size - index > 1}>\n        {child}\n      </DelayedFreeze>\n    );\n  });\n\n  React.useEffect(() => {\n    if (gestureDetectorBridge) {\n      gestureDetectorBridge.current.stackUseEffectCallback(ref);\n    }\n  });\n  return (\n    <NativeScreenStack {...rest} ref={ref}>\n      {childrenWithFreeze}\n    </NativeScreenStack>\n  );\n}\n\nexport default ScreenStack;\n","import React from 'react';\nimport {\n  HeaderSubviewTypes,\n  ScreenStackHeaderConfigProps,\n  SearchBarProps,\n} from 'react-native-screens';\nimport { Image, ImageProps, StyleSheet, ViewProps } from 'react-native';\n\n// Native components\nimport ScreenStackHeaderConfigNativeComponent from '../fabric/ScreenStackHeaderConfigNativeComponent';\nimport ScreenStackHeaderSubviewNativeComponent from '../fabric/ScreenStackHeaderSubviewNativeComponent';\n\nexport const ScreenStackHeaderConfig: React.ComponentType<ScreenStackHeaderConfigProps> =\n  ScreenStackHeaderConfigNativeComponent as any;\nexport const ScreenStackHeaderSubview: React.ComponentType<\n  React.PropsWithChildren<ViewProps & { type?: HeaderSubviewTypes }>\n> = ScreenStackHeaderSubviewNativeComponent as any;\n\nexport const ScreenStackHeaderBackButtonImage = (\n  props: ImageProps\n): JSX.Element => (\n  <ScreenStackHeaderSubview type=\"back\" style={styles.headerSubview}>\n    <Image resizeMode=\"center\" fadeDuration={0} {...props} />\n  </ScreenStackHeaderSubview>\n);\n\nexport const ScreenStackHeaderRightView = (\n  props: React.PropsWithChildren<ViewProps>\n): JSX.Element => (\n  <ScreenStackHeaderSubview\n    {...props}\n    type=\"right\"\n    style={styles.headerSubview}\n  />\n);\n\nexport const ScreenStackHeaderLeftView = (\n  props: React.PropsWithChildren<ViewProps>\n): JSX.Element => (\n  <ScreenStackHeaderSubview\n    {...props}\n    type=\"left\"\n    style={styles.headerSubview}\n  />\n);\n\nexport const ScreenStackHeaderCenterView = (\n  props: React.PropsWithChildren<ViewProps>\n): JSX.Element => (\n  <ScreenStackHeaderSubview\n    {...props}\n    type=\"center\"\n    style={styles.headerSubview}\n  />\n);\n\nexport const ScreenStackHeaderSearchBarView = (\n  props: React.PropsWithChildren<SearchBarProps>\n): JSX.Element => (\n  <ScreenStackHeaderSubview\n    {...props}\n    type=\"searchBar\"\n    style={styles.headerSubview}\n  />\n);\n\nconst styles = StyleSheet.create({\n  headerSubview: {\n    position: 'absolute',\n    top: 0,\n    right: 0,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n","import React from 'react';\nimport {\n  isSearchBarAvailableForCurrentPlatform,\n  SearchBarCommands,\n  SearchBarProps,\n} from 'react-native-screens';\nimport { View } from 'react-native';\n\n// Native components\nimport SearchBarNativeComponent, {\n  Commands as SearchBarNativeCommands,\n  NativeProps as SearchBarNativeProps,\n  SearchBarEvent,\n  SearchButtonPressedEvent,\n  ChangeTextEvent,\n} from '../fabric/SearchBarNativeComponent';\nimport { DirectEventHandler } from 'react-native/Libraries/Types/CodegenTypes';\n\nexport const NativeSearchBar: React.ComponentType<\n  SearchBarNativeProps & { ref?: React.RefObject<SearchBarCommands> }\n> &\n  typeof NativeSearchBarCommands =\n  SearchBarNativeComponent as unknown as React.ComponentType<SearchBarNativeProps> &\n    SearchBarCommandsType;\nexport const NativeSearchBarCommands: SearchBarCommandsType =\n  SearchBarNativeCommands as SearchBarCommandsType;\n\ntype NativeSearchBarRef = React.ElementRef<typeof NativeSearchBar>;\n\ntype SearchBarCommandsType = {\n  blur: (viewRef: NativeSearchBarRef) => void;\n  focus: (viewRef: NativeSearchBarRef) => void;\n  clearText: (viewRef: NativeSearchBarRef) => void;\n  toggleCancelButton: (viewRef: NativeSearchBarRef, flag: boolean) => void;\n  setText: (viewRef: NativeSearchBarRef, text: string) => void;\n  cancelSearch: (viewRef: NativeSearchBarRef) => void;\n};\n\nfunction SearchBar(props: SearchBarProps, ref: React.Ref<SearchBarCommands>) {\n  const searchBarRef = React.useRef<SearchBarCommands | null>(null);\n\n  React.useImperativeHandle(ref, () => ({\n    blur: () => {\n      _callMethodWithRef(ref => NativeSearchBarCommands.blur(ref));\n    },\n    focus: () => {\n      _callMethodWithRef(ref => NativeSearchBarCommands.focus(ref));\n    },\n    toggleCancelButton: (flag: boolean) => {\n      _callMethodWithRef(ref =>\n        NativeSearchBarCommands.toggleCancelButton(ref, flag)\n      );\n    },\n    clearText: () => {\n      _callMethodWithRef(ref => NativeSearchBarCommands.clearText(ref));\n    },\n    setText: (text: string) => {\n      _callMethodWithRef(ref => NativeSearchBarCommands.setText(ref, text));\n    },\n    cancelSearch: () => {\n      _callMethodWithRef(ref => NativeSearchBarCommands.cancelSearch(ref));\n    },\n  }));\n\n  const _callMethodWithRef = React.useCallback(\n    (method: (ref: SearchBarCommands) => void) => {\n      const ref = searchBarRef.current;\n      if (ref) {\n        method(ref);\n      } else {\n        console.warn(\n          'Reference to native search bar component has not been updated yet'\n        );\n      }\n    },\n    [searchBarRef]\n  );\n\n  if (!isSearchBarAvailableForCurrentPlatform) {\n    console.warn(\n      'Importing SearchBar is only valid on iOS and Android devices.'\n    );\n    return View as unknown as React.ReactNode;\n  }\n\n  return (\n    <NativeSearchBar\n      ref={searchBarRef}\n      {...props}\n      onSearchFocus={props.onFocus as DirectEventHandler<SearchBarEvent>}\n      onSearchBlur={props.onBlur as DirectEventHandler<SearchBarEvent>}\n      onSearchButtonPress={\n        props.onSearchButtonPress as DirectEventHandler<SearchButtonPressedEvent>\n      }\n      onCancelButtonPress={\n        props.onCancelButtonPress as DirectEventHandler<SearchBarEvent>\n      }\n      onChangeText={props.onChangeText as DirectEventHandler<ChangeTextEvent>}\n    />\n  );\n}\n\nexport default React.forwardRef<SearchBarCommands, SearchBarProps>(SearchBar);\n","import React from 'react';\nimport { Freeze } from 'react-freeze';\n\ninterface FreezeWrapperProps {\n  freeze: boolean;\n  children: React.ReactNode;\n}\n\n// This component allows one more render before freezing the screen.\n// Allows activityState to reach the native side and useIsFocused to work correctly.\nfunction DelayedFreeze({ freeze, children }: FreezeWrapperProps) {\n  // flag used for determining whether freeze should be enabled\n  const [freezeState, setFreezeState] = React.useState(false);\n\n  React.useEffect(() => {\n    const id = setImmediate(() => {\n      setFreezeState(freeze);\n    });\n    return () => {\n      clearImmediate(id);\n    };\n  }, [freeze]);\n\n  return <Freeze freeze={freeze ? freezeState : false}>{children}</Freeze>;\n}\n\nexport default DelayedFreeze;\n","import { Platform, UIManager } from 'react-native';\n\n// const that tells if the library should use new implementation, will be undefined for older versions\nexport const shouldUseActivityState = true;\n\nexport const isNativePlatformSupported =\n  Platform.OS === 'ios' ||\n  Platform.OS === 'android' ||\n  Platform.OS === 'windows';\n\nlet ENABLE_SCREENS = isNativePlatformSupported;\n\nexport function enableScreens(shouldEnableScreens = true) {\n  ENABLE_SCREENS = shouldEnableScreens;\n\n  if (!isNativePlatformSupported) {\n    return;\n  }\n\n  if (ENABLE_SCREENS && !UIManager.getViewManagerConfig('RNSScreen')) {\n    console.error(\n      `Screen native module hasn't been linked. Please check the react-native-screens README for more details`\n    );\n  }\n}\n\nlet ENABLE_FREEZE = false;\n\nexport function enableFreeze(shouldEnableReactFreeze = true) {\n  if (!isNativePlatformSupported) {\n    return;\n  }\n\n  ENABLE_FREEZE = shouldEnableReactFreeze;\n}\n\nexport function screensEnabled() {\n  return ENABLE_SCREENS;\n}\n\nexport function freezeEnabled() {\n  return ENABLE_FREEZE;\n}\n"],"names":["_NativeSafeAreaContex","_NativeSafeAreaContex2","_NativeSafeAreaContext","_interopRequireDefault","require","initialWindowMetrics","exports","NativeSafeAreaContext","getConstants","insets","_NativeSafeAreaProvider","_ref","_ref2","_ref3","_initialMetrics$inset","_ref4","_initialMetrics$frame","children","initialMetrics","initialSafeAreaInsets","style","others","_objectWithoutProperties2","default","_excluded","parentInsets","React","useContext","SafeAreaInsetsContext","parentFrame","SafeAreaFrameContext","_React$useState","useState","_React$useState2","_slicedToArray2","setInsets","_React$useState3","frame","x","y","width","Dimensions","get","height","_React$useState4","setFrame","onInsetsChange","useCallback","event","_event$nativeEvent","nativeEvent","nextFrame","nextInsets","curFrame","curInsets","bottom","left","right","top","_jsxRuntime","jsx","NativeSafeAreaProvider","Object","assign","styles","fill","Provider","value","useSafeAreaInsets","Error","NO_INSETS_ERROR","WrappedComponent","forwardRef","props","ref","e","r","__esModule","t","_getRequireWildcardCache","has","n","__proto__","a","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","_interopRequireWildcard","_reactNative","WeakMap","isDev","process","createContext","StyleSheet","create","flex","Consumer","_react","_NativeSafeAreaView","defaultEdges","edges","nativeEdges","useMemo","_edgesObj$top","_edgesObj$right","_edgesObj$bottom","_edgesObj$left","edgesObj","Array","isArray","reduce","acc","edge","_SafeAreaContext","keys","forEach","key","enumerable","_SafeAreaView","_InitialWindow","_SafeArea","TurboModuleRegistry","NativeComponentRegistry","ConditionallyIgnoredEventHandlers","__INTERNAL_VIEW_CONFIG","uiViewClassName","directEventTypes","topInsetsChange","registrationName","validAttributes","mode","undefined","_FullWindowOverlayNativeComponent","NativeFullWindowOverlay","FullWindowOverlayNativeComponent","Platform","OS","console","warn","View","position","_TransitionProgressContext","_DelayedFreeze","_core","_ScreenNativeComponent","_ModalScreenNativeComponent","_excluded2","_excluded3","NativeScreen","ScreenNativeComponent","AnimatedNativeScreen","Animated","createAnimatedComponent","AnimatedNativeModalScreen","ModalScreenNativeComponent","InnerScreen","innerRef","useRef","useImperativeHandle","current","setRef","onComponentRef","closing","Value","progress","goingForward","_props$enabled","enabled","screensEnabled","_props$freezeOnBlur","freezeOnBlur","freezeEnabled","rest","_rest$sheetAllowedDet","sheetAllowedDetents","_rest$sheetLargestUnd","sheetLargestUndimmedDetent","_rest$sheetGrabberVis","sheetGrabberVisible","_rest$sheetCornerRadi","sheetCornerRadius","_rest$sheetExpandsWhe","sheetExpandsWhenScrolledToEdge","stackPresentation","isNativePlatformSupported","_gestureResponseDista","_gestureResponseDista2","_gestureResponseDista3","_gestureResponseDista4","AnimatedScreen","active","activityState","isNativeStack","gestureResponseDistance","onGestureCancel","freeze","start","end","_ref$viewConfig","_ref$viewConfig$valid","_ref$_viewConfig","_ref$_viewConfig$vali","viewConfig","display","_viewConfig","onTransitionProgress","useNativeDriver","ScreenContext","ScreenWrapper","_ScreenContainerNativeComponent","_ScreenNavigationContainerNativeComponent","NativeScreenContainer","ScreenContainerNativeComponent","NativeScreenNavigationContainer","ScreenNavigationContainerNativeComponent","hasTwoStates","ScreenNavigationContainer","_reactNativeScreens","_ScreenStackNativeComponent","NativeScreenStack","ScreenStackNativeComponent","gestureDetectorBridge","size","Children","count","childrenWithFreeze","map","child","index","_props$descriptor","_props$descriptors","_descriptor$options$f","_descriptor$options","descriptor","descriptors","isFreezeEnabled","options","useEffect","stackUseEffectCallback","_ScreenStackHeaderConfigNativeComponent","_ScreenStackHeaderSubviewNativeComponent","ScreenStackHeaderSubview","ScreenStackHeaderConfigNativeComponent","ScreenStackHeaderSubviewNativeComponent","type","headerSubview","Image","resizeMode","fadeDuration","flexDirection","alignItems","justifyContent","_SearchBarNativeComponent","NativeSearchBar","SearchBarNativeComponent","NativeSearchBarCommands","SearchBarNativeCommands","searchBarRef","blur","_callMethodWithRef","focus","toggleCancelButton","flag","clearText","setText","text","cancelSearch","method","isSearchBarAvailableForCurrentPlatform","onSearchFocus","onFocus","onSearchBlur","onBlur","onSearchButtonPress","onCancelButtonPress","onChangeText","_reactFreeze","freezeState","setFreezeState","id","setImmediate","clearImmediate","Freeze","shouldEnableReactFreeze","arguments","length","ENABLE_FREEZE","shouldEnableScreens","ENABLE_SCREENS","UIManager","getViewManagerConfig","error"],"sourceRoot":""}