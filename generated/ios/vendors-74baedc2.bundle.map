{"version":3,"file":"vendors-74baedc2.bundle","mappings":"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","sources":["webpack:///./node_modules/react-native/Libraries/LogBox/LogBox.js","webpack:///./node_modules/react-native/Libraries/Modal/Modal.js","webpack:///./node_modules/react-native/Libraries/Modal/ModalInjection.js","webpack:///./node_modules/react-native/Libraries/Modal/NativeModalManager.js","webpack:///./node_modules/react-native/Libraries/Modal/RCTModalHostViewNativeComponent.js","webpack:///./node_modules/react-native/Libraries/NativeComponent/BaseViewConfig.ios.js","webpack:///./node_modules/react-native/Libraries/NativeComponent/NativeComponentRegistry.js","webpack:///./node_modules/react-native/Libraries/NativeComponent/NativeComponentRegistryUnstable.js","webpack:///./node_modules/react-native/Libraries/NativeComponent/PlatformBaseViewConfig.js","webpack:///./node_modules/react-native/Libraries/NativeComponent/StaticViewConfigValidator.js","webpack:///./node_modules/react-native/Libraries/NativeComponent/ViewConfig.js","webpack:///./node_modules/react-native/Libraries/NativeComponent/ViewConfigIgnore.js","webpack:///./node_modules/react-native/Libraries/NativeModules/specs/NativeDevSettings.js","webpack:///./node_modules/react-native/Libraries/NativeModules/specs/NativeDialogManagerAndroid.js","webpack:///./node_modules/react-native/Libraries/NativeModules/specs/NativeRedBox.js","webpack:///./node_modules/react-native/Libraries/NativeModules/specs/NativeSourceCode.js","webpack:///./node_modules/react-native/Libraries/Network/FormData.js","webpack:///./node_modules/react-native/Libraries/Network/NativeNetworkingIOS.js","webpack:///./node_modules/react-native/Libraries/Network/RCTNetworking.ios.js","webpack:///./node_modules/react-native/Libraries/Network/XMLHttpRequest.js","webpack:///./node_modules/react-native/Libraries/Network/convertRequestBody.js","webpack:///./node_modules/react-native/Libraries/Network/fetch.js","webpack:///./node_modules/react-native/Libraries/Performance/NativeJSCSamplingProfiler.js","webpack:///./node_modules/react-native/Libraries/Performance/SamplingProfiler.js","webpack:///./node_modules/react-native/Libraries/Performance/Systrace.js","webpack:///./node_modules/react-native/Libraries/PermissionsAndroid/NativePermissionsAndroid.js","webpack:///./node_modules/react-native/Libraries/PermissionsAndroid/PermissionsAndroid.js","webpack:///./node_modules/react-native/Libraries/Pressability/HoverState.js","webpack:///./node_modules/react-native/Libraries/Pressability/Pressability.js","webpack:///./node_modules/react-native/Libraries/Pressability/PressabilityDebug.js","webpack:///./node_modules/react-native/Libraries/Pressability/PressabilityPerformanceEventEmitter.js","webpack:///./node_modules/react-native/Libraries/Pressability/usePressability.js","webpack:///./node_modules/react-native/Libraries/Promise.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nimport type {IgnorePattern, LogData} from './Data/LogBoxData';\nimport type {ExtendedExceptionData} from './Data/parseLogBoxLog';\n\nimport Platform from '../Utilities/Platform';\nimport RCTLog from '../Utilities/RCTLog';\n\nexport type {LogData, ExtendedExceptionData, IgnorePattern};\n\nlet LogBox;\n\ninterface ILogBox {\n  install(): void;\n  uninstall(): void;\n  isInstalled(): boolean;\n  ignoreLogs($ReadOnlyArray<IgnorePattern>): void;\n  ignoreAllLogs(?boolean): void;\n  clearAllLogs(): void;\n  addLog(log: LogData): void;\n  addException(error: ExtendedExceptionData): void;\n}\n\n/**\n * LogBox displays logs in the app.\n */\nif (__DEV__) {\n  const LogBoxData = require('./Data/LogBoxData');\n  const {parseLogBoxLog, parseInterpolation} = require('./Data/parseLogBoxLog');\n\n  let originalConsoleError;\n  let originalConsoleWarn;\n  let consoleErrorImpl;\n  let consoleWarnImpl: (...args: Array<mixed>) => void;\n\n  let isLogBoxInstalled: boolean = false;\n\n  LogBox = {\n    install(): void {\n      if (isLogBoxInstalled) {\n        return;\n      }\n\n      isLogBoxInstalled = true;\n\n      // Trigger lazy initialization of module.\n      require('../NativeModules/specs/NativeLogBox');\n\n      // IMPORTANT: we only overwrite `console.error` and `console.warn` once.\n      // When we uninstall we keep the same reference and only change its\n      // internal implementation\n      const isFirstInstall = originalConsoleError == null;\n      if (isFirstInstall) {\n        originalConsoleError = console.error.bind(console);\n        originalConsoleWarn = console.warn.bind(console);\n\n        // $FlowExpectedError[cannot-write]\n        console.error = (...args) => {\n          consoleErrorImpl(...args);\n        };\n        // $FlowExpectedError[cannot-write]\n        console.warn = (...args) => {\n          consoleWarnImpl(...args);\n        };\n      }\n\n      consoleErrorImpl = registerError;\n      consoleWarnImpl = registerWarning;\n\n      if (Platform.isTesting) {\n        LogBoxData.setDisabled(true);\n      }\n\n      RCTLog.setWarningHandler((...args) => {\n        registerWarning(...args);\n      });\n    },\n\n    uninstall(): void {\n      if (!isLogBoxInstalled) {\n        return;\n      }\n\n      isLogBoxInstalled = false;\n\n      // IMPORTANT: we don't re-assign to `console` in case the method has been\n      // decorated again after installing LogBox. E.g.:\n      // Before uninstalling: original > LogBox > OtherErrorHandler\n      // After uninstalling:  original > LogBox (noop) > OtherErrorHandler\n      consoleErrorImpl = originalConsoleError;\n      consoleWarnImpl = originalConsoleWarn;\n    },\n\n    isInstalled(): boolean {\n      return isLogBoxInstalled;\n    },\n\n    ignoreLogs(patterns: $ReadOnlyArray<IgnorePattern>): void {\n      LogBoxData.addIgnorePatterns(patterns);\n    },\n\n    ignoreAllLogs(value?: ?boolean): void {\n      LogBoxData.setDisabled(value == null ? true : value);\n    },\n\n    clearAllLogs(): void {\n      LogBoxData.clear();\n    },\n\n    addLog(log: LogData): void {\n      if (isLogBoxInstalled) {\n        LogBoxData.addLog(log);\n      }\n    },\n\n    addException(error: ExtendedExceptionData): void {\n      if (isLogBoxInstalled) {\n        LogBoxData.addException(error);\n      }\n    },\n  };\n\n  const isRCTLogAdviceWarning = (...args: Array<mixed>) => {\n    // RCTLogAdvice is a native logging function designed to show users\n    // a message in the console, but not show it to them in Logbox.\n    return typeof args[0] === 'string' && args[0].startsWith('(ADVICE)');\n  };\n\n  const isWarningModuleWarning = (...args: Array<mixed>) => {\n    return typeof args[0] === 'string' && args[0].startsWith('Warning: ');\n  };\n\n  const registerWarning = (...args: Array<mixed>): void => {\n    // Let warnings within LogBox itself fall through.\n    if (LogBoxData.isLogBoxErrorMessage(String(args[0]))) {\n      originalConsoleError(...args);\n      return;\n    } else {\n      // Be sure to pass LogBox warnings through.\n      originalConsoleWarn(...args);\n    }\n\n    try {\n      if (!isRCTLogAdviceWarning(...args)) {\n        const {category, message, componentStack} = parseLogBoxLog(args);\n\n        if (!LogBoxData.isMessageIgnored(message.content)) {\n          LogBoxData.addLog({\n            level: 'warn',\n            category,\n            message,\n            componentStack,\n          });\n        }\n      }\n    } catch (err) {\n      LogBoxData.reportLogBoxError(err);\n    }\n  };\n\n  /* $FlowFixMe[missing-local-annot] The type annotation(s) required by Flow's\n   * LTI update could not be added via codemod */\n  const registerError = (...args): void => {\n    // Let errors within LogBox itself fall through.\n    if (LogBoxData.isLogBoxErrorMessage(args[0])) {\n      originalConsoleError(...args);\n      return;\n    }\n\n    try {\n      if (!isWarningModuleWarning(...args)) {\n        // Only show LogBox for the 'warning' module, otherwise pass through.\n        // By passing through, this will get picked up by the React console override,\n        // potentially adding the component stack. React then passes it back to the\n        // React Native ExceptionsManager, which reports it to LogBox as an error.\n        //\n        // The 'warning' module needs to be handled here because React internally calls\n        // `console.error('Warning: ')` with the component stack already included.\n        originalConsoleError(...args);\n        return;\n      }\n\n      const format = args[0].replace('Warning: ', '');\n      const filterResult = LogBoxData.checkWarningFilter(format);\n      if (filterResult.suppressCompletely) {\n        return;\n      }\n\n      let level = 'error';\n      if (filterResult.suppressDialog_LEGACY === true) {\n        level = 'warn';\n      } else if (filterResult.forceDialogImmediately === true) {\n        level = 'fatal'; // Do not downgrade. These are real bugs with same severity as throws.\n      }\n\n      // Unfortunately, we need to add the Warning: prefix back for downstream dependencies.\n      args[0] = `Warning: ${filterResult.finalFormat}`;\n      const {category, message, componentStack} = parseLogBoxLog(args);\n\n      // Interpolate the message so they are formatted for adb and other CLIs.\n      // This is different than the message.content above because it includes component stacks.\n      const interpolated = parseInterpolation(args);\n      originalConsoleError(interpolated.message.content);\n\n      if (!LogBoxData.isMessageIgnored(message.content)) {\n        LogBoxData.addLog({\n          level,\n          category,\n          message,\n          componentStack,\n        });\n      }\n    } catch (err) {\n      LogBoxData.reportLogBoxError(err);\n    }\n  };\n} else {\n  LogBox = {\n    install(): void {\n      // Do nothing.\n    },\n\n    uninstall(): void {\n      // Do nothing.\n    },\n\n    isInstalled(): boolean {\n      return false;\n    },\n\n    ignoreLogs(patterns: $ReadOnlyArray<IgnorePattern>): void {\n      // Do nothing.\n    },\n\n    ignoreAllLogs(value?: ?boolean): void {\n      // Do nothing.\n    },\n\n    clearAllLogs(): void {\n      // Do nothing.\n    },\n\n    addLog(log: LogData): void {\n      // Do nothing.\n    },\n\n    addException(error: ExtendedExceptionData): void {\n      // Do nothing.\n    },\n  };\n}\n\nexport default (LogBox: ILogBox);\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\nimport type {ViewProps} from '../Components/View/ViewPropTypes';\nimport type {RootTag} from '../ReactNative/RootTag';\nimport type {DirectEventHandler} from '../Types/CodegenTypes';\n\nimport NativeEventEmitter from '../EventEmitter/NativeEventEmitter';\nimport {type EventSubscription} from '../vendor/emitter/EventEmitter';\nimport ModalInjection from './ModalInjection';\nimport NativeModalManager from './NativeModalManager';\nimport RCTModalHostView from './RCTModalHostViewNativeComponent';\nimport {VirtualizedListContextResetter} from '@react-native/virtualized-lists';\n\nconst ScrollView = require('../Components/ScrollView/ScrollView');\nconst View = require('../Components/View/View');\nconst AppContainer = require('../ReactNative/AppContainer');\nconst I18nManager = require('../ReactNative/I18nManager');\nconst {RootTagContext} = require('../ReactNative/RootTag');\nconst StyleSheet = require('../StyleSheet/StyleSheet');\nconst Platform = require('../Utilities/Platform');\nconst React = require('react');\n\ntype ModalEventDefinitions = {\n  modalDismissed: [{modalID: number}],\n};\n\nconst ModalEventEmitter =\n  Platform.OS === 'ios' && NativeModalManager != null\n    ? new NativeEventEmitter<ModalEventDefinitions>(\n        // T88715063: NativeEventEmitter only used this parameter on iOS. Now it uses it on all platforms, so this code was modified automatically to preserve its behavior\n        // If you want to use the native module on other platforms, please remove this condition and test its behavior\n        Platform.OS !== 'ios' ? null : NativeModalManager,\n      )\n    : null;\n\n/**\n * The Modal component is a simple way to present content above an enclosing view.\n *\n * See https://reactnative.dev/docs/modal\n */\n\n// In order to route onDismiss callbacks, we need to uniquely identifier each\n// <Modal> on screen. There can be different ones, either nested or as siblings.\n// We cannot pass the onDismiss callback to native as the view will be\n// destroyed before the callback is fired.\nlet uniqueModalIdentifier = 0;\n\ntype OrientationChangeEvent = $ReadOnly<{|\n  orientation: 'portrait' | 'landscape',\n|}>;\n\nexport type Props = $ReadOnly<{|\n  ...ViewProps,\n\n  /**\n   * The `animationType` prop controls how the modal animates.\n   *\n   * See https://reactnative.dev/docs/modal#animationtype\n   */\n  animationType?: ?('none' | 'slide' | 'fade'),\n\n  /**\n   * The `presentationStyle` prop controls how the modal appears.\n   *\n   * See https://reactnative.dev/docs/modal#presentationstyle\n   */\n  presentationStyle?: ?(\n    | 'fullScreen'\n    | 'pageSheet'\n    | 'formSheet'\n    | 'overFullScreen'\n  ),\n\n  /**\n   * The `transparent` prop determines whether your modal will fill the\n   * entire view.\n   *\n   * See https://reactnative.dev/docs/modal#transparent\n   */\n  transparent?: ?boolean,\n\n  /**\n   * The `statusBarTranslucent` prop determines whether your modal should go under\n   * the system statusbar.\n   *\n   * See https://reactnative.dev/docs/modal.html#statusbartranslucent-android\n   */\n  statusBarTranslucent?: ?boolean,\n\n  /**\n   * The `hardwareAccelerated` prop controls whether to force hardware\n   * acceleration for the underlying window.\n   *\n   * This prop works only on Android.\n   *\n   * See https://reactnative.dev/docs/modal#hardwareaccelerated\n   */\n  hardwareAccelerated?: ?boolean,\n\n  /**\n   * The `visible` prop determines whether your modal is visible.\n   *\n   * See https://reactnative.dev/docs/modal#visible\n   */\n  visible?: ?boolean,\n\n  /**\n   * The `onRequestClose` callback is called when the user taps the hardware\n   * back button on Android or the menu button on Apple TV.\n   *\n   * This is required on Apple TV and Android.\n   *\n   * See https://reactnative.dev/docs/modal#onrequestclose\n   */\n  onRequestClose?: ?DirectEventHandler<null>,\n\n  /**\n   * The `onShow` prop allows passing a function that will be called once the\n   * modal has been shown.\n   *\n   * See https://reactnative.dev/docs/modal#onshow\n   */\n  onShow?: ?DirectEventHandler<null>,\n\n  /**\n   * The `onDismiss` prop allows passing a function that will be called once\n   * the modal has been dismissed.\n   *\n   * See https://reactnative.dev/docs/modal#ondismiss\n   */\n  onDismiss?: ?() => mixed,\n\n  /**\n   * The `supportedOrientations` prop allows the modal to be rotated to any of the specified orientations.\n   *\n   * See https://reactnative.dev/docs/modal#supportedorientations\n   */\n  supportedOrientations?: ?$ReadOnlyArray<\n    | 'portrait'\n    | 'portrait-upside-down'\n    | 'landscape'\n    | 'landscape-left'\n    | 'landscape-right',\n  >,\n\n  /**\n   * The `onOrientationChange` callback is called when the orientation changes while the modal is being displayed.\n   *\n   * See https://reactnative.dev/docs/modal#onorientationchange\n   */\n  onOrientationChange?: ?DirectEventHandler<OrientationChangeEvent>,\n|}>;\n\nfunction confirmProps(props: Props) {\n  if (__DEV__) {\n    if (\n      props.presentationStyle &&\n      props.presentationStyle !== 'overFullScreen' &&\n      props.transparent === true\n    ) {\n      console.warn(\n        `Modal with '${props.presentationStyle}' presentation style and 'transparent' value is not supported.`,\n      );\n    }\n  }\n}\n\n// Create a state to track whether the Modal is rendering or not.\n// This is the only prop that controls whether the modal is rendered or not.\ntype State = {\n  isRendered: boolean,\n};\n\nclass Modal extends React.Component<Props, State> {\n  static defaultProps: {|hardwareAccelerated: boolean, visible: boolean|} = {\n    visible: true,\n    hardwareAccelerated: false,\n  };\n\n  static contextType: React.Context<RootTag> = RootTagContext;\n\n  _identifier: number;\n  _eventSubscription: ?EventSubscription;\n\n  constructor(props: Props) {\n    super(props);\n    if (__DEV__) {\n      confirmProps(props);\n    }\n    this._identifier = uniqueModalIdentifier++;\n    this.state = {\n      isRendered: props.visible === true,\n    };\n  }\n\n  componentDidMount() {\n    // 'modalDismissed' is for the old renderer in iOS only\n    if (ModalEventEmitter) {\n      this._eventSubscription = ModalEventEmitter.addListener(\n        'modalDismissed',\n        event => {\n          this.setState({isRendered: false}, () => {\n            if (event.modalID === this._identifier && this.props.onDismiss) {\n              this.props.onDismiss();\n            }\n          });\n        },\n      );\n    }\n  }\n\n  componentWillUnmount() {\n    this.setState({isRendered: false});\n    if (this._eventSubscription) {\n      this._eventSubscription.remove();\n    }\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.visible === false && this.props.visible === true) {\n      this.setState({isRendered: true});\n    }\n\n    if (__DEV__) {\n      confirmProps(this.props);\n    }\n  }\n\n  // Helper function to encapsulate platform specific logic to show or not the Modal.\n  _shouldShowModal(): boolean {\n    if (Platform.OS === 'ios') {\n      return this.props.visible === true || this.state.isRendered === true;\n    }\n\n    return this.props.visible === true;\n  }\n\n  render(): React.Node {\n    if (!this._shouldShowModal()) {\n      return null;\n    }\n\n    const containerStyles = {\n      backgroundColor:\n        this.props.transparent === true ? 'transparent' : 'white',\n    };\n\n    let animationType = this.props.animationType || 'none';\n\n    let presentationStyle = this.props.presentationStyle;\n    if (!presentationStyle) {\n      presentationStyle = 'fullScreen';\n      if (this.props.transparent === true) {\n        presentationStyle = 'overFullScreen';\n      }\n    }\n\n    const innerChildren = __DEV__ ? (\n      <AppContainer rootTag={this.context}>{this.props.children}</AppContainer>\n    ) : (\n      this.props.children\n    );\n\n    const onDismiss = () => {\n      // OnDismiss is implemented on iOS only.\n      if (Platform.OS === 'ios') {\n        this.setState({isRendered: false}, () => {\n          if (this.props.onDismiss) {\n            this.props.onDismiss();\n          }\n        });\n      }\n    };\n\n    return (\n      <RCTModalHostView\n        animationType={animationType}\n        presentationStyle={presentationStyle}\n        transparent={this.props.transparent}\n        hardwareAccelerated={this.props.hardwareAccelerated}\n        onRequestClose={this.props.onRequestClose}\n        onShow={this.props.onShow}\n        onDismiss={onDismiss}\n        visible={this.props.visible}\n        statusBarTranslucent={this.props.statusBarTranslucent}\n        identifier={this._identifier}\n        style={styles.modal}\n        // $FlowFixMe[method-unbinding] added when improving typing for this parameters\n        onStartShouldSetResponder={this._shouldSetResponder}\n        supportedOrientations={this.props.supportedOrientations}\n        onOrientationChange={this.props.onOrientationChange}\n        testID={this.props.testID}>\n        <VirtualizedListContextResetter>\n          <ScrollView.Context.Provider value={null}>\n            <View\n              style={[styles.container, containerStyles]}\n              collapsable={false}>\n              {innerChildren}\n            </View>\n          </ScrollView.Context.Provider>\n        </VirtualizedListContextResetter>\n      </RCTModalHostView>\n    );\n  }\n\n  // We don't want any responder events bubbling out of the modal.\n  _shouldSetResponder(): boolean {\n    return true;\n  }\n}\n\nconst side = I18nManager.getConstants().isRTL ? 'right' : 'left';\nconst styles = StyleSheet.create({\n  modal: {\n    position: 'absolute',\n  },\n  container: {\n    /* $FlowFixMe[invalid-computed-prop] (>=0.111.0 site=react_native_fb) This\n     * comment suppresses an error found when Flow v0.111 was deployed. To see\n     * the error, delete this comment and run Flow. */\n    [side]: 0,\n    top: 0,\n    flex: 1,\n  },\n});\n\nconst ExportedModal: React.AbstractComponent<\n  React.ElementConfig<typeof Modal>,\n> = ModalInjection.unstable_Modal ?? Modal;\n\nmodule.exports = ExportedModal;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport typeof Modal from './Modal';\n\nexport default {\n  unstable_Modal: (null: ?Modal),\n};\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nexport * from '../../src/private/specs/modules/NativeModalManager';\nimport NativeModalManager from '../../src/private/specs/modules/NativeModalManager';\nexport default NativeModalManager;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\nexport * from '../../src/private/specs/components/RCTModalHostViewNativeComponent';\nimport RCTModalHostViewNativeComponent from '../../src/private/specs/components/RCTModalHostViewNativeComponent';\nexport default RCTModalHostViewNativeComponent;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\nimport type {PartialViewConfigWithoutName} from './PlatformBaseViewConfig';\n\nimport ReactNativeStyleAttributes from '../Components/View/ReactNativeStyleAttributes';\nimport {\n  ConditionallyIgnoredEventHandlers,\n  DynamicallyInjectedByGestureHandler,\n} from './ViewConfigIgnore';\n\nconst bubblingEventTypes = {\n  // Generic Events\n  topPress: {\n    phasedRegistrationNames: {\n      bubbled: 'onPress',\n      captured: 'onPressCapture',\n    },\n  },\n  topChange: {\n    phasedRegistrationNames: {\n      bubbled: 'onChange',\n      captured: 'onChangeCapture',\n    },\n  },\n  topFocus: {\n    phasedRegistrationNames: {\n      bubbled: 'onFocus',\n      captured: 'onFocusCapture',\n    },\n  },\n  topBlur: {\n    phasedRegistrationNames: {\n      bubbled: 'onBlur',\n      captured: 'onBlurCapture',\n    },\n  },\n  topSubmitEditing: {\n    phasedRegistrationNames: {\n      bubbled: 'onSubmitEditing',\n      captured: 'onSubmitEditingCapture',\n    },\n  },\n  topEndEditing: {\n    phasedRegistrationNames: {\n      bubbled: 'onEndEditing',\n      captured: 'onEndEditingCapture',\n    },\n  },\n  topKeyPress: {\n    phasedRegistrationNames: {\n      bubbled: 'onKeyPress',\n      captured: 'onKeyPressCapture',\n    },\n  },\n\n  // Touch Events\n  topTouchStart: {\n    phasedRegistrationNames: {\n      bubbled: 'onTouchStart',\n      captured: 'onTouchStartCapture',\n    },\n  },\n  topTouchMove: {\n    phasedRegistrationNames: {\n      bubbled: 'onTouchMove',\n      captured: 'onTouchMoveCapture',\n    },\n  },\n  topTouchCancel: {\n    phasedRegistrationNames: {\n      bubbled: 'onTouchCancel',\n      captured: 'onTouchCancelCapture',\n    },\n  },\n  topTouchEnd: {\n    phasedRegistrationNames: {\n      bubbled: 'onTouchEnd',\n      captured: 'onTouchEndCapture',\n    },\n  },\n\n  // Experimental/Work in Progress Pointer Events (not yet ready for use)\n  topClick: {\n    phasedRegistrationNames: {\n      captured: 'onClickCapture',\n      bubbled: 'onClick',\n    },\n  },\n  topPointerCancel: {\n    phasedRegistrationNames: {\n      captured: 'onPointerCancelCapture',\n      bubbled: 'onPointerCancel',\n    },\n  },\n  topPointerDown: {\n    phasedRegistrationNames: {\n      captured: 'onPointerDownCapture',\n      bubbled: 'onPointerDown',\n    },\n  },\n  topPointerMove: {\n    phasedRegistrationNames: {\n      captured: 'onPointerMoveCapture',\n      bubbled: 'onPointerMove',\n    },\n  },\n  topPointerUp: {\n    phasedRegistrationNames: {\n      captured: 'onPointerUpCapture',\n      bubbled: 'onPointerUp',\n    },\n  },\n  topPointerEnter: {\n    phasedRegistrationNames: {\n      captured: 'onPointerEnterCapture',\n      bubbled: 'onPointerEnter',\n      skipBubbling: true,\n    },\n  },\n  topPointerLeave: {\n    phasedRegistrationNames: {\n      captured: 'onPointerLeaveCapture',\n      bubbled: 'onPointerLeave',\n      skipBubbling: true,\n    },\n  },\n  topPointerOver: {\n    phasedRegistrationNames: {\n      captured: 'onPointerOverCapture',\n      bubbled: 'onPointerOver',\n    },\n  },\n  topPointerOut: {\n    phasedRegistrationNames: {\n      captured: 'onPointerOutCapture',\n      bubbled: 'onPointerOut',\n    },\n  },\n  topGotPointerCapture: {\n    phasedRegistrationNames: {\n      captured: 'onGotPointerCaptureCapture',\n      bubbled: 'onGotPointerCapture',\n    },\n  },\n  topLostPointerCapture: {\n    phasedRegistrationNames: {\n      captured: 'onLostPointerCaptureCapture',\n      bubbled: 'onLostPointerCapture',\n    },\n  },\n};\n\nconst directEventTypes = {\n  topAccessibilityAction: {\n    registrationName: 'onAccessibilityAction',\n  },\n  topAccessibilityTap: {\n    registrationName: 'onAccessibilityTap',\n  },\n  topMagicTap: {\n    registrationName: 'onMagicTap',\n  },\n  topAccessibilityEscape: {\n    registrationName: 'onAccessibilityEscape',\n  },\n  topLayout: {\n    registrationName: 'onLayout',\n  },\n  onGestureHandlerEvent: DynamicallyInjectedByGestureHandler({\n    registrationName: 'onGestureHandlerEvent',\n  }),\n  onGestureHandlerStateChange: DynamicallyInjectedByGestureHandler({\n    registrationName: 'onGestureHandlerStateChange',\n  }),\n};\n\nconst validAttributesForNonEventProps = {\n  // View Props\n  accessible: true,\n  accessibilityActions: true,\n  accessibilityLabel: true,\n  accessibilityHint: true,\n  accessibilityLanguage: true,\n  accessibilityValue: true,\n  accessibilityViewIsModal: true,\n  accessibilityElementsHidden: true,\n  accessibilityIgnoresInvertColors: true,\n  testID: true,\n  backgroundColor: {process: require('../StyleSheet/processColor').default},\n  backfaceVisibility: true,\n  opacity: true,\n  shadowColor: {process: require('../StyleSheet/processColor').default},\n  shadowOffset: {diff: require('../Utilities/differ/sizesDiffer')},\n  shadowOpacity: true,\n  shadowRadius: true,\n  needsOffscreenAlphaCompositing: true,\n  overflow: true,\n  shouldRasterizeIOS: true,\n  transform: {diff: require('../Utilities/differ/matricesDiffer')},\n  transformOrigin: true,\n  accessibilityRole: true,\n  accessibilityState: true,\n  nativeID: true,\n  pointerEvents: true,\n  removeClippedSubviews: true,\n  role: true,\n  borderRadius: true,\n  borderColor: {process: require('../StyleSheet/processColor').default},\n  borderCurve: true,\n  borderWidth: true,\n  borderStyle: true,\n  hitSlop: {diff: require('../Utilities/differ/insetsDiffer')},\n  collapsable: true,\n\n  borderTopWidth: true,\n  borderTopColor: {process: require('../StyleSheet/processColor').default},\n  borderRightWidth: true,\n  borderRightColor: {process: require('../StyleSheet/processColor').default},\n  borderBottomWidth: true,\n  borderBottomColor: {process: require('../StyleSheet/processColor').default},\n  borderLeftWidth: true,\n  borderLeftColor: {process: require('../StyleSheet/processColor').default},\n  borderStartWidth: true,\n  borderStartColor: {process: require('../StyleSheet/processColor').default},\n  borderEndWidth: true,\n  borderEndColor: {process: require('../StyleSheet/processColor').default},\n\n  borderTopLeftRadius: true,\n  borderTopRightRadius: true,\n  borderTopStartRadius: true,\n  borderTopEndRadius: true,\n  borderBottomLeftRadius: true,\n  borderBottomRightRadius: true,\n  borderBottomStartRadius: true,\n  borderBottomEndRadius: true,\n  borderEndEndRadius: true,\n  borderEndStartRadius: true,\n  borderStartEndRadius: true,\n  borderStartStartRadius: true,\n  display: true,\n  zIndex: true,\n\n  // ShadowView properties\n  top: true,\n  right: true,\n  start: true,\n  end: true,\n  bottom: true,\n  left: true,\n\n  inset: true,\n  insetBlock: true,\n  insetBlockEnd: true,\n  insetBlockStart: true,\n  insetInline: true,\n  insetInlineEnd: true,\n  insetInlineStart: true,\n\n  width: true,\n  height: true,\n\n  minWidth: true,\n  maxWidth: true,\n  minHeight: true,\n  maxHeight: true,\n\n  // Also declared as ViewProps\n  // borderTopWidth: true,\n  // borderRightWidth: true,\n  // borderBottomWidth: true,\n  // borderLeftWidth: true,\n  // borderStartWidth: true,\n  // borderEndWidth: true,\n  // borderWidth: true,\n\n  margin: true,\n  marginBlock: true,\n  marginBlockEnd: true,\n  marginBlockStart: true,\n  marginBottom: true,\n  marginEnd: true,\n  marginHorizontal: true,\n  marginInline: true,\n  marginInlineEnd: true,\n  marginInlineStart: true,\n  marginLeft: true,\n  marginRight: true,\n  marginStart: true,\n  marginTop: true,\n  marginVertical: true,\n\n  padding: true,\n  paddingBlock: true,\n  paddingBlockEnd: true,\n  paddingBlockStart: true,\n  paddingBottom: true,\n  paddingEnd: true,\n  paddingHorizontal: true,\n  paddingInline: true,\n  paddingInlineEnd: true,\n  paddingInlineStart: true,\n  paddingLeft: true,\n  paddingRight: true,\n  paddingStart: true,\n  paddingTop: true,\n  paddingVertical: true,\n\n  flex: true,\n  flexGrow: true,\n  rowGap: true,\n  columnGap: true,\n  gap: true,\n  flexShrink: true,\n  flexBasis: true,\n  flexDirection: true,\n  flexWrap: true,\n  justifyContent: true,\n  alignItems: true,\n  alignSelf: true,\n  alignContent: true,\n  position: true,\n  aspectRatio: true,\n\n  // Also declared as ViewProps\n  // overflow: true,\n  // display: true,\n\n  direction: true,\n\n  style: ReactNativeStyleAttributes,\n\n  experimental_layoutConformance: true,\n};\n\n// Props for bubbling and direct events\nconst validAttributesForEventProps = ConditionallyIgnoredEventHandlers({\n  onLayout: true,\n  onMagicTap: true,\n\n  // Accessibility\n  onAccessibilityAction: true,\n  onAccessibilityEscape: true,\n  onAccessibilityTap: true,\n\n  // PanResponder handlers\n  onMoveShouldSetResponder: true,\n  onMoveShouldSetResponderCapture: true,\n  onStartShouldSetResponder: true,\n  onStartShouldSetResponderCapture: true,\n  onResponderGrant: true,\n  onResponderReject: true,\n  onResponderStart: true,\n  onResponderEnd: true,\n  onResponderRelease: true,\n  onResponderMove: true,\n  onResponderTerminate: true,\n  onResponderTerminationRequest: true,\n  onShouldBlockNativeResponder: true,\n\n  // Touch events\n  onTouchStart: true,\n  onTouchMove: true,\n  onTouchEnd: true,\n  onTouchCancel: true,\n\n  // Pointer events\n  onClick: true,\n  onPointerUp: true,\n  onPointerDown: true,\n  onPointerCancel: true,\n  onPointerEnter: true,\n  onPointerMove: true,\n  onPointerLeave: true,\n  onPointerOver: true,\n  onPointerOut: true,\n  onGotPointerCapture: true,\n  onLostPointerCapture: true,\n});\n\n/**\n * On iOS, view managers define all of a component's props.\n * All view managers extend RCTViewManager, and RCTViewManager declares these props.\n */\nconst PlatformBaseViewConfigIos: PartialViewConfigWithoutName = {\n  bubblingEventTypes,\n  directEventTypes,\n  validAttributes: {\n    ...validAttributesForNonEventProps,\n    ...validAttributesForEventProps,\n  },\n};\n\nexport default PlatformBaseViewConfigIos;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport type {\n  HostComponent,\n  PartialViewConfig,\n} from '../Renderer/shims/ReactNativeTypes';\n\nimport getNativeComponentAttributes from '../ReactNative/getNativeComponentAttributes';\nimport UIManager from '../ReactNative/UIManager';\nimport * as ReactNativeViewConfigRegistry from '../Renderer/shims/ReactNativeViewConfigRegistry';\nimport verifyComponentAttributeEquivalence from '../Utilities/verifyComponentAttributeEquivalence';\nimport * as StaticViewConfigValidator from './StaticViewConfigValidator';\nimport {createViewConfig} from './ViewConfig';\nimport invariant from 'invariant';\nimport * as React from 'react';\n\nlet getRuntimeConfig;\n\n/**\n * Configures a function that is called to determine whether a given component\n * should be registered using reflection of the native component at runtime.\n *\n * The provider should return null if the native component is unavailable in\n * the current environment.\n */\nexport function setRuntimeConfigProvider(\n  runtimeConfigProvider: (name: string) => ?{\n    native: boolean,\n    strict: boolean,\n    verify: boolean,\n  },\n): void {\n  if (getRuntimeConfig === undefined) {\n    getRuntimeConfig = runtimeConfigProvider;\n  }\n}\n\n/**\n * Gets a `NativeComponent` that can be rendered by React Native.\n *\n * The supplied `viewConfigProvider` may or may not be invoked and utilized,\n * depending on how `setRuntimeConfigProvider` is configured.\n */\nexport function get<Config>(\n  name: string,\n  viewConfigProvider: () => PartialViewConfig,\n): HostComponent<Config> {\n  ReactNativeViewConfigRegistry.register(name, () => {\n    const {native, strict, verify} = getRuntimeConfig?.(name) ?? {\n      native: !global.RN$Bridgeless,\n      strict: false,\n      verify: false,\n    };\n\n    let viewConfig;\n    if (native) {\n      viewConfig = getNativeComponentAttributes(name);\n    } else {\n      viewConfig = createViewConfig(viewConfigProvider());\n      if (viewConfig == null) {\n        viewConfig = getNativeComponentAttributes(name);\n      }\n    }\n\n    if (verify) {\n      const nativeViewConfig = native\n        ? viewConfig\n        : getNativeComponentAttributes(name);\n      const staticViewConfig = native\n        ? createViewConfig(viewConfigProvider())\n        : viewConfig;\n\n      if (strict) {\n        const validationOutput = StaticViewConfigValidator.validate(\n          name,\n          nativeViewConfig,\n          staticViewConfig,\n        );\n\n        if (validationOutput.type === 'invalid') {\n          console.error(\n            StaticViewConfigValidator.stringifyValidationResult(\n              name,\n              validationOutput,\n            ),\n          );\n        }\n      } else {\n        verifyComponentAttributeEquivalence(nativeViewConfig, staticViewConfig);\n      }\n    }\n\n    return viewConfig;\n  });\n\n  // $FlowFixMe[incompatible-return] `NativeComponent` is actually string!\n  return name;\n}\n\n/**\n * Same as `NativeComponentRegistry.get(...)`, except this will check either\n * the `setRuntimeConfigProvider` configuration or use native reflection (slow)\n * to determine whether this native component is available.\n *\n * If the native component is not available, a stub component is returned. Note\n * that the return value of this is not `HostComponent` because the returned\n * component instance is not guaranteed to have native methods.\n */\nexport function getWithFallback_DEPRECATED<Config>(\n  name: string,\n  viewConfigProvider: () => PartialViewConfig,\n): React.AbstractComponent<Config> {\n  if (getRuntimeConfig == null) {\n    // `getRuntimeConfig == null` when static view configs are disabled\n    // If `setRuntimeConfigProvider` is not configured, use native reflection.\n    if (hasNativeViewConfig(name)) {\n      return get<Config>(name, viewConfigProvider);\n    }\n  } else {\n    // If there is no runtime config, then the native component is unavailable.\n    if (getRuntimeConfig(name) != null) {\n      return get<Config>(name, viewConfigProvider);\n    }\n  }\n\n  const FallbackNativeComponent = function (props: Config): React.Node {\n    return null;\n  };\n  FallbackNativeComponent.displayName = `Fallback(${name})`;\n  return FallbackNativeComponent;\n}\n\nfunction hasNativeViewConfig(name: string): boolean {\n  invariant(getRuntimeConfig == null, 'Unexpected invocation!');\n  return UIManager.getViewManagerConfig(name) != null;\n}\n\n/**\n * Unstable API. Do not use!\n *\n * This method returns if there is a StaticViewConfig registered for the\n * component name received as a parameter.\n */\nexport function unstable_hasStaticViewConfig(name: string): boolean {\n  const {native} = getRuntimeConfig?.(name) ?? {\n    native: true,\n  };\n  return !native;\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nlet componentNameToExists: Map<string, boolean> = new Map();\n\n/**\n * Unstable API. Do not use!\n *\n * This method returns if the component with name received as a parameter\n * is registered in the native platform.\n */\nexport function unstable_hasComponent(name: string): boolean {\n  let hasNativeComponent = componentNameToExists.get(name);\n  if (hasNativeComponent == null) {\n    if (global.__nativeComponentRegistry__hasComponent) {\n      hasNativeComponent = global.__nativeComponentRegistry__hasComponent(name);\n      componentNameToExists.set(name, hasNativeComponent);\n    } else {\n      throw `unstable_hasComponent('${name}'): Global function is not registered`;\n    }\n  }\n  return hasNativeComponent;\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\nimport type {PartialViewConfig} from '../Renderer/shims/ReactNativeTypes';\n\nimport BaseViewConfig from './BaseViewConfig';\n\nexport type PartialViewConfigWithoutName = $Rest<\n  PartialViewConfig,\n  {uiViewClassName: string},\n>;\n\nconst PlatformBaseViewConfig: PartialViewConfigWithoutName = BaseViewConfig;\n\n// In Wilde/FB4A, use RNHostComponentListRoute in Bridge mode to verify\n// whether the JS props defined here match the native props defined\n// in RCTViewManagers in iOS, and ViewManagers in Android.\nexport default PlatformBaseViewConfig;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nimport {type ViewConfig} from '../Renderer/shims/ReactNativeTypes';\nimport {isIgnored} from './ViewConfigIgnore';\n\nexport type Difference =\n  | {\n      type: 'missing',\n      path: Array<string>,\n      nativeValue: mixed,\n    }\n  | {\n      type: 'unequal',\n      path: Array<string>,\n      nativeValue: mixed,\n      staticValue: mixed,\n    }\n  | {\n      type: 'unexpected',\n      path: Array<string>,\n      staticValue: mixed,\n    };\n\nexport type ValidationResult = ValidResult | InvalidResult;\ntype ValidResult = {\n  type: 'valid',\n};\ntype InvalidResult = {\n  type: 'invalid',\n  differences: Array<Difference>,\n};\n\n/**\n * During the migration from native view configs to static view configs, this is\n * used to validate that the two are equivalent.\n */\nexport function validate(\n  name: string,\n  nativeViewConfig: ViewConfig,\n  staticViewConfig: ViewConfig,\n): ValidationResult {\n  const differences: Array<Difference> = [];\n  accumulateDifferences(\n    differences,\n    [],\n    {\n      bubblingEventTypes: nativeViewConfig.bubblingEventTypes,\n      directEventTypes: nativeViewConfig.directEventTypes,\n      uiViewClassName: nativeViewConfig.uiViewClassName,\n      validAttributes: nativeViewConfig.validAttributes,\n    },\n    {\n      bubblingEventTypes: staticViewConfig.bubblingEventTypes,\n      directEventTypes: staticViewConfig.directEventTypes,\n      uiViewClassName: staticViewConfig.uiViewClassName,\n      validAttributes: staticViewConfig.validAttributes,\n    },\n  );\n\n  if (differences.length === 0) {\n    return {type: 'valid'};\n  }\n\n  return {\n    type: 'invalid',\n    differences,\n  };\n}\n\nexport function stringifyValidationResult(\n  name: string,\n  validationResult: InvalidResult,\n): string {\n  const {differences} = validationResult;\n  return [\n    `StaticViewConfigValidator: Invalid static view config for '${name}'.`,\n    '',\n    ...differences.map(difference => {\n      const {type, path} = difference;\n      switch (type) {\n        case 'missing':\n          return `- '${path.join('.')}' is missing.`;\n        case 'unequal':\n          return `- '${path.join('.')}' is the wrong value.`;\n        case 'unexpected':\n          return `- '${path.join('.')}' is present but not expected to be.`;\n      }\n    }),\n    '',\n  ].join('\\n');\n}\n\nfunction accumulateDifferences(\n  differences: Array<Difference>,\n  path: Array<string>,\n  nativeObject: {...},\n  staticObject: {...},\n): void {\n  for (const nativeKey in nativeObject) {\n    const nativeValue = nativeObject[nativeKey];\n\n    if (!staticObject.hasOwnProperty(nativeKey)) {\n      differences.push({\n        path: [...path, nativeKey],\n        type: 'missing',\n        nativeValue,\n      });\n      continue;\n    }\n\n    const staticValue = staticObject[nativeKey];\n\n    const nativeValueIfObject = ifObject(nativeValue);\n    if (nativeValueIfObject != null) {\n      const staticValueIfObject = ifObject(staticValue);\n      if (staticValueIfObject != null) {\n        path.push(nativeKey);\n        accumulateDifferences(\n          differences,\n          path,\n          nativeValueIfObject,\n          staticValueIfObject,\n        );\n        path.pop();\n        continue;\n      }\n    }\n\n    if (nativeValue !== staticValue) {\n      differences.push({\n        path: [...path, nativeKey],\n        type: 'unequal',\n        nativeValue,\n        staticValue,\n      });\n    }\n  }\n\n  for (const staticKey in staticObject) {\n    if (\n      !nativeObject.hasOwnProperty(staticKey) &&\n      !isIgnored(staticObject[staticKey])\n    ) {\n      differences.push({\n        path: [...path, staticKey],\n        type: 'unexpected',\n        staticValue: staticObject[staticKey],\n      });\n    }\n  }\n}\n\nfunction ifObject(value: mixed): ?{...} {\n  return typeof value === 'object' && !Array.isArray(value) ? value : null;\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport type {\n  PartialViewConfig,\n  ViewConfig,\n} from '../Renderer/shims/ReactNativeTypes';\n\nimport PlatformBaseViewConfig from './PlatformBaseViewConfig';\n\n/**\n * Creates a complete `ViewConfig` from a `PartialViewConfig`.\n */\nexport function createViewConfig(\n  partialViewConfig: PartialViewConfig,\n): ViewConfig {\n  return {\n    uiViewClassName: partialViewConfig.uiViewClassName,\n    Commands: {},\n    bubblingEventTypes: composeIndexers(\n      PlatformBaseViewConfig.bubblingEventTypes,\n      partialViewConfig.bubblingEventTypes,\n    ),\n    directEventTypes: composeIndexers(\n      PlatformBaseViewConfig.directEventTypes,\n      partialViewConfig.directEventTypes,\n    ),\n    // $FlowFixMe[incompatible-return]\n    validAttributes: composeIndexers(\n      // $FlowFixMe[incompatible-call] `style` property confuses Flow.\n      PlatformBaseViewConfig.validAttributes,\n      // $FlowFixMe[incompatible-call] `style` property confuses Flow.\n      partialViewConfig.validAttributes,\n    ),\n  };\n}\n\nfunction composeIndexers<T>(\n  maybeA: ?{+[string]: T},\n  maybeB: ?{+[string]: T},\n): {+[string]: T} {\n  return maybeA == null || maybeB == null\n    ? maybeA ?? maybeB ?? {}\n    : {...maybeA, ...maybeB};\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nimport Platform from '../Utilities/Platform';\n\nconst ignoredViewConfigProps = new WeakSet<{...}>();\n\n/**\n * Decorates ViewConfig values that are dynamically injected by the library,\n * react-native-gesture-handler. (T45765076)\n */\nexport function DynamicallyInjectedByGestureHandler<T: {...}>(object: T): T {\n  ignoredViewConfigProps.add(object);\n  return object;\n}\n\n/**\n * On iOS, ViewManager event declarations generate {eventName}: true entries\n * in ViewConfig valueAttributes. These entries aren't generated for Android.\n * This annotation allows Static ViewConfigs to insert these entries into\n * iOS but not Android.\n *\n * In the future, we want to remove this platform-inconsistency. We want\n * to set RN$ViewConfigEventValidAttributesDisabled = true server-side,\n * so that iOS does not generate validAttributes from event props in iOS RCTViewManager,\n * since Android does not generate validAttributes from events props in Android ViewManager.\n *\n * TODO(T110872225): Remove this logic, after achieving platform-consistency\n */\nexport function ConditionallyIgnoredEventHandlers<T: {[name: string]: true}>(\n  value: T,\n): T | void {\n  if (Platform.OS === 'ios') {\n    return value;\n  }\n  return undefined;\n}\n\nexport function isIgnored(value: mixed): boolean {\n  if (typeof value === 'object' && value != null) {\n    return ignoredViewConfigProps.has(value);\n  }\n  return false;\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nexport * from '../../../src/private/specs/modules/NativeDevSettings';\nimport NativeDevSettings from '../../../src/private/specs/modules/NativeDevSettings';\nexport default NativeDevSettings;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nexport * from '../../../src/private/specs/modules/NativeDialogManagerAndroid';\nimport NativeDialogManagerAndroid from '../../../src/private/specs/modules/NativeDialogManagerAndroid';\nexport default NativeDialogManagerAndroid;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nexport * from '../../../src/private/specs/modules/NativeRedBox';\nimport NativeRedBox from '../../../src/private/specs/modules/NativeRedBox';\nexport default NativeRedBox;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nexport * from '../../../src/private/specs/modules/NativeSourceCode';\nimport NativeSourceCode from '../../../src/private/specs/modules/NativeSourceCode';\nexport default NativeSourceCode;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict\n */\n\n'use strict';\n\ntype FormDataValue = string | {name?: string, type?: string, uri: string};\ntype FormDataNameValuePair = [string, FormDataValue];\n\ntype Headers = {[name: string]: string, ...};\ntype FormDataPart =\n  | {\n      string: string,\n      headers: Headers,\n      ...\n    }\n  | {\n      uri: string,\n      headers: Headers,\n      name?: string,\n      type?: string,\n      ...\n    };\n\n/**\n * Polyfill for XMLHttpRequest2 FormData API, allowing multipart POST requests\n * with mixed data (string, native files) to be submitted via XMLHttpRequest.\n *\n * Example:\n *\n *   var photo = {\n *     uri: uriFromCameraRoll,\n *     type: 'image/jpeg',\n *     name: 'photo.jpg',\n *   };\n *\n *   var body = new FormData();\n *   body.append('authToken', 'secret');\n *   body.append('photo', photo);\n *   body.append('title', 'A beautiful photo!');\n *\n *   xhr.open('POST', serverURL);\n *   xhr.send(body);\n */\nclass FormData {\n  _parts: Array<FormDataNameValuePair>;\n\n  constructor() {\n    this._parts = [];\n  }\n\n  append(key: string, value: FormDataValue) {\n    // The XMLHttpRequest spec doesn't specify if duplicate keys are allowed.\n    // MDN says that any new values should be appended to existing values.\n    // In any case, major browsers allow duplicate keys, so that's what we'll do\n    // too. They'll simply get appended as additional form data parts in the\n    // request body, leaving the server to deal with them.\n    this._parts.push([key, value]);\n  }\n\n  getAll(key: string): Array<FormDataValue> {\n    return this._parts\n      .filter(([name]) => name === key)\n      .map(([, value]) => value);\n  }\n\n  getParts(): Array<FormDataPart> {\n    return this._parts.map(([name, value]) => {\n      const contentDisposition = 'form-data; name=\"' + name + '\"';\n\n      const headers: Headers = {'content-disposition': contentDisposition};\n\n      // The body part is a \"blob\", which in React Native just means\n      // an object with a `uri` attribute. Optionally, it can also\n      // have a `name` and `type` attribute to specify filename and\n      // content type (cf. web Blob interface.)\n      if (typeof value === 'object' && !Array.isArray(value) && value) {\n        if (typeof value.name === 'string') {\n          headers['content-disposition'] += `; filename=\"${\n            value.name\n          }\"; filename*=utf-8''${encodeURI(value.name)}`;\n        }\n        if (typeof value.type === 'string') {\n          headers['content-type'] = value.type;\n        }\n        return {...value, headers, fieldName: name};\n      }\n      // Convert non-object values to strings as per FormData.append() spec\n      return {string: String(value), headers, fieldName: name};\n    });\n  }\n}\n\nmodule.exports = FormData;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nexport * from '../../src/private/specs/modules/NativeNetworkingIOS';\nimport NativeNetworkingIOS from '../../src/private/specs/modules/NativeNetworkingIOS';\nexport default NativeNetworkingIOS;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nimport RCTDeviceEventEmitter from '../EventEmitter/RCTDeviceEventEmitter';\nimport {type EventSubscription} from '../vendor/emitter/EventEmitter';\nimport convertRequestBody, {type RequestBody} from './convertRequestBody';\nimport NativeNetworkingIOS from './NativeNetworkingIOS';\nimport {type NativeResponseType} from './XMLHttpRequest';\n\ntype RCTNetworkingEventDefinitions = $ReadOnly<{\n  didSendNetworkData: [\n    [\n      number, // requestId\n      number, // progress\n      number, // total\n    ],\n  ],\n  didReceiveNetworkResponse: [\n    [\n      number, // requestId\n      number, // status\n      ?{[string]: string}, // responseHeaders\n      ?string, // responseURL\n    ],\n  ],\n  didReceiveNetworkData: [\n    [\n      number, // requestId\n      string, // response\n    ],\n  ],\n  didReceiveNetworkIncrementalData: [\n    [\n      number, // requestId\n      string, // responseText\n      number, // progress\n      number, // total\n    ],\n  ],\n  didReceiveNetworkDataProgress: [\n    [\n      number, // requestId\n      number, // loaded\n      number, // total\n    ],\n  ],\n  didCompleteNetworkResponse: [\n    [\n      number, // requestId\n      string, // error\n      boolean, // timeOutError\n    ],\n  ],\n}>;\n\nconst RCTNetworking = {\n  addListener<K: $Keys<RCTNetworkingEventDefinitions>>(\n    eventType: K,\n    listener: (...$ElementType<RCTNetworkingEventDefinitions, K>) => mixed,\n    context?: mixed,\n  ): EventSubscription {\n    // $FlowFixMe[incompatible-call]\n    return RCTDeviceEventEmitter.addListener(eventType, listener, context);\n  },\n\n  sendRequest(\n    method: string,\n    trackingName: string,\n    url: string,\n    headers: {...},\n    data: RequestBody,\n    responseType: NativeResponseType,\n    incrementalUpdates: boolean,\n    timeout: number,\n    callback: (requestId: number) => void,\n    withCredentials: boolean,\n  ) {\n    const body = convertRequestBody(data);\n    NativeNetworkingIOS.sendRequest(\n      {\n        method,\n        url,\n        data: {...body, trackingName},\n        headers,\n        responseType,\n        incrementalUpdates,\n        timeout,\n        withCredentials,\n      },\n      callback,\n    );\n  },\n\n  abortRequest(requestId: number) {\n    NativeNetworkingIOS.abortRequest(requestId);\n  },\n\n  clearCookies(callback: (result: boolean) => void) {\n    NativeNetworkingIOS.clearCookies(callback);\n  },\n};\n\nexport default RCTNetworking;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\nimport type {IPerformanceLogger} from '../Utilities/createPerformanceLogger';\n\nimport {type EventSubscription} from '../vendor/emitter/EventEmitter';\nimport EventTarget from 'event-target-shim';\n\nconst BlobManager = require('../Blob/BlobManager');\nconst GlobalPerformanceLogger = require('../Utilities/GlobalPerformanceLogger');\nconst RCTNetworking = require('./RCTNetworking').default;\nconst base64 = require('base64-js');\nconst invariant = require('invariant');\n\nconst DEBUG_NETWORK_SEND_DELAY: false = false; // Set to a number of milliseconds when debugging\n\nexport type NativeResponseType = 'base64' | 'blob' | 'text';\nexport type ResponseType =\n  | ''\n  | 'arraybuffer'\n  | 'blob'\n  | 'document'\n  | 'json'\n  | 'text';\nexport type Response = ?Object | string;\n\ntype XHRInterceptor = interface {\n  requestSent(id: number, url: string, method: string, headers: Object): void,\n  responseReceived(\n    id: number,\n    url: string,\n    status: number,\n    headers: Object,\n  ): void,\n  dataReceived(id: number, data: string): void,\n  loadingFinished(id: number, encodedDataLength: number): void,\n  loadingFailed(id: number, error: string): void,\n};\n\n// The native blob module is optional so inject it here if available.\nif (BlobManager.isAvailable) {\n  BlobManager.addNetworkingHandler();\n}\n\nconst UNSENT = 0;\nconst OPENED = 1;\nconst HEADERS_RECEIVED = 2;\nconst LOADING = 3;\nconst DONE = 4;\n\nconst SUPPORTED_RESPONSE_TYPES = {\n  arraybuffer: typeof global.ArrayBuffer === 'function',\n  blob: typeof global.Blob === 'function',\n  document: false,\n  json: true,\n  text: true,\n  '': true,\n};\n\nconst REQUEST_EVENTS = [\n  'abort',\n  'error',\n  'load',\n  'loadstart',\n  'progress',\n  'timeout',\n  'loadend',\n];\n\nconst XHR_EVENTS = REQUEST_EVENTS.concat('readystatechange');\n\nclass XMLHttpRequestEventTarget extends (EventTarget(...REQUEST_EVENTS): any) {\n  onload: ?Function;\n  onloadstart: ?Function;\n  onprogress: ?Function;\n  ontimeout: ?Function;\n  onerror: ?Function;\n  onabort: ?Function;\n  onloadend: ?Function;\n}\n\n/**\n * Shared base for platform-specific XMLHttpRequest implementations.\n */\nclass XMLHttpRequest extends (EventTarget(...XHR_EVENTS): any) {\n  static UNSENT: number = UNSENT;\n  static OPENED: number = OPENED;\n  static HEADERS_RECEIVED: number = HEADERS_RECEIVED;\n  static LOADING: number = LOADING;\n  static DONE: number = DONE;\n\n  static _interceptor: ?XHRInterceptor = null;\n\n  UNSENT: number = UNSENT;\n  OPENED: number = OPENED;\n  HEADERS_RECEIVED: number = HEADERS_RECEIVED;\n  LOADING: number = LOADING;\n  DONE: number = DONE;\n\n  // EventTarget automatically initializes these to `null`.\n  onload: ?Function;\n  onloadstart: ?Function;\n  onprogress: ?Function;\n  ontimeout: ?Function;\n  onerror: ?Function;\n  onabort: ?Function;\n  onloadend: ?Function;\n  onreadystatechange: ?Function;\n\n  readyState: number = UNSENT;\n  responseHeaders: ?Object;\n  status: number = 0;\n  timeout: number = 0;\n  responseURL: ?string;\n  withCredentials: boolean = true;\n\n  upload: XMLHttpRequestEventTarget = new XMLHttpRequestEventTarget();\n\n  _requestId: ?number;\n  _subscriptions: Array<EventSubscription>;\n\n  _aborted: boolean = false;\n  _cachedResponse: Response;\n  _hasError: boolean = false;\n  _headers: Object;\n  _lowerCaseResponseHeaders: Object;\n  _method: ?string = null;\n  _perfKey: ?string = null;\n  _responseType: ResponseType;\n  _response: string = '';\n  _sent: boolean;\n  _url: ?string = null;\n  _timedOut: boolean = false;\n  _trackingName: string = 'unknown';\n  _incrementalEvents: boolean = false;\n  _performanceLogger: IPerformanceLogger = GlobalPerformanceLogger;\n\n  static setInterceptor(interceptor: ?XHRInterceptor) {\n    XMLHttpRequest._interceptor = interceptor;\n  }\n\n  constructor() {\n    super();\n    this._reset();\n  }\n\n  _reset(): void {\n    this.readyState = this.UNSENT;\n    this.responseHeaders = undefined;\n    this.status = 0;\n    delete this.responseURL;\n\n    this._requestId = null;\n\n    this._cachedResponse = undefined;\n    this._hasError = false;\n    this._headers = {};\n    this._response = '';\n    this._responseType = '';\n    this._sent = false;\n    this._lowerCaseResponseHeaders = {};\n\n    this._clearSubscriptions();\n    this._timedOut = false;\n  }\n\n  get responseType(): ResponseType {\n    return this._responseType;\n  }\n\n  set responseType(responseType: ResponseType): void {\n    if (this._sent) {\n      throw new Error(\n        \"Failed to set the 'responseType' property on 'XMLHttpRequest': The \" +\n          'response type cannot be set after the request has been sent.',\n      );\n    }\n    if (!SUPPORTED_RESPONSE_TYPES.hasOwnProperty(responseType)) {\n      console.warn(\n        `The provided value '${responseType}' is not a valid 'responseType'.`,\n      );\n      return;\n    }\n\n    // redboxes early, e.g. for 'arraybuffer' on ios 7\n    invariant(\n      SUPPORTED_RESPONSE_TYPES[responseType] || responseType === 'document',\n      `The provided value '${responseType}' is unsupported in this environment.`,\n    );\n\n    if (responseType === 'blob') {\n      invariant(\n        BlobManager.isAvailable,\n        'Native module BlobModule is required for blob support',\n      );\n    }\n    this._responseType = responseType;\n  }\n\n  get responseText(): string {\n    if (this._responseType !== '' && this._responseType !== 'text') {\n      throw new Error(\n        \"The 'responseText' property is only available if 'responseType' \" +\n          `is set to '' or 'text', but it is '${this._responseType}'.`,\n      );\n    }\n    if (this.readyState < LOADING) {\n      return '';\n    }\n    return this._response;\n  }\n\n  get response(): Response {\n    const {responseType} = this;\n    if (responseType === '' || responseType === 'text') {\n      return this.readyState < LOADING || this._hasError ? '' : this._response;\n    }\n\n    if (this.readyState !== DONE) {\n      return null;\n    }\n\n    if (this._cachedResponse !== undefined) {\n      return this._cachedResponse;\n    }\n\n    switch (responseType) {\n      case 'document':\n        this._cachedResponse = null;\n        break;\n\n      case 'arraybuffer':\n        this._cachedResponse = base64.toByteArray(this._response).buffer;\n        break;\n\n      case 'blob':\n        if (typeof this._response === 'object' && this._response) {\n          this._cachedResponse = BlobManager.createFromOptions(this._response);\n        } else if (this._response === '') {\n          this._cachedResponse = BlobManager.createFromParts([]);\n        } else {\n          throw new Error(`Invalid response for blob: ${this._response}`);\n        }\n        break;\n\n      case 'json':\n        try {\n          this._cachedResponse = JSON.parse(this._response);\n        } catch (_) {\n          this._cachedResponse = null;\n        }\n        break;\n\n      default:\n        this._cachedResponse = null;\n    }\n\n    return this._cachedResponse;\n  }\n\n  // exposed for testing\n  __didCreateRequest(requestId: number): void {\n    this._requestId = requestId;\n\n    XMLHttpRequest._interceptor &&\n      XMLHttpRequest._interceptor.requestSent(\n        requestId,\n        this._url || '',\n        this._method || 'GET',\n        this._headers,\n      );\n  }\n\n  // exposed for testing\n  __didUploadProgress(\n    requestId: number,\n    progress: number,\n    total: number,\n  ): void {\n    if (requestId === this._requestId) {\n      this.upload.dispatchEvent({\n        type: 'progress',\n        lengthComputable: true,\n        loaded: progress,\n        total,\n      });\n    }\n  }\n\n  __didReceiveResponse(\n    requestId: number,\n    status: number,\n    responseHeaders: ?Object,\n    responseURL: ?string,\n  ): void {\n    if (requestId === this._requestId) {\n      this._perfKey != null &&\n        this._performanceLogger.stopTimespan(this._perfKey);\n      this.status = status;\n      this.setResponseHeaders(responseHeaders);\n      this.setReadyState(this.HEADERS_RECEIVED);\n      if (responseURL || responseURL === '') {\n        this.responseURL = responseURL;\n      } else {\n        delete this.responseURL;\n      }\n\n      XMLHttpRequest._interceptor &&\n        XMLHttpRequest._interceptor.responseReceived(\n          requestId,\n          responseURL || this._url || '',\n          status,\n          responseHeaders || {},\n        );\n    }\n  }\n\n  __didReceiveData(requestId: number, response: string): void {\n    if (requestId !== this._requestId) {\n      return;\n    }\n    this._response = response;\n    this._cachedResponse = undefined; // force lazy recomputation\n    this.setReadyState(this.LOADING);\n\n    XMLHttpRequest._interceptor &&\n      XMLHttpRequest._interceptor.dataReceived(requestId, response);\n  }\n\n  __didReceiveIncrementalData(\n    requestId: number,\n    responseText: string,\n    progress: number,\n    total: number,\n  ) {\n    if (requestId !== this._requestId) {\n      return;\n    }\n    if (!this._response) {\n      this._response = responseText;\n    } else {\n      this._response += responseText;\n    }\n\n    XMLHttpRequest._interceptor &&\n      XMLHttpRequest._interceptor.dataReceived(requestId, responseText);\n\n    this.setReadyState(this.LOADING);\n    this.__didReceiveDataProgress(requestId, progress, total);\n  }\n\n  __didReceiveDataProgress(\n    requestId: number,\n    loaded: number,\n    total: number,\n  ): void {\n    if (requestId !== this._requestId) {\n      return;\n    }\n    this.dispatchEvent({\n      type: 'progress',\n      lengthComputable: total >= 0,\n      loaded,\n      total,\n    });\n  }\n\n  // exposed for testing\n  __didCompleteResponse(\n    requestId: number,\n    error: string,\n    timeOutError: boolean,\n  ): void {\n    if (requestId === this._requestId) {\n      if (error) {\n        if (this._responseType === '' || this._responseType === 'text') {\n          this._response = error;\n        }\n        this._hasError = true;\n        if (timeOutError) {\n          this._timedOut = true;\n        }\n      }\n      this._clearSubscriptions();\n      this._requestId = null;\n      this.setReadyState(this.DONE);\n\n      if (error) {\n        XMLHttpRequest._interceptor &&\n          XMLHttpRequest._interceptor.loadingFailed(requestId, error);\n      } else {\n        XMLHttpRequest._interceptor &&\n          XMLHttpRequest._interceptor.loadingFinished(\n            requestId,\n            this._response.length,\n          );\n      }\n    }\n  }\n\n  _clearSubscriptions(): void {\n    (this._subscriptions || []).forEach(sub => {\n      if (sub) {\n        sub.remove();\n      }\n    });\n    this._subscriptions = [];\n  }\n\n  getAllResponseHeaders(): ?string {\n    if (!this.responseHeaders) {\n      // according to the spec, return null if no response has been received\n      return null;\n    }\n\n    // Assign to non-nullable local variable.\n    const responseHeaders = this.responseHeaders;\n\n    const unsortedHeaders: Map<\n      string,\n      {lowerHeaderName: string, upperHeaderName: string, headerValue: string},\n    > = new Map();\n    for (const rawHeaderName of Object.keys(responseHeaders)) {\n      const headerValue = responseHeaders[rawHeaderName];\n      const lowerHeaderName = rawHeaderName.toLowerCase();\n      const header = unsortedHeaders.get(lowerHeaderName);\n      if (header) {\n        header.headerValue += ', ' + headerValue;\n        unsortedHeaders.set(lowerHeaderName, header);\n      } else {\n        unsortedHeaders.set(lowerHeaderName, {\n          lowerHeaderName,\n          upperHeaderName: rawHeaderName.toUpperCase(),\n          headerValue,\n        });\n      }\n    }\n\n    // Sort in ascending order, with a being less than b if a's name is legacy-uppercased-byte less than b's name.\n    const sortedHeaders = [...unsortedHeaders.values()].sort((a, b) => {\n      if (a.upperHeaderName < b.upperHeaderName) {\n        return -1;\n      }\n      if (a.upperHeaderName > b.upperHeaderName) {\n        return 1;\n      }\n      return 0;\n    });\n\n    // Combine into single text response.\n    return (\n      sortedHeaders\n        .map(header => {\n          return header.lowerHeaderName + ': ' + header.headerValue;\n        })\n        .join('\\r\\n') + '\\r\\n'\n    );\n  }\n\n  getResponseHeader(header: string): ?string {\n    const value = this._lowerCaseResponseHeaders[header.toLowerCase()];\n    return value !== undefined ? value : null;\n  }\n\n  setRequestHeader(header: string, value: any): void {\n    if (this.readyState !== this.OPENED) {\n      throw new Error('Request has not been opened');\n    }\n    this._headers[header.toLowerCase()] = String(value);\n  }\n\n  /**\n   * Custom extension for tracking origins of request.\n   */\n  setTrackingName(trackingName: string): XMLHttpRequest {\n    this._trackingName = trackingName;\n    return this;\n  }\n\n  /**\n   * Custom extension for setting a custom performance logger\n   */\n  setPerformanceLogger(performanceLogger: IPerformanceLogger): XMLHttpRequest {\n    this._performanceLogger = performanceLogger;\n    return this;\n  }\n\n  open(method: string, url: string, async: ?boolean): void {\n    /* Other optional arguments are not supported yet */\n    if (this.readyState !== this.UNSENT) {\n      throw new Error('Cannot open, already sending');\n    }\n    if (async !== undefined && !async) {\n      // async is default\n      throw new Error('Synchronous http requests are not supported');\n    }\n    if (!url) {\n      throw new Error('Cannot load an empty url');\n    }\n    this._method = method.toUpperCase();\n    this._url = url;\n    this._aborted = false;\n    this.setReadyState(this.OPENED);\n  }\n\n  send(data: any): void {\n    if (this.readyState !== this.OPENED) {\n      throw new Error('Request has not been opened');\n    }\n    if (this._sent) {\n      throw new Error('Request has already been sent');\n    }\n    this._sent = true;\n    const incrementalEvents =\n      this._incrementalEvents || !!this.onreadystatechange || !!this.onprogress;\n\n    this._subscriptions.push(\n      RCTNetworking.addListener('didSendNetworkData', args =>\n        this.__didUploadProgress(...args),\n      ),\n    );\n    this._subscriptions.push(\n      RCTNetworking.addListener('didReceiveNetworkResponse', args =>\n        this.__didReceiveResponse(...args),\n      ),\n    );\n    this._subscriptions.push(\n      RCTNetworking.addListener('didReceiveNetworkData', args =>\n        this.__didReceiveData(...args),\n      ),\n    );\n    this._subscriptions.push(\n      RCTNetworking.addListener('didReceiveNetworkIncrementalData', args =>\n        this.__didReceiveIncrementalData(...args),\n      ),\n    );\n    this._subscriptions.push(\n      RCTNetworking.addListener('didReceiveNetworkDataProgress', args =>\n        this.__didReceiveDataProgress(...args),\n      ),\n    );\n    this._subscriptions.push(\n      RCTNetworking.addListener('didCompleteNetworkResponse', args =>\n        this.__didCompleteResponse(...args),\n      ),\n    );\n\n    let nativeResponseType: NativeResponseType = 'text';\n    if (this._responseType === 'arraybuffer') {\n      nativeResponseType = 'base64';\n    }\n    if (this._responseType === 'blob') {\n      nativeResponseType = 'blob';\n    }\n\n    const doSend = () => {\n      const friendlyName =\n        this._trackingName !== 'unknown' ? this._trackingName : this._url;\n      this._perfKey = 'network_XMLHttpRequest_' + String(friendlyName);\n      this._performanceLogger.startTimespan(this._perfKey);\n      invariant(\n        this._method,\n        'XMLHttpRequest method needs to be defined (%s).',\n        friendlyName,\n      );\n      invariant(\n        this._url,\n        'XMLHttpRequest URL needs to be defined (%s).',\n        friendlyName,\n      );\n      RCTNetworking.sendRequest(\n        this._method,\n        this._trackingName,\n        this._url,\n        this._headers,\n        data,\n        /* $FlowFixMe(>=0.78.0 site=react_native_android_fb) This issue was found\n         * when making Flow check .android.js files. */\n        nativeResponseType,\n        incrementalEvents,\n        this.timeout,\n        // $FlowFixMe[method-unbinding] added when improving typing for this parameters\n        this.__didCreateRequest.bind(this),\n        this.withCredentials,\n      );\n    };\n    if (DEBUG_NETWORK_SEND_DELAY) {\n      setTimeout(doSend, DEBUG_NETWORK_SEND_DELAY);\n    } else {\n      doSend();\n    }\n  }\n\n  abort(): void {\n    this._aborted = true;\n    if (this._requestId) {\n      RCTNetworking.abortRequest(this._requestId);\n    }\n    // only call onreadystatechange if there is something to abort,\n    // below logic is per spec\n    if (\n      !(\n        this.readyState === this.UNSENT ||\n        (this.readyState === this.OPENED && !this._sent) ||\n        this.readyState === this.DONE\n      )\n    ) {\n      this._reset();\n      this.setReadyState(this.DONE);\n    }\n    // Reset again after, in case modified in handler\n    this._reset();\n  }\n\n  setResponseHeaders(responseHeaders: ?Object): void {\n    this.responseHeaders = responseHeaders || null;\n    const headers = responseHeaders || {};\n    this._lowerCaseResponseHeaders = Object.keys(headers).reduce<{\n      [string]: any,\n    }>((lcaseHeaders, headerName) => {\n      lcaseHeaders[headerName.toLowerCase()] = headers[headerName];\n      return lcaseHeaders;\n    }, {});\n  }\n\n  setReadyState(newState: number): void {\n    this.readyState = newState;\n    this.dispatchEvent({type: 'readystatechange'});\n    if (newState === this.DONE) {\n      if (this._aborted) {\n        this.dispatchEvent({type: 'abort'});\n      } else if (this._hasError) {\n        if (this._timedOut) {\n          this.dispatchEvent({type: 'timeout'});\n        } else {\n          this.dispatchEvent({type: 'error'});\n        }\n      } else {\n        this.dispatchEvent({type: 'load'});\n      }\n      this.dispatchEvent({type: 'loadend'});\n    }\n  }\n\n  /* global EventListener */\n  addEventListener(type: string, listener: EventListener): void {\n    // If we dont' have a 'readystatechange' event handler, we don't\n    // have to send repeated LOADING events with incremental updates\n    // to responseText, which will avoid a bunch of native -> JS\n    // bridge traffic.\n    if (type === 'readystatechange' || type === 'progress') {\n      this._incrementalEvents = true;\n    }\n    super.addEventListener(type, listener);\n  }\n}\n\nmodule.exports = XMLHttpRequest;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\n'use strict';\n\nconst Blob = require('../Blob/Blob');\nconst binaryToBase64 = require('../Utilities/binaryToBase64');\nconst FormData = require('./FormData');\n\nexport type RequestBody =\n  | string\n  | Blob\n  | FormData\n  | {uri: string, ...}\n  | ArrayBuffer\n  | $ArrayBufferView;\n\nfunction convertRequestBody(body: RequestBody): Object {\n  if (typeof body === 'string') {\n    return {string: body};\n  }\n  if (body instanceof Blob) {\n    return {blob: body.data};\n  }\n  if (body instanceof FormData) {\n    return {formData: body.getParts()};\n  }\n  if (body instanceof ArrayBuffer || ArrayBuffer.isView(body)) {\n    /* $FlowFixMe[incompatible-call] : no way to assert that 'body' is indeed\n     * an ArrayBufferView */\n    return {base64: binaryToBase64(body)};\n  }\n  return body;\n}\n\nmodule.exports = convertRequestBody;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\n/* globals Headers, Request, Response */\n\n'use strict';\n\n// side-effectful require() to put fetch,\n// Headers, Request, Response in global scope\nrequire('whatwg-fetch');\n\nmodule.exports = {fetch, Headers, Request, Response};\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nexport * from '../../src/private/specs/modules/NativeJSCSamplingProfiler';\nimport NativeJSCSamplingProfiler from '../../src/private/specs/modules/NativeJSCSamplingProfiler';\nexport default NativeJSCSamplingProfiler;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict\n */\n\n'use strict';\n\nconst SamplingProfiler = {\n  poke: function (token: number): void {\n    let error = null;\n    let result = null;\n    try {\n      result = global.pokeSamplingProfiler();\n      if (result === null) {\n        console.log('The JSC Sampling Profiler has started');\n      } else {\n        console.log('The JSC Sampling Profiler has stopped');\n      }\n    } catch (e) {\n      console.log(\n        'Error occurred when restarting Sampling Profiler: ' + e.toString(),\n      );\n      error = e.toString();\n    }\n\n    const NativeJSCSamplingProfiler =\n      require('./NativeJSCSamplingProfiler').default;\n    if (NativeJSCSamplingProfiler) {\n      NativeJSCSamplingProfiler.operationComplete(token, result, error);\n    }\n  },\n};\n\nmodule.exports = SamplingProfiler;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nimport typeof * as SystraceModule from './Systrace';\n\nconst TRACE_TAG_REACT_APPS = 1 << 17; // eslint-disable-line no-bitwise\n\nlet _asyncCookie = 0;\n\ntype EventName = string | (() => string);\ntype EventArgs = ?{[string]: string};\n\n/**\n * Indicates if the application is currently being traced.\n *\n * Calling methods on this module when the application isn't being traced is\n * cheap, but this method can be used to avoid computing expensive values for\n * those functions.\n *\n * @example\n * if (Systrace.isEnabled()) {\n *   const expensiveArgs = computeExpensiveArgs();\n *   Systrace.beginEvent('myEvent', expensiveArgs);\n * }\n */\nexport function isEnabled(): boolean {\n  return global.nativeTraceIsTracing\n    ? global.nativeTraceIsTracing(TRACE_TAG_REACT_APPS)\n    : Boolean(global.__RCTProfileIsProfiling);\n}\n\n/**\n * @deprecated This function is now a no-op but it's left for backwards\n * compatibility. `isEnabled` will now synchronously check if we're actively\n * profiling or not. This is necessary because we don't have callbacks to know\n * when profiling has started/stopped on Android APIs.\n */\nexport function setEnabled(_doEnable: boolean): void {}\n\n/**\n * Marks the start of a synchronous event that should end in the same stack\n * frame. The end of this event should be marked using the `endEvent` function.\n */\nexport function beginEvent(eventName: EventName, args?: EventArgs): void {\n  if (isEnabled()) {\n    const eventNameString =\n      typeof eventName === 'function' ? eventName() : eventName;\n    global.nativeTraceBeginSection(TRACE_TAG_REACT_APPS, eventNameString, args);\n  }\n}\n\n/**\n * Marks the end of a synchronous event started in the same stack frame.\n */\nexport function endEvent(args?: EventArgs): void {\n  if (isEnabled()) {\n    global.nativeTraceEndSection(TRACE_TAG_REACT_APPS, args);\n  }\n}\n\n/**\n * Marks the start of a potentially asynchronous event. The end of this event\n * should be marked calling the `endAsyncEvent` function with the cookie\n * returned by this function.\n */\nexport function beginAsyncEvent(\n  eventName: EventName,\n  args?: EventArgs,\n): number {\n  const cookie = _asyncCookie;\n  if (isEnabled()) {\n    _asyncCookie++;\n    const eventNameString =\n      typeof eventName === 'function' ? eventName() : eventName;\n    global.nativeTraceBeginAsyncSection(\n      TRACE_TAG_REACT_APPS,\n      eventNameString,\n      cookie,\n      args,\n    );\n  }\n  return cookie;\n}\n\n/**\n * Marks the end of a potentially asynchronous event, which was started with\n * the given cookie.\n */\nexport function endAsyncEvent(\n  eventName: EventName,\n  cookie: number,\n  args?: EventArgs,\n): void {\n  if (isEnabled()) {\n    const eventNameString =\n      typeof eventName === 'function' ? eventName() : eventName;\n    global.nativeTraceEndAsyncSection(\n      TRACE_TAG_REACT_APPS,\n      eventNameString,\n      cookie,\n      args,\n    );\n  }\n}\n\n/**\n * Registers a new value for a counter event.\n */\nexport function counterEvent(eventName: EventName, value: number): void {\n  if (isEnabled()) {\n    const eventNameString =\n      typeof eventName === 'function' ? eventName() : eventName;\n    global.nativeTraceCounter &&\n      global.nativeTraceCounter(TRACE_TAG_REACT_APPS, eventNameString, value);\n  }\n}\n\nif (__DEV__) {\n  const Systrace: SystraceModule = {\n    isEnabled,\n    setEnabled,\n    beginEvent,\n    endEvent,\n    beginAsyncEvent,\n    endAsyncEvent,\n    counterEvent,\n  };\n\n  // The metro require polyfill can not have dependencies (true for all polyfills).\n  // Ensure that `Systrace` is available in polyfill by exposing it globally.\n  global[(global.__METRO_GLOBAL_PREFIX__ || '') + '__SYSTRACE'] = Systrace;\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nexport * from '../../src/private/specs/modules/NativePermissionsAndroid';\nimport NativePermissionsAndroid from '../../src/private/specs/modules/NativePermissionsAndroid';\nexport default NativePermissionsAndroid;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict\n */\n\nimport type {\n  PermissionStatus,\n  PermissionType,\n} from './NativePermissionsAndroid';\n\nimport NativeDialogManagerAndroid from '../NativeModules/specs/NativeDialogManagerAndroid';\nimport NativePermissionsAndroid from './NativePermissionsAndroid';\nimport invariant from 'invariant';\n\nconst Platform = require('../Utilities/Platform');\n\nexport type Rationale = {\n  title: string,\n  message: string,\n  buttonPositive?: string,\n  buttonNegative?: string,\n  buttonNeutral?: string,\n  ...\n};\n\nconst PERMISSION_REQUEST_RESULT = Object.freeze({\n  GRANTED: 'granted',\n  DENIED: 'denied',\n  NEVER_ASK_AGAIN: 'never_ask_again',\n});\n\nconst PERMISSIONS = Object.freeze({\n  READ_CALENDAR: 'android.permission.READ_CALENDAR',\n  WRITE_CALENDAR: 'android.permission.WRITE_CALENDAR',\n  CAMERA: 'android.permission.CAMERA',\n  READ_CONTACTS: 'android.permission.READ_CONTACTS',\n  WRITE_CONTACTS: 'android.permission.WRITE_CONTACTS',\n  GET_ACCOUNTS: 'android.permission.GET_ACCOUNTS',\n  ACCESS_FINE_LOCATION: 'android.permission.ACCESS_FINE_LOCATION',\n  ACCESS_COARSE_LOCATION: 'android.permission.ACCESS_COARSE_LOCATION',\n  ACCESS_BACKGROUND_LOCATION: 'android.permission.ACCESS_BACKGROUND_LOCATION',\n  RECORD_AUDIO: 'android.permission.RECORD_AUDIO',\n  READ_PHONE_STATE: 'android.permission.READ_PHONE_STATE',\n  CALL_PHONE: 'android.permission.CALL_PHONE',\n  READ_CALL_LOG: 'android.permission.READ_CALL_LOG',\n  WRITE_CALL_LOG: 'android.permission.WRITE_CALL_LOG',\n  ADD_VOICEMAIL: 'com.android.voicemail.permission.ADD_VOICEMAIL',\n  READ_VOICEMAIL: 'com.android.voicemail.permission.READ_VOICEMAIL',\n  WRITE_VOICEMAIL: 'com.android.voicemail.permission.WRITE_VOICEMAIL',\n  USE_SIP: 'android.permission.USE_SIP',\n  PROCESS_OUTGOING_CALLS: 'android.permission.PROCESS_OUTGOING_CALLS',\n  BODY_SENSORS: 'android.permission.BODY_SENSORS',\n  BODY_SENSORS_BACKGROUND: 'android.permission.BODY_SENSORS_BACKGROUND',\n  SEND_SMS: 'android.permission.SEND_SMS',\n  RECEIVE_SMS: 'android.permission.RECEIVE_SMS',\n  READ_SMS: 'android.permission.READ_SMS',\n  RECEIVE_WAP_PUSH: 'android.permission.RECEIVE_WAP_PUSH',\n  RECEIVE_MMS: 'android.permission.RECEIVE_MMS',\n  READ_EXTERNAL_STORAGE: 'android.permission.READ_EXTERNAL_STORAGE',\n  READ_MEDIA_IMAGES: 'android.permission.READ_MEDIA_IMAGES',\n  READ_MEDIA_VIDEO: 'android.permission.READ_MEDIA_VIDEO',\n  READ_MEDIA_AUDIO: 'android.permission.READ_MEDIA_AUDIO',\n  READ_MEDIA_VISUAL_USER_SELECTED:\n    'android.permission.READ_MEDIA_VISUAL_USER_SELECTED',\n  WRITE_EXTERNAL_STORAGE: 'android.permission.WRITE_EXTERNAL_STORAGE',\n  BLUETOOTH_CONNECT: 'android.permission.BLUETOOTH_CONNECT',\n  BLUETOOTH_SCAN: 'android.permission.BLUETOOTH_SCAN',\n  BLUETOOTH_ADVERTISE: 'android.permission.BLUETOOTH_ADVERTISE',\n  ACCESS_MEDIA_LOCATION: 'android.permission.ACCESS_MEDIA_LOCATION',\n  ACCEPT_HANDOVER: 'android.permission.ACCEPT_HANDOVER',\n  ACTIVITY_RECOGNITION: 'android.permission.ACTIVITY_RECOGNITION',\n  ANSWER_PHONE_CALLS: 'android.permission.ANSWER_PHONE_CALLS',\n  READ_PHONE_NUMBERS: 'android.permission.READ_PHONE_NUMBERS',\n  UWB_RANGING: 'android.permission.UWB_RANGING',\n  POST_NOTIFICATIONS: 'android.permission.POST_NOTIFICATIONS',\n  NEARBY_WIFI_DEVICES: 'android.permission.NEARBY_WIFI_DEVICES',\n});\n\n/**\n * `PermissionsAndroid` provides access to Android M's new permissions model.\n *\n * See https://reactnative.dev/docs/permissionsandroid\n */\n\nclass PermissionsAndroid {\n  PERMISSIONS: {|\n    ACCEPT_HANDOVER: string,\n    ACCESS_BACKGROUND_LOCATION: string,\n    ACCESS_COARSE_LOCATION: string,\n    ACCESS_FINE_LOCATION: string,\n    ACCESS_MEDIA_LOCATION: string,\n    ACTIVITY_RECOGNITION: string,\n    ADD_VOICEMAIL: string,\n    READ_VOICEMAIL: string,\n    WRITE_VOICEMAIL: string,\n    ANSWER_PHONE_CALLS: string,\n    BLUETOOTH_ADVERTISE: string,\n    BLUETOOTH_CONNECT: string,\n    BLUETOOTH_SCAN: string,\n    BODY_SENSORS: string,\n    BODY_SENSORS_BACKGROUND: string,\n    CALL_PHONE: string,\n    CAMERA: string,\n    GET_ACCOUNTS: string,\n    NEARBY_WIFI_DEVICES: string,\n    POST_NOTIFICATIONS: string,\n    PROCESS_OUTGOING_CALLS: string,\n    READ_CALENDAR: string,\n    READ_CALL_LOG: string,\n    READ_CONTACTS: string,\n    READ_EXTERNAL_STORAGE: string,\n    READ_MEDIA_IMAGES: string,\n    READ_MEDIA_VIDEO: string,\n    READ_MEDIA_AUDIO: string,\n    READ_MEDIA_VISUAL_USER_SELECTED: string,\n    READ_PHONE_NUMBERS: string,\n    READ_PHONE_STATE: string,\n    READ_SMS: string,\n    RECEIVE_MMS: string,\n    RECEIVE_SMS: string,\n    RECEIVE_WAP_PUSH: string,\n    RECORD_AUDIO: string,\n    SEND_SMS: string,\n    USE_SIP: string,\n    UWB_RANGING: string,\n    WRITE_CALENDAR: string,\n    WRITE_CALL_LOG: string,\n    WRITE_CONTACTS: string,\n    WRITE_EXTERNAL_STORAGE: string,\n  |} = PERMISSIONS;\n  RESULTS: {|\n    DENIED: 'denied',\n    GRANTED: 'granted',\n    NEVER_ASK_AGAIN: 'never_ask_again',\n  |} = PERMISSION_REQUEST_RESULT;\n\n  /**\n   * DEPRECATED - use check\n   *\n   * Returns a promise resolving to a boolean value as to whether the specified\n   * permissions has been granted\n   *\n   * @deprecated\n   */\n  checkPermission(permission: PermissionType): Promise<boolean> {\n    console.warn(\n      '\"PermissionsAndroid.checkPermission\" is deprecated. Use \"PermissionsAndroid.check\" instead',\n    );\n    if (Platform.OS !== 'android') {\n      console.warn(\n        '\"PermissionsAndroid\" module works only for Android platform.',\n      );\n      return Promise.resolve(false);\n    }\n\n    invariant(\n      NativePermissionsAndroid,\n      'PermissionsAndroid is not installed correctly.',\n    );\n\n    return NativePermissionsAndroid.checkPermission(permission);\n  }\n\n  /**\n   * Returns a promise resolving to a boolean value as to whether the specified\n   * permissions has been granted\n   *\n   * See https://reactnative.dev/docs/permissionsandroid#check\n   */\n  check(permission: PermissionType): Promise<boolean> {\n    if (Platform.OS !== 'android') {\n      console.warn(\n        '\"PermissionsAndroid\" module works only for Android platform.',\n      );\n      return Promise.resolve(false);\n    }\n\n    invariant(\n      NativePermissionsAndroid,\n      'PermissionsAndroid is not installed correctly.',\n    );\n\n    return NativePermissionsAndroid.checkPermission(permission);\n  }\n\n  /**\n   * DEPRECATED - use request\n   *\n   * Prompts the user to enable a permission and returns a promise resolving to a\n   * boolean value indicating whether the user allowed or denied the request\n   *\n   * If the optional rationale argument is included (which is an object with a\n   * `title` and `message`), this function checks with the OS whether it is\n   * necessary to show a dialog explaining why the permission is needed\n   * (https://developer.android.com/training/permissions/requesting#explain)\n   * and then shows the system permission dialog\n   *\n   * @deprecated\n   */\n  async requestPermission(\n    permission: PermissionType,\n    rationale?: Rationale,\n  ): Promise<boolean> {\n    console.warn(\n      '\"PermissionsAndroid.requestPermission\" is deprecated. Use \"PermissionsAndroid.request\" instead',\n    );\n    if (Platform.OS !== 'android') {\n      console.warn(\n        '\"PermissionsAndroid\" module works only for Android platform.',\n      );\n      return Promise.resolve(false);\n    }\n\n    const response = await this.request(permission, rationale);\n    return response === this.RESULTS.GRANTED;\n  }\n\n  /**\n   * Prompts the user to enable a permission and returns a promise resolving to a\n   * string value indicating whether the user allowed or denied the request\n   *\n   * See https://reactnative.dev/docs/permissionsandroid#request\n   */\n  async request(\n    permission: PermissionType,\n    rationale?: Rationale,\n  ): Promise<PermissionStatus> {\n    if (Platform.OS !== 'android') {\n      console.warn(\n        '\"PermissionsAndroid\" module works only for Android platform.',\n      );\n      return Promise.resolve(this.RESULTS.DENIED);\n    }\n\n    invariant(\n      NativePermissionsAndroid,\n      'PermissionsAndroid is not installed correctly.',\n    );\n\n    if (rationale) {\n      const shouldShowRationale =\n        await NativePermissionsAndroid.shouldShowRequestPermissionRationale(\n          permission,\n        );\n\n      if (shouldShowRationale && !!NativeDialogManagerAndroid) {\n        return new Promise((resolve, reject) => {\n          const options = {\n            ...rationale,\n          };\n          NativeDialogManagerAndroid.showAlert(\n            /* $FlowFixMe[incompatible-exact] (>=0.111.0 site=react_native_fb)\n             * This comment suppresses an error found when Flow v0.111 was\n             * deployed. To see the error, delete this comment and run Flow.\n             */\n            options,\n            () => reject(new Error('Error showing rationale')),\n            () =>\n              resolve(NativePermissionsAndroid.requestPermission(permission)),\n          );\n        });\n      }\n    }\n    return NativePermissionsAndroid.requestPermission(permission);\n  }\n\n  /**\n   * Prompts the user to enable multiple permissions in the same dialog and\n   * returns an object with the permissions as keys and strings as values\n   * indicating whether the user allowed or denied the request\n   *\n   * See https://reactnative.dev/docs/permissionsandroid#requestmultiple\n   */\n  requestMultiple(\n    permissions: Array<PermissionType>,\n  ): Promise<{[permission: PermissionType]: PermissionStatus, ...}> {\n    if (Platform.OS !== 'android') {\n      console.warn(\n        '\"PermissionsAndroid\" module works only for Android platform.',\n      );\n      return Promise.resolve({});\n    }\n\n    invariant(\n      NativePermissionsAndroid,\n      'PermissionsAndroid is not installed correctly.',\n    );\n    return NativePermissionsAndroid.requestMultiplePermissions(permissions);\n  }\n}\n\nconst PermissionsAndroidInstance: PermissionsAndroid = new PermissionsAndroid();\n\nmodule.exports = PermissionsAndroidInstance;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nimport Platform from '../Utilities/Platform';\n\nlet isEnabled = false;\n\nif (Platform.OS === 'web') {\n  const canUseDOM = Boolean(\n    typeof window !== 'undefined' &&\n      window.document &&\n      window.document.createElement,\n  );\n\n  if (canUseDOM) {\n    /**\n     * Web browsers emulate mouse events (and hover states) after touch events.\n     * This code infers when the currently-in-use modality supports hover\n     * (including for multi-modality devices) and considers \"hover\" to be enabled\n     * if a mouse movement occurs more than 1 second after the last touch event.\n     * This threshold is long enough to account for longer delays between the\n     * browser firing touch and mouse events on low-powered devices.\n     */\n    const HOVER_THRESHOLD_MS = 1000;\n    let lastTouchTimestamp = 0;\n\n    const enableHover = () => {\n      if (isEnabled || Date.now() - lastTouchTimestamp < HOVER_THRESHOLD_MS) {\n        return;\n      }\n      isEnabled = true;\n    };\n\n    const disableHover = () => {\n      lastTouchTimestamp = Date.now();\n      if (isEnabled) {\n        isEnabled = false;\n      }\n    };\n\n    document.addEventListener('touchstart', disableHover, true);\n    document.addEventListener('touchmove', disableHover, true);\n    document.addEventListener('mousemove', enableHover, true);\n  }\n}\n\nexport function isHoverEnabled(): boolean {\n  return isEnabled;\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport type {HostComponent} from '../Renderer/shims/ReactNativeTypes';\nimport type {\n  BlurEvent,\n  FocusEvent,\n  MouseEvent,\n  PressEvent,\n} from '../Types/CoreEventTypes';\n\nimport SoundManager from '../Components/Sound/SoundManager';\nimport ReactNativeFeatureFlags from '../ReactNative/ReactNativeFeatureFlags';\nimport UIManager from '../ReactNative/UIManager';\nimport {type RectOrSize, normalizeRect} from '../StyleSheet/Rect';\nimport {type PointerEvent} from '../Types/CoreEventTypes';\nimport Platform from '../Utilities/Platform';\nimport {isHoverEnabled} from './HoverState';\nimport PressabilityPerformanceEventEmitter from './PressabilityPerformanceEventEmitter.js';\nimport {type PressabilityTouchSignal as TouchSignal} from './PressabilityTypes.js';\nimport invariant from 'invariant';\nimport * as React from 'react';\n\nexport type PressabilityConfig = $ReadOnly<{|\n  /**\n   * Whether a press gesture can be interrupted by a parent gesture such as a\n   * scroll event. Defaults to true.\n   */\n  cancelable?: ?boolean,\n\n  /**\n   * Whether to disable initialization of the press gesture.\n   */\n  disabled?: ?boolean,\n\n  /**\n   * Amount to extend the `VisualRect` by to create `HitRect`.\n   */\n  hitSlop?: ?RectOrSize,\n\n  /**\n   * Amount to extend the `HitRect` by to create `PressRect`.\n   */\n  pressRectOffset?: ?RectOrSize,\n\n  /**\n   * Whether to disable the systemm sound when `onPress` fires on Android.\n   **/\n  android_disableSound?: ?boolean,\n\n  /**\n   * Duration to wait after hover in before calling `onHoverIn`.\n   */\n  delayHoverIn?: ?number,\n\n  /**\n   * Duration to wait after hover out before calling `onHoverOut`.\n   */\n  delayHoverOut?: ?number,\n\n  /**\n   * Duration (in addition to `delayPressIn`) after which a press gesture is\n   * considered a long press gesture. Defaults to 500 (milliseconds).\n   */\n  delayLongPress?: ?number,\n\n  /**\n   * Duration to wait after press down before calling `onPressIn`.\n   */\n  delayPressIn?: ?number,\n\n  /**\n   * Duration to wait after letting up before calling `onPressOut`.\n   */\n  delayPressOut?: ?number,\n\n  /**\n   * Minimum duration to wait between calling `onPressIn` and `onPressOut`.\n   */\n  minPressDuration?: ?number,\n\n  /**\n   * Called after the element loses focus.\n   */\n  onBlur?: ?(event: BlurEvent) => mixed,\n\n  /**\n   * Called after the element is focused.\n   */\n  onFocus?: ?(event: FocusEvent) => mixed,\n\n  /**\n   * Called when the hover is activated to provide visual feedback.\n   */\n  onHoverIn?: ?(event: MouseEvent) => mixed,\n\n  /**\n   * Called when the hover is deactivated to undo visual feedback.\n   */\n  onHoverOut?: ?(event: MouseEvent) => mixed,\n\n  /**\n   * Called when a long press gesture has been triggered.\n   */\n  onLongPress?: ?(event: PressEvent) => mixed,\n\n  /**\n   * Called when a press gesture has been triggered.\n   */\n  onPress?: ?(event: PressEvent) => mixed,\n\n  /**\n   * Called when the press is activated to provide visual feedback.\n   */\n  onPressIn?: ?(event: PressEvent) => mixed,\n\n  /**\n   * Called when the press location moves. (This should rarely be used.)\n   */\n  onPressMove?: ?(event: PressEvent) => mixed,\n\n  /**\n   * Called when the press is deactivated to undo visual feedback.\n   */\n  onPressOut?: ?(event: PressEvent) => mixed,\n\n  /**\n   * Whether to prevent any other native components from becoming responder\n   * while this pressable is responder.\n   */\n  blockNativeResponder?: ?boolean,\n\n  /**\n   * Returns whether a long press gesture should cancel the press gesture.\n   * Defaults to true.\n   *\n   * @deprecated\n   */\n  onLongPressShouldCancelPress_DEPRECATED?: ?() => boolean,\n\n  /**\n   * If `cancelable` is set, this will be ignored.\n   *\n   * Returns whether to yield to a lock termination request (e.g. if a native\n   * scroll gesture attempts to steal the responder lock).\n   *\n   * @deprecated\n   */\n  onResponderTerminationRequest_DEPRECATED?: ?() => boolean,\n\n  /**\n   * If `disabled` is set, this will be ignored.\n   *\n   * Returns whether to start a press gesture.\n   *\n   * @deprecated\n   */\n  onStartShouldSetResponder_DEPRECATED?: ?() => boolean,\n|}>;\n\nexport type EventHandlers = $ReadOnly<{|\n  onBlur: (event: BlurEvent) => void,\n  onClick: (event: PressEvent) => void,\n  onFocus: (event: FocusEvent) => void,\n  onMouseEnter?: (event: MouseEvent) => void,\n  onMouseLeave?: (event: MouseEvent) => void,\n  onPointerEnter?: (event: PointerEvent) => void,\n  onPointerLeave?: (event: PointerEvent) => void,\n  onResponderGrant: (event: PressEvent) => void | boolean,\n  onResponderMove: (event: PressEvent) => void,\n  onResponderRelease: (event: PressEvent) => void,\n  onResponderTerminate: (event: PressEvent) => void,\n  onResponderTerminationRequest: () => boolean,\n  onStartShouldSetResponder: () => boolean,\n|}>;\n\ntype TouchState =\n  | 'NOT_RESPONDER'\n  | 'RESPONDER_INACTIVE_PRESS_IN'\n  | 'RESPONDER_INACTIVE_PRESS_OUT'\n  | 'RESPONDER_ACTIVE_PRESS_IN'\n  | 'RESPONDER_ACTIVE_PRESS_OUT'\n  | 'RESPONDER_ACTIVE_LONG_PRESS_IN'\n  | 'RESPONDER_ACTIVE_LONG_PRESS_OUT'\n  | 'ERROR';\n\nconst Transitions = Object.freeze({\n  NOT_RESPONDER: {\n    DELAY: 'ERROR',\n    RESPONDER_GRANT: 'RESPONDER_INACTIVE_PRESS_IN',\n    RESPONDER_RELEASE: 'ERROR',\n    RESPONDER_TERMINATED: 'ERROR',\n    ENTER_PRESS_RECT: 'ERROR',\n    LEAVE_PRESS_RECT: 'ERROR',\n    LONG_PRESS_DETECTED: 'ERROR',\n  },\n  RESPONDER_INACTIVE_PRESS_IN: {\n    DELAY: 'RESPONDER_ACTIVE_PRESS_IN',\n    RESPONDER_GRANT: 'ERROR',\n    RESPONDER_RELEASE: 'NOT_RESPONDER',\n    RESPONDER_TERMINATED: 'NOT_RESPONDER',\n    ENTER_PRESS_RECT: 'RESPONDER_INACTIVE_PRESS_IN',\n    LEAVE_PRESS_RECT: 'RESPONDER_INACTIVE_PRESS_OUT',\n    LONG_PRESS_DETECTED: 'ERROR',\n  },\n  RESPONDER_INACTIVE_PRESS_OUT: {\n    DELAY: 'RESPONDER_ACTIVE_PRESS_OUT',\n    RESPONDER_GRANT: 'ERROR',\n    RESPONDER_RELEASE: 'NOT_RESPONDER',\n    RESPONDER_TERMINATED: 'NOT_RESPONDER',\n    ENTER_PRESS_RECT: 'RESPONDER_INACTIVE_PRESS_IN',\n    LEAVE_PRESS_RECT: 'RESPONDER_INACTIVE_PRESS_OUT',\n    LONG_PRESS_DETECTED: 'ERROR',\n  },\n  RESPONDER_ACTIVE_PRESS_IN: {\n    DELAY: 'ERROR',\n    RESPONDER_GRANT: 'ERROR',\n    RESPONDER_RELEASE: 'NOT_RESPONDER',\n    RESPONDER_TERMINATED: 'NOT_RESPONDER',\n    ENTER_PRESS_RECT: 'RESPONDER_ACTIVE_PRESS_IN',\n    LEAVE_PRESS_RECT: 'RESPONDER_ACTIVE_PRESS_OUT',\n    LONG_PRESS_DETECTED: 'RESPONDER_ACTIVE_LONG_PRESS_IN',\n  },\n  RESPONDER_ACTIVE_PRESS_OUT: {\n    DELAY: 'ERROR',\n    RESPONDER_GRANT: 'ERROR',\n    RESPONDER_RELEASE: 'NOT_RESPONDER',\n    RESPONDER_TERMINATED: 'NOT_RESPONDER',\n    ENTER_PRESS_RECT: 'RESPONDER_ACTIVE_PRESS_IN',\n    LEAVE_PRESS_RECT: 'RESPONDER_ACTIVE_PRESS_OUT',\n    LONG_PRESS_DETECTED: 'ERROR',\n  },\n  RESPONDER_ACTIVE_LONG_PRESS_IN: {\n    DELAY: 'ERROR',\n    RESPONDER_GRANT: 'ERROR',\n    RESPONDER_RELEASE: 'NOT_RESPONDER',\n    RESPONDER_TERMINATED: 'NOT_RESPONDER',\n    ENTER_PRESS_RECT: 'RESPONDER_ACTIVE_LONG_PRESS_IN',\n    LEAVE_PRESS_RECT: 'RESPONDER_ACTIVE_LONG_PRESS_OUT',\n    LONG_PRESS_DETECTED: 'RESPONDER_ACTIVE_LONG_PRESS_IN',\n  },\n  RESPONDER_ACTIVE_LONG_PRESS_OUT: {\n    DELAY: 'ERROR',\n    RESPONDER_GRANT: 'ERROR',\n    RESPONDER_RELEASE: 'NOT_RESPONDER',\n    RESPONDER_TERMINATED: 'NOT_RESPONDER',\n    ENTER_PRESS_RECT: 'RESPONDER_ACTIVE_LONG_PRESS_IN',\n    LEAVE_PRESS_RECT: 'RESPONDER_ACTIVE_LONG_PRESS_OUT',\n    LONG_PRESS_DETECTED: 'ERROR',\n  },\n  ERROR: {\n    DELAY: 'NOT_RESPONDER',\n    RESPONDER_GRANT: 'RESPONDER_INACTIVE_PRESS_IN',\n    RESPONDER_RELEASE: 'NOT_RESPONDER',\n    RESPONDER_TERMINATED: 'NOT_RESPONDER',\n    ENTER_PRESS_RECT: 'NOT_RESPONDER',\n    LEAVE_PRESS_RECT: 'NOT_RESPONDER',\n    LONG_PRESS_DETECTED: 'NOT_RESPONDER',\n  },\n});\n\nconst isActiveSignal = (signal: TouchState) =>\n  signal === 'RESPONDER_ACTIVE_PRESS_IN' ||\n  signal === 'RESPONDER_ACTIVE_LONG_PRESS_IN';\n\nconst isActivationSignal = (signal: TouchState) =>\n  signal === 'RESPONDER_ACTIVE_PRESS_OUT' ||\n  signal === 'RESPONDER_ACTIVE_PRESS_IN';\n\nconst isPressInSignal = (signal: TouchState) =>\n  signal === 'RESPONDER_INACTIVE_PRESS_IN' ||\n  signal === 'RESPONDER_ACTIVE_PRESS_IN' ||\n  signal === 'RESPONDER_ACTIVE_LONG_PRESS_IN';\n\nconst isTerminalSignal = (signal: TouchSignal) =>\n  signal === 'RESPONDER_TERMINATED' || signal === 'RESPONDER_RELEASE';\n\nconst DEFAULT_LONG_PRESS_DELAY_MS = 500;\nconst DEFAULT_PRESS_RECT_OFFSETS = {\n  bottom: 30,\n  left: 20,\n  right: 20,\n  top: 20,\n};\nconst DEFAULT_MIN_PRESS_DURATION = 130;\n\nconst DEFAULT_LONG_PRESS_DEACTIVATION_DISTANCE = 10;\nlet longPressDeactivationDistance = DEFAULT_LONG_PRESS_DEACTIVATION_DISTANCE;\n\n/**\n * Pressability implements press handling capabilities.\n *\n * =========================== Pressability Tutorial ===========================\n *\n * The `Pressability` class helps you create press interactions by analyzing the\n * geometry of elements and observing when another responder (e.g. ScrollView)\n * has stolen the touch lock. It offers hooks for your component to provide\n * interaction feedback to the user:\n *\n * - When a press has activated (e.g. highlight an element)\n * - When a press has deactivated (e.g. un-highlight an element)\n * - When a press should trigger an action, meaning it activated and deactivated\n *   while within the geometry of the element without the lock being stolen.\n *\n * A high quality interaction isn't as simple as you might think. There should\n * be a slight delay before activation. Moving your finger beyond an element's\n * bounds should trigger deactivation, but moving the same finger back within an\n * element's bounds should trigger reactivation.\n *\n * This should be consumed by functional components using `usePressability`. The\n * following steps are only relevant for using `Pressability` in classes:\n *\n * 1. Instantiate `Pressability` and store it on your component's state.\n *\n *    state = {\n *      pressability: new Pressability({\n *        // ...\n *      }),\n *    };\n *\n * 2. Choose the rendered component who should collect the press events. On that\n *    element, spread `pressability.getEventHandlers()` into its props.\n *\n *    return (\n *      <View {...this.state.pressability.getEventHandlers()} />\n *    );\n *\n * 3. Update `Pressability` when your component mounts, updates, and unmounts.\n *\n *    componentDidMount() {\n *      this.state.pressability.configure(...);\n *    }\n *\n *    componentDidUpdate() {\n *      this.state.pressability.configure(...);\n *    }\n *\n *    componentWillUnmount() {\n *      this.state.pressability.reset();\n *    }\n *\n * ==================== Pressability Implementation Details ====================\n *\n * `Pressability` only assumes that there exists a `HitRect` node. The `PressRect`\n * is an abstract box that is extended beyond the `HitRect`.\n *\n * # Geometry\n *\n *  ┌────────────────────────┐\n *  │  ┌──────────────────┐  │ - Presses start anywhere within `HitRect`, which\n *  │  │  ┌────────────┐  │  │   is expanded via the prop `hitSlop`.\n *  │  │  │ VisualRect │  │  │\n *  │  │  └────────────┘  │  │ - When pressed down for sufficient amount of time\n *  │  │    HitRect       │  │   before letting up, `VisualRect` activates for\n *  │  └──────────────────┘  │   as long as the press stays within `PressRect`.\n *  │       PressRect    o   │\n *  └────────────────────│───┘\n *          Out Region   └────── `PressRect`, which is expanded via the prop\n *                               `pressRectOffset`, allows presses to move\n *                               beyond `HitRect` while maintaining activation\n *                               and being eligible for a \"press\".\n *\n * # State Machine\n *\n * ┌───────────────┐ ◀──── RESPONDER_RELEASE\n * │ NOT_RESPONDER │\n * └───┬───────────┘ ◀──── RESPONDER_TERMINATED\n *     │\n *     │ RESPONDER_GRANT (HitRect)\n *     │\n *     ▼\n * ┌─────────────────────┐          ┌───────────────────┐              ┌───────────────────┐\n * │ RESPONDER_INACTIVE_ │  DELAY   │ RESPONDER_ACTIVE_ │  T + DELAY   │ RESPONDER_ACTIVE_ │\n * │ PRESS_IN            ├────────▶ │ PRESS_IN          ├────────────▶ │ LONG_PRESS_IN     │\n * └─┬───────────────────┘          └─┬─────────────────┘              └─┬─────────────────┘\n *   │           ▲                    │           ▲                      │           ▲\n *   │LEAVE_     │                    │LEAVE_     │                      │LEAVE_     │\n *   │PRESS_RECT │ENTER_              │PRESS_RECT │ENTER_                │PRESS_RECT │ENTER_\n *   │           │PRESS_RECT          │           │PRESS_RECT            │           │PRESS_RECT\n *   ▼           │                    ▼           │                      ▼           │\n * ┌─────────────┴───────┐          ┌─────────────┴─────┐              ┌─────────────┴─────┐\n * │ RESPONDER_INACTIVE_ │  DELAY   │ RESPONDER_ACTIVE_ │              │ RESPONDER_ACTIVE_ │\n * │ PRESS_OUT           ├────────▶ │ PRESS_OUT         │              │ LONG_PRESS_OUT    │\n * └─────────────────────┘          └───────────────────┘              └───────────────────┘\n *\n * T + DELAY => LONG_PRESS_DELAY + DELAY\n *\n * Not drawn are the side effects of each transition. The most important side\n * effect is the invocation of `onPress` and `onLongPress` that occur when a\n * responder is release while in the \"press in\" states.\n */\nexport default class Pressability {\n  _config: PressabilityConfig;\n  _eventHandlers: ?EventHandlers = null;\n  _hoverInDelayTimeout: ?TimeoutID = null;\n  _hoverOutDelayTimeout: ?TimeoutID = null;\n  _isHovered: boolean = false;\n  _longPressDelayTimeout: ?TimeoutID = null;\n  _pressDelayTimeout: ?TimeoutID = null;\n  _pressOutDelayTimeout: ?TimeoutID = null;\n  _responderID: ?number | React.ElementRef<HostComponent<mixed>> = null;\n  _responderRegion: ?$ReadOnly<{|\n    bottom: number,\n    left: number,\n    right: number,\n    top: number,\n  |}> = null;\n  _touchActivatePosition: ?$ReadOnly<{|\n    pageX: number,\n    pageY: number,\n  |}>;\n  _touchActivateTime: ?number;\n  _touchState: TouchState = 'NOT_RESPONDER';\n\n  constructor(config: PressabilityConfig) {\n    this.configure(config);\n  }\n\n  configure(config: PressabilityConfig): void {\n    this._config = config;\n  }\n\n  /**\n   * Resets any pending timers. This should be called on unmount.\n   */\n  reset(): void {\n    this._cancelHoverInDelayTimeout();\n    this._cancelHoverOutDelayTimeout();\n    this._cancelLongPressDelayTimeout();\n    this._cancelPressDelayTimeout();\n    this._cancelPressOutDelayTimeout();\n\n    // Ensure that, if any async event handlers are fired after unmount\n    // due to a race, we don't call any configured callbacks.\n    this._config = Object.freeze({});\n  }\n\n  /**\n   * Returns a set of props to spread into the interactive element.\n   */\n  getEventHandlers(): EventHandlers {\n    if (this._eventHandlers == null) {\n      this._eventHandlers = this._createEventHandlers();\n    }\n    return this._eventHandlers;\n  }\n\n  static setLongPressDeactivationDistance(distance: number): void {\n    longPressDeactivationDistance = distance;\n  }\n\n  _createEventHandlers(): EventHandlers {\n    const focusEventHandlers = {\n      onBlur: (event: BlurEvent): void => {\n        const {onBlur} = this._config;\n        if (onBlur != null) {\n          onBlur(event);\n        }\n      },\n      onFocus: (event: FocusEvent): void => {\n        const {onFocus} = this._config;\n        if (onFocus != null) {\n          onFocus(event);\n        }\n      },\n    };\n\n    const responderEventHandlers = {\n      onStartShouldSetResponder: (): boolean => {\n        const {disabled} = this._config;\n        if (disabled == null) {\n          const {onStartShouldSetResponder_DEPRECATED} = this._config;\n          return onStartShouldSetResponder_DEPRECATED == null\n            ? true\n            : onStartShouldSetResponder_DEPRECATED();\n        }\n        return !disabled;\n      },\n\n      onResponderGrant: (event: PressEvent): void | boolean => {\n        event.persist();\n\n        this._cancelPressOutDelayTimeout();\n\n        this._responderID = event.currentTarget;\n        this._touchState = 'NOT_RESPONDER';\n        this._receiveSignal('RESPONDER_GRANT', event);\n\n        const delayPressIn = normalizeDelay(this._config.delayPressIn);\n        if (delayPressIn > 0) {\n          this._pressDelayTimeout = setTimeout(() => {\n            this._receiveSignal('DELAY', event);\n          }, delayPressIn);\n        } else {\n          this._receiveSignal('DELAY', event);\n        }\n\n        const delayLongPress = normalizeDelay(\n          this._config.delayLongPress,\n          10,\n          DEFAULT_LONG_PRESS_DELAY_MS - delayPressIn,\n        );\n        this._longPressDelayTimeout = setTimeout(() => {\n          this._handleLongPress(event);\n        }, delayLongPress + delayPressIn);\n\n        return this._config.blockNativeResponder === true;\n      },\n\n      onResponderMove: (event: PressEvent): void => {\n        const {onPressMove} = this._config;\n        if (onPressMove != null) {\n          onPressMove(event);\n        }\n\n        // Region may not have finished being measured, yet.\n        const responderRegion = this._responderRegion;\n        if (responderRegion == null) {\n          return;\n        }\n\n        const touch = getTouchFromPressEvent(event);\n        if (touch == null) {\n          this._cancelLongPressDelayTimeout();\n          this._receiveSignal('LEAVE_PRESS_RECT', event);\n          return;\n        }\n\n        if (this._touchActivatePosition != null) {\n          const deltaX = this._touchActivatePosition.pageX - touch.pageX;\n          const deltaY = this._touchActivatePosition.pageY - touch.pageY;\n          if (Math.hypot(deltaX, deltaY) > longPressDeactivationDistance) {\n            this._cancelLongPressDelayTimeout();\n          }\n        }\n\n        if (this._isTouchWithinResponderRegion(touch, responderRegion)) {\n          this._receiveSignal('ENTER_PRESS_RECT', event);\n        } else {\n          this._cancelLongPressDelayTimeout();\n          this._receiveSignal('LEAVE_PRESS_RECT', event);\n        }\n      },\n\n      onResponderRelease: (event: PressEvent): void => {\n        this._receiveSignal('RESPONDER_RELEASE', event);\n      },\n\n      onResponderTerminate: (event: PressEvent): void => {\n        this._receiveSignal('RESPONDER_TERMINATED', event);\n      },\n\n      onResponderTerminationRequest: (): boolean => {\n        const {cancelable} = this._config;\n        if (cancelable == null) {\n          const {onResponderTerminationRequest_DEPRECATED} = this._config;\n          return onResponderTerminationRequest_DEPRECATED == null\n            ? true\n            : onResponderTerminationRequest_DEPRECATED();\n        }\n        return cancelable;\n      },\n\n      onClick: (event: PressEvent): void => {\n        // If event has `pointerType`, it was emitted from a PointerEvent and\n        // we should ignore it to avoid triggering `onPress` twice.\n        if (event?.nativeEvent?.hasOwnProperty?.('pointerType')) {\n          return;\n        }\n\n        // for non-pointer click events (e.g. accessibility clicks), we should only dispatch when we're the \"real\" target\n        // in particular, we shouldn't respond to clicks from nested pressables\n        if (event?.currentTarget !== event?.target) {\n          event?.stopPropagation();\n          return;\n        }\n\n        const {onPress, disabled} = this._config;\n        if (onPress != null && disabled !== true) {\n          onPress(event);\n        }\n      },\n    };\n\n    if (process.env.NODE_ENV === 'test') {\n      // We are setting this in order to find this node in ReactNativeTestTools\n      // $FlowFixMe[prop-missing]\n      responderEventHandlers.onStartShouldSetResponder.testOnly_pressabilityConfig =\n        () => this._config;\n    }\n\n    if (\n      ReactNativeFeatureFlags.shouldPressibilityUseW3CPointerEventsForHover()\n    ) {\n      const hoverPointerEvents = {\n        onPointerEnter: (undefined: void | (PointerEvent => void)),\n        onPointerLeave: (undefined: void | (PointerEvent => void)),\n      };\n      const {onHoverIn, onHoverOut} = this._config;\n      if (onHoverIn != null) {\n        hoverPointerEvents.onPointerEnter = (event: PointerEvent) => {\n          this._isHovered = true;\n          this._cancelHoverOutDelayTimeout();\n          if (onHoverIn != null) {\n            const delayHoverIn = normalizeDelay(this._config.delayHoverIn);\n            if (delayHoverIn > 0) {\n              event.persist();\n              this._hoverInDelayTimeout = setTimeout(() => {\n                onHoverIn(convertPointerEventToMouseEvent(event));\n              }, delayHoverIn);\n            } else {\n              onHoverIn(convertPointerEventToMouseEvent(event));\n            }\n          }\n        };\n      }\n      if (onHoverOut != null) {\n        hoverPointerEvents.onPointerLeave = (event: PointerEvent) => {\n          if (this._isHovered) {\n            this._isHovered = false;\n            this._cancelHoverInDelayTimeout();\n            if (onHoverOut != null) {\n              const delayHoverOut = normalizeDelay(this._config.delayHoverOut);\n              if (delayHoverOut > 0) {\n                event.persist();\n                this._hoverOutDelayTimeout = setTimeout(() => {\n                  onHoverOut(convertPointerEventToMouseEvent(event));\n                }, delayHoverOut);\n              } else {\n                onHoverOut(convertPointerEventToMouseEvent(event));\n              }\n            }\n          }\n        };\n      }\n      return {\n        ...focusEventHandlers,\n        ...responderEventHandlers,\n        ...hoverPointerEvents,\n      };\n    } else {\n      const mouseEventHandlers =\n        Platform.OS === 'ios' || Platform.OS === 'android'\n          ? null\n          : {\n              onMouseEnter: (event: MouseEvent): void => {\n                if (isHoverEnabled()) {\n                  this._isHovered = true;\n                  this._cancelHoverOutDelayTimeout();\n                  const {onHoverIn} = this._config;\n                  if (onHoverIn != null) {\n                    const delayHoverIn = normalizeDelay(\n                      this._config.delayHoverIn,\n                    );\n                    if (delayHoverIn > 0) {\n                      event.persist();\n                      this._hoverInDelayTimeout = setTimeout(() => {\n                        onHoverIn(event);\n                      }, delayHoverIn);\n                    } else {\n                      onHoverIn(event);\n                    }\n                  }\n                }\n              },\n\n              onMouseLeave: (event: MouseEvent): void => {\n                if (this._isHovered) {\n                  this._isHovered = false;\n                  this._cancelHoverInDelayTimeout();\n                  const {onHoverOut} = this._config;\n                  if (onHoverOut != null) {\n                    const delayHoverOut = normalizeDelay(\n                      this._config.delayHoverOut,\n                    );\n                    if (delayHoverOut > 0) {\n                      event.persist();\n                      this._hoverInDelayTimeout = setTimeout(() => {\n                        onHoverOut(event);\n                      }, delayHoverOut);\n                    } else {\n                      onHoverOut(event);\n                    }\n                  }\n                }\n              },\n            };\n      return {\n        ...focusEventHandlers,\n        ...responderEventHandlers,\n        ...mouseEventHandlers,\n      };\n    }\n  }\n\n  /**\n   * Receives a state machine signal, performs side effects of the transition\n   * and stores the new state. Validates the transition as well.\n   */\n  _receiveSignal(signal: TouchSignal, event: PressEvent): void {\n    // Especially on iOS, not all events have timestamps associated.\n    // For telemetry purposes, this doesn't matter too much, as long as *some* do.\n    // Since the native timestamp is integral for logging telemetry, just skip\n    // events if they don't have a timestamp attached.\n    if (event.nativeEvent.timestamp != null) {\n      PressabilityPerformanceEventEmitter.emitEvent(() => {\n        return {\n          signal,\n          nativeTimestamp: event.nativeEvent.timestamp,\n        };\n      });\n    }\n\n    const prevState = this._touchState;\n    const nextState = Transitions[prevState]?.[signal];\n    if (this._responderID == null && signal === 'RESPONDER_RELEASE') {\n      return;\n    }\n    invariant(\n      nextState != null && nextState !== 'ERROR',\n      'Pressability: Invalid signal `%s` for state `%s` on responder: %s',\n      signal,\n      prevState,\n      typeof this._responderID === 'number'\n        ? this._responderID\n        : '<<host component>>',\n    );\n    if (prevState !== nextState) {\n      this._performTransitionSideEffects(prevState, nextState, signal, event);\n      this._touchState = nextState;\n    }\n  }\n\n  /**\n   * Performs a transition between touchable states and identify any activations\n   * or deactivations (and callback invocations).\n   */\n  _performTransitionSideEffects(\n    prevState: TouchState,\n    nextState: TouchState,\n    signal: TouchSignal,\n    event: PressEvent,\n  ): void {\n    if (isTerminalSignal(signal)) {\n      this._touchActivatePosition = null;\n      this._cancelLongPressDelayTimeout();\n    }\n\n    const isInitialTransition =\n      prevState === 'NOT_RESPONDER' &&\n      nextState === 'RESPONDER_INACTIVE_PRESS_IN';\n\n    const isActivationTransition =\n      !isActivationSignal(prevState) && isActivationSignal(nextState);\n\n    if (isInitialTransition || isActivationTransition) {\n      this._measureResponderRegion();\n    }\n\n    if (isPressInSignal(prevState) && signal === 'LONG_PRESS_DETECTED') {\n      const {onLongPress} = this._config;\n      if (onLongPress != null) {\n        onLongPress(event);\n      }\n    }\n\n    const isPrevActive = isActiveSignal(prevState);\n    const isNextActive = isActiveSignal(nextState);\n\n    if (!isPrevActive && isNextActive) {\n      this._activate(event);\n    } else if (isPrevActive && !isNextActive) {\n      this._deactivate(event);\n    }\n\n    if (isPressInSignal(prevState) && signal === 'RESPONDER_RELEASE') {\n      // If we never activated (due to delays), activate and deactivate now.\n      if (!isNextActive && !isPrevActive) {\n        this._activate(event);\n        this._deactivate(event);\n      }\n      const {onLongPress, onPress, android_disableSound} = this._config;\n      if (onPress != null) {\n        const isPressCanceledByLongPress =\n          onLongPress != null &&\n          prevState === 'RESPONDER_ACTIVE_LONG_PRESS_IN' &&\n          this._shouldLongPressCancelPress();\n        if (!isPressCanceledByLongPress) {\n          if (Platform.OS === 'android' && android_disableSound !== true) {\n            SoundManager.playTouchSound();\n          }\n          onPress(event);\n        }\n      }\n    }\n\n    this._cancelPressDelayTimeout();\n  }\n\n  _activate(event: PressEvent): void {\n    const {onPressIn} = this._config;\n    const {pageX, pageY} = getTouchFromPressEvent(event);\n    this._touchActivatePosition = {pageX, pageY};\n    this._touchActivateTime = Date.now();\n    if (onPressIn != null) {\n      onPressIn(event);\n    }\n  }\n\n  _deactivate(event: PressEvent): void {\n    const {onPressOut} = this._config;\n    if (onPressOut != null) {\n      const minPressDuration = normalizeDelay(\n        this._config.minPressDuration,\n        0,\n        DEFAULT_MIN_PRESS_DURATION,\n      );\n      const pressDuration = Date.now() - (this._touchActivateTime ?? 0);\n      const delayPressOut = Math.max(\n        minPressDuration - pressDuration,\n        normalizeDelay(this._config.delayPressOut),\n      );\n      if (delayPressOut > 0) {\n        event.persist();\n        this._pressOutDelayTimeout = setTimeout(() => {\n          onPressOut(event);\n        }, delayPressOut);\n      } else {\n        onPressOut(event);\n      }\n    }\n    this._touchActivateTime = null;\n  }\n\n  _measureResponderRegion(): void {\n    if (this._responderID == null) {\n      return;\n    }\n\n    if (typeof this._responderID === 'number') {\n      UIManager.measure(this._responderID, this._measureCallback);\n    } else {\n      this._responderID.measure(this._measureCallback);\n    }\n  }\n\n  _measureCallback = (\n    left: number,\n    top: number,\n    width: number,\n    height: number,\n    pageX: number,\n    pageY: number,\n  ) => {\n    if (!left && !top && !width && !height && !pageX && !pageY) {\n      return;\n    }\n    this._responderRegion = {\n      bottom: pageY + height,\n      left: pageX,\n      right: pageX + width,\n      top: pageY,\n    };\n  };\n\n  _isTouchWithinResponderRegion(\n    touch: $PropertyType<PressEvent, 'nativeEvent'>,\n    responderRegion: $ReadOnly<{|\n      bottom: number,\n      left: number,\n      right: number,\n      top: number,\n    |}>,\n  ): boolean {\n    const hitSlop = normalizeRect(this._config.hitSlop);\n    const pressRectOffset = normalizeRect(this._config.pressRectOffset);\n\n    let regionBottom = responderRegion.bottom;\n    let regionLeft = responderRegion.left;\n    let regionRight = responderRegion.right;\n    let regionTop = responderRegion.top;\n\n    if (hitSlop != null) {\n      if (hitSlop.bottom != null) {\n        regionBottom += hitSlop.bottom;\n      }\n      if (hitSlop.left != null) {\n        regionLeft -= hitSlop.left;\n      }\n      if (hitSlop.right != null) {\n        regionRight += hitSlop.right;\n      }\n      if (hitSlop.top != null) {\n        regionTop -= hitSlop.top;\n      }\n    }\n\n    regionBottom +=\n      pressRectOffset?.bottom ?? DEFAULT_PRESS_RECT_OFFSETS.bottom;\n    regionLeft -= pressRectOffset?.left ?? DEFAULT_PRESS_RECT_OFFSETS.left;\n    regionRight += pressRectOffset?.right ?? DEFAULT_PRESS_RECT_OFFSETS.right;\n    regionTop -= pressRectOffset?.top ?? DEFAULT_PRESS_RECT_OFFSETS.top;\n\n    return (\n      touch.pageX > regionLeft &&\n      touch.pageX < regionRight &&\n      touch.pageY > regionTop &&\n      touch.pageY < regionBottom\n    );\n  }\n\n  _handleLongPress(event: PressEvent): void {\n    if (\n      this._touchState === 'RESPONDER_ACTIVE_PRESS_IN' ||\n      this._touchState === 'RESPONDER_ACTIVE_LONG_PRESS_IN'\n    ) {\n      this._receiveSignal('LONG_PRESS_DETECTED', event);\n    }\n  }\n\n  _shouldLongPressCancelPress(): boolean {\n    return (\n      this._config.onLongPressShouldCancelPress_DEPRECATED == null ||\n      this._config.onLongPressShouldCancelPress_DEPRECATED()\n    );\n  }\n\n  _cancelHoverInDelayTimeout(): void {\n    if (this._hoverInDelayTimeout != null) {\n      clearTimeout(this._hoverInDelayTimeout);\n      this._hoverInDelayTimeout = null;\n    }\n  }\n\n  _cancelHoverOutDelayTimeout(): void {\n    if (this._hoverOutDelayTimeout != null) {\n      clearTimeout(this._hoverOutDelayTimeout);\n      this._hoverOutDelayTimeout = null;\n    }\n  }\n\n  _cancelLongPressDelayTimeout(): void {\n    if (this._longPressDelayTimeout != null) {\n      clearTimeout(this._longPressDelayTimeout);\n      this._longPressDelayTimeout = null;\n    }\n  }\n\n  _cancelPressDelayTimeout(): void {\n    if (this._pressDelayTimeout != null) {\n      clearTimeout(this._pressDelayTimeout);\n      this._pressDelayTimeout = null;\n    }\n  }\n\n  _cancelPressOutDelayTimeout(): void {\n    if (this._pressOutDelayTimeout != null) {\n      clearTimeout(this._pressOutDelayTimeout);\n      this._pressOutDelayTimeout = null;\n    }\n  }\n}\n\nfunction normalizeDelay(\n  delay: ?number,\n  min: number = 0,\n  fallback: number = 0,\n): number {\n  return Math.max(min, delay ?? fallback);\n}\n\nconst getTouchFromPressEvent = (event: PressEvent) => {\n  const {changedTouches, touches} = event.nativeEvent;\n\n  if (touches != null && touches.length > 0) {\n    return touches[0];\n  }\n  if (changedTouches != null && changedTouches.length > 0) {\n    return changedTouches[0];\n  }\n  return event.nativeEvent;\n};\n\nfunction convertPointerEventToMouseEvent(input: PointerEvent): MouseEvent {\n  const {clientX, clientY} = input.nativeEvent;\n  return {\n    ...input,\n    nativeEvent: {\n      clientX,\n      clientY,\n      pageX: clientX,\n      pageY: clientY,\n      timestamp: input.timeStamp,\n    },\n  };\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport type {ColorValue} from '../StyleSheet/StyleSheet';\n\nimport View from '../Components/View/View';\nimport normalizeColor from '../StyleSheet/normalizeColor';\nimport {type RectOrSize, normalizeRect} from '../StyleSheet/Rect';\nimport * as React from 'react';\n\ntype Props = $ReadOnly<{|\n  color: ColorValue,\n  hitSlop: ?RectOrSize,\n|}>;\n\n/**\n * Displays a debug overlay to visualize press targets when enabled via the\n * React Native Inspector. Calls to this module should be guarded by `__DEV__`,\n * for example:\n *\n *   return (\n *     <View>\n *       {children}\n *       {__DEV__ ? (\n *         <PressabilityDebugView color=\"...\" hitSlop={props.hitSlop} />\n *       ) : null}\n *     </View>\n *   );\n *\n */\nexport function PressabilityDebugView(props: Props): React.Node {\n  if (__DEV__) {\n    if (isEnabled()) {\n      const normalizedColor = normalizeColor(props.color);\n      if (typeof normalizedColor !== 'number') {\n        return null;\n      }\n      const baseColor =\n        '#' + (normalizedColor ?? 0).toString(16).padStart(8, '0');\n      const hitSlop = normalizeRect(props.hitSlop);\n      return (\n        <View\n          pointerEvents=\"none\"\n          style={\n            // eslint-disable-next-line react-native/no-inline-styles\n            {\n              backgroundColor: baseColor.slice(0, -2) + '0F', // 15%\n              borderColor: baseColor.slice(0, -2) + '55', // 85%\n              borderStyle: 'dashed',\n              borderWidth: 1,\n              bottom: -(hitSlop?.bottom ?? 0),\n              left: -(hitSlop?.left ?? 0),\n              position: 'absolute',\n              right: -(hitSlop?.right ?? 0),\n              top: -(hitSlop?.top ?? 0),\n            }\n          }\n        />\n      );\n    }\n  }\n  return null;\n}\n\nlet isDebugEnabled = false;\n\nexport function isEnabled(): boolean {\n  if (__DEV__) {\n    return isDebugEnabled;\n  }\n  return false;\n}\n\nexport function setEnabled(value: boolean): void {\n  if (__DEV__) {\n    isDebugEnabled = value;\n  }\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport {type PressabilityTouchSignal as TouchSignal} from './PressabilityTypes.js';\n\nexport type PressabilityPerformanceEvent = $ReadOnly<{|\n  signal: TouchSignal,\n  nativeTimestamp: number,\n|}>;\nexport type PressabilityPerformanceEventListener =\n  PressabilityPerformanceEvent => void;\n\nclass PressabilityPerformanceEventEmitter {\n  _listeners: Array<PressabilityPerformanceEventListener> = [];\n\n  constructor() {}\n\n  addListener(listener: PressabilityPerformanceEventListener): void {\n    this._listeners.push(listener);\n  }\n\n  removeListener(listener: PressabilityPerformanceEventListener): void {\n    const index = this._listeners.indexOf(listener);\n    if (index > -1) {\n      this._listeners.splice(index, 1);\n    }\n  }\n\n  emitEvent(constructEvent: () => PressabilityPerformanceEvent): void {\n    if (this._listeners.length === 0) {\n      return;\n    }\n\n    const event = constructEvent();\n    this._listeners.forEach(listener => listener(event));\n  }\n}\n\nconst PressabilityPerformanceEventEmitterSingleton: PressabilityPerformanceEventEmitter =\n  new PressabilityPerformanceEventEmitter();\n\nexport default PressabilityPerformanceEventEmitterSingleton;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport Pressability, {\n  type EventHandlers,\n  type PressabilityConfig,\n} from './Pressability';\nimport {useEffect, useRef} from 'react';\n\n/**\n * Creates a persistent instance of `Pressability` that automatically configures\n * itself and resets. Accepts null `config` to support lazy initialization. Once\n * initialized, will not un-initialize until the component has been unmounted.\n *\n * In order to use `usePressability`, do the following:\n *\n *   const config = useMemo(...);\n *   const eventHandlers = usePressability(config);\n *   const pressableView = <View {...eventHandlers} />;\n *\n */\nexport default function usePressability(\n  config: ?PressabilityConfig,\n): ?EventHandlers {\n  const pressabilityRef = useRef<?Pressability>(null);\n  if (config != null && pressabilityRef.current == null) {\n    pressabilityRef.current = new Pressability(config);\n  }\n  const pressability = pressabilityRef.current;\n\n  // On the initial mount, this is a no-op. On updates, `pressability` will be\n  // re-configured to use the new configuration.\n  useEffect(() => {\n    if (config != null && pressability != null) {\n      pressability.configure(config);\n    }\n  }, [config, pressability]);\n\n  // On unmount, reset pending state and timers inside `pressability`. This is\n  // a separate effect because we do not want to reset when `config` changes.\n  useEffect(() => {\n    if (pressability != null) {\n      return () => {\n        pressability.reset();\n      };\n    }\n  }, [pressability]);\n\n  return pressability == null ? null : pressability.getEventHandlers();\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict\n */\n\n'use strict';\n\nconst Promise = require('promise/setimmediate/es6-extensions');\n\nrequire('promise/setimmediate/finally');\n\nif (__DEV__) {\n  require('promise/setimmediate/rejection-tracking').enable(\n    require('./promiseRejectionTrackingOptions').default,\n  );\n}\n\nmodule.exports = Promise;\n"],"names":["LogBox","_interopRequireDefault","require","install","uninstall","isInstalled","ignoreLogs","patterns","ignoreAllLogs","value","clearAllLogs","addLog","log","addException","error","exports","_ModalInjection$unsta","_NativeEventEmitter","_ModalInjection","_NativeModalManager","_RCTModalHostViewNativeComponent","_virtualizedLists","_jsxRuntime","_callSuper","t","o","e","_getPrototypeOf2","default","_possibleConstructorReturn2","_isNativeReflectConstruct","Reflect","construct","constructor","apply","Boolean","prototype","valueOf","call","ScrollView","View","I18nManager","RootTagContext","StyleSheet","Platform","React","ModalEventEmitter","OS","NativeModalManager","NativeEventEmitter","uniqueModalIdentifier","Modal","_React$Component","props","_this","_classCallCheck2","_identifier","state","isRendered","visible","_inherits2","_createClass2","key","_this2","this","_eventSubscription","addListener","event","setState","modalID","onDismiss","remove","prevProps","_this3","_shouldShowModal","containerStyles","backgroundColor","transparent","animationType","presentationStyle","innerChildren","children","jsx","hardwareAccelerated","onRequestClose","onShow","statusBarTranslucent","identifier","style","styles","modal","onStartShouldSetResponder","_shouldSetResponder","supportedOrientations","onOrientationChange","testID","VirtualizedListContextResetter","Context","Provider","container","collapsable","Component","defaultProps","contextType","side","getConstants","isRTL","create","position","_defineProperty2","ExportedModal","ModalInjection","unstable_Modal","module","r","__esModule","_getRequireWildcardCache","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","i","set","_interopRequireWildcard","WeakMap","keys","forEach","_exportNames","enumerable","RCTModalHostViewNativeComponent","_ReactNativeStyleAttributes","_ViewConfigIgnore","directEventTypes","topAccessibilityAction","registrationName","topAccessibilityTap","topMagicTap","topAccessibilityEscape","topLayout","onGestureHandlerEvent","DynamicallyInjectedByGestureHandler","onGestureHandlerStateChange","validAttributesForNonEventProps","accessible","accessibilityActions","accessibilityLabel","accessibilityHint","accessibilityLanguage","accessibilityValue","accessibilityViewIsModal","accessibilityElementsHidden","accessibilityIgnoresInvertColors","process","backfaceVisibility","opacity","shadowColor","shadowOffset","diff","shadowOpacity","shadowRadius","needsOffscreenAlphaCompositing","overflow","shouldRasterizeIOS","transform","transformOrigin","accessibilityRole","accessibilityState","nativeID","pointerEvents","removeClippedSubviews","role","borderRadius","borderColor","borderCurve","borderWidth","borderStyle","hitSlop","borderTopWidth","borderTopColor","borderRightWidth","borderRightColor","borderBottomWidth","borderBottomColor","borderLeftWidth","borderLeftColor","borderStartWidth","borderStartColor","borderEndWidth","borderEndColor","borderTopLeftRadius","borderTopRightRadius","borderTopStartRadius","borderTopEndRadius","borderBottomLeftRadius","borderBottomRightRadius","borderBottomStartRadius","borderBottomEndRadius","borderEndEndRadius","borderEndStartRadius","borderStartEndRadius","borderStartStartRadius","display","zIndex","top","right","start","end","bottom","left","inset","insetBlock","insetBlockEnd","insetBlockStart","insetInline","insetInlineEnd","insetInlineStart","width","height","minWidth","maxWidth","minHeight","maxHeight","margin","marginBlock","marginBlockEnd","marginBlockStart","marginBottom","marginEnd","marginHorizontal","marginInline","marginInlineEnd","marginInlineStart","marginLeft","marginRight","marginStart","marginTop","marginVertical","padding","paddingBlock","paddingBlockEnd","paddingBlockStart","paddingBottom","paddingEnd","paddingHorizontal","paddingInline","paddingInlineEnd","paddingInlineStart","paddingLeft","paddingRight","paddingStart","paddingTop","paddingVertical","flex","flexGrow","rowGap","columnGap","gap","flexShrink","flexBasis","flexDirection","flexWrap","justifyContent","alignItems","alignSelf","alignContent","aspectRatio","direction","ReactNativeStyleAttributes","experimental_layoutConformance","validAttributesForEventProps","ConditionallyIgnoredEventHandlers","onLayout","onMagicTap","onAccessibilityAction","onAccessibilityEscape","onAccessibilityTap","onMoveShouldSetResponder","onMoveShouldSetResponderCapture","onStartShouldSetResponderCapture","onResponderGrant","onResponderReject","onResponderStart","onResponderEnd","onResponderRelease","onResponderMove","onResponderTerminate","onResponderTerminationRequest","onShouldBlockNativeResponder","onTouchStart","onTouchMove","onTouchEnd","onTouchCancel","onClick","onPointerUp","onPointerDown","onPointerCancel","onPointerEnter","onPointerMove","onPointerLeave","onPointerOver","onPointerOut","onGotPointerCapture","onLostPointerCapture","PlatformBaseViewConfigIos","bubblingEventTypes","topPress","phasedRegistrationNames","bubbled","captured","topChange","topFocus","topBlur","topSubmitEditing","topEndEditing","topKeyPress","topTouchStart","topTouchMove","topTouchCancel","topTouchEnd","topClick","topPointerCancel","topPointerDown","topPointerMove","topPointerUp","topPointerEnter","skipBubbling","topPointerLeave","topPointerOver","topPointerOut","topGotPointerCapture","topLostPointerCapture","validAttributes","assign","name","viewConfigProvider","getRuntimeConfig","invariant","UIManager","getViewManagerConfig","hasNativeViewConfig","FallbackNativeComponent","displayName","runtimeConfigProvider","undefined","_getRuntimeConfig2","native","_getNativeComponentAttributes","_UIManager","ReactNativeViewConfigRegistry","_verifyComponentAttributeEquivalence","StaticViewConfigValidator","_ViewConfig","_invariant","register","_getRuntimeConfig","viewConfig","_ref","global","RN$Bridgeless","strict","verify","createViewConfig","getNativeComponentAttributes","nativeViewConfig","staticViewConfig","validationOutput","validate","type","console","stringifyValidationResult","verifyComponentAttributeEquivalence","hasNativeComponent","componentNameToExists","__nativeComponentRegistry__hasComponent","Map","PlatformBaseViewConfig","BaseViewConfig","validationResult","differences","concat","_toConsumableArray2","map","difference","path","join","accumulateDifferences","uiViewClassName","length","nativeObject","staticObject","nativeKey","nativeValue","staticValue","nativeValueIfObject","ifObject","staticValueIfObject","push","pop","staticKey","isIgnored","Array","isArray","partialViewConfig","Commands","composeIndexers","_PlatformBaseViewConfig","maybeA","maybeB","object","ignoredViewConfigProps","add","_Platform","WeakSet","_NativeDevSettings","NativeDevSettings","_NativeDialogManagerAndroid","NativeDialogManagerAndroid","_NativeRedBox","NativeRedBox","_NativeSourceCode","NativeSourceCode","_slicedToArray2","FormData","_parts","filter","_ref3","_ref5","_ref6","headers","encodeURI","fieldName","string","String","_NativeNetworkingIOS","NativeNetworkingIOS","_RCTDeviceEventEmitter","_convertRequestBody","RCTNetworking","eventType","listener","context","RCTDeviceEventEmitter","sendRequest","method","trackingName","url","data","responseType","incrementalUpdates","timeout","callback","withCredentials","body","convertRequestBody","abortRequest","requestId","clearCookies","_get2","_eventTargetShim","BlobManager","GlobalPerformanceLogger","base64","isAvailable","addNetworkingHandler","SUPPORTED_RESPONSE_TYPES","arraybuffer","ArrayBuffer","blob","Blob","document","json","text","REQUEST_EVENTS","XHR_EVENTS","XMLHttpRequestEventTarget","arguments","EventTarget","XMLHttpRequest","_ref2","UNSENT","OPENED","HEADERS_RECEIVED","LOADING","DONE","readyState","status","upload","_aborted","_hasError","_method","_perfKey","_response","_url","_timedOut","_trackingName","_incrementalEvents","_performanceLogger","_reset","responseHeaders","responseURL","_requestId","_cachedResponse","_headers","_responseType","_sent","_lowerCaseResponseHeaders","_clearSubscriptions","Error","warn","toByteArray","buffer","createFromOptions","createFromParts","JSON","parse","_","_interceptor","requestSent","progress","total","dispatchEvent","lengthComputable","loaded","stopTimespan","setResponseHeaders","setReadyState","responseReceived","response","dataReceived","responseText","__didReceiveDataProgress","timeOutError","loadingFailed","loadingFinished","_subscriptions","sub","unsortedHeaders","rawHeaderName","headerValue","lowerHeaderName","toLowerCase","header","upperHeaderName","toUpperCase","values","sort","b","performanceLogger","async","incrementalEvents","onreadystatechange","onprogress","args","__didUploadProgress","__didReceiveResponse","__didReceiveData","__didReceiveIncrementalData","__didCompleteResponse","nativeResponseType","doSend","friendlyName","startTimespan","__didCreateRequest","bind","reduce","lcaseHeaders","headerName","newState","interceptor","binaryToBase64","formData","getParts","isView","fetch","Headers","Request","Response","_NativeJSCSamplingProfiler","NativeJSCSamplingProfiler","SamplingProfiler","poke","token","result","pokeSamplingProfiler","toString","operationComplete","eventName","cookie","_asyncCookie","isEnabled","eventNameString","nativeTraceBeginAsyncSection","TRACE_TAG_REACT_APPS","nativeTraceBeginSection","nativeTraceCounter","nativeTraceEndAsyncSection","nativeTraceEndSection","_doEnable","nativeTraceIsTracing","__RCTProfileIsProfiling","_NativePermissionsAndroid","NativePermissionsAndroid","_request","_requestPermission","PERMISSION_REQUEST_RESULT","freeze","GRANTED","DENIED","NEVER_ASK_AGAIN","PERMISSIONS","READ_CALENDAR","WRITE_CALENDAR","CAMERA","READ_CONTACTS","WRITE_CONTACTS","GET_ACCOUNTS","ACCESS_FINE_LOCATION","ACCESS_COARSE_LOCATION","ACCESS_BACKGROUND_LOCATION","RECORD_AUDIO","READ_PHONE_STATE","CALL_PHONE","READ_CALL_LOG","WRITE_CALL_LOG","ADD_VOICEMAIL","READ_VOICEMAIL","WRITE_VOICEMAIL","USE_SIP","PROCESS_OUTGOING_CALLS","BODY_SENSORS","BODY_SENSORS_BACKGROUND","SEND_SMS","RECEIVE_SMS","READ_SMS","RECEIVE_WAP_PUSH","RECEIVE_MMS","READ_EXTERNAL_STORAGE","READ_MEDIA_IMAGES","READ_MEDIA_VIDEO","READ_MEDIA_AUDIO","READ_MEDIA_VISUAL_USER_SELECTED","WRITE_EXTERNAL_STORAGE","BLUETOOTH_CONNECT","BLUETOOTH_SCAN","BLUETOOTH_ADVERTISE","ACCESS_MEDIA_LOCATION","ACCEPT_HANDOVER","ACTIVITY_RECOGNITION","ANSWER_PHONE_CALLS","READ_PHONE_NUMBERS","UWB_RANGING","POST_NOTIFICATIONS","NEARBY_WIFI_DEVICES","PermissionsAndroid","RESULTS","permission","Promise","resolve","checkPermission","_asyncToGenerator2","rationale","request","_x","_x2","shouldShowRequestPermissionRationale","reject","options","showAlert","requestPermission","_x3","_x4","permissions","requestMultiplePermissions","PermissionsAndroidInstance","window","createElement","lastTouchTimestamp","disableHover","Date","now","addEventListener","_SoundManager","_ReactNativeFeatureFlags","_Rect","_HoverState","_PressabilityPerformanceEventEmitter","Transitions","NOT_RESPONDER","DELAY","RESPONDER_GRANT","RESPONDER_RELEASE","RESPONDER_TERMINATED","ENTER_PRESS_RECT","LEAVE_PRESS_RECT","LONG_PRESS_DETECTED","RESPONDER_INACTIVE_PRESS_IN","RESPONDER_INACTIVE_PRESS_OUT","RESPONDER_ACTIVE_PRESS_IN","RESPONDER_ACTIVE_PRESS_OUT","RESPONDER_ACTIVE_LONG_PRESS_IN","RESPONDER_ACTIVE_LONG_PRESS_OUT","ERROR","isActiveSignal","signal","isActivationSignal","isPressInSignal","DEFAULT_PRESS_RECT_OFFSETS","longPressDeactivationDistance","Pressability","config","_eventHandlers","_hoverInDelayTimeout","_hoverOutDelayTimeout","_isHovered","_longPressDelayTimeout","_pressDelayTimeout","_pressOutDelayTimeout","_responderID","_responderRegion","_touchState","_measureCallback","pageX","pageY","configure","_config","_cancelHoverInDelayTimeout","_cancelHoverOutDelayTimeout","_cancelLongPressDelayTimeout","_cancelPressDelayTimeout","_cancelPressOutDelayTimeout","_createEventHandlers","focusEventHandlers","onBlur","onFocus","responderEventHandlers","disabled","onStartShouldSetResponder_DEPRECATED","persist","currentTarget","_receiveSignal","delayPressIn","normalizeDelay","setTimeout","delayLongPress","_handleLongPress","blockNativeResponder","onPressMove","responderRegion","touch","getTouchFromPressEvent","_touchActivatePosition","deltaX","deltaY","Math","hypot","_isTouchWithinResponderRegion","cancelable","onResponderTerminationRequest_DEPRECATED","_event$nativeEvent","nativeEvent","target","_this2$_config","onPress","stopPropagation","ReactNativeFeatureFlags","shouldPressibilityUseW3CPointerEventsForHover","hoverPointerEvents","_this$_config","onHoverIn","onHoverOut","delayHoverIn","convertPointerEventToMouseEvent","delayHoverOut","mouseEventHandlers","onMouseEnter","isHoverEnabled","onMouseLeave","_Transitions$prevStat","timestamp","PressabilityPerformanceEventEmitter","emitEvent","nativeTimestamp","prevState","nextState","_performTransitionSideEffects","isTerminalSignal","isInitialTransition","isActivationTransition","_measureResponderRegion","onLongPress","isPrevActive","isNextActive","_activate","_deactivate","_this$_config2","android_disableSound","_shouldLongPressCancelPress","SoundManager","playTouchSound","onPressIn","_getTouchFromPressEve","_touchActivateTime","onPressOut","_this$_touchActivateT","minPressDuration","pressDuration","delayPressOut","max","measure","_pressRectOffset$bott","_pressRectOffset$left","_pressRectOffset$righ","_pressRectOffset$top","normalizeRect","pressRectOffset","regionBottom","regionLeft","regionRight","regionTop","onLongPressShouldCancelPress_DEPRECATED","clearTimeout","distance","delay","min","fallback","_event$nativeEvent2","changedTouches","touches","input","_input$nativeEvent","clientX","clientY","timeStamp","__DEV__","PressabilityPerformanceEventEmitterSingleton","_listeners","index","indexOf","splice","constructEvent","pressabilityRef","useRef","current","pressability","useEffect","reset","getEventHandlers","_Pressability","_react"],"sourceRoot":""}