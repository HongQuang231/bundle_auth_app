{"version":3,"file":"src_hooks_apiHooks_useReviewTicketServices_tsx-webpack_sharing_consume_default_react-native-w-9a5aa0.chunk.bundle","mappings":"kRAAA,IAAAA,EAAAC,EAAA,OACAC,EAAAD,EAAA,OAE8BE,EAAAA,kBAAG,WAC/B,IAAMC,GAAe,EAAAC,EAAAA,mBACrB,OAAO,EAAAC,EAAAA,sBAAqBF,EAC9B,C,wICNAG,EAAAN,EAAA,MAEiCE,EAAAA,qBAAG,SAACC,GAAiB,MAAM,CACpDI,uBAAqBC,GAAA,EAAAC,EAAAC,UAAA,UAACC,GAC1B,IACE,IAAMC,EAAW,kCAAkCD,aAC7CE,QAAaV,EAAa,CAC9BW,KAAK,EAAAC,EAAAA,aAAYC,SAAWJ,EAC5BK,OAAQ,MACRC,QAAS,CACP,eAAgB,sBAGpB,OAAOC,QAAQC,QAAY,MAAJP,OAAI,EAAJA,EAAMA,KAC/B,CAAE,MAAOQ,GACPF,QAAQG,OAAOD,EACjB,CACF,IAAC,SAAAE,GAAA,OAAAf,EAAAgB,MAAA,KAAAC,UAAA,GAEKC,aAAWC,GAAA,EAAAlB,EAAAC,UAAA,UAACkB,EAAWC,GAE3B,IACE,IAAMhB,QAAaV,EAAa,CAC9BW,KAAK,EAAAC,EAAAA,aAAYC,SAHJ,8DAIbC,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAChBY,cAAe,UAAYD,GAE7BD,KAAMG,KAAKC,UAAUJ,KAEvB,OAAOT,QAAQC,QAAY,MAAJP,OAAI,EAAJA,EAAMA,KAC/B,CAAE,MAAOQ,GACPF,QAAQG,OAAOD,EACjB,CACF,IAAC,SAAAY,EAAAC,GAAA,OAAAP,EAAAH,MAAA,KAAAC,UAAA,GAEKU,wBAAsBC,GAAA,EAAA3B,EAAAC,UAAA,UAAC2B,EAAYR,GACvC,IACE,IAAMjB,EAAW,2CAA6CyB,EACxDxB,QAAaV,EAAa,CAC9BW,KAAK,EAAAC,EAAAA,aAAYC,SAAWJ,EAC5BK,OAAQ,MACRC,QAAS,CACP,eAAgB,mBAChBY,cAAe,UAAYD,KAG/B,OAAOV,QAAQC,QAAY,MAAJP,OAAI,EAAJA,EAAMA,KAC/B,CAAE,MAAOQ,GACPF,QAAQG,OAAOD,EACjB,CACF,IAAC,SAAAiB,EAAAC,GAAA,OAAAH,EAAAZ,MAAA,KAAAC,UAAA,GAEKe,mBAAiBC,GAAA,EAAAhC,EAAAC,UAAA,UAAC2B,EAAYR,GAClC,IACE,IAAMjB,EAAW,6BAA+ByB,EAC1CxB,QAAaV,EAAa,CAC9BW,KAAK,EAAAC,EAAAA,aAAYC,SAAWJ,EAC5BK,OAAQ,MACRC,QAAS,CACP,eAAgB,mBAChBY,cAAe,UAAYD,KAG/B,OAAOV,QAAQC,QAAY,MAAJP,OAAI,EAAJA,EAAMA,KAC/B,CAAE,MAAOQ,GACPF,QAAQG,OAAOD,EACjB,CACF,IAAC,SAAAqB,EAAAC,GAAA,OAAAF,EAAAjB,MAAA,KAAAC,UAAA,GAEKmB,gBAAcC,GAAA,EAAApC,EAAAC,UAAA,UAACC,EAAkBkB,GACrC,IACE,IAAMjB,EACJ,sDAAwDD,EACpDE,QAAaV,EAAa,CAC9BW,KAAK,EAAAC,EAAAA,aAAYC,SAAWJ,EAC5BK,OAAQ,MACRC,QAAS,CACP,eAAgB,mBAChBY,cAAe,UAAYD,KAG/B,OAAOV,QAAQC,QAAY,MAAJP,OAAI,EAAJA,EAAMA,KAC/B,CAAE,MAAOQ,GACPyB,QAAQC,IAAI,sBAAuB1B,GAEnCF,QAAQG,OAAOD,EACjB,CACF,IAAC,SAAA2B,EAAAC,GAAA,OAAAJ,EAAArB,MAAA,KAAAC,UAAA,GAEKyB,qBAAmBC,GAAA,EAAA1C,EAAAC,UAAA,UAAC0C,EAAavB,GACrC,IAAK,IAADwB,EACIzC,EACJ,sDACA,IAAI0C,gBAAgBF,GAAQG,WACxB1C,QAAaV,EAAa,CAC9BW,KAAK,EAAAC,EAAAA,aAAYC,SAAWJ,EAC5BK,OAAQ,MACRC,QAAS,CACP,eAAgB,mBAChBY,cAAe,SAAWD,KAGxB2B,EAA8C,OAArCH,EAAO,MAAJxC,OAAI,EAAJA,EAAMK,QAAQuC,IAAI,kBAAgBJ,EAAI,EAClDK,EAAe,MAAJ7C,OAAI,EAAJA,EAAMA,KACvB,OAAOM,QAAQC,QAAQ,CACrBP,KAAM6C,EACNC,aAAcC,OAAOJ,IAEzB,CAAE,MAAOnC,GACPF,QAAQG,OAAOD,EACjB,CACF,IAAC,SAAAwC,EAAAC,GAAA,OAAAX,EAAA3B,MAAA,KAAAC,UAAA,GAEKsC,UAAQC,GAAA,EAAAvD,EAAAC,UAAA,UAACkB,EAAgBC,GAC7B,IACE,IACMhB,QAAaV,EAAa,CAC9BW,KAAK,EAAAC,EAAAA,aAAYC,SAFF,+BAGfC,OAAQ,OACRC,QAAS,CACP,eAAgB,sBAChBY,cAAe,UAAYD,GAE7BD,KAAMA,IAER,OAAOT,QAAQC,QAAY,MAAJP,OAAI,EAAJA,EAAMA,KAC/B,CAAE,MAAOQ,GACPF,QAAQG,OAAOD,EACjB,CACF,IAAC,SAAA4C,EAAAC,GAAA,OAAAF,EAAAxC,MAAA,KAAAC,UAAA,GAEK0C,oBAAkBC,GAAA,EAAA3D,EAAAC,UAAA,UAAC2D,EAAgBxC,GACvC,IACE,IAAMjB,EAAW,sCAAsCyD,IACjDxD,QAAaV,EAAa,CAC9BW,KAAK,EAAAC,EAAAA,aAAYC,SAAWJ,EAC5BK,OAAQ,SACRC,QAAS,CACP,eAAgB,mBAChBY,cAAe,SAAWD,KAG9B,OAAOV,QAAQC,QAAY,MAAJP,OAAI,EAAJA,EAAMyD,OAC/B,CAAE,MAAOjD,GACPF,QAAQG,OAAOD,EACjB,CACF,IAAC,SAAAkD,EAAAC,GAAA,OAAAJ,EAAA5C,MAAA,KAAAC,UAAA,GAEKgD,oBAAkBC,GAAA,EAAAjE,EAAAC,UAAA,UAACkB,EAAgBC,GACvC,IACE,IACMhB,QAAaV,EAAa,CAC9BW,KAAK,EAAAC,EAAAA,aAAYC,SAFF,qCAGfC,OAAQ,OACRC,QAAS,CACP,eAAgB,sBAChBY,cAAe,SAAWD,GAE5BD,KAAMA,IAER,OAAOT,QAAQC,QAAY,MAAJP,OAAI,EAAJA,EAAMA,KAC/B,CAAE,MAAOQ,GACPF,QAAQG,OAAOD,EACjB,CACF,IAAC,SAAAsD,EAAAC,GAAA,OAAAF,EAAAlD,MAAA,KAAAC,UAAA,GAEKoD,iBAAeC,GAAA,EAAArE,EAAAC,UAAA,UAAC0C,EAAa2B,GACjC,IACE,IAAMnE,EACJ,2CACA,IAAI0C,gBAAgBF,GAAQG,WACxB1C,QAAaV,EAAa,CAC9BW,KAAK,EAAAC,EAAAA,aAAYC,SAAWJ,EAC5BK,OAAQ,MACRC,QAAS,CACP,eAAgB,mBAChBY,cAAe,UAAYiD,KAG/B,OAAO5D,QAAQC,QAAY,MAAJP,OAAI,EAAJA,EAAMA,KAC/B,CAAE,MAAOQ,GACPF,QAAQG,OAAOD,EACjB,CACF,IAAC,SAAA2D,EAAAC,GAAA,OAAAH,EAAAtD,MAAA,KAAAC,UAAA,GAEKyD,uBAAqBC,GAAA,EAAA1E,EAAAC,UAAA,UAACC,EAAkBoE,GAC5C,IACE,IAAMnE,EAAW,sDAAsDD,IACjEE,QAAaV,EAAa,CAC9BW,KAAK,EAAAC,EAAAA,aAAYC,SAAWJ,EAC5BK,OAAQ,MACRC,QAAS,CACP,eAAgB,mBAChBY,cAAe,UAAYiD,KAG/B,OAAO5D,QAAQC,QAAY,MAAJP,OAAI,EAAJA,EAAMA,KAC/B,CAAE,MAAOQ,GACPF,QAAQG,OAAOD,EACjB,CACF,IAAC,SAAA+D,EAAAC,GAAA,OAAAF,EAAA3D,MAAA,KAAAC,UAAA,GAEK6D,qBAAmBC,GAAA,EAAA9E,EAAAC,UAAA,UAAC8E,EAAoBT,GAC5C,IACE,IAAMnE,EAAW,mCAAmC4E,IAC9C3E,QAAaV,EAAa,CAC9BW,KAAK,EAAAC,EAAAA,aAAYC,SAAWJ,EAC5BK,OAAQ,MACRC,QAAS,CACP,eAAgB,mBAChBY,cAAe,UAAYiD,KAG/B,OAAO5D,QAAQC,QAAY,MAAJP,OAAI,EAAJA,EAAMA,KAC/B,CAAE,MAAOQ,GACPF,QAAQG,OAAOD,EACjB,CACF,IAAC,SAAAoE,EAAAC,GAAA,OAAAH,EAAA/D,MAAA,KAAAC,UAAA,GAEKkE,4BAA0BC,GAAA,EAAAnF,EAAAC,UAAA,UAC9BC,EACA6E,EACApC,EACA2B,GAEA,IAAK,IAADc,EACIjF,EAAW,8DAA8DD,KAAY6E,IACrF3E,QAAaV,EAAa,CAC9BW,KAAK,EAAAC,EAAAA,aAAYC,SAAWJ,EAC5BK,OAAQ,MACRC,QAAS,CACP,eAAgB,mBAChBY,cAAe,UAAYiD,GAE7B3B,OAAQA,IAEJI,EAA8C,OAArCqC,EAAO,MAAJhF,OAAI,EAAJA,EAAMK,QAAQuC,IAAI,kBAAgBoC,EAAI,EAClDnC,EAAe,MAAJ7C,OAAI,EAAJA,EAAMA,KACvB,OAAOM,QAAQC,QAAQ,CACrBP,KAAM6C,EACNC,aAAcC,OAAOJ,IAEzB,CAAE,MAAOnC,GACPF,QAAQG,OAAOD,EACjB,CACF,IAAC,SAAAyE,EAAAC,EAAAC,EAAAC,GAAA,OAAAL,EAAApE,MAAA,KAAAC,UAAA,GAEKyE,mBAAiBC,GAAA,EAAA1F,EAAAC,UAAA,UAACC,EAAkB6E,EAAoBT,GAC5D,IACE,IAAMqB,EAAW,kCAAkCzF,gBAAuB6E,aACpE3E,QAAaV,EAAa,CAC9BW,KAAK,EAAAC,EAAAA,aAAYC,SAAWoF,EAC5BnF,OAAQ,MACRC,QAAS,CACP,eAAgB,mBAChBY,cAAe,UAAYiD,KAG/B,OAAO5D,QAAQC,QAAY,MAAJP,OAAI,EAAJA,EAAMA,KAC/B,CAAE,MAAOQ,GACPF,QAAQG,OAAOD,EACjB,CACF,IAAC,SAAAgF,EAAAC,EAAAC,GAAA,OAAAJ,EAAA3E,MAAA,KAAAC,UAAA,GAEK+E,cAAYC,GAAA,EAAAhG,EAAAC,UAAA,UAChBgG,EACAC,EACAC,EACAhF,EACAmD,EACA8B,GAEA,IACE,IAAMT,EAAW,4CAA4CS,KAAgBF,KAAaC,KAAeF,IACnG7F,QAAaV,EAAa,CAC9BW,KAAK,EAAAC,EAAAA,aAAYC,SAAWoF,EAC5BnF,OAAQ,MACRC,QAAS,CACP,eAAgB,mBAChBY,cAAe,UAAYiD,GAE7BnD,KAAMG,KAAKC,UAAUJ,KAEvB,OAAOT,QAAQC,QAAY,MAAJP,OAAI,EAAJA,EAAMA,KAC/B,CAAE,MAAOQ,GACPF,QAAQG,OAAOD,EACjB,CACF,IAAC,SAAAyF,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,OAAAV,EAAAjF,MAAA,KAAAC,UAAA,GAEK2F,qCAAmCC,GAAA,EAAA5G,EAAAC,UAAA,UAACkB,EAAWmD,GACnD,IACE,IACMlE,QAAaV,EAAa,CAC9BW,KAAK,EAAAC,EAAAA,aAAYC,SAFF,gEAGfC,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAChBY,cAAe,SAAWiD,GAE5BnD,KAAMG,KAAKC,UAAUJ,KAEvB,OAAOT,QAAQC,QAAY,MAAJP,OAAI,EAAJA,EAAMA,KAC/B,CAAE,MAAOQ,GACPF,QAAQG,QAAO,EACjB,CACF,IAAC,SAAAgG,EAAAC,GAAA,OAAAF,EAAA7F,MAAA,KAAAC,UAAA,GAEK+F,gBAAcC,GAAA,EAAAhH,EAAAC,UAAA,UAACkB,EAAWC,GAC9B,IACE,IACMhB,QAAaV,EAAa,CAC9BW,KAAK,EAAAC,EAAAA,aAAYC,SAFF,8CAGfC,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAChBY,cAAe,SAAWD,GAE5BD,KAAMG,KAAKC,UAAUJ,KAEvB,OAAOT,QAAQC,QAAY,MAAJP,OAAI,EAAJA,EAAMA,KAC/B,CAAE,MAAOQ,GACPF,QAAQG,OAAOD,EACjB,CACF,IAAC,SAAAqG,EAAAC,GAAA,OAAAF,EAAAjG,MAAA,KAAAC,UAAA,GAEKmG,2BAAyBC,GAAA,EAAApH,EAAAC,UAAA,UAACkB,GAC9B,IACE,IACMf,QAAaV,EAAa,CAC9BW,KAAK,EAAAC,EAAAA,aAAYC,SAFF,0CAGfC,OAAQ,MACRC,QAAS,CACP,eAAgB,oBAElBU,KAAMG,KAAKC,UAAUJ,KAEvB,OAAOT,QAAQC,QAAY,MAAJP,OAAI,EAAJA,EAAMA,KAC/B,CAAE,MAAOQ,GACPF,QAAQG,OAAOD,EACjB,CACF,IAAC,SAAAyG,GAAA,OAAAD,EAAArG,MAAA,KAAAC,UAAA,GAEKsG,uBAAqBC,GAAA,EAAAvH,EAAAC,UAAA,UAACqE,GAC1B,IACE,IACMlE,QAAaV,EAAa,CAC9BW,KAAK,EAAAC,EAAAA,aAAYC,SAFF,kDAGfC,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAChBY,cAAe,SAAWiD,KAG9B,OAAO5D,QAAQC,QAAY,MAAJP,OAAI,EAAJA,EAAMA,KAC/B,CAAE,MAAOQ,GACPF,QAAQG,OAAOD,EACjB,CACF,IAAC,SAAA4G,GAAA,OAAAD,EAAAxG,MAAA,KAAAC,UAAA,GAEKyG,yBAAuBC,GAAA,EAAA1H,EAAAC,UAAA,UAAC0C,EAAa2B,GACzC,IACE,IACMlE,QAAaV,EAAa,CAC9BW,KAAK,EAAAC,EAAAA,aAAYC,SAFF,qDAGfC,OAAQ,MACRC,QAAS,CACP,eAAgB,mBAChBY,cAAe,UAAYiD,GAE7B3B,OAAQA,IAEV,OAAOjC,QAAQC,QAAY,MAAJP,OAAI,EAAJA,EAAMA,KAC/B,CAAE,MAAOQ,GACPF,QAAQG,OAAOD,EACjB,CACF,IAAC,SAAA+G,EAAAC,GAAA,OAAAF,EAAA3G,MAAA,KAAAC,UAAA,GAEK6G,oBAAkBC,GAAA,EAAA9H,EAAAC,UAAA,UAACkB,EAAWwB,GAClC,IACE,IAEMvC,QAAaV,EAAa,CAC9BW,KAAK,EAAAC,EAAAA,aAAYC,SAFjB,gEAGAC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBU,KAAMG,KAAKC,UAAUJ,GACrBwB,OAAQA,IAEV,OAAOjC,QAAQC,QAAY,MAAJP,OAAI,EAAJA,EAAMA,KAC/B,CAAE,MAAOQ,GACPF,QAAQG,OAAOD,EACjB,CACF,IAAC,SAAAmH,EAAAC,GAAA,OAAAF,EAAA/G,MAAA,KAAAC,UAAA,GAEKiH,sBAAoBC,GAAA,EAAAlI,EAAAC,UAAA,UAACkB,GACzB,IACE,IACMf,QAAaV,EAAa,CAC9BW,KAAK,EAAAC,EAAAA,aAAYC,SAFF,4CAGfC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBU,KAAMG,KAAKC,UAAUJ,KAEvB,OAAOT,QAAQC,QAAY,MAAJP,OAAI,EAAJA,EAAMA,KAC/B,CAAE,MAAOQ,GACPF,QAAQG,OAAOD,EACjB,CACF,IAAC,SAAAuH,GAAA,OAAAD,EAAAnH,MAAA,KAAAC,UAAA,GAEKoH,gBAAcC,GAAA,EAAArI,EAAAC,UAAA,UAACC,GACnB,IACE,IAAMyF,EACJ,mDAAqDzF,EACjDE,QAAaV,EAAa,CAC9BW,KAAK,EAAAC,EAAAA,aAAYC,SAAWoF,EAC5BnF,OAAQ,MACRC,QAAS,CACP,eAAgB,sBAGpB,OAAOC,QAAQC,QAAY,MAAJP,OAAI,EAAJA,EAAMA,KAC/B,CAAE,MAAOQ,GACPF,QAAQG,OAAOD,EACjB,CACF,IAAC,SAAA0H,GAAA,OAAAD,EAAAtH,MAAA,KAAAC,UAAA,GAEKuH,sBAAoBC,GAAA,EAAAxI,EAAAC,UAAA,UAAC0C,GACzB,IACE,IACMvC,QAAaV,EAAa,CAC9BW,KAAK,EAAAC,EAAAA,aAAYC,SAFF,wCAGfC,OAAQ,MACRC,QAAS,CACP,eAAgB,oBAElBkC,OAAQA,IAEV,OAAOjC,QAAQC,QAAY,MAAJP,OAAI,EAAJA,EAAMA,KAC/B,CAAE,MAAOQ,GACPF,QAAQG,OAAOD,EACjB,CACF,IAAC,SAAA6H,GAAA,OAAAD,EAAAzH,MAAA,KAAAC,UAAA,GAEK0H,iBAAeC,GAAA,EAAA3I,EAAAC,UAAA,UAAC2B,GACpB,IACE,IAAM+D,EAAW,8CAAgD/D,EAC3DxB,QAAaV,EAAa,CAC9BW,KAAK,EAAAC,EAAAA,aAAYC,SAAWoF,EAC5BnF,OAAQ,MACRC,QAAS,CACP,eAAgB,sBAGpB,OAAOC,QAAQC,QAAY,MAAJP,OAAI,EAAJA,EAAMA,KAC/B,CAAE,MAAOQ,GACPF,QAAQG,OAAOD,EACjB,CACF,IAAC,SAAAgI,GAAA,OAAAD,EAAA5H,MAAA,KAAAC,UAAA,GAEK6H,mBAAiBC,GAAA,EAAA9I,EAAAC,UAAA,UAAC0C,GACtB,IACE,IAAMgD,EAAW,+BAA+BhD,EAAOf,oCACjDxB,QAAaV,EAAa,CAC9BW,KAAK,EAAAC,EAAAA,aAAYC,SAAWoF,EAC5BnF,OAAQ,MACRC,QAAS,CACP,eAAgB,oBAElBkC,OAAAA,IAEF,OAAOjC,QAAQC,QAAY,MAAJP,OAAI,EAAJA,EAAMA,KAC/B,CAAE,MAAOQ,GACPF,QAAQG,OAAOD,EACjB,CACF,IAAC,SAAAmI,GAAA,OAAAD,EAAA/H,MAAA,KAAAC,UAAA,GAEKgI,mBAAiBC,GAAA,EAAAjJ,EAAAC,UAAA,UAAC0C,GACtB,IACE,IAAMgD,EAAW,+BAA+BhD,EAAOf,yCACjDxB,QAAaV,EAAa,CAC9BW,KAAK,EAAAC,EAAAA,aAAYC,SAAWoF,EAC5BnF,OAAQ,MACRC,QAAS,CACP,eAAgB,oBAElBkC,OAAAA,IAEF,OAAOjC,QAAQC,QAAY,MAAJP,OAAI,EAAJA,EAAMA,KAC/B,CAAE,MAAOQ,GACPF,QAAQG,OAAOD,EACjB,CACF,IAAC,SAAAsI,GAAA,OAAAD,EAAAlI,MAAA,KAAAC,UAAA,GAEKmI,iBAAeC,GAAA,EAAApJ,EAAAC,UAAA,UAAC0C,GACpB,IACE,IACMvC,QAAaV,EAAa,CAC9BW,KAAK,EAAAC,EAAAA,aAAYC,SAFF,wCAGfC,OAAQ,MACRC,QAAS,CACP,eAAgB,oBAElBkC,OAAAA,IAEF,OAAOjC,QAAQC,QAAY,MAAJP,OAAI,EAAJA,EAAMA,KAC/B,CAAE,MAAOQ,GACP,OAAOF,QAAQG,OAAOD,EACxB,CACF,IAAC,SAAAyI,GAAA,OAAAD,EAAArI,MAAA,KAAAC,UAAA,GAEKsI,kBAAgBC,GAAA,EAAAvJ,EAAAC,UAAA,UAAC0C,EAAaxB,GAClC,IAAK,IAADqI,EAEIpJ,QAAaV,EAAa,CAC9BW,KAAK,EAAAC,EAAAA,aAAYC,SAFF,yCAGfC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBkC,OAAAA,EACAxB,KAAMG,KAAKC,UAAUJ,KAEjB4B,EAA8C,OAArCyG,EAAO,MAAJpJ,OAAI,EAAJA,EAAMK,QAAQuC,IAAI,kBAAgBwG,EAAI,EAClDvG,EAAe,MAAJ7C,OAAI,EAAJA,EAAMA,KACvB,OAAOM,QAAQC,QAAQ,CACrBP,KAAM6C,EACNC,aAAcC,OAAOJ,IAEzB,CAAE,MAAOnC,GAEP,OADAyB,QAAQC,IAAI,mBAAoB1B,GACzBF,QAAQG,OAAOD,EACxB,CACF,IAAC,SAAA6I,EAAAC,GAAA,OAAAH,EAAAxI,MAAA,KAAAC,UAAA,GAEK2I,mBAAiBC,GAAA,EAAA5J,EAAAC,UAAA,UAAC0C,GACtB,IACE,IAAMgD,EACJ,4EACAhD,EAAOkH,MACHzJ,QAAaV,EAAa,CAC9BW,KAAK,EAAAC,EAAAA,aAAYC,SAAWoF,EAC5BnF,OAAQ,MACRC,QAAS,CACP,eAAgB,sBAGpB,OAAOC,QAAQC,QAAY,MAAJP,OAAI,EAAJA,EAAMA,KAC/B,CAAE,MAAOQ,GAEP,OADAyB,QAAQC,IAAI,oBAAqB1B,GAC1BF,QAAQG,OAAOD,EACxB,CACF,IAAC,SAAAkJ,GAAA,OAAAF,EAAA7I,MAAA,KAAAC,UAAA,GAEK+I,qBAAmBC,GAAA,EAAAhK,EAAAC,UAAA,UAAC0C,EAAaxB,GACrC,IACE,IACMf,QAAaV,EAAa,CAC9BW,KAAK,EAAAC,EAAAA,aAAYC,SAFF,+BAGfC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBkC,OAAAA,EACAxB,KAAMG,KAAKC,UAAUJ,KAEvB,OAAOT,QAAQC,QAAY,MAAJP,OAAI,EAAJA,EAAMA,KAC/B,CAAE,MAAOQ,GAEP,OADAyB,QAAQC,IAAI,sBAAuB1B,GAC5BF,QAAQG,OAAOD,EACxB,CACF,IAAC,SAAAqJ,EAAAC,GAAA,OAAAF,EAAAjJ,MAAA,KAAAC,UAAA,GAEKmJ,oCAAkCC,GAAA,EAAApK,EAAAC,UAAA,UACtCC,EACA6E,GAEA,IACE,IAAMY,EAAW,mDAAmDzF,gBAAuB6E,IACrF3E,QAAaV,EAAa,CAC9BW,KAAK,EAAAC,EAAAA,aAAYC,SAAWoF,EAC5BnF,OAAQ,MACRC,QAAS,CACP,eAAgB,sBAGpB,OAAOC,QAAQC,QAAY,MAAJP,OAAI,EAAJA,EAAMA,KAC/B,CAAE,MAAOQ,GAEP,OADAyB,QAAQC,IAAI,qCAAsC1B,GAC3CF,QAAQG,OAAOD,EACxB,CACF,IAAC,SAAAyJ,EAAAC,GAAA,OAAAF,EAAArJ,MAAA,KAAAC,UAAA,GAEKuJ,qBAAmBC,GAAA,EAAAxK,EAAAC,UAAA,UAACwK,GACxB,IACE,IACMrK,QAAaV,EAAa,CAC9BW,KAAK,EAAAC,EAAAA,aAAYC,SAFF,mCAGfC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBU,KAAMG,KAAKC,UAAU,CACnBkJ,OAAAA,MAGJ,OAAO/J,QAAQC,QAAY,MAAJP,OAAI,EAAJA,EAAMA,KAC/B,CAAE,MAAOQ,GAEP,OADAyB,QAAQC,IAAI,sBAAuB1B,GAC5BF,QAAQG,OAAOD,EACxB,CACF,IAAC,SAAA8J,GAAA,OAAAF,EAAAzJ,MAAA,KAAAC,UAAA,GAEK2J,yBAAuBC,GAAA,EAAA5K,EAAAC,UAAA,UAACC,GAC5B,IACE,IAAMyF,EACJ,8DACAzF,EACIE,QAAaV,EAAa,CAC9BW,KAAK,EAAAC,EAAAA,aAAYC,SAAWoF,EAC5BnF,OAAQ,MACRC,QAAS,CACP,eAAgB,sBAGpB,OAAOC,QAAQC,QAAY,MAAJP,OAAI,EAAJA,EAAMA,KAC/B,CAAE,MAAOQ,GAEP,OADAyB,QAAQC,IAAI,0BAA2B1B,GAChCF,QAAQG,OAAOD,EACxB,CACF,IAAC,SAAAiK,GAAA,OAAAD,EAAA7J,MAAA,KAAAC,UAAA,GAEK8J,iBAAeC,GAAA,EAAA/K,EAAAC,UAAA,UACnB+K,EACAC,EACAC,EACArB,GAGC,IADDsB,EAAenK,UAAAoK,OAAA,EAAApK,UAAA,QAAAqK,EAETC,EAAU,CACdC,UAAU,EACVC,UAAW,GACXL,OAAc,MAANA,EAAAA,EAAU,KAClBM,YAP0BzK,UAAAoK,OAAA,QAAAC,IAAArK,UAAA,GAAAA,UAAA,GAAG,KAQ7B0K,MAAO,GACPC,KAAM,GACNC,IAAK,GACLC,QAAS,GACThC,MAAOA,EACPiC,MAAO,GACPC,EAAGb,EACHc,YAAa,GACbC,cAAe,GACfC,MAAO,GACPC,SAAU,aACVC,MAAO,CAAC,EACRC,GAAI,IAEF1J,EAAc,CAChBqI,KAAAA,EACAC,KAAAA,GAGEE,IACFxI,EAAM2J,OAAAC,OAAA,GAAO5J,EAAO,CAAC6J,UAAU,KAEjC,IAAK,IAADC,EAEIrM,QAAaV,EAAa,CAC9BW,KAAK,EAAAC,EAAAA,aAAYC,SAFF,0CAGfC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBkC,OAAAA,EACAxB,KAAMG,KAAKC,UAAU+J,KAEjBvI,EAA8C,OAArC0J,EAAO,MAAJrM,OAAI,EAAJA,EAAMK,QAAQuC,IAAI,kBAAgByJ,EAAI,EAClDxJ,EAAe,MAAJ7C,OAAI,EAAJA,EAAMA,KACvB,OAAOM,QAAQC,QAAQ,CACrBP,KAAM6C,EACNC,aAAcC,OAAOJ,IAEzB,CAAE,MAAOnC,GAEP,OADAyB,QAAQC,IAAI,kBAAmB1B,GACxBF,QAAQG,OAAOD,EACxB,CACF,IAAC,SAAA8L,EAAAC,EAAAC,EAAAC,GAAA,OAAA9B,EAAAhK,MAAA,KAAAC,UAAA,GAEK8L,gCAA8BC,GAAA,EAAA/M,EAAAC,UAAA,UAACC,EAAkB6E,GACrD,IAAMY,EAAW,qDAAqDzF,KAAY6E,IAC5E3E,QAAaV,EAAa,CAC9BW,KAAK,EAAAC,EAAAA,aAAYC,SAAWoF,EAC5BnF,OAAQ,MACRC,QAAS,CACP,eAAgB,sBAGpB,OAAOC,QAAQC,QAAY,MAAJP,OAAI,EAAJA,EAAMA,KAC/B,IAAC,SAAA4M,EAAAC,GAAA,OAAAF,EAAAhM,MAAA,KAAAC,UAAA,IAVmC,IAAA+L,EA1DfhC,EAnBQH,EApBJJ,EApBeJ,EAnBfJ,EAnBFJ,EAxBDL,EAjBDH,EAjBEH,EAjBAH,EAhBFH,EAjBKH,EAjBNH,EAjBMH,EAnBFJ,EAlBKJ,EAjBFH,EAjBIH,EAlBXJ,EAlBqBJ,EAzBvBZ,EAjBKN,EA5BSP,EAjBPL,EAjBEJ,EAnBNL,EAlBGJ,EAjBAN,EAlBVJ,EAxBWb,EApBLN,EAjBGJ,EAjBKL,EAlBXT,EAhBUnB,CA+rB5B,C","sources":["webpack:///./src/hooks/apiHooks/useReviewTicketServices.tsx","webpack:///./src/services/review-ticket.services.ts"],"sourcesContent":["import {createReviewServices} from '../../services/review-ticket.services';\nimport {useFetchRequest} from '../useFetch';\n\nexport const useReviewServices = () => {\n  const fetchRequest = useFetchRequest();\n  return createReviewServices(fetchRequest);\n};\n","import {getConfig} from './httpClient';\n\nexport const createReviewServices = (fetchRequest: any) => ({\n  async getListFileByTicketId(ticketId: string) {\n    try {\n      const endPoint = `/services/erequest/api/tickets/${ticketId}/listFile`;\n      const data = await fetchRequest({\n        url: getConfig().BASE_URL + endPoint,\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n      return Promise.resolve(data?.data);\n    } catch (error) {\n      Promise.reject(error);\n    }\n  },\n\n  async getInfoFile(body: any, accessToken: string) {\n    const endPoint = `/services/erequest/api/file-repositories/getInformationFile`;\n    try {\n      const data = await fetchRequest({\n        url: getConfig().BASE_URL + endPoint,\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + accessToken,\n        },\n        body: JSON.stringify(body),\n      });\n      return Promise.resolve(data?.data);\n    } catch (error) {\n      Promise.reject(error);\n    }\n  },\n\n  async getListFormModelerById(id: string, accessToken: string) {\n    try {\n      const endPoint = `/services/idaas-eflow/api/forms/modeler/` + id;\n      const data = await fetchRequest({\n        url: getConfig().BASE_URL + endPoint,\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + accessToken,\n        },\n      });\n      return Promise.resolve(data?.data);\n    } catch (error) {\n      Promise.reject(error);\n    }\n  },\n\n  async getFormDetailById(id: string, accessToken: string) {\n    try {\n      const endPoint = `/services/eform/api/forms/` + id;\n      const data = await fetchRequest({\n        url: getConfig().BASE_URL + endPoint,\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + accessToken,\n        },\n      });\n      return Promise.resolve(data?.data);\n    } catch (error) {\n      Promise.reject(error);\n    }\n  },\n\n  async getStatusParty(ticketId: string, accessToken: string) {\n    try {\n      const endPoint =\n        `/services/erequest/api/ticket-recipients/statusRaw/` + ticketId;\n      const data = await fetchRequest({\n        url: getConfig().BASE_URL + endPoint,\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + accessToken,\n        },\n      });\n      return Promise.resolve(data?.data);\n    } catch (error) {\n      console.log('errorgetStatusParty', error);\n\n      Promise.reject(error);\n    }\n  },\n\n  async getListFileRelative(params: any, accessToken: string) {\n    try {\n      const endPoint =\n        `/services/erequest/api/attachments/get-by-ticketId?` +\n        new URLSearchParams(params).toString();\n      const data = await fetchRequest({\n        url: getConfig().BASE_URL + endPoint,\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer' + accessToken,\n        },\n      });\n      const totalData = data?.headers.get('x-total-count') ?? 0;\n      const listData = data?.data;\n      return Promise.resolve({\n        data: listData,\n        totalRecords: Number(totalData),\n      });\n    } catch (error) {\n      Promise.reject(error);\n    }\n  },\n\n  async viewFile(body: FormData, accessToken: string) {\n    try {\n      const endPoint = `/services/s3service/api/view`;\n      const data = await fetchRequest({\n        url: getConfig().BASE_URL + endPoint,\n        method: 'POST',\n        headers: {\n          'Content-Type': 'multipart/form-data',\n          Authorization: 'Bearer ' + accessToken,\n        },\n        body: body,\n      });\n      return Promise.resolve(data?.data);\n    } catch (error) {\n      Promise.reject(error);\n    }\n  },\n\n  async deleteFileRelative(idFile: string, accessToken: string) {\n    try {\n      const endPoint = `/services/erequest/api/attachments/${idFile}`;\n      const data = await fetchRequest({\n        url: getConfig().BASE_URL + endPoint,\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer' + accessToken,\n        },\n      });\n      return Promise.resolve(data?.status);\n    } catch (error) {\n      Promise.reject(error);\n    }\n  },\n\n  async uploadFileRelative(body: FormData, accessToken: string) {\n    try {\n      const endPoint = `/services/erequest/api/attachments`;\n      const data = await fetchRequest({\n        url: getConfig().BASE_URL + endPoint,\n        method: 'POST',\n        headers: {\n          'Content-Type': 'multipart/form-data',\n          Authorization: 'Bearer' + accessToken,\n        },\n        body: body,\n      });\n      return Promise.resolve(data?.data);\n    } catch (error) {\n      Promise.reject(error);\n    }\n  },\n\n  async getFormERequest(params: any, token: string) {\n    try {\n      const endPoint =\n        `/services/eform/api/share/form-erequest?` +\n        new URLSearchParams(params).toString();\n      const data = await fetchRequest({\n        url: getConfig().BASE_URL + endPoint,\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + token,\n        },\n      });\n      return Promise.resolve(data?.data);\n    } catch (error) {\n      Promise.reject(error);\n    }\n  },\n\n  async getRecipientDetaiImpl(ticketId: string, token: string) {\n    try {\n      const endPoint = `/services/erequest/api/recipient-details/implement/${ticketId}`;\n      const data = await fetchRequest({\n        url: getConfig().BASE_URL + endPoint,\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + token,\n        },\n      });\n      return Promise.resolve(data?.data);\n    } catch (error) {\n      Promise.reject(error);\n    }\n  },\n\n  async getFromByUserTaskId(userTaskId: string, token: string) {\n    try {\n      const endPoint = `/services/idaas-eflow/api/forms/${userTaskId}`;\n      const data = await fetchRequest({\n        url: getConfig().BASE_URL + endPoint,\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + token,\n        },\n      });\n      return Promise.resolve(data?.data);\n    } catch (error) {\n      Promise.reject(error);\n    }\n  },\n\n  async getListAttachmentsUserTask(\n    ticketId: string,\n    userTaskId: string,\n    params: any,\n    token: string,\n  ) {\n    try {\n      const endPoint = `/services/erequest/api/attachments/get-attachment-userTask/${ticketId}/${userTaskId}`;\n      const data = await fetchRequest({\n        url: getConfig().BASE_URL + endPoint,\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + token,\n        },\n        params: params,\n      });\n      const totalData = data?.headers.get('x-total-count') ?? 0;\n      const listData = data?.data;\n      return Promise.resolve({\n        data: listData,\n        totalRecords: Number(totalData),\n      });\n    } catch (error) {\n      Promise.reject(error);\n    }\n  },\n\n  async getListFileReview(ticketId: string, userTaskId: string, token: string) {\n    try {\n      const endpoint = `/services/erequest/api/tickets/${ticketId}/userTaskId/${userTaskId}/listFile`;\n      const data = await fetchRequest({\n        url: getConfig().BASE_URL + endpoint,\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + token,\n        },\n      });\n      return Promise.resolve(data?.data);\n    } catch (error) {\n      Promise.reject(error);\n    }\n  },\n\n  async actionTicket(\n    _recipientDetailsId: string,\n    _ticketId: string,\n    _userTaskId: string,\n    body: any,\n    token: string,\n    typeOfAction: string,\n  ) {\n    try {\n      const endpoint = `/services/erequest/api/tickets/recipient/${typeOfAction}/${_ticketId}/${_userTaskId}/${_recipientDetailsId}`;\n      const data = await fetchRequest({\n        url: getConfig().BASE_URL + endpoint,\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + token,\n        },\n        body: JSON.stringify(body),\n      });\n      return Promise.resolve(data?.data);\n    } catch (error) {\n      Promise.reject(error);\n    }\n  },\n\n  async getFormVersionByTicketAndUserTaskId(body: any, token: string) {\n    try {\n      const endpoint = `/services/erequest/api/ticket-sub-form-data/get-sub-form-data`;\n      const data = await fetchRequest({\n        url: getConfig().BASE_URL + endpoint,\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer' + token,\n        },\n        body: JSON.stringify(body),\n      });\n      return Promise.resolve(data?.data);\n    } catch (error) {\n      Promise.reject(false);\n    }\n  },\n\n  async updateFormData(body: any, accessToken: string) {\n    try {\n      const endpoint = `/services/erequest/api/ticket-sub-form-data`;\n      const data = await fetchRequest({\n        url: getConfig().BASE_URL + endpoint,\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer' + accessToken,\n        },\n        body: JSON.stringify(body),\n      });\n      return Promise.resolve(data?.data);\n    } catch (error) {\n      Promise.reject(error);\n    }\n  },\n\n  async updateFormDataSameVersion(body: any) {\n    try {\n      const endpoint = `/services/erequest/api/ticket-form-data`;\n      const data = await fetchRequest({\n        url: getConfig().BASE_URL + endpoint,\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(body),\n      });\n      return Promise.resolve(data?.data);\n    } catch (error) {\n      Promise.reject(error);\n    }\n  },\n\n  async finishTicketRecipient(token: string) {\n    try {\n      const endpoint = `/services/erequest/api/tickets/finish-recipient`;\n      const data = await fetchRequest({\n        url: getConfig().BASE_URL + endpoint,\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer' + token,\n        },\n      });\n      return Promise.resolve(data?.data);\n    } catch (error) {\n      Promise.reject(error);\n    }\n  },\n\n  async getFormDataByUserTaskId(params: any, token: string) {\n    try {\n      const endPoint = '/services/idaas-eflow/api/forms/attached-user-task';\n      const data = await fetchRequest({\n        url: getConfig().BASE_URL + endPoint,\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + token,\n        },\n        params: params,\n      });\n      return Promise.resolve(data?.data);\n    } catch (error) {\n      Promise.reject(error);\n    }\n  },\n\n  async createPersonalEkyc(body: any, params: any) {\n    try {\n      const endpoint =\n        '/services/eid/api/personal-kyc-detail-profiles-history/create';\n      const data = await fetchRequest({\n        url: getConfig().BASE_URL + endpoint,\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(body),\n        params: params,\n      });\n      return Promise.resolve(data?.data);\n    } catch (error) {\n      Promise.reject(error);\n    }\n  },\n\n  async createInformationOCR(body: any) {\n    try {\n      const endpoint = '/services/erequest/api/receiver-histories';\n      const data = await fetchRequest({\n        url: getConfig().BASE_URL + endpoint,\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(body),\n      });\n      return Promise.resolve(data?.data);\n    } catch (error) {\n      Promise.reject(error);\n    }\n  },\n\n  async getListTaskSLA(ticketId: string) {\n    try {\n      const endpoint =\n        '/services/workboard/api/notifications/tasks-sla/' + ticketId;\n      const data = await fetchRequest({\n        url: getConfig().BASE_URL + endpoint,\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n      return Promise.resolve(data?.data);\n    } catch (error) {\n      Promise.reject(error);\n    }\n  },\n\n  async getHistoryEkycDetail(params: any) {\n    try {\n      const endpoint = '/services/eid/api/ekyc-history/detail';\n      const data = await fetchRequest({\n        url: getConfig().BASE_URL + endpoint,\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        params: params,\n      });\n      return Promise.resolve(data?.data);\n    } catch (error) {\n      Promise.reject(error);\n    }\n  },\n\n  async getEkycRepoById(id: string) {\n    try {\n      const endpoint = '/services/common/api/p/ekyc/ekycRepository/' + id;\n      const data = await fetchRequest({\n        url: getConfig().BASE_URL + endpoint,\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n      return Promise.resolve(data?.data);\n    } catch (error) {\n      Promise.reject(error);\n    }\n  },\n\n  async getAllTypesOfEkyc(params: any) {\n    try {\n      const endpoint = `/services/common/api/p/ekyc/${params.id}/ekycRepositoryDetails/allTypee`;\n      const data = await fetchRequest({\n        url: getConfig().BASE_URL + endpoint,\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        params,\n      });\n      return Promise.resolve(data?.data);\n    } catch (error) {\n      Promise.reject(error);\n    }\n  },\n\n  async getDataEkycByType(params: any) {\n    try {\n      const endpoint = `/services/common/api/p/ekyc/${params.id}/ekycRepositoryDetails/type/detailss`;\n      const data = await fetchRequest({\n        url: getConfig().BASE_URL + endpoint,\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        params,\n      });\n      return Promise.resolve(data?.data);\n    } catch (error) {\n      Promise.reject(error);\n    }\n  },\n\n  async getResourceById(params: any) {\n    try {\n      const endpoint = '/services/collabora/api/acls/resource';\n      const data = await fetchRequest({\n        url: getConfig().BASE_URL + endpoint,\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        params,\n      });\n      return Promise.resolve(data?.data);\n    } catch (error) {\n      return Promise.reject(error);\n    }\n  },\n\n  async getUserInfoModel(params: any, body: any) {\n    try {\n      const endpoint = '/services/uaa/api/search/userInfoModel';\n      const data = await fetchRequest({\n        url: getConfig().BASE_URL + endpoint,\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        params,\n        body: JSON.stringify(body),\n      });\n      const totalData = data?.headers.get('x-total-count') ?? 0;\n      const listData = data?.data;\n      return Promise.resolve({\n        data: listData,\n        totalRecords: Number(totalData),\n      });\n    } catch (error) {\n      console.log('getUserInfoModel', error);\n      return Promise.reject(error);\n    }\n  },\n\n  async getDataOrgByOrgin(params: any) {\n    try {\n      const endpoint =\n        '/services/uaa/api/organizations/child/find-organization-like-orgin?orgIn=' +\n        params.orgIn;\n      const data = await fetchRequest({\n        url: getConfig().BASE_URL + endpoint,\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n      return Promise.resolve(data?.data);\n    } catch (error) {\n      console.log('getDataOrgByOrgin', error);\n      return Promise.reject(error);\n    }\n  },\n\n  async updatePermissionOrg(params: any, body: any) {\n    try {\n      const endpoint = '/services/collabora/api/acls';\n      const data = await fetchRequest({\n        url: getConfig().BASE_URL + endpoint,\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        params,\n        body: JSON.stringify(body),\n      });\n      return Promise.resolve(data?.data);\n    } catch (error) {\n      console.log('updatePermissionOrg', error);\n      return Promise.reject(error);\n    }\n  },\n\n  async getListTaskByTicketIdAndUsertaskId(\n    ticketId: string,\n    userTaskId: string,\n  ) {\n    try {\n      const endpoint = `/services/erequest/api/tasks/get-task-by/ticket/${ticketId}/userTaskId/${userTaskId}`;\n      const data = await fetchRequest({\n        url: getConfig().BASE_URL + endpoint,\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n      return Promise.resolve(data?.data);\n    } catch (error) {\n      console.log('getListTaskByTicketIdAndUsertaskId', error);\n      return Promise.reject(error);\n    }\n  },\n\n  async getListTaskByListId(listId: string[]) {\n    try {\n      const endpoint = '/services/etask/api/tasks/listId';\n      const data = await fetchRequest({\n        url: getConfig().BASE_URL + endpoint,\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          listId,\n        }),\n      });\n      return Promise.resolve(data?.data);\n    } catch (error) {\n      console.log('getListTaskByListId', error);\n      return Promise.reject(error);\n    }\n  },\n\n  async getListFormIdByTicketId(ticketId: string) {\n    try {\n      const endpoint =\n        '/services/erequest/api/tickets/get-list-formId-by-ticketId/' +\n        ticketId;\n      const data = await fetchRequest({\n        url: getConfig().BASE_URL + endpoint,\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n      return Promise.resolve(data?.data);\n    } catch (error) {\n      console.log('getListFormIdByTicketId', error);\n      return Promise.reject(error);\n    }\n  },\n\n  async findUserByOrgIn(\n    page: number,\n    size: number,\n    search: string,\n    orgIn: string | null,\n    resourceIds: number[] | null = null,\n    custId?: number,\n  ) {\n    const payload = {\n      advanced: true,\n      contactId: '',\n      custId: custId ?? null,\n      resourceIds: resourceIds,\n      field: '',\n      from: '',\n      ids: [],\n      keyWord: '',\n      orgIn: orgIn,\n      owner: '',\n      q: search,\n      recipientId: '',\n      recipientRole: [],\n      refId: '',\n      resource: 'table_user',\n      terms: {},\n      to: '',\n    };\n    let params: any = {\n      page,\n      size,\n    };\n\n    if (custId) {\n      params = {...params, isPublic: true};\n    }\n    try {\n      const endpoint = '/services/uaa/api/search/user-info/role';\n      const data = await fetchRequest({\n        url: getConfig().BASE_URL + endpoint,\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        params,\n        body: JSON.stringify(payload),\n      });\n      const totalData = data?.headers.get('x-total-count') ?? 0;\n      const listData = data?.data;\n      return Promise.resolve({\n        data: listData,\n        totalRecords: Number(totalData),\n      });\n    } catch (error) {\n      console.log('findUserByOrgIn', error);\n      return Promise.reject(error);\n    }\n  },\n\n  async getFormByUserTaskIdAndTicketId(ticketId: string, userTaskId: string) {\n    const endpoint = `/services/erequest/api/recipient-details/get-form/${ticketId}/${userTaskId}`;\n    const data = await fetchRequest({\n      url: getConfig().BASE_URL + endpoint,\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n    return Promise.resolve(data?.data);\n  },\n});\n"],"names":["_reviewTicket","require","_useFetch","exports","fetchRequest","useFetchRequest","createReviewServices","_httpClient","getListFileByTicketId","_getListFileByTicketId","_asyncToGenerator2","default","ticketId","endPoint","data","url","getConfig","BASE_URL","method","headers","Promise","resolve","error","reject","_x","apply","arguments","getInfoFile","_getInfoFile","body","accessToken","Authorization","JSON","stringify","_x2","_x3","getListFormModelerById","_getListFormModelerById","id","_x4","_x5","getFormDetailById","_getFormDetailById","_x6","_x7","getStatusParty","_getStatusParty","console","log","_x8","_x9","getListFileRelative","_getListFileRelative","params","_data$headers$get","URLSearchParams","toString","totalData","get","listData","totalRecords","Number","_x10","_x11","viewFile","_viewFile","_x12","_x13","deleteFileRelative","_deleteFileRelative","idFile","status","_x14","_x15","uploadFileRelative","_uploadFileRelative","_x16","_x17","getFormERequest","_getFormERequest","token","_x18","_x19","getRecipientDetaiImpl","_getRecipientDetaiImpl","_x20","_x21","getFromByUserTaskId","_getFromByUserTaskId","userTaskId","_x22","_x23","getListAttachmentsUserTask","_getListAttachmentsUserTask","_data$headers$get2","_x24","_x25","_x26","_x27","getListFileReview","_getListFileReview","endpoint","_x28","_x29","_x30","actionTicket","_actionTicket","_recipientDetailsId","_ticketId","_userTaskId","typeOfAction","_x31","_x32","_x33","_x34","_x35","_x36","getFormVersionByTicketAndUserTaskId","_getFormVersionByTicketAndUserTaskId","_x37","_x38","updateFormData","_updateFormData","_x39","_x40","updateFormDataSameVersion","_updateFormDataSameVersion","_x41","finishTicketRecipient","_finishTicketRecipient","_x42","getFormDataByUserTaskId","_getFormDataByUserTaskId","_x43","_x44","createPersonalEkyc","_createPersonalEkyc","_x45","_x46","createInformationOCR","_createInformationOCR","_x47","getListTaskSLA","_getListTaskSLA","_x48","getHistoryEkycDetail","_getHistoryEkycDetail","_x49","getEkycRepoById","_getEkycRepoById","_x50","getAllTypesOfEkyc","_getAllTypesOfEkyc","_x51","getDataEkycByType","_getDataEkycByType","_x52","getResourceById","_getResourceById","_x53","getUserInfoModel","_getUserInfoModel","_data$headers$get3","_x54","_x55","getDataOrgByOrgin","_getDataOrgByOrgin","orgIn","_x56","updatePermissionOrg","_updatePermissionOrg","_x57","_x58","getListTaskByTicketIdAndUsertaskId","_getListTaskByTicketIdAndUsertaskId","_x59","_x60","getListTaskByListId","_getListTaskByListId","listId","_x61","getListFormIdByTicketId","_getListFormIdByTicketId","_x62","findUserByOrgIn","_findUserByOrgIn","page","size","search","custId","length","undefined","payload","advanced","contactId","resourceIds","field","from","ids","keyWord","owner","q","recipientId","recipientRole","refId","resource","terms","to","Object","assign","isPublic","_data$headers$get4","_x63","_x64","_x65","_x66","getFormByUserTaskIdAndTicketId","_getFormByUserTaskIdAndTicketId","_x67","_x68"],"sourceRoot":""}