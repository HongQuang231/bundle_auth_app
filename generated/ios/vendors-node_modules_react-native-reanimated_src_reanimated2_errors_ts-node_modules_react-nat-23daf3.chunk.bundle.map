{"version":3,"file":"vendors-node_modules_react-native-reanimated_src_reanimated2_errors_ts-node_modules_react-nat-23daf3.chunk.bundle","mappings":"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","sources":["webpack:///./node_modules/react-native-reanimated/src/reanimated2/core.ts","webpack:///./node_modules/react-native-reanimated/src/reanimated2/errors.ts","webpack:///./node_modules/react-native-reanimated/src/reanimated2/fabricUtils.ts","webpack:///./node_modules/react-native-reanimated/src/reanimated2/frameCallback/FrameCallbackRegistryJS.ts","webpack:///./node_modules/react-native-reanimated/src/reanimated2/frameCallback/FrameCallbackRegistryUI.ts","webpack:///./node_modules/react-native-reanimated/src/reanimated2/hook/index.ts","webpack:///./node_modules/react-native-reanimated/src/reanimated2/hook/useAnimatedGestureHandler.ts","webpack:///./node_modules/react-native-reanimated/src/reanimated2/hook/useAnimatedKeyboard.ts","webpack:///./node_modules/react-native-reanimated/src/reanimated2/hook/useAnimatedProps.ts","webpack:///./node_modules/react-native-reanimated/src/reanimated2/hook/useAnimatedReaction.ts","webpack:///./node_modules/react-native-reanimated/src/reanimated2/hook/useAnimatedRef.ts","webpack:///./node_modules/react-native-reanimated/src/reanimated2/hook/useAnimatedScrollHandler.ts","webpack:///./node_modules/react-native-reanimated/src/reanimated2/hook/useAnimatedSensor.ts","webpack:///./node_modules/react-native-reanimated/src/reanimated2/hook/useAnimatedStyle.ts","webpack:///./node_modules/react-native-reanimated/src/reanimated2/hook/useComposedEventHandler.ts","webpack:///./node_modules/react-native-reanimated/src/reanimated2/hook/useDerivedValue.ts","webpack:///./node_modules/react-native-reanimated/src/reanimated2/hook/useEvent.ts","webpack:///./node_modules/react-native-reanimated/src/reanimated2/hook/useFrameCallback.ts","webpack:///./node_modules/react-native-reanimated/src/reanimated2/hook/useHandler.ts","webpack:///./node_modules/react-native-reanimated/src/reanimated2/hook/useReducedMotion.ts","webpack:///./node_modules/react-native-reanimated/src/reanimated2/hook/useScrollViewOffset.ts","webpack:///./node_modules/react-native-reanimated/src/reanimated2/hook/useSharedValue.ts","webpack:///./node_modules/react-native-reanimated/src/reanimated2/hook/useWorkletCallback.ts","webpack:///./node_modules/react-native-reanimated/src/reanimated2/hook/utils.ts"],"sourcesContent":["'use strict';\nimport NativeReanimatedModule from './NativeReanimated';\nimport { isWeb, shouldBeUseWeb, isFabric } from './PlatformChecker';\nimport type {\n  AnimatedKeyboardOptions,\n  SensorConfig,\n  SensorType,\n  SharedValue,\n  Value3D,\n  ValueRotation,\n} from './commonTypes';\nimport { makeShareableCloneRecursive } from './shareables';\nimport { initializeUIRuntime } from './initializers';\nimport type { LayoutAnimationBatchItem } from './layoutReanimation/animationBuilder/commonTypes';\nimport { SensorContainer } from './SensorContainer';\n\nexport { startMapper, stopMapper } from './mappers';\nexport { runOnJS, runOnUI, executeOnUIRuntimeSync } from './threads';\nexport { createWorkletRuntime, runOnRuntime } from './runtimes';\nexport type { WorkletRuntime } from './runtimes';\nexport { makeShareable, makeShareableCloneRecursive } from './shareables';\nexport { makeMutable } from './mutables';\n\nconst SHOULD_BE_USE_WEB = shouldBeUseWeb();\n\n/**\n * @returns `true` in Reanimated 3, doesn't exist in Reanimated 2 or 1\n */\nexport const isReanimated3 = () => true;\n\n// Superseded by check in `/src/threads.ts`.\n// Used by `react-navigation` to detect if using Reanimated 2 or 3.\n/**\n * @deprecated This function was superseded by other checks.\n * We keep it here for backward compatibility reasons.\n * If you need to check if you are using Reanimated 3 or Reanimated 2\n * please use `isReanimated3` function instead.\n * @returns `true` in Reanimated 3, doesn't exist in Reanimated 2\n */\nexport const isConfigured = isReanimated3;\n\n// this is for web implementation\nif (SHOULD_BE_USE_WEB) {\n  global._WORKLET = false;\n  global._log = console.log;\n  global._getAnimationTimestamp = () => performance.now();\n}\n\nexport function getViewProp<T>(\n  viewTag: number,\n  propName: string,\n  component?: React.Component // required on Fabric\n): Promise<T> {\n  if (isFabric() && !component) {\n    throw new Error(\n      '[Reanimated] Function `getViewProp` requires a component to be passed as an argument on Fabric.'\n    );\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-misused-promises\n  return new Promise((resolve, reject) => {\n    return NativeReanimatedModule.getViewProp(\n      viewTag,\n      propName,\n      component,\n      (result: T) => {\n        if (typeof result === 'string' && result.substr(0, 6) === 'error:') {\n          reject(result);\n        } else {\n          resolve(result);\n        }\n      }\n    );\n  });\n}\n\nfunction getSensorContainer(): SensorContainer {\n  if (!global.__sensorContainer) {\n    global.__sensorContainer = new SensorContainer();\n  }\n  return global.__sensorContainer;\n}\n\nexport function registerEventHandler<T>(\n  eventHandler: (event: T) => void,\n  eventName: string,\n  emitterReactTag = -1\n): number {\n  function handleAndFlushAnimationFrame(eventTimestamp: number, event: T) {\n    'worklet';\n    global.__frameTimestamp = eventTimestamp;\n    eventHandler(event);\n    global.__flushAnimationFrame(eventTimestamp);\n    global.__frameTimestamp = undefined;\n  }\n  return NativeReanimatedModule.registerEventHandler(\n    makeShareableCloneRecursive(handleAndFlushAnimationFrame),\n    eventName,\n    emitterReactTag\n  );\n}\n\nexport function unregisterEventHandler(id: number): void {\n  return NativeReanimatedModule.unregisterEventHandler(id);\n}\n\nexport function subscribeForKeyboardEvents(\n  eventHandler: (state: number, height: number) => void,\n  options: AnimatedKeyboardOptions\n): number {\n  // TODO: this should really go with the same code path as other events, that is\n  // via registerEventHandler. For now we are copying the code from there.\n  function handleAndFlushAnimationFrame(state: number, height: number) {\n    'worklet';\n    const now = global._getAnimationTimestamp();\n    global.__frameTimestamp = now;\n    eventHandler(state, height);\n    global.__flushAnimationFrame(now);\n    global.__frameTimestamp = undefined;\n  }\n  return NativeReanimatedModule.subscribeForKeyboardEvents(\n    makeShareableCloneRecursive(handleAndFlushAnimationFrame),\n    options.isStatusBarTranslucentAndroid ?? false\n  );\n}\n\nexport function unsubscribeFromKeyboardEvents(listenerId: number): void {\n  return NativeReanimatedModule.unsubscribeFromKeyboardEvents(listenerId);\n}\n\nexport function registerSensor(\n  sensorType: SensorType,\n  config: SensorConfig,\n  eventHandler: (\n    data: Value3D | ValueRotation,\n    orientationDegrees: number\n  ) => void\n): number {\n  const sensorContainer = getSensorContainer();\n  return sensorContainer.registerSensor(\n    sensorType,\n    config,\n    makeShareableCloneRecursive(eventHandler)\n  );\n}\n\nexport function initializeSensor(\n  sensorType: SensorType,\n  config: SensorConfig\n): SharedValue<Value3D | ValueRotation> {\n  const sensorContainer = getSensorContainer();\n  return sensorContainer.initializeSensor(sensorType, config);\n}\n\nexport function unregisterSensor(sensorId: number): void {\n  const sensorContainer = getSensorContainer();\n  return sensorContainer.unregisterSensor(sensorId);\n}\n\nif (!isWeb()) {\n  initializeUIRuntime();\n}\n\ntype FeaturesConfig = {\n  enableLayoutAnimations: boolean;\n  setByUser: boolean;\n};\n\nlet featuresConfig: FeaturesConfig = {\n  enableLayoutAnimations: false,\n  setByUser: false,\n};\n\nexport function enableLayoutAnimations(\n  flag: boolean,\n  isCallByUser = true\n): void {\n  if (isCallByUser) {\n    featuresConfig = {\n      enableLayoutAnimations: flag,\n      setByUser: true,\n    };\n    NativeReanimatedModule.enableLayoutAnimations(flag);\n  } else if (\n    !featuresConfig.setByUser &&\n    featuresConfig.enableLayoutAnimations !== flag\n  ) {\n    featuresConfig.enableLayoutAnimations = flag;\n    NativeReanimatedModule.enableLayoutAnimations(flag);\n  }\n}\n\nexport function configureLayoutAnimationBatch(\n  layoutAnimationsBatch: LayoutAnimationBatchItem[]\n): void {\n  NativeReanimatedModule.configureLayoutAnimationBatch(layoutAnimationsBatch);\n}\n\nexport function setShouldAnimateExitingForTag(\n  viewTag: number | HTMLElement,\n  shouldAnimate: boolean\n) {\n  NativeReanimatedModule.setShouldAnimateExitingForTag(\n    viewTag as number,\n    shouldAnimate\n  );\n}\n\nexport function jsiConfigureProps(\n  uiProps: string[],\n  nativeProps: string[]\n): void {\n  if (!SHOULD_BE_USE_WEB) {\n    NativeReanimatedModule.configureProps(uiProps, nativeProps);\n  }\n}\n","'use strict';\nimport type { WorkletStackDetails } from './commonTypes';\n\nconst _workletStackDetails = new Map<number, WorkletStackDetails>();\n\nexport function registerWorkletStackDetails(\n  hash: number,\n  stackDetails: WorkletStackDetails\n) {\n  _workletStackDetails.set(hash, stackDetails);\n}\n\nfunction getBundleOffset(error: Error): [string, number, number] {\n  const frame = error.stack?.split('\\n')?.[0];\n  if (frame) {\n    const parsedFrame = /@([^@]+):(\\d+):(\\d+)/.exec(frame);\n    if (parsedFrame) {\n      const [, file, line, col] = parsedFrame;\n      return [file, Number(line), Number(col)];\n    }\n  }\n  return ['unknown', 0, 0];\n}\n\nfunction processStack(stack: string): string {\n  const workletStackEntries = stack.match(/worklet_(\\d+):(\\d+):(\\d+)/g);\n  let result = stack;\n  workletStackEntries?.forEach((match) => {\n    const [, hash, origLine, origCol] = match.split(/:|_/).map(Number);\n    const errorDetails = _workletStackDetails.get(hash);\n    if (!errorDetails) {\n      return;\n    }\n    const [error, lineOffset, colOffset] = errorDetails;\n    const [bundleFile, bundleLine, bundleCol] = getBundleOffset(error);\n    const line = origLine + bundleLine + lineOffset;\n    const col = origCol + bundleCol + colOffset;\n\n    result = result.replace(match, `${bundleFile}:${line}:${col}`);\n  });\n  return result;\n}\n\nexport function reportFatalErrorOnJS({\n  message,\n  stack,\n}: {\n  message: string;\n  stack?: string;\n}) {\n  const error = new Error();\n  error.message = message;\n  error.stack = stack ? processStack(stack) : undefined;\n  error.name = 'ReanimatedError';\n  // @ts-ignore React Native's ErrorUtils implementation extends the Error type with jsEngine field\n  error.jsEngine = 'reanimated';\n  // @ts-ignore the reportFatalError method is an internal method of ErrorUtils not exposed in the type definitions\n  global.ErrorUtils.reportFatalError(error);\n}\n","'use strict';\n/* eslint-disable */\n\nimport type { ShadowNodeWrapper } from './commonTypes';\n\nlet findHostInstance_DEPRECATED: (ref: unknown) => void;\nlet getInternalInstanceHandleFromPublicInstance: (ref: unknown) => {\n  stateNode: { node: unknown };\n};\n\nexport function getShadowNodeWrapperFromRef(\n  ref: React.Component\n): ShadowNodeWrapper {\n  // load findHostInstance_DEPRECATED lazily because it may not be available before render\n  if (findHostInstance_DEPRECATED === undefined) {\n    try {\n      findHostInstance_DEPRECATED =\n        require('react-native/Libraries/Renderer/shims/ReactFabric').findHostInstance_DEPRECATED;\n    } catch (e) {\n      findHostInstance_DEPRECATED = (_ref: unknown) => null;\n    }\n  }\n\n  if (getInternalInstanceHandleFromPublicInstance === undefined) {\n    try {\n      getInternalInstanceHandleFromPublicInstance =\n        require('react-native/Libraries/ReactNative/ReactFabricPublicInstance/ReactFabricPublicInstance')\n          .getInternalInstanceHandleFromPublicInstance ??\n        ((_ref: any) => _ref._internalInstanceHandle);\n    } catch (e) {\n      getInternalInstanceHandleFromPublicInstance = (_ref: any) =>\n        _ref._internalInstanceHandle;\n    }\n  }\n\n  // taken from https://github.com/facebook/react-native/commit/803bb16531697233686efd475f004c1643e03617#diff-d8172256c6d63b5d32db10e54d7b10f37a26b337d5280d89f5bfd7bcea778292R196\n  // @ts-ignore some weird stuff on RN 0.74 - see examples with scrollView\n  const scrollViewRef = ref?.getScrollResponder?.()?.getNativeScrollRef?.();\n  // @ts-ignore some weird stuff on RN 0.74  - see examples with scrollView\n  const otherScrollViewRef = ref?.getNativeScrollRef?.();\n  // @ts-ignore some weird stuff on RN 0.74 - see setNativeProps example\n  const textInputRef = ref?.__internalInstanceHandle?.stateNode?.node;\n\n  let resolvedRef;\n  if (scrollViewRef) {\n    resolvedRef = scrollViewRef.__internalInstanceHandle.stateNode.node;\n  } else if (otherScrollViewRef) {\n    resolvedRef = otherScrollViewRef.__internalInstanceHandle.stateNode.node;\n  } else if (textInputRef) {\n    resolvedRef = textInputRef;\n  } else {\n    resolvedRef = getInternalInstanceHandleFromPublicInstance(\n      findHostInstance_DEPRECATED(ref)\n    ).stateNode.node;\n  }\n\n  return resolvedRef;\n}\n","'use strict';\nimport { runOnUI } from '../core';\nimport type { FrameInfo } from './FrameCallbackRegistryUI';\nimport { prepareUIRegistry } from './FrameCallbackRegistryUI';\n\nexport default class FrameCallbackRegistryJS {\n  private nextCallbackId = 0;\n\n  constructor() {\n    prepareUIRegistry();\n  }\n\n  registerFrameCallback(callback: (frameInfo: FrameInfo) => void): number {\n    if (!callback) {\n      return -1;\n    }\n\n    const callbackId = this.nextCallbackId;\n    this.nextCallbackId++;\n\n    runOnUI(() => {\n      global._frameCallbackRegistry.registerFrameCallback(callback, callbackId);\n    })();\n\n    return callbackId;\n  }\n\n  unregisterFrameCallback(callbackId: number): void {\n    runOnUI(() => {\n      global._frameCallbackRegistry.unregisterFrameCallback(callbackId);\n    })();\n  }\n\n  manageStateFrameCallback(callbackId: number, state: boolean): void {\n    runOnUI(() => {\n      global._frameCallbackRegistry.manageStateFrameCallback(callbackId, state);\n    })();\n  }\n}\n","'use strict';\nimport { runOnUIImmediately } from '../threads';\n\ntype CallbackDetails = {\n  callback: (frameInfo: FrameInfo) => void;\n  startTime: number | null;\n};\n\nexport type FrameInfo = {\n  timestamp: number;\n  timeSincePreviousFrame: number | null;\n  timeSinceFirstFrame: number;\n};\n\nexport interface FrameCallbackRegistryUI {\n  frameCallbackRegistry: Map<number, CallbackDetails>;\n  activeFrameCallbacks: Set<number>;\n  previousFrameTimestamp: number | null;\n  runCallbacks: (callId: number) => void;\n  nextCallId: number;\n  registerFrameCallback: (\n    callback: (frameInfo: FrameInfo) => void,\n    callbackId: number\n  ) => void;\n  unregisterFrameCallback: (callbackId: number) => void;\n  manageStateFrameCallback: (callbackId: number, state: boolean) => void;\n}\n\nexport const prepareUIRegistry = runOnUIImmediately(() => {\n  'worklet';\n\n  const frameCallbackRegistry: FrameCallbackRegistryUI = {\n    frameCallbackRegistry: new Map<number, CallbackDetails>(),\n    activeFrameCallbacks: new Set<number>(),\n    previousFrameTimestamp: null,\n    nextCallId: 0,\n\n    runCallbacks(callId) {\n      const loop = (timestamp: number) => {\n        if (callId !== this.nextCallId) {\n          return;\n        }\n        if (this.previousFrameTimestamp === null) {\n          this.previousFrameTimestamp = timestamp;\n        }\n\n        const delta = timestamp - this.previousFrameTimestamp;\n\n        this.activeFrameCallbacks.forEach((callbackId: number) => {\n          const callbackDetails = this.frameCallbackRegistry.get(callbackId)!;\n\n          const { startTime } = callbackDetails;\n\n          if (startTime === null) {\n            // First frame\n            callbackDetails.startTime = timestamp;\n\n            callbackDetails.callback({\n              timestamp,\n              timeSincePreviousFrame: null,\n              timeSinceFirstFrame: 0,\n            });\n          } else {\n            // Next frame\n            callbackDetails.callback({\n              timestamp,\n              timeSincePreviousFrame: delta,\n              timeSinceFirstFrame: timestamp - startTime,\n            });\n          }\n        });\n\n        if (this.activeFrameCallbacks.size > 0) {\n          this.previousFrameTimestamp = timestamp;\n          requestAnimationFrame(loop);\n        } else {\n          this.previousFrameTimestamp = null;\n        }\n      };\n\n      // runCallback() should only be called after registering a callback,\n      // so if there is only one active callback, then it means that there were\n      // zero previously and the loop isn't running yet.\n      if (this.activeFrameCallbacks.size === 1 && callId === this.nextCallId) {\n        requestAnimationFrame(loop);\n      }\n    },\n\n    registerFrameCallback(\n      callback: (frameInfo: FrameInfo) => void,\n      callbackId: number\n    ) {\n      this.frameCallbackRegistry.set(callbackId, {\n        callback,\n        startTime: null,\n      });\n    },\n\n    unregisterFrameCallback(callbackId: number) {\n      this.manageStateFrameCallback(callbackId, false);\n      this.frameCallbackRegistry.delete(callbackId);\n    },\n\n    manageStateFrameCallback(callbackId: number, state: boolean) {\n      if (callbackId === -1) {\n        return;\n      }\n      if (state) {\n        this.activeFrameCallbacks.add(callbackId);\n        this.runCallbacks(this.nextCallId);\n      } else {\n        const callback = this.frameCallbackRegistry.get(callbackId)!;\n        callback.startTime = null;\n\n        this.activeFrameCallbacks.delete(callbackId);\n        if (this.activeFrameCallbacks.size === 0) {\n          this.nextCallId += 1;\n        }\n      }\n    },\n  };\n\n  global._frameCallbackRegistry = frameCallbackRegistry;\n});\n","'use strict';\nexport type {\n  DependencyList,\n  AnimatedRef,\n  ReanimatedScrollEvent as ScrollEvent,\n  ReanimatedEvent,\n} from './commonTypes';\nexport { useAnimatedProps } from './useAnimatedProps';\nexport { useWorkletCallback } from './useWorkletCallback';\nexport { useSharedValue } from './useSharedValue';\nexport { useReducedMotion } from './useReducedMotion';\nexport { useAnimatedStyle } from './useAnimatedStyle';\nexport { useAnimatedGestureHandler } from './useAnimatedGestureHandler';\nexport type {\n  GestureHandlerEvent,\n  GestureHandlers,\n} from './useAnimatedGestureHandler';\nexport { useAnimatedReaction } from './useAnimatedReaction';\nexport { useAnimatedRef } from './useAnimatedRef';\nexport { useAnimatedScrollHandler } from './useAnimatedScrollHandler';\nexport type {\n  ScrollHandler,\n  ScrollHandlers,\n  ScrollHandlerProcessed,\n  ScrollHandlerInternal,\n} from './useAnimatedScrollHandler';\nexport { useDerivedValue } from './useDerivedValue';\nexport type { DerivedValue } from './useDerivedValue';\nexport { useAnimatedSensor } from './useAnimatedSensor';\nexport { useFrameCallback } from './useFrameCallback';\nexport type { FrameCallback } from './useFrameCallback';\nexport { useAnimatedKeyboard } from './useAnimatedKeyboard';\nexport { useScrollViewOffset } from './useScrollViewOffset';\nexport type {\n  EventHandler,\n  EventHandlerProcessed,\n  EventHandlerInternal,\n} from './useEvent';\nexport { useEvent } from './useEvent';\nexport type { UseHandlerContext } from './useHandler';\nexport { useHandler } from './useHandler';\nexport { useComposedEventHandler } from './useComposedEventHandler';\n","'use strict';\nimport type {\n  DependencyList,\n  NativeEventWrapper,\n  ReanimatedEvent,\n} from './commonTypes';\nimport { useHandler } from './useHandler';\nimport { useEvent } from './useEvent';\n\nconst EVENT_TYPE = {\n  UNDETERMINED: 0,\n  FAILED: 1,\n  BEGAN: 2,\n  CANCELLED: 3,\n  ACTIVE: 4,\n  END: 5,\n} as const;\n\ntype StateType = (typeof EVENT_TYPE)[keyof typeof EVENT_TYPE];\n\n// This type comes from React Native Gesture Handler\n// import type { PanGestureHandlerGestureEvent as DefaultEvent } from 'react-native-gesture-handler';\ntype DefaultEvent = {\n  nativeEvent: {\n    readonly handlerTag: number;\n    readonly numberOfPointers: number;\n    readonly state: (typeof EVENT_TYPE)[keyof typeof EVENT_TYPE];\n    readonly x: number;\n    readonly y: number;\n    readonly absoluteX: number;\n    readonly absoluteY: number;\n    readonly translationX: number;\n    readonly translationY: number;\n    readonly velocityX: number;\n    readonly velocityY: number;\n  };\n};\n\ninterface PropsUsedInUseAnimatedGestureHandler {\n  handlerTag?: number;\n  numberOfPointers?: number;\n  state?: StateType;\n  oldState?: StateType;\n}\n\nexport type GestureHandlerEvent<Event extends object> =\n  | ReanimatedEvent<Event>\n  | Event;\n\ntype GestureHandler<\n  Event extends NativeEventWrapper<PropsUsedInUseAnimatedGestureHandler>,\n  Context extends Record<string, unknown>\n> = (\n  eventPayload: ReanimatedEvent<Event>,\n  context: Context,\n  isCanceledOrFailed?: boolean\n) => void;\n\nexport interface GestureHandlers<\n  Event extends NativeEventWrapper<PropsUsedInUseAnimatedGestureHandler>,\n  Context extends Record<string, unknown>\n> {\n  [key: string]: GestureHandler<Event, Context> | undefined;\n  onStart?: GestureHandler<Event, Context>;\n  onActive?: GestureHandler<Event, Context>;\n  onEnd?: GestureHandler<Event, Context>;\n  onFail?: GestureHandler<Event, Context>;\n  onCancel?: GestureHandler<Event, Context>;\n  onFinish?: GestureHandler<Event, Context>;\n}\n\n/**\n * @deprecated useAnimatedGestureHandler is an old API which is no longer supported.\n *\n * Please check https://docs.swmansion.com/react-native-gesture-handler/docs/guides/upgrading-to-2/\n * for information about how to migrate to `react-native-gesture-handler` v2\n */\nexport function useAnimatedGestureHandler<\n  Event extends NativeEventWrapper<PropsUsedInUseAnimatedGestureHandler> = DefaultEvent,\n  Context extends Record<string, unknown> = Record<string, unknown>\n>(handlers: GestureHandlers<Event, Context>, dependencies?: DependencyList) {\n  type WebOrNativeEvent = Event | ReanimatedEvent<Event>;\n\n  const { context, doDependenciesDiffer, useWeb } = useHandler<Event, Context>(\n    handlers,\n    dependencies\n  );\n  const handler = (e: WebOrNativeEvent) => {\n    'worklet';\n    const event = useWeb\n      ? // On Web we get events straight from React Native and they don't have\n        // the `eventName` field there. To simplify the types here we just\n        // cast it as the field was available.\n        ((e as Event).nativeEvent as ReanimatedEvent<Event>)\n      : (e as ReanimatedEvent<Event>);\n\n    if (event.state === EVENT_TYPE.BEGAN && handlers.onStart) {\n      handlers.onStart(event, context);\n    }\n    if (event.state === EVENT_TYPE.ACTIVE && handlers.onActive) {\n      handlers.onActive(event, context);\n    }\n    if (\n      event.oldState === EVENT_TYPE.ACTIVE &&\n      event.state === EVENT_TYPE.END &&\n      handlers.onEnd\n    ) {\n      handlers.onEnd(event, context);\n    }\n    if (\n      event.oldState === EVENT_TYPE.BEGAN &&\n      event.state === EVENT_TYPE.FAILED &&\n      handlers.onFail\n    ) {\n      handlers.onFail(event, context);\n    }\n    if (\n      event.oldState === EVENT_TYPE.ACTIVE &&\n      event.state === EVENT_TYPE.CANCELLED &&\n      handlers.onCancel\n    ) {\n      handlers.onCancel(event, context);\n    }\n    if (\n      (event.oldState === EVENT_TYPE.BEGAN ||\n        event.oldState === EVENT_TYPE.ACTIVE) &&\n      event.state !== EVENT_TYPE.BEGAN &&\n      event.state !== EVENT_TYPE.ACTIVE &&\n      handlers.onFinish\n    ) {\n      handlers.onFinish(\n        event,\n        context,\n        event.state === EVENT_TYPE.CANCELLED ||\n          event.state === EVENT_TYPE.FAILED\n      );\n    }\n  };\n\n  if (useWeb) {\n    return handler;\n  }\n\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  return useEvent<Event>(\n    handler,\n    ['onGestureHandlerStateChange', 'onGestureHandlerEvent'],\n    doDependenciesDiffer\n    // This is not correct but we want to make GH think it receives a function.\n  ) as unknown as (e: Event) => void;\n}\n","'use strict';\nimport { useEffect, useRef } from 'react';\nimport {\n  makeMutable,\n  subscribeForKeyboardEvents,\n  unsubscribeFromKeyboardEvents,\n} from '../core';\nimport type {\n  AnimatedKeyboardInfo,\n  AnimatedKeyboardOptions,\n} from '../commonTypes';\nimport { KeyboardState } from '../commonTypes';\n\n/**\n * Lets you synchronously get the position and state of the keyboard.\n *\n * @param options - An additional keyboard configuration options.\n * @returns An object with the current keyboard `height` and `state` as [shared values](https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/glossary#shared-value).\n * @see https://docs.swmansion.com/react-native-reanimated/docs/device/useAnimatedKeyboard\n */\nexport function useAnimatedKeyboard(\n  options: AnimatedKeyboardOptions = { isStatusBarTranslucentAndroid: false }\n): AnimatedKeyboardInfo {\n  const ref = useRef<AnimatedKeyboardInfo | null>(null);\n  const listenerId = useRef<number>(-1);\n  const isSubscribed = useRef<boolean>(false);\n\n  if (ref.current === null) {\n    const keyboardEventData: AnimatedKeyboardInfo = {\n      state: makeMutable<KeyboardState>(KeyboardState.UNKNOWN),\n      height: makeMutable(0),\n    };\n    listenerId.current = subscribeForKeyboardEvents((state, height) => {\n      'worklet';\n      keyboardEventData.state.value = state;\n      keyboardEventData.height.value = height;\n    }, options);\n    ref.current = keyboardEventData;\n    isSubscribed.current = true;\n  }\n  useEffect(() => {\n    if (isSubscribed.current === false && ref.current !== null) {\n      const keyboardEventData = ref.current;\n      // subscribe again after Fast Refresh\n      listenerId.current = subscribeForKeyboardEvents((state, height) => {\n        'worklet';\n        keyboardEventData.state.value = state;\n        keyboardEventData.height.value = height;\n      }, options);\n      isSubscribed.current = true;\n    }\n    return () => {\n      unsubscribeFromKeyboardEvents(listenerId.current);\n      isSubscribed.current = false;\n    };\n  }, []);\n  return ref.current;\n}\n","'use strict';\nimport { useAnimatedStyle } from './useAnimatedStyle';\nimport type { DependencyList, UseAnimatedStyleInternal } from './commonTypes';\nimport { shouldBeUseWeb } from '../PlatformChecker';\nimport type { AnimatedPropsAdapterFunction } from '../commonTypes';\n\n// TODO: we should make sure that when useAP is used we are not assigning styles\n\ntype UseAnimatedProps = <Props extends object>(\n  updater: () => Partial<Props>,\n  dependencies?: DependencyList | null,\n  adapters?:\n    | AnimatedPropsAdapterFunction\n    | AnimatedPropsAdapterFunction[]\n    | null,\n  isAnimatedProps?: boolean\n) => Partial<Props>;\n\nfunction useAnimatedPropsJS<Props extends object>(\n  updater: () => Props,\n  deps?: DependencyList | null,\n  adapters?:\n    | AnimatedPropsAdapterFunction\n    | AnimatedPropsAdapterFunction[]\n    | null\n) {\n  return (useAnimatedStyle as UseAnimatedStyleInternal<Props>)(\n    updater,\n    deps,\n    adapters,\n    true\n  );\n}\n\nconst useAnimatedPropsNative = useAnimatedStyle;\n\n/**\n * Lets you create an animated props object which can be animated using shared values.\n *\n * @param updater - A function returning an object with properties you want to animate.\n * @param dependencies - An optional array of dependencies. Only relevant when using Reanimated without the Babel plugin on the Web.\n * @param adapters - An optional function or array of functions allowing to adopt prop naming between JS and the native side.\n * @returns An animated props object which has to be passed to `animatedProps` property of an Animated component that you want to animate.\n * @see https://docs.swmansion.com/react-native-reanimated/docs/core/useAnimatedProps\n */\nexport const useAnimatedProps: UseAnimatedProps = shouldBeUseWeb()\n  ? (useAnimatedPropsJS as UseAnimatedProps)\n  : useAnimatedPropsNative;\n","'use strict';\nimport { useEffect } from 'react';\nimport type { WorkletFunction } from '../commonTypes';\nimport { startMapper, stopMapper } from '../core';\nimport type { DependencyList } from './commonTypes';\nimport { useSharedValue } from './useSharedValue';\nimport { shouldBeUseWeb } from '../PlatformChecker';\n\n/**\n * Lets you to respond to changes in a [shared value](https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/glossary#shared-value). It's especially useful when comparing values previously stored in the shared value with the current one.\n *\n * @param prepare - A function that should return a value to which you'd like to react.\n * @param react - A function that reacts to changes in the value returned by the `prepare` function.\n * @param dependencies - an optional array of dependencies. Only relevant when using Reanimated without the Babel plugin on the Web.\n * @see https://docs.swmansion.com/react-native-reanimated/docs/advanced/useAnimatedReaction\n */\n// @ts-expect-error This overload is required by our API.\nexport function useAnimatedReaction<PreparedResult>(\n  prepare: () => PreparedResult,\n  react: (prepared: PreparedResult, previous: PreparedResult | null) => void,\n  dependencies?: DependencyList\n): void;\n\nexport function useAnimatedReaction<PreparedResult>(\n  prepare: WorkletFunction<[], PreparedResult>,\n  react: WorkletFunction<\n    [prepare: PreparedResult, previous: PreparedResult | null],\n    void\n  >,\n  dependencies?: DependencyList\n) {\n  const previous = useSharedValue<PreparedResult | null>(null);\n\n  let inputs = Object.values(prepare.__closure ?? {});\n\n  if (shouldBeUseWeb()) {\n    if (!inputs.length && dependencies?.length) {\n      // let web work without a Reanimated Babel plugin\n      inputs = dependencies;\n    }\n  }\n\n  if (dependencies === undefined) {\n    dependencies = [\n      ...Object.values(prepare.__closure ?? {}),\n      ...Object.values(react.__closure ?? {}),\n      prepare.__workletHash,\n      react.__workletHash,\n    ];\n  } else {\n    dependencies.push(prepare.__workletHash, react.__workletHash);\n  }\n\n  useEffect(() => {\n    const fun = () => {\n      'worklet';\n      const input = prepare();\n      react(input, previous.value);\n      previous.value = input;\n    };\n    const mapperId = startMapper(fun, inputs);\n    return () => {\n      stopMapper(mapperId);\n    };\n  }, dependencies);\n}\n","'use strict';\nimport type { Component } from 'react';\nimport { useRef } from 'react';\nimport { useSharedValue } from './useSharedValue';\nimport type { AnimatedRef, AnimatedRefOnUI } from './commonTypes';\nimport type { ShadowNodeWrapper } from '../commonTypes';\nimport { getShadowNodeWrapperFromRef } from '../fabricUtils';\nimport { makeShareableCloneRecursive } from '../shareables';\nimport { shareableMappingCache } from '../shareableMappingCache';\nimport { Platform, findNodeHandle } from 'react-native';\nimport type { ScrollView, FlatList } from 'react-native';\nimport { isFabric, isWeb } from '../PlatformChecker';\n\nconst IS_WEB = isWeb();\n\ninterface MaybeScrollableComponent extends Component {\n  getNativeScrollRef?: FlatList['getNativeScrollRef'];\n  getScrollableNode?:\n    | ScrollView['getScrollableNode']\n    | FlatList['getScrollableNode'];\n  viewConfig?: {\n    uiViewClassName?: string;\n  };\n}\n\nfunction getComponentOrScrollable(component: MaybeScrollableComponent) {\n  if (isFabric() && component.getNativeScrollRef) {\n    return component.getNativeScrollRef();\n  } else if (!isFabric() && component.getScrollableNode) {\n    return component.getScrollableNode();\n  }\n  return component;\n}\n\n/**\n * Lets you get a reference of a view that you can use inside a worklet.\n *\n * @returns An object with a `.current` property which contains an instance of a component.\n * @see https://docs.swmansion.com/react-native-reanimated/docs/core/useAnimatedRef\n */\nexport function useAnimatedRef<\n  TComponent extends Component\n>(): AnimatedRef<TComponent> {\n  const tag = useSharedValue<number | ShadowNodeWrapper | null>(-1);\n  const viewName = useSharedValue<string | null>(null);\n\n  const ref = useRef<AnimatedRef<TComponent>>();\n\n  if (!ref.current) {\n    const fun: AnimatedRef<TComponent> = <AnimatedRef<TComponent>>((\n      component\n    ) => {\n      // enters when ref is set by attaching to a component\n      if (component) {\n        const getTagValueFunction = isFabric()\n          ? getShadowNodeWrapperFromRef\n          : findNodeHandle;\n\n        const getTagOrShadowNodeWrapper = () => {\n          return IS_WEB\n            ? getComponentOrScrollable(component)\n            : getTagValueFunction(getComponentOrScrollable(component));\n        };\n\n        tag.value = getTagOrShadowNodeWrapper();\n\n        // On Fabric we have to unwrap the tag from the shadow node wrapper\n        fun.getTag = isFabric()\n          ? () => findNodeHandle(getComponentOrScrollable(component))\n          : getTagOrShadowNodeWrapper;\n\n        fun.current = component;\n        // viewName is required only on iOS with Paper\n        if (Platform.OS === 'ios' && !isFabric()) {\n          viewName.value =\n            (component as MaybeScrollableComponent)?.viewConfig\n              ?.uiViewClassName || 'RCTView';\n        }\n      }\n      return tag.value;\n    });\n\n    fun.current = null;\n\n    const animatedRefShareableHandle = makeShareableCloneRecursive({\n      __init: () => {\n        'worklet';\n        const f: AnimatedRefOnUI = () => tag.value;\n        f.viewName = viewName;\n        return f;\n      },\n    });\n    shareableMappingCache.set(fun, animatedRefShareableHandle);\n    ref.current = fun;\n  }\n\n  return ref.current;\n}\n","'use strict';\nimport type {\n  DependencyList,\n  RNNativeScrollEvent,\n  ReanimatedScrollEvent,\n} from './commonTypes';\nimport { useHandler } from './useHandler';\nimport type { EventHandlerInternal, EventHandlerProcessed } from './useEvent';\nimport { useEvent } from './useEvent';\n\nexport type ScrollHandler<\n  Context extends Record<string, unknown> = Record<string, unknown>\n> = (event: ReanimatedScrollEvent, context: Context) => void;\nexport interface ScrollHandlers<Context extends Record<string, unknown>> {\n  onScroll?: ScrollHandler<Context>;\n  onBeginDrag?: ScrollHandler<Context>;\n  onEndDrag?: ScrollHandler<Context>;\n  onMomentumBegin?: ScrollHandler<Context>;\n  onMomentumEnd?: ScrollHandler<Context>;\n}\n\nexport type ScrollHandlerProcessed<\n  Context extends Record<string, unknown> = Record<string, unknown>\n> = EventHandlerProcessed<RNNativeScrollEvent, Context>;\n\nexport type ScrollHandlerInternal = EventHandlerInternal<RNNativeScrollEvent>;\n\n/**\n * Lets you run callbacks on ScrollView events. Supports `onScroll`, `onBeginDrag`, `onEndDrag`, `onMomentumBegin`, and `onMomentumEnd` events.\n *\n * These callbacks are automatically workletized and ran on the UI thread.\n *\n * @param handlers - An object containing event handlers.\n * @param dependencies - An optional array of dependencies. Only relevant when using Reanimated without the Babel plugin on the Web.\n * @returns An object you need to pass to `onScroll` prop on the `Animated.ScrollView` component.\n * @see https://docs.swmansion.com/react-native-reanimated/docs/scroll/useAnimatedScrollHandler\n */\n// @ts-expect-error This overload is required by our API.\nexport function useAnimatedScrollHandler<\n  Context extends Record<string, unknown>\n>(\n  handlers: ScrollHandler<Context> | ScrollHandlers<Context>,\n  dependencies?: DependencyList\n): ScrollHandlerProcessed<Context>;\n\nexport function useAnimatedScrollHandler<\n  Context extends Record<string, unknown>\n>(\n  handlers: ScrollHandlers<Context> | ScrollHandler<Context>,\n  dependencies?: DependencyList\n) {\n  // case when handlers is a function\n  const scrollHandlers: ScrollHandlers<Context> =\n    typeof handlers === 'function' ? { onScroll: handlers } : handlers;\n  const { context, doDependenciesDiffer } = useHandler<\n    RNNativeScrollEvent,\n    Context\n  >(scrollHandlers as Record<string, ScrollHandler<Context>>, dependencies);\n\n  // build event subscription array\n  const subscribeForEvents = ['onScroll'];\n  if (scrollHandlers.onBeginDrag !== undefined) {\n    subscribeForEvents.push('onScrollBeginDrag');\n  }\n  if (scrollHandlers.onEndDrag !== undefined) {\n    subscribeForEvents.push('onScrollEndDrag');\n  }\n  if (scrollHandlers.onMomentumBegin !== undefined) {\n    subscribeForEvents.push('onMomentumScrollBegin');\n  }\n  if (scrollHandlers.onMomentumEnd !== undefined) {\n    subscribeForEvents.push('onMomentumScrollEnd');\n  }\n\n  return useEvent<RNNativeScrollEvent, Context>(\n    (event: ReanimatedScrollEvent) => {\n      'worklet';\n      const {\n        onScroll,\n        onBeginDrag,\n        onEndDrag,\n        onMomentumBegin,\n        onMomentumEnd,\n      } = scrollHandlers;\n      if (onScroll && event.eventName.endsWith('onScroll')) {\n        onScroll(event, context);\n      } else if (onBeginDrag && event.eventName.endsWith('onScrollBeginDrag')) {\n        onBeginDrag(event, context);\n      } else if (onEndDrag && event.eventName.endsWith('onScrollEndDrag')) {\n        onEndDrag(event, context);\n      } else if (\n        onMomentumBegin &&\n        event.eventName.endsWith('onMomentumScrollBegin')\n      ) {\n        onMomentumBegin(event, context);\n      } else if (\n        onMomentumEnd &&\n        event.eventName.endsWith('onMomentumScrollEnd')\n      ) {\n        onMomentumEnd(event, context);\n      }\n    },\n    subscribeForEvents,\n    doDependenciesDiffer\n    // Read https://github.com/software-mansion/react-native-reanimated/pull/5056\n    // for more information about this cast.\n  ) as unknown as ScrollHandlerInternal;\n}\n","'use strict';\nimport { useEffect, useMemo, useRef } from 'react';\nimport { initializeSensor, registerSensor, unregisterSensor } from '../core';\nimport type {\n  SensorConfig,\n  AnimatedSensor,\n  Value3D,\n  ValueRotation,\n} from '../commonTypes';\nimport {\n  SensorType,\n  IOSReferenceFrame,\n  InterfaceOrientation,\n} from '../commonTypes';\nimport { callMicrotasks } from '../threads';\n\n// euler angles are in order ZXY, z = yaw, x = pitch, y = roll\n// https://github.com/mrdoob/three.js/blob/dev/src/math/Quaternion.js#L237\nfunction eulerToQuaternion(pitch: number, roll: number, yaw: number) {\n  'worklet';\n  const c1 = Math.cos(pitch / 2);\n  const s1 = Math.sin(pitch / 2);\n  const c2 = Math.cos(roll / 2);\n  const s2 = Math.sin(roll / 2);\n  const c3 = Math.cos(yaw / 2);\n  const s3 = Math.sin(yaw / 2);\n\n  return [\n    s1 * c2 * c3 - c1 * s2 * s3,\n    c1 * s2 * c3 + s1 * c2 * s3,\n    c1 * c2 * s3 + s1 * s2 * c3,\n    c1 * c2 * c3 - s1 * s2 * s3,\n  ];\n}\n\nfunction adjustRotationToInterfaceOrientation(data: ValueRotation) {\n  'worklet';\n  const { interfaceOrientation, pitch, roll, yaw } = data;\n  if (interfaceOrientation === InterfaceOrientation.ROTATION_90) {\n    data.pitch = roll;\n    data.roll = -pitch;\n    data.yaw = yaw - Math.PI / 2;\n  } else if (interfaceOrientation === InterfaceOrientation.ROTATION_270) {\n    data.pitch = -roll;\n    data.roll = pitch;\n    data.yaw = yaw + Math.PI / 2;\n  } else if (interfaceOrientation === InterfaceOrientation.ROTATION_180) {\n    data.pitch *= -1;\n    data.roll *= -1;\n    data.yaw *= -1;\n  }\n\n  const q = eulerToQuaternion(data.pitch, data.roll, data.yaw);\n  data.qx = q[0];\n  data.qy = q[1];\n  data.qz = q[2];\n  data.qw = q[3];\n  return data;\n}\n\nfunction adjustVectorToInterfaceOrientation(data: Value3D) {\n  'worklet';\n  const { interfaceOrientation, x, y } = data;\n  if (interfaceOrientation === InterfaceOrientation.ROTATION_90) {\n    data.x = -y;\n    data.y = x;\n  } else if (interfaceOrientation === InterfaceOrientation.ROTATION_270) {\n    data.x = y;\n    data.y = -x;\n  } else if (interfaceOrientation === InterfaceOrientation.ROTATION_180) {\n    data.x *= -1;\n    data.y *= -1;\n  }\n  return data;\n}\n\n/**\n * Lets you create animations based on data from the device's sensors.\n *\n * @param sensorType - Type of the sensor to use. Configured with {@link SensorType} enum.\n * @param config - The sensor configuration - {@link SensorConfig}.\n * @returns An object containing the sensor measurements [shared value](https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/glossary#shared-value) and a function to unregister the sensor\n * @see https://docs.swmansion.com/react-native-reanimated/docs/device/useAnimatedSensor\n */\nexport function useAnimatedSensor(\n  sensorType: SensorType.ROTATION,\n  userConfig?: Partial<SensorConfig>\n): AnimatedSensor<ValueRotation>;\nexport function useAnimatedSensor(\n  sensorType: Exclude<SensorType, SensorType.ROTATION>,\n  userConfig?: Partial<SensorConfig>\n): AnimatedSensor<Value3D>;\nexport function useAnimatedSensor(\n  sensorType: SensorType,\n  userConfig?: Partial<SensorConfig>\n): AnimatedSensor<ValueRotation> | AnimatedSensor<Value3D> {\n  const userConfigRef = useRef(userConfig);\n\n  const hasConfigChanged =\n    userConfigRef.current?.adjustToInterfaceOrientation !==\n      userConfig?.adjustToInterfaceOrientation ||\n    userConfigRef.current?.interval !== userConfig?.interval ||\n    userConfigRef.current?.iosReferenceFrame !== userConfig?.iosReferenceFrame;\n\n  if (hasConfigChanged) {\n    userConfigRef.current = { ...userConfig };\n  }\n\n  const config: SensorConfig = useMemo(\n    () => ({\n      interval: 'auto',\n      adjustToInterfaceOrientation: true,\n      iosReferenceFrame: IOSReferenceFrame.Auto,\n      ...userConfigRef.current,\n    }),\n    [userConfigRef.current]\n  );\n\n  const ref = useRef<AnimatedSensor<Value3D | ValueRotation>>({\n    sensor: initializeSensor(sensorType, config),\n    unregister: () => {\n      // NOOP\n    },\n    isAvailable: false,\n    config,\n  });\n\n  useEffect(() => {\n    ref.current = {\n      sensor: initializeSensor(sensorType, config),\n      unregister: () => {\n        // NOOP\n      },\n      isAvailable: false,\n      config,\n    };\n\n    const sensorData = ref.current.sensor;\n    const adjustToInterfaceOrientation =\n      ref.current.config.adjustToInterfaceOrientation;\n\n    const id = registerSensor(sensorType, config, (data) => {\n      'worklet';\n      if (adjustToInterfaceOrientation) {\n        if (sensorType === SensorType.ROTATION) {\n          data = adjustRotationToInterfaceOrientation(data as ValueRotation);\n        } else {\n          data = adjustVectorToInterfaceOrientation(data as Value3D);\n        }\n      }\n      sensorData.value = data;\n      callMicrotasks();\n    });\n\n    if (id !== -1) {\n      // if sensor is available\n      ref.current.unregister = () => unregisterSensor(id);\n      ref.current.isAvailable = true;\n    } else {\n      // if sensor is unavailable\n      ref.current.unregister = () => {\n        // NOOP\n      };\n      ref.current.isAvailable = false;\n    }\n\n    return () => {\n      ref.current.unregister();\n    };\n  }, [sensorType, config]);\n\n  return ref.current as AnimatedSensor<ValueRotation> | AnimatedSensor<Value3D>;\n}\n","'use strict';\nimport type { MutableRefObject } from 'react';\nimport { useEffect, useRef } from 'react';\n\nimport { makeShareable, startMapper, stopMapper } from '../core';\nimport updateProps, { updatePropsJestWrapper } from '../UpdateProps';\nimport { initialUpdaterRun } from '../animation';\nimport { useSharedValue } from './useSharedValue';\nimport {\n  buildWorkletsHash,\n  isAnimated,\n  shallowEqual,\n  validateAnimatedStyles,\n} from './utils';\nimport type {\n  AnimatedStyleHandle,\n  DefaultStyle,\n  DependencyList,\n  Descriptor,\n  JestAnimatedStyleHandle,\n} from './commonTypes';\nimport type { ViewDescriptorsSet, ViewRefSet } from '../ViewDescriptorsSet';\nimport { makeViewDescriptorsSet, useViewRefSet } from '../ViewDescriptorsSet';\nimport { isJest, shouldBeUseWeb } from '../PlatformChecker';\nimport type {\n  AnimationObject,\n  Timestamp,\n  NestedObjectValues,\n  SharedValue,\n  StyleProps,\n  WorkletFunction,\n  AnimatedPropsAdapterFunction,\n  AnimatedPropsAdapterWorklet,\n} from '../commonTypes';\nimport type { AnimatedStyle } from '../helperTypes';\nimport { isWorkletFunction } from '../commonTypes';\n\nconst SHOULD_BE_USE_WEB = shouldBeUseWeb();\n\ninterface AnimatedState {\n  last: AnimatedStyle<any>;\n  animations: AnimatedStyle<any>;\n  isAnimationRunning: boolean;\n  isAnimationCancelled: boolean;\n}\n\ninterface AnimatedUpdaterData {\n  initial: {\n    value: AnimatedStyle<any>;\n    updater: () => AnimatedStyle<any>;\n  };\n  remoteState: AnimatedState;\n  viewDescriptors: ViewDescriptorsSet;\n}\n\nfunction prepareAnimation(\n  frameTimestamp: number,\n  animatedProp: AnimatedStyle<any>,\n  lastAnimation: AnimatedStyle<any>,\n  lastValue: AnimatedStyle<any>\n): void {\n  'worklet';\n  if (Array.isArray(animatedProp)) {\n    animatedProp.forEach((prop, index) => {\n      prepareAnimation(\n        frameTimestamp,\n        prop,\n        lastAnimation && lastAnimation[index],\n        lastValue && lastValue[index]\n      );\n    });\n    // return animatedProp;\n  }\n  if (typeof animatedProp === 'object' && animatedProp.onFrame) {\n    const animation = animatedProp;\n\n    let value = animation.current;\n    if (lastValue !== undefined && lastValue !== null) {\n      if (typeof lastValue === 'object') {\n        if (lastValue.value !== undefined) {\n          // previously it was a shared value\n          value = lastValue.value;\n        } else if (lastValue.onFrame !== undefined) {\n          if (lastAnimation?.current !== undefined) {\n            // it was an animation before, copy its state\n            value = lastAnimation.current;\n          } else if (lastValue?.current !== undefined) {\n            // it was initialized\n            value = lastValue.current;\n          }\n        }\n      } else {\n        // previously it was a plain value, just set it as starting point\n        value = lastValue;\n      }\n    }\n\n    animation.callStart = (timestamp: Timestamp) => {\n      animation.onStart(animation, value, timestamp, lastAnimation);\n    };\n    animation.callStart(frameTimestamp);\n    animation.callStart = null;\n  } else if (typeof animatedProp === 'object') {\n    // it is an object\n    Object.keys(animatedProp).forEach((key) =>\n      prepareAnimation(\n        frameTimestamp,\n        animatedProp[key],\n        lastAnimation && lastAnimation[key],\n        lastValue && lastValue[key]\n      )\n    );\n  }\n}\n\nfunction runAnimations(\n  animation: AnimatedStyle<any>,\n  timestamp: Timestamp,\n  key: number | string,\n  result: AnimatedStyle<any>,\n  animationsActive: SharedValue<boolean>\n): boolean {\n  'worklet';\n  if (!animationsActive.value) {\n    return true;\n  }\n  if (Array.isArray(animation)) {\n    result[key] = [];\n    let allFinished = true;\n    animation.forEach((entry, index) => {\n      if (\n        !runAnimations(entry, timestamp, index, result[key], animationsActive)\n      ) {\n        allFinished = false;\n      }\n    });\n    return allFinished;\n  } else if (typeof animation === 'object' && animation.onFrame) {\n    let finished = true;\n    if (!animation.finished) {\n      if (animation.callStart) {\n        animation.callStart(timestamp);\n        animation.callStart = null;\n      }\n      finished = animation.onFrame(animation, timestamp);\n      animation.timestamp = timestamp;\n      if (finished) {\n        animation.finished = true;\n        animation.callback && animation.callback(true /* finished */);\n      }\n    }\n    result[key] = animation.current;\n    return finished;\n  } else if (typeof animation === 'object') {\n    result[key] = {};\n    let allFinished = true;\n    Object.keys(animation).forEach((k) => {\n      if (\n        !runAnimations(\n          animation[k],\n          timestamp,\n          k,\n          result[key],\n          animationsActive\n        )\n      ) {\n        allFinished = false;\n      }\n    });\n    return allFinished;\n  } else {\n    result[key] = animation;\n    return true;\n  }\n}\n\nfunction styleUpdater(\n  viewDescriptors: SharedValue<Descriptor[]>,\n  updater: WorkletFunction<[], AnimatedStyle<any>> | (() => AnimatedStyle<any>),\n  state: AnimatedState,\n  maybeViewRef: ViewRefSet<any> | undefined,\n  animationsActive: SharedValue<boolean>,\n  isAnimatedProps = false\n): void {\n  'worklet';\n  const animations = state.animations ?? {};\n  const newValues = updater() ?? {};\n  const oldValues = state.last;\n  const nonAnimatedNewValues: StyleProps = {};\n\n  let hasAnimations = false;\n  let frameTimestamp: number | undefined;\n  let hasNonAnimatedValues = false;\n  for (const key in newValues) {\n    const value = newValues[key];\n    if (isAnimated(value)) {\n      frameTimestamp =\n        global.__frameTimestamp || global._getAnimationTimestamp();\n      prepareAnimation(frameTimestamp, value, animations[key], oldValues[key]);\n      animations[key] = value;\n      hasAnimations = true;\n    } else {\n      hasNonAnimatedValues = true;\n      nonAnimatedNewValues[key] = value;\n      delete animations[key];\n    }\n  }\n\n  if (hasAnimations) {\n    const frame = (timestamp: Timestamp) => {\n      // eslint-disable-next-line @typescript-eslint/no-shadow\n      const { animations, last, isAnimationCancelled } = state;\n      if (isAnimationCancelled) {\n        state.isAnimationRunning = false;\n        return;\n      }\n\n      const updates: AnimatedStyle<any> = {};\n      let allFinished = true;\n      for (const propName in animations) {\n        const finished = runAnimations(\n          animations[propName],\n          timestamp,\n          propName,\n          updates,\n          animationsActive\n        );\n        if (finished) {\n          last[propName] = updates[propName];\n          delete animations[propName];\n        } else {\n          allFinished = false;\n        }\n      }\n\n      if (updates) {\n        updateProps(viewDescriptors, updates, maybeViewRef);\n      }\n\n      if (!allFinished) {\n        requestAnimationFrame(frame);\n      } else {\n        state.isAnimationRunning = false;\n      }\n    };\n\n    state.animations = animations;\n    if (!state.isAnimationRunning) {\n      state.isAnimationCancelled = false;\n      state.isAnimationRunning = true;\n      frame(frameTimestamp!);\n    }\n\n    if (hasNonAnimatedValues) {\n      updateProps(viewDescriptors, nonAnimatedNewValues, maybeViewRef);\n    }\n  } else {\n    state.isAnimationCancelled = true;\n    state.animations = [];\n\n    if (!shallowEqual(oldValues, newValues)) {\n      updateProps(viewDescriptors, newValues, maybeViewRef, isAnimatedProps);\n    }\n  }\n  state.last = newValues;\n}\n\nfunction jestStyleUpdater(\n  viewDescriptors: SharedValue<Descriptor[]>,\n  updater: WorkletFunction<[], AnimatedStyle<any>> | (() => AnimatedStyle<any>),\n  state: AnimatedState,\n  maybeViewRef: ViewRefSet<any> | undefined,\n  animationsActive: SharedValue<boolean>,\n  animatedStyle: MutableRefObject<AnimatedStyle<any>>,\n  adapters: AnimatedPropsAdapterFunction[]\n): void {\n  'worklet';\n  const animations: AnimatedStyle<any> = state.animations ?? {};\n  const newValues = updater() ?? {};\n  const oldValues = state.last;\n\n  // extract animated props\n  let hasAnimations = false;\n  let frameTimestamp: number | undefined;\n  Object.keys(animations).forEach((key) => {\n    const value = newValues[key];\n    if (!isAnimated(value)) {\n      delete animations[key];\n    }\n  });\n  Object.keys(newValues).forEach((key) => {\n    const value = newValues[key];\n    if (isAnimated(value)) {\n      frameTimestamp =\n        global.__frameTimestamp || global._getAnimationTimestamp();\n      prepareAnimation(frameTimestamp, value, animations[key], oldValues[key]);\n      animations[key] = value;\n      hasAnimations = true;\n    }\n  });\n\n  function frame(timestamp: Timestamp) {\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    const { animations, last, isAnimationCancelled } = state;\n    if (isAnimationCancelled) {\n      state.isAnimationRunning = false;\n      return;\n    }\n\n    const updates: AnimatedStyle<any> = {};\n    let allFinished = true;\n    Object.keys(animations).forEach((propName) => {\n      const finished = runAnimations(\n        animations[propName],\n        timestamp,\n        propName,\n        updates,\n        animationsActive\n      );\n      if (finished) {\n        last[propName] = updates[propName];\n        delete animations[propName];\n      } else {\n        allFinished = false;\n      }\n    });\n\n    if (Object.keys(updates).length) {\n      updatePropsJestWrapper(\n        viewDescriptors,\n        updates,\n        maybeViewRef,\n        animatedStyle,\n        adapters\n      );\n    }\n\n    if (!allFinished) {\n      requestAnimationFrame(frame);\n    } else {\n      state.isAnimationRunning = false;\n    }\n  }\n\n  if (hasAnimations) {\n    state.animations = animations;\n    if (!state.isAnimationRunning) {\n      state.isAnimationCancelled = false;\n      state.isAnimationRunning = true;\n      frame(frameTimestamp!);\n    }\n  } else {\n    state.isAnimationCancelled = true;\n    state.animations = [];\n  }\n\n  // calculate diff\n  state.last = newValues;\n\n  if (!shallowEqual(oldValues, newValues)) {\n    updatePropsJestWrapper(\n      viewDescriptors,\n      newValues,\n      maybeViewRef,\n      animatedStyle,\n      adapters\n    );\n  }\n}\n\n// check for invalid usage of shared values in returned object\nfunction checkSharedValueUsage(\n  prop: NestedObjectValues<AnimationObject>,\n  currentKey?: string\n): void {\n  if (Array.isArray(prop)) {\n    // if it's an array (i.ex. transform) validate all its elements\n    for (const element of prop) {\n      checkSharedValueUsage(element, currentKey);\n    }\n  } else if (\n    typeof prop === 'object' &&\n    prop !== null &&\n    prop.value === undefined\n  ) {\n    // if it's a nested object, run validation for all its props\n    for (const key of Object.keys(prop)) {\n      checkSharedValueUsage(prop[key], key);\n    }\n  } else if (\n    currentKey !== undefined &&\n    typeof prop === 'object' &&\n    prop !== null &&\n    prop.value !== undefined\n  ) {\n    // if shared value is passed insted of its value, throw an error\n    throw new Error(\n      `[Reanimated] Invalid value passed to \\`${currentKey}\\`, maybe you forgot to use \\`.value\\`?`\n    );\n  }\n}\n\n/**\n * Lets you create a styles object, similar to StyleSheet styles, which can be animated using shared values.\n *\n * @param updater - A function returning an object with style properties you want to animate.\n * @param dependencies - An optional array of dependencies. Only relevant when using Reanimated without the Babel plugin on the Web.\n * @returns An animated style object which has to be passed to the `style` property of an Animated component you want to animate.\n * @see https://docs.swmansion.com/react-native-reanimated/docs/core/useAnimatedStyle\n */\n// You cannot pass Shared Values to `useAnimatedStyle` directly.\n// @ts-expect-error This overload is required by our API.\nexport function useAnimatedStyle<Style extends DefaultStyle>(\n  updater: () => Style,\n  dependencies?: DependencyList | null\n): Style;\n\nexport function useAnimatedStyle<Style extends DefaultStyle>(\n  updater:\n    | WorkletFunction<[], Style>\n    | ((() => Style) & Record<string, unknown>),\n  dependencies?: DependencyList | null,\n  adapters?: AnimatedPropsAdapterWorklet | AnimatedPropsAdapterWorklet[] | null,\n  isAnimatedProps = false\n): AnimatedStyleHandle<Style> | JestAnimatedStyleHandle<Style> {\n  const viewsRef: ViewRefSet<unknown> | undefined = useViewRefSet();\n  const animatedUpdaterData = useRef<AnimatedUpdaterData>();\n  let inputs = Object.values(updater.__closure ?? {});\n  if (SHOULD_BE_USE_WEB) {\n    if (!inputs.length && dependencies?.length) {\n      // let web work without a Babel plugin\n      inputs = dependencies;\n    }\n    if (\n      __DEV__ &&\n      !inputs.length &&\n      !dependencies &&\n      !isWorkletFunction(updater)\n    ) {\n      throw new Error(\n        `[Reanimated] \\`useAnimatedStyle\\` was used without a dependency array or Babel plugin. Please explicitly pass a dependency array, or enable the Babel plugin.\nFor more, see the docs: \\`https://docs.swmansion.com/react-native-reanimated/docs/guides/web-support#web-without-the-babel-plugin\\`.`\n      );\n    }\n  }\n  const adaptersArray = adapters\n    ? Array.isArray(adapters)\n      ? adapters\n      : [adapters]\n    : [];\n  const adaptersHash = adapters ? buildWorkletsHash(adaptersArray) : null;\n  const areAnimationsActive = useSharedValue<boolean>(true);\n  const jestAnimatedStyle = useRef<Style>({} as Style);\n\n  // build dependencies\n  if (!dependencies) {\n    dependencies = [...inputs, updater.__workletHash];\n  } else {\n    dependencies.push(updater.__workletHash);\n  }\n  adaptersHash && dependencies.push(adaptersHash);\n\n  if (!animatedUpdaterData.current) {\n    const initialStyle = initialUpdaterRun(updater);\n    if (__DEV__) {\n      validateAnimatedStyles(initialStyle);\n    }\n    animatedUpdaterData.current = {\n      initial: {\n        value: initialStyle,\n        updater,\n      },\n      remoteState: makeShareable({\n        last: initialStyle,\n        animations: {},\n        isAnimationCancelled: false,\n        isAnimationRunning: false,\n      }),\n      viewDescriptors: makeViewDescriptorsSet(),\n    };\n  }\n\n  const { initial, remoteState, viewDescriptors } = animatedUpdaterData.current;\n  const shareableViewDescriptors = viewDescriptors.shareableViewDescriptors;\n\n  dependencies.push(shareableViewDescriptors);\n\n  useEffect(() => {\n    let fun;\n    let updaterFn = updater;\n    if (adapters) {\n      updaterFn = (() => {\n        'worklet';\n        const newValues = updater();\n        adaptersArray.forEach((adapter) => {\n          adapter(newValues as Record<string, unknown>);\n        });\n        return newValues;\n      }) as WorkletFunction<[], Style>;\n    }\n\n    if (isJest()) {\n      fun = () => {\n        'worklet';\n        jestStyleUpdater(\n          shareableViewDescriptors,\n          updater,\n          remoteState,\n          viewsRef,\n          areAnimationsActive,\n          jestAnimatedStyle,\n          adaptersArray\n        );\n      };\n    } else {\n      fun = () => {\n        'worklet';\n        styleUpdater(\n          shareableViewDescriptors,\n          updaterFn,\n          remoteState,\n          viewsRef,\n          areAnimationsActive,\n          isAnimatedProps\n        );\n      };\n    }\n    const mapperId = startMapper(fun, inputs);\n    return () => {\n      stopMapper(mapperId);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, dependencies);\n\n  useEffect(() => {\n    areAnimationsActive.value = true;\n    return () => {\n      areAnimationsActive.value = false;\n    };\n  }, [areAnimationsActive]);\n\n  checkSharedValueUsage(initial.value);\n\n  const animatedStyleHandle = useRef<\n    AnimatedStyleHandle<Style> | JestAnimatedStyleHandle<Style> | null\n  >(null);\n\n  if (!animatedStyleHandle.current) {\n    animatedStyleHandle.current = isJest()\n      ? { viewDescriptors, initial, viewsRef, jestAnimatedStyle }\n      : { initial, viewsRef, viewDescriptors };\n  }\n\n  return animatedStyleHandle.current;\n}\n","'use strict';\nimport { useEvent } from './useEvent';\nimport { useHandler } from './useHandler';\nimport { WorkletEventHandler } from '../WorkletEventHandler';\nimport type { ReanimatedEvent } from './commonTypes';\nimport type { WorkletFunction } from '../commonTypes';\nimport type { EventHandlerProcessed, EventHandlerInternal } from './useEvent';\n\ntype ComposedHandlerProcessed<\n  Event extends object,\n  Context extends Record<string, unknown> = Record<string, unknown>\n> = EventHandlerProcessed<Event, Context>;\n\ntype ComposedHandlerInternal<Event extends object> =\n  EventHandlerInternal<Event>;\n\n/**\n * Lets you compose multiple event handlers based on [useEvent](https://docs.swmansion.com/react-native-reanimated/docs/advanced/useEvent) hook.\n *\n * @param handlers - An array of event handlers created using [useEvent](https://docs.swmansion.com/react-native-reanimated/docs/advanced/useEvent) hook.\n * @returns An object you need to pass to a coresponding \"onEvent\" prop on an `Animated` component (for example handlers responsible for `onScroll` event go to `onScroll` prop).\n * @see https://docs.swmansion.com/react-native-reanimated/docs/advanced/useComposedEventHandler\n */\n// @ts-expect-error This overload is required by our API.\nexport function useComposedEventHandler<\n  Event extends object,\n  Context extends Record<string, unknown>\n>(\n  handlers: (EventHandlerProcessed<Event, Context> | null)[]\n): ComposedHandlerProcessed<Event, Context>;\n\nexport function useComposedEventHandler<\n  Event extends object,\n  Context extends Record<string, unknown>\n>(handlers: (EventHandlerProcessed<Event, Context> | null)[]) {\n  // Record of handlers' worklets to calculate deps diffs. We use the record type to match the useHandler API requirements\n  const workletsRecord: Record<string, WorkletFunction> = {};\n  // Summed event names for registration\n  const composedEventNames = new Set<string>();\n  // Map that holds worklets for specific handled events\n  const workletsMap: {\n    [key: string]: ((event: ReanimatedEvent<Event>) => void)[];\n  } = {};\n\n  handlers\n    .filter((h) => h !== null)\n    .forEach((handler) => {\n      // EventHandlerProcessed is the return type of useEvent and has to be force casted to EventHandlerInternal, because we need WorkletEventHandler object\n      const { workletEventHandler } =\n        handler as unknown as EventHandlerInternal<Context>;\n      if (workletEventHandler instanceof WorkletEventHandler) {\n        workletEventHandler.eventNames.forEach((eventName) => {\n          composedEventNames.add(eventName);\n\n          if (workletsMap[eventName]) {\n            workletsMap[eventName].push(workletEventHandler.worklet);\n          } else {\n            workletsMap[eventName] = [workletEventHandler.worklet];\n          }\n\n          const handlerName = eventName + `${workletsMap[eventName].length}`;\n          workletsRecord[handlerName] =\n            workletEventHandler.worklet as WorkletFunction;\n        });\n      }\n    });\n\n  const { doDependenciesDiffer } = useHandler(workletsRecord);\n\n  return useEvent<Event, Context>(\n    (event) => {\n      'worklet';\n      if (workletsMap[event.eventName]) {\n        workletsMap[event.eventName].forEach((worklet) => worklet(event));\n      }\n    },\n    Array.from(composedEventNames),\n    doDependenciesDiffer\n  ) as unknown as ComposedHandlerInternal<Event>;\n}\n","'use strict';\nimport { useEffect, useRef } from 'react';\nimport { initialUpdaterRun } from '../animation';\nimport type { SharedValue, WorkletFunction } from '../commonTypes';\nimport { makeMutable, startMapper, stopMapper } from '../core';\nimport type { DependencyList } from './commonTypes';\nimport { shouldBeUseWeb } from '../PlatformChecker';\n\nexport type DerivedValue<Value> = Readonly<SharedValue<Value>>;\n\n/**\n * Lets you create new shared values based on existing ones while keeping them reactive.\n *\n * @param updater - A function called whenever at least one of the shared values or state used in the function body changes.\n * @param dependencies - An optional array of dependencies. Only relevant when using Reanimated without the Babel plugin on the Web.\n * @returns A new readonly shared value based on a value returned from the updater function\n * @see https://docs.swmansion.com/react-native-reanimated/docs/core/useDerivedValue\n */\n// @ts-expect-error This overload is required by our API.\nexport function useDerivedValue<Value>(\n  updater: () => Value,\n  dependencies?: DependencyList\n): DerivedValue<Value>;\n\nexport function useDerivedValue<Value>(\n  updater: WorkletFunction<[], Value>,\n  dependencies?: DependencyList\n): DerivedValue<Value> {\n  const initRef = useRef<SharedValue<Value> | null>(null);\n  let inputs = Object.values(updater.__closure ?? {});\n  if (shouldBeUseWeb()) {\n    if (!inputs.length && dependencies?.length) {\n      // let web work without a Babel/SWC plugin\n      inputs = dependencies;\n    }\n  }\n\n  // build dependencies\n  if (dependencies === undefined) {\n    dependencies = [...inputs, updater.__workletHash];\n  } else {\n    dependencies.push(updater.__workletHash);\n  }\n\n  if (initRef.current === null) {\n    initRef.current = makeMutable(initialUpdaterRun(updater));\n  }\n\n  const sharedValue: SharedValue<Value> = initRef.current;\n\n  useEffect(() => {\n    const fun = () => {\n      'worklet';\n      sharedValue.value = updater();\n    };\n    const mapperId = startMapper(fun, inputs, [sharedValue]);\n    return () => {\n      stopMapper(mapperId);\n    };\n  }, dependencies);\n\n  useEffect(() => {\n    return () => {\n      initRef.current = null;\n    };\n  }, []);\n\n  return sharedValue;\n}\n","'use strict';\nimport { useRef } from 'react';\nimport { WorkletEventHandler } from '../WorkletEventHandler';\nimport type { IWorkletEventHandler, ReanimatedEvent } from './commonTypes';\n\n/**\n * Worklet to provide as an argument to `useEvent` hook.\n */\nexport type EventHandler<\n  Event extends object,\n  Context extends Record<string, unknown> = never\n> = (event: ReanimatedEvent<Event>, context?: Context) => void;\n\nexport type EventHandlerProcessed<\n  Event extends object,\n  Context extends Record<string, unknown> = never\n> = (event: Event, context?: Context) => void;\n\nexport type EventHandlerInternal<Event extends object> = {\n  workletEventHandler: IWorkletEventHandler<Event>;\n};\n\n/**\n * Lets you run a function whenever a specified native event occurs.\n *\n * @param handler - A function that receives an event object with event data - {@link EventHandler}.\n * @param eventNames - An array of event names the `handler` callback will react to.\n * @param rebuild - Whether the event handler should be rebuilt. Defaults to `false`.\n * @returns A function that will be called when the event occurs - {@link EventHandlerProcessed}.\n * @see https://docs.swmansion.com/react-native-reanimated/docs/advanced/useEvent\n */\n// @ts-expect-error This overload is required by our API.\n// We don't know which properites of a component that is made into\n// an AnimatedComponent are event handlers and we don't want to force the user to define it.\n// Therefore we disguise `useEvent` return type as a simple function and we handle\n// it being a React Ref in `createAnimatedComponent`.\nexport function useEvent<\n  Event extends object,\n  Context extends Record<string, unknown> = never\n>(\n  handler: EventHandler<Event, Context>,\n  eventNames?: string[],\n  rebuild?: boolean\n): EventHandlerProcessed<Event, Context>;\n\nexport function useEvent<Event extends object, Context = never>(\n  handler: (event: ReanimatedEvent<Event>, context?: Context) => void,\n  eventNames: string[] = [],\n  rebuild = false\n): EventHandlerInternal<Event> {\n  const initRef = useRef<EventHandlerInternal<Event>>(null!);\n  if (initRef.current === null) {\n    const workletEventHandler = new WorkletEventHandler<Event>(\n      handler,\n      eventNames\n    );\n    initRef.current = { workletEventHandler };\n  } else if (rebuild) {\n    const workletEventHandler = initRef.current.workletEventHandler;\n    workletEventHandler.updateEventHandler(handler, eventNames);\n    initRef.current = { workletEventHandler };\n  }\n\n  return initRef.current;\n}\n","'use strict';\nimport { useEffect, useRef } from 'react';\nimport FrameCallbackRegistryJS from '../frameCallback/FrameCallbackRegistryJS';\nimport type { FrameInfo } from '../frameCallback/FrameCallbackRegistryUI';\n\n/**\n * @param setActive - A function that lets you start the frame callback or stop it from running.\n * @param isActive - A boolean indicating whether a callback is running.\n * @param callbackId - A number indicating a unique identifier of the frame callback.\n * @see https://docs.swmansion.com/react-native-reanimated/docs/advanced/useFrameCallback#returns\n */\nexport type FrameCallback = {\n  setActive: (isActive: boolean) => void;\n  isActive: boolean;\n  callbackId: number;\n};\nconst frameCallbackRegistry = new FrameCallbackRegistryJS();\n\n/**\n * Lets you run a function on every frame update.\n *\n * @param callback - A function executed on every frame update.\n * @param autostart - Whether the callback should start automatically. Defaults to `true`.\n * @returns A frame callback object - {@link FrameCallback}.\n * @see https://docs.swmansion.com/react-native-reanimated/docs/advanced/useFrameCallback\n */\nexport function useFrameCallback(\n  callback: (frameInfo: FrameInfo) => void,\n  autostart = true\n): FrameCallback {\n  const ref = useRef<FrameCallback>({\n    setActive: (isActive: boolean) => {\n      frameCallbackRegistry.manageStateFrameCallback(\n        ref.current.callbackId,\n        isActive\n      );\n      ref.current.isActive = isActive;\n    },\n    isActive: autostart,\n    callbackId: -1,\n  });\n\n  useEffect(() => {\n    ref.current.callbackId =\n      frameCallbackRegistry.registerFrameCallback(callback);\n    ref.current.setActive(ref.current.isActive);\n\n    return () => {\n      frameCallbackRegistry.unregisterFrameCallback(ref.current.callbackId);\n      ref.current.callbackId = -1;\n    };\n  }, [callback, autostart]);\n\n  return ref.current;\n}\n","'use strict';\nimport { useEffect, useRef } from 'react';\nimport type { WorkletFunction } from '../commonTypes';\nimport { isWeb, isJest } from '../PlatformChecker';\nimport type { DependencyList, ReanimatedEvent } from './commonTypes';\nimport { areDependenciesEqual, buildDependencies } from './utils';\nimport { makeShareable } from '../shareables';\n\ninterface GeneralHandler<\n  Event extends object,\n  Context extends Record<string, unknown>\n> {\n  (event: ReanimatedEvent<Event>, context: Context): void;\n}\n\ntype GeneralWorkletHandler<\n  Event extends object,\n  Context extends Record<string, unknown>\n> = WorkletFunction<[event: ReanimatedEvent<Event>, context: Context]>;\n\ntype GeneralHandlers<\n  Event extends object,\n  Context extends Record<string, unknown>\n> = Record<string, GeneralHandler<Event, Context> | undefined>;\n\ntype GeneralWorkletHandlers<\n  Event extends object,\n  Context extends Record<string, unknown>\n> = Record<string, GeneralWorkletHandler<Event, Context> | undefined>;\n\ninterface ContextWithDependencies<Context extends Record<string, unknown>> {\n  context: Context;\n  savedDependencies: DependencyList;\n}\n\nexport interface UseHandlerContext<Context extends Record<string, unknown>> {\n  context: Context;\n  doDependenciesDiffer: boolean;\n  useWeb: boolean;\n}\n\n/**\n * Lets you find out whether the event handler dependencies have changed.\n *\n * @param handlers - An object of event handlers.\n * @param dependencies - An optional array of dependencies.\n * @returns An object containing a boolean indicating whether the dependencies have changed, and a boolean indicating whether the code is running on the web.\n * @see https://docs.swmansion.com/react-native-reanimated/docs/advanced/useHandler\n */\n// @ts-expect-error This overload is required by our API.\nexport function useHandler<\n  Event extends object,\n  Context extends Record<string, unknown>\n>(\n  handlers: GeneralHandlers<Event, Context>,\n  dependencies?: DependencyList\n): UseHandlerContext<Context>;\n\nexport function useHandler<\n  Event extends object,\n  Context extends Record<string, unknown>\n>(\n  handlers: GeneralWorkletHandlers<Event, Context>,\n  dependencies?: DependencyList\n): UseHandlerContext<Context> {\n  const initRef = useRef<ContextWithDependencies<Context> | null>(null);\n  if (initRef.current === null) {\n    const context = makeShareable({} as Context);\n    initRef.current = {\n      context,\n      savedDependencies: [],\n    };\n  }\n\n  useEffect(() => {\n    return () => {\n      initRef.current = null;\n    };\n  }, []);\n\n  const { context, savedDependencies } = initRef.current;\n\n  dependencies = buildDependencies(\n    dependencies,\n    handlers as Record<string, WorkletFunction | undefined>\n  );\n\n  const doDependenciesDiffer = !areDependenciesEqual(\n    dependencies,\n    savedDependencies\n  );\n  initRef.current.savedDependencies = dependencies;\n  const useWeb = isWeb() || isJest();\n\n  return { context, doDependenciesDiffer, useWeb };\n}\n","'use strict';\nimport { isReducedMotion } from '../PlatformChecker';\n\nconst IS_REDUCED_MOTION = isReducedMotion();\n\n/**\n * Lets you query the reduced motion system setting.\n *\n * Changing the reduced motion system setting doesn't cause your components to rerender.\n *\n * @returns A boolean indicating whether the reduced motion setting was enabled when the app started.\n * @see https://docs.swmansion.com/react-native-reanimated/docs/device/useReducedMotion\n */\nexport function useReducedMotion() {\n  return IS_REDUCED_MOTION;\n}\n","'use strict';\nimport { useEffect, useRef, useCallback } from 'react';\nimport type { SharedValue } from '../commonTypes';\nimport type { EventHandlerInternal } from './useEvent';\nimport { useEvent } from './useEvent';\nimport { useSharedValue } from './useSharedValue';\nimport type { AnimatedScrollView } from '../component/ScrollView';\nimport type {\n  AnimatedRef,\n  RNNativeScrollEvent,\n  ReanimatedScrollEvent,\n} from './commonTypes';\nimport { isWeb } from '../PlatformChecker';\n\nconst IS_WEB = isWeb();\n\n/**\n * Lets you synchronously get the current offset of a `ScrollView`.\n *\n * @param animatedRef - An [animated ref](https://docs.swmansion.com/react-native-reanimated/docs/core/useAnimatedRef) attached to an Animated.ScrollView component.\n * @returns A shared value which holds the current offset of the `ScrollView`.\n * @see https://docs.swmansion.com/react-native-reanimated/docs/scroll/useScrollViewOffset\n */\nexport const useScrollViewOffset = IS_WEB\n  ? useScrollViewOffsetWeb\n  : useScrollViewOffsetNative;\n\nfunction useScrollViewOffsetWeb(\n  animatedRef: AnimatedRef<AnimatedScrollView> | null,\n  providedOffset?: SharedValue<number>\n): SharedValue<number> {\n  const internalOffset = useSharedValue(0);\n  const offset = useRef(providedOffset ?? internalOffset).current;\n\n  const eventHandler = useCallback(() => {\n    'worklet';\n    if (animatedRef) {\n      const element = getWebScrollableElement(animatedRef.current);\n      // scrollLeft is the X axis scrolled offset, works properly also with RTL layout\n      offset.value =\n        element.scrollLeft === 0 ? element.scrollTop : element.scrollLeft;\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [animatedRef, animatedRef?.current]);\n\n  useEffect(() => {\n    const element = animatedRef?.current\n      ? getWebScrollableElement(animatedRef.current)\n      : null;\n\n    if (element) {\n      element.addEventListener('scroll', eventHandler);\n    }\n    return () => {\n      if (element) {\n        element.removeEventListener('scroll', eventHandler);\n      }\n    };\n    // React here has a problem with `animatedRef.current` since a Ref .current\n    // field shouldn't be used as a dependency. However, in this case we have\n    // to do it this way.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [animatedRef, animatedRef?.current, eventHandler]);\n\n  return offset;\n}\n\nfunction useScrollViewOffsetNative(\n  animatedRef: AnimatedRef<AnimatedScrollView> | null,\n  providedOffset?: SharedValue<number>\n): SharedValue<number> {\n  const internalOffset = useSharedValue(0);\n  const offset = useRef(providedOffset ?? internalOffset).current;\n\n  const eventHandler = useEvent<RNNativeScrollEvent>(\n    (event: ReanimatedScrollEvent) => {\n      'worklet';\n      offset.value =\n        event.contentOffset.x === 0\n          ? event.contentOffset.y\n          : event.contentOffset.x;\n    },\n    scrollNativeEventNames\n    // Read https://github.com/software-mansion/react-native-reanimated/pull/5056\n    // for more information about this cast.\n  ) as unknown as EventHandlerInternal<ReanimatedScrollEvent>;\n\n  useEffect(() => {\n    const elementTag = animatedRef?.getTag() ?? null;\n\n    if (elementTag) {\n      eventHandler.workletEventHandler.registerForEvents(elementTag);\n    }\n    return () => {\n      if (elementTag) {\n        eventHandler.workletEventHandler.unregisterFromEvents(elementTag);\n      }\n    };\n    // React here has a problem with `animatedRef.current` since a Ref .current\n    // field shouldn't be used as a dependency. However, in this case we have\n    // to do it this way.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [animatedRef, animatedRef?.current, eventHandler]);\n\n  return offset;\n}\n\nfunction getWebScrollableElement(\n  scrollComponent: AnimatedScrollView | null\n): HTMLElement {\n  return (\n    (scrollComponent?.getScrollableNode() as unknown as HTMLElement) ??\n    scrollComponent\n  );\n}\n\nconst scrollNativeEventNames = [\n  'onScroll',\n  'onScrollBeginDrag',\n  'onScrollEndDrag',\n  'onMomentumScrollBegin',\n  'onMomentumScrollEnd',\n];\n","'use strict';\nimport { useEffect, useState } from 'react';\nimport { cancelAnimation } from '../animation';\nimport type { SharedValue } from '../commonTypes';\nimport { makeMutable } from '../core';\n\n/**\n * Lets you define [shared values](https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/glossary#shared-value) in your components.\n *\n * @param initialValue - The value you want to be initially stored to a `.value` property.\n * @returns A shared value with a single `.value` property initially set to the `initialValue` - {@link SharedValue}.\n * @see https://docs.swmansion.com/react-native-reanimated/docs/core/useSharedValue\n */\nexport function useSharedValue<Value>(initialValue: Value): SharedValue<Value> {\n  const [mutable] = useState(() => makeMutable(initialValue));\n  useEffect(() => {\n    return () => {\n      cancelAnimation(mutable);\n    };\n  }, [mutable]);\n  return mutable;\n}\n","'use strict';\nimport { useCallback } from 'react';\nimport type { DependencyList } from './commonTypes';\n\n/**\n * @deprecated don't use\n */\nexport function useWorkletCallback<Args extends unknown[], ReturnValue>(\n  worklet: (...args: Args) => ReturnValue,\n  deps?: DependencyList\n) {\n  return useCallback(worklet, deps ?? []);\n}\n","'use strict';\nimport type { WorkletFunction } from '../commonTypes';\nimport type { DependencyList } from './commonTypes';\n\n// Builds one big hash from multiple worklets' hashes.\nexport function buildWorkletsHash<Args extends unknown[], ReturnValue>(\n  worklets:\n    | Record<string, WorkletFunction<Args, ReturnValue>>\n    | WorkletFunction<Args, ReturnValue>[]\n) {\n  // For arrays `Object.values` returns the array itself.\n  return Object.values(worklets).reduce(\n    (acc, worklet: WorkletFunction<Args, ReturnValue>) =>\n      acc + worklet.__workletHash.toString(),\n    ''\n  );\n}\n\n// Builds dependencies array for useEvent handlers.\nexport function buildDependencies(\n  dependencies: DependencyList,\n  handlers: Record<string, WorkletFunction | undefined>\n) {\n  type Handler = (typeof handlers)[keyof typeof handlers];\n  const handlersList = Object.values(handlers).filter(\n    (handler) => handler !== undefined\n  ) as NonNullable<Handler>[];\n  if (!dependencies) {\n    dependencies = handlersList.map((handler) => {\n      return {\n        workletHash: handler.__workletHash,\n        closure: handler.__closure,\n      };\n    });\n  } else {\n    dependencies.push(buildWorkletsHash(handlersList));\n  }\n\n  return dependencies;\n}\n\n// This is supposed to work as useEffect comparison.\nexport function areDependenciesEqual(\n  nextDependencies: DependencyList,\n  prevDependencies: DependencyList\n) {\n  function is(x: number, y: number) {\n    return (\n      (x === y && (x !== 0 || 1 / x === 1 / y)) ||\n      (Number.isNaN(x) && Number.isNaN(y))\n    );\n  }\n  const objectIs: (nextDeps: unknown, prevDeps: unknown) => boolean =\n    typeof Object.is === 'function' ? Object.is : is;\n\n  function areHookInputsEqual(\n    nextDeps: DependencyList,\n    prevDeps: DependencyList\n  ) {\n    if (!nextDeps || !prevDeps || prevDeps.length !== nextDeps.length) {\n      return false;\n    }\n    for (let i = 0; i < prevDeps.length; ++i) {\n      if (!objectIs(nextDeps[i], prevDeps[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  return areHookInputsEqual(nextDependencies, prevDependencies);\n}\n\nexport function isAnimated(prop: unknown) {\n  'worklet';\n  if (Array.isArray(prop)) {\n    return prop.some(isAnimated);\n  } else if (typeof prop === 'object' && prop !== null) {\n    if ((prop as Record<string, unknown>).onFrame !== undefined) {\n      return true;\n    } else {\n      return Object.values(prop).some(isAnimated);\n    }\n  }\n  return false;\n}\n\n// This function works because `Object.keys`\n// return empty array of primitives and on arrays\n// it returns array of its indices.\nexport function shallowEqual<\n  T extends Record<string | number | symbol, unknown>\n>(a: T, b: T) {\n  'worklet';\n  const aKeys = Object.keys(a);\n  const bKeys = Object.keys(b);\n  if (aKeys.length !== bKeys.length) {\n    return false;\n  }\n  for (let i = 0; i < aKeys.length; i++) {\n    if (a[aKeys[i]] !== b[aKeys[i]]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function validateAnimatedStyles(styles: unknown[] | object) {\n  'worklet';\n  if (typeof styles !== 'object') {\n    throw new Error(\n      `[Reanimated] \\`useAnimatedStyle\\` has to return an object, found ${typeof styles} instead.`\n    );\n  } else if (Array.isArray(styles)) {\n    throw new Error(\n      '[Reanimated] `useAnimatedStyle` has to return an object and cannot return static styles combined with dynamic ones. Please do merging where a component receives props.'\n    );\n  }\n}\n"],"names":["_interopRequireDefault","require","Object","value","exports","layoutAnimationsBatch","NativeReanimatedModule","configureLayoutAnimationBatch","enumerable","get","_runtimes","createWorkletRuntime","flag","isCallByUser","arguments","length","undefined","featuresConfig","enableLayoutAnimations","setByUser","_threads","executeOnUIRuntimeSync","viewTag","propName","component","isFabric","Error","Promise","resolve","reject","getViewProp","result","substr","sensorType","config","getSensorContainer","initializeSensor","uiProps","nativeProps","SHOULD_BE_USE_WEB","configureProps","_mutables","makeMutable","_shareables","makeShareable","makeShareableCloneRecursive","eventHandler","eventName","emitterReactTag","handleAndFlushAnimationFrame","eventTimestamp","event","global","__frameTimestamp","__flushAnimationFrame","__closure","__workletHash","__initData","_worklet_10296548464238_init_data","registerEventHandler","registerSensor","runOnJS","runOnRuntime","runOnUI","shouldAnimate","setShouldAnimateExitingForTag","_mappers","startMapper","stopMapper","options","_options$isStatusBarT","state","height","now","_getAnimationTimestamp","_worklet_9395840919360_init_data","subscribeForKeyboardEvents","isStatusBarTranslucentAndroid","id","unregisterEventHandler","sensorId","unregisterSensor","listenerId","unsubscribeFromKeyboardEvents","_NativeReanimated","_PlatformChecker","_initializers","_SensorContainer","shouldBeUseWeb","isReanimated3","__sensorContainer","SensorContainer","_WORKLET","_log","console","log","performance","code","isWeb","initializeUIRuntime","hash","stackDetails","_workletStackDetails","set","_ref","message","stack","error","workletStackEntries","match","forEach","_match$split$map","split","map","Number","_match$split$map2","_slicedToArray2","default","origLine","origCol","errorDetails","_errorDetails","lineOffset","colOffset","_getBundleOffset","_error$stack","_error$stack$split","frame","parsedFrame","exec","_parsedFrame","file","line","col","getBundleOffset","_getBundleOffset2","bundleFile","replace","processStack","name","jsEngine","ErrorUtils","reportFatalError","Map","findHostInstance_DEPRECATED","getInternalInstanceHandleFromPublicInstance","ref","_ref$getScrollRespond","_ref$__internalInstan","_ref$__internalInstan2","e","_require$getInternalI","_internalInstanceHandle","resolvedRef","scrollViewRef","getScrollResponder","getNativeScrollRef","otherScrollViewRef","textInputRef","__internalInstanceHandle","stateNode","node","_classCallCheck2","_createClass2","_core","_FrameCallbackRegistryUI","_worklet_9769030538367_init_data","_worklet_3563696229796_init_data","_worklet_12225017345728_init_data","FrameCallbackRegistryJS","nextCallbackId","prepareUIRegistry","key","callback","anonymous","callbackId","this","_frameCallbackRegistry","registerFrameCallback","unregisterFrameCallback","manageStateFrameCallback","_worklet_8640414198951_init_data","runOnUIImmediately","frameCallbackRegistry","activeFrameCallbacks","Set","previousFrameTimestamp","nextCallId","runCallbacks","callId","_this","size","requestAnimationFrame","loop","timestamp","delta","callbackDetails","startTime","timeSincePreviousFrame","timeSinceFirstFrame","delete","add","_useAnimatedGestureHandler","useAnimatedGestureHandler","_useAnimatedKeyboard","useAnimatedKeyboard","_useAnimatedProps","useAnimatedProps","_useAnimatedReaction","useAnimatedReaction","_useAnimatedRef","useAnimatedRef","_useAnimatedScrollHandler","useAnimatedScrollHandler","_useAnimatedSensor","useAnimatedSensor","_useAnimatedStyle","useAnimatedStyle","_useComposedEventHandler","useComposedEventHandler","_useDerivedValue","useDerivedValue","_useEvent","useEvent","_useFrameCallback","useFrameCallback","_useHandler","useHandler","_useReducedMotion","useReducedMotion","_useScrollViewOffset","useScrollViewOffset","_useSharedValue","useSharedValue","_useWorkletCallback","useWorkletCallback","handlers","dependencies","context","doDependenciesDiffer","useWeb","handler","nativeEvent","EVENT_TYPE","BEGAN","onStart","ACTIVE","onActive","oldState","END","onEnd","FAILED","onFail","CANCELLED","onCancel","onFinish","_worklet_3049273329051_init_data","_useHandler2","UNDETERMINED","useRef","isSubscribed","current","keyboardEventData","KeyboardState","UNKNOWN","_worklet_12775767243512_init_data","useEffect","_keyboardEventData","_worklet_4233221673031_init_data","_react","_commonTypes","useAnimatedPropsNative","updater","deps","adapters","prepare","react","_prepare$__closure","_dependencies","_prepare$__closure2","_react$__closure","previous","inputs","values","concat","_toConsumableArray2","push","fun","input","_worklet_3805047105816_init_data","mapperId","tag","viewName","_viewConfig","getTagValueFunction","getShadowNodeWrapperFromRef","findNodeHandle","getTagOrShadowNodeWrapper","IS_WEB","getComponentOrScrollable","getTag","Platform","OS","viewConfig","uiViewClassName","animatedRefShareableHandle","__init","f","_worklet_10709902486534_init_data","shareableMappingCache","_fabricUtils","_shareableMappingCache","_reactNative","getScrollableNode","scrollHandlers","onScroll","subscribeForEvents","onBeginDrag","onEndDrag","onMomentumBegin","onMomentumEnd","endsWith","_worklet_17515480971732_init_data","userConfig","_userConfigRef$curren","_userConfigRef$curren2","_userConfigRef$curren3","userConfigRef","adjustToInterfaceOrientation","interval","iosReferenceFrame","assign","useMemo","IOSReferenceFrame","Auto","sensor","unregister","isAvailable","sensorData","data","SensorType","ROTATION","adjustRotationToInterfaceOrientation","adjustVectorToInterfaceOrientation","callMicrotasks","_worklet_4762875893066_init_data","_worklet_3591825116582_init_data","eulerToQuaternion","pitch","roll","yaw","c1","Math","cos","s1","sin","c2","s2","c3","s3","_worklet_11734720667892_init_data","interfaceOrientation","InterfaceOrientation","ROTATION_90","PI","ROTATION_270","ROTATION_180","q","qx","qy","qz","qw","_worklet_14157528657995_init_data","x","y","_updater$__closure","isAnimatedProps","viewsRef","useViewRefSet","animatedUpdaterData","adaptersArray","Array","isArray","adaptersHash","buildWorkletsHash","areAnimationsActive","jestAnimatedStyle","initialStyle","initialUpdaterRun","__DEV__","initial","remoteState","last","animations","isAnimationCancelled","isAnimationRunning","viewDescriptors","makeViewDescriptorsSet","_animatedUpdaterData$","shareableViewDescriptors","updaterFn","newValues","adapter","_worklet_6935660880873_init_data","isJest","jestStyleUpdater","_worklet_7646952874907_init_data","styleUpdater","_worklet_2167468849755_init_data","checkSharedValueUsage","animatedStyleHandle","_UpdateProps","r","__esModule","t","_getRequireWildcardCache","has","n","__proto__","a","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","_interopRequireWildcard","_animation","_utils","_ViewDescriptorsSet","WeakMap","_worklet_16353413220624_init_data","prepareAnimation","frameTimestamp","animatedProp","lastAnimation","lastValue","prop","index","onFrame","animation","callStart","keys","_worklet_2202010840260_init_data","runAnimations","animationsActive","allFinished","entry","finished","k","_worklet_9412904113903_init_data","maybeViewRef","_state$animations","_updater","oldValues","nonAnimatedNewValues","hasAnimations","hasNonAnimatedValues","isAnimated","updates","updateProps","shallowEqual","_worklet_12341228969587_init_data","animatedStyle","_state$animations2","_updater2","updatePropsJestWrapper","currentKey","element","workletsRecord","composedEventNames","workletsMap","filter","h","workletEventHandler","WorkletEventHandler","eventNames","worklet","handlerName","_worklet_14793730976259_init_data","from","_WorkletEventHandler","initRef","sharedValue","_worklet_4899742148771_init_data","rebuild","updateEventHandler","autostart","setActive","isActive","savedDependencies","_initRef$current","buildDependencies","areDependenciesEqual","IS_REDUCED_MOTION","isReducedMotion","_worklet_629655636493_init_data","animatedRef","providedOffset","internalOffset","offset","useCallback","getWebScrollableElement","scrollLeft","scrollTop","addEventListener","removeEventListener","contentOffset","_worklet_4566777045211_init_data","scrollNativeEventNames","_animatedRef$getTag","elementTag","registerForEvents","unregisterFromEvents","scrollComponent","initialValue","_useState","useState","mutable","cancelAnimation","worklets","reduce","acc","toString","nextDependencies","prevDependencies","objectIs","is","isNaN","nextDeps","prevDeps","areHookInputsEqual","handlersList","workletHash","closure","_worklet_10902818434400_init_data","_worklet_14833023826026_init_data","some","_worklet_11403863639193_init_data","b","aKeys","bKeys","validateAnimatedStyles","styles"],"sourceRoot":""}