{"version":3,"file":"vendors-node_modules_react-native-paper_src_components_Checkbox_index_ts-node_modules_react-n-fac2df.bundle","mappings":"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","sources":["webpack:///./node_modules/react-native-paper/src/components/Checkbox/Checkbox.tsx","webpack:///./node_modules/react-native-paper/src/components/Checkbox/CheckboxAndroid.tsx","webpack:///./node_modules/react-native-paper/src/components/Checkbox/CheckboxIOS.tsx","webpack:///./node_modules/react-native-paper/src/components/Checkbox/CheckboxItem.tsx","webpack:///./node_modules/react-native-paper/src/components/Checkbox/index.ts","webpack:///./node_modules/react-native-paper/src/components/Checkbox/utils.ts","webpack:///./node_modules/react-native-paper/src/components/Chip/Chip.tsx","webpack:///./node_modules/react-native-paper/src/components/Chip/helpers.tsx","webpack:///./node_modules/react-native-paper/src/components/CrossFadeIcon.tsx","webpack:///./node_modules/react-native-paper/src/components/DataTable/DataTable.tsx","webpack:///./node_modules/react-native-paper/src/components/DataTable/DataTableCell.tsx","webpack:///./node_modules/react-native-paper/src/components/DataTable/DataTableHeader.tsx","webpack:///./node_modules/react-native-paper/src/components/DataTable/DataTablePagination.tsx","webpack:///./node_modules/react-native-paper/src/components/DataTable/DataTableRow.tsx","webpack:///./node_modules/react-native-paper/src/components/DataTable/DataTableTitle.tsx","webpack:///./node_modules/react-native-paper/src/components/Dialog/Dialog.tsx","webpack:///./node_modules/react-native-paper/src/components/Dialog/DialogActions.tsx","webpack:///./node_modules/react-native-paper/src/components/Dialog/DialogContent.tsx","webpack:///./node_modules/react-native-paper/src/components/Dialog/DialogIcon.tsx","webpack:///./node_modules/react-native-paper/src/components/Dialog/DialogScrollArea.tsx","webpack:///./node_modules/react-native-paper/src/components/Dialog/DialogTitle.tsx","webpack:///./node_modules/react-native-paper/src/components/Divider.tsx","webpack:///./node_modules/react-native-paper/src/components/Drawer/Drawer.tsx","webpack:///./node_modules/react-native-paper/src/components/Drawer/DrawerCollapsedItem.tsx","webpack:///./node_modules/react-native-paper/src/components/Drawer/DrawerItem.tsx","webpack:///./node_modules/react-native-paper/src/components/Drawer/DrawerSection.tsx","webpack:///./node_modules/react-native-paper/src/components/FAB/AnimatedFAB.tsx","webpack:///./node_modules/react-native-paper/src/components/FAB/FAB.tsx","webpack:///./node_modules/react-native-paper/src/components/FAB/FABGroup.tsx","webpack:///./node_modules/react-native-paper/src/components/FAB/index.ts","webpack:///./node_modules/react-native-paper/src/components/FAB/utils.ts","webpack:///./node_modules/react-native-paper/src/components/HelperText/HelperText.tsx","webpack:///./node_modules/react-native-paper/src/components/HelperText/utils.ts","webpack:///./node_modules/react-native-paper/src/components/Icon.tsx","webpack:///./node_modules/react-native-paper/src/components/IconButton/IconButton.tsx","webpack:///./node_modules/react-native-paper/src/components/IconButton/utils.ts","webpack:///./node_modules/react-native-paper/src/components/List/List.tsx","webpack:///./node_modules/react-native-paper/src/components/List/ListAccordion.tsx","webpack:///./node_modules/react-native-paper/src/components/List/ListAccordionGroup.tsx","webpack:///./node_modules/react-native-paper/src/components/List/ListIcon.tsx","webpack:///./node_modules/react-native-paper/src/components/List/ListImage.tsx","webpack:///./node_modules/react-native-paper/src/components/List/ListItem.tsx","webpack:///./node_modules/react-native-paper/src/components/List/ListSection.tsx","webpack:///./node_modules/react-native-paper/src/components/List/ListSubheader.tsx","webpack:///./node_modules/react-native-paper/src/components/List/utils.ts","webpack:///./node_modules/react-native-paper/src/components/MaterialCommunityIcon.tsx","webpack:///./node_modules/react-native-paper/src/components/Menu/Menu.tsx","webpack:///./node_modules/react-native-paper/src/components/Menu/MenuItem.tsx","webpack:///./node_modules/react-native-paper/src/components/Menu/utils.ts","webpack:///./node_modules/react-native-paper/src/components/Modal.tsx"],"sourcesContent":["import * as React from 'react';\nimport { GestureResponderEvent, Platform } from 'react-native';\n\nimport CheckboxAndroid from './CheckboxAndroid';\nimport CheckboxIOS from './CheckboxIOS';\nimport { useInternalTheme } from '../../core/theming';\nimport type { ThemeProp } from '../../types';\n\nexport type Props = {\n  /**\n   * Status of checkbox.\n   */\n  status: 'checked' | 'unchecked' | 'indeterminate';\n  /**\n   * Whether checkbox is disabled.\n   */\n  disabled?: boolean;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: (e: GestureResponderEvent) => void;\n  /**\n   * Custom color for unchecked checkbox.\n   */\n  uncheckedColor?: string;\n  /**\n   * Custom color for checkbox.\n   */\n  color?: string;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n  /**\n   * testID to be used on tests.\n   */\n  testID?: string;\n};\n\n/**\n * Checkboxes allow the selection of multiple options from a set.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Checkbox } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [checked, setChecked] = React.useState(false);\n *\n *   return (\n *     <Checkbox\n *       status={checked ? 'checked' : 'unchecked'}\n *       onPress={() => {\n *         setChecked(!checked);\n *       }}\n *     />\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nconst Checkbox = ({ theme: themeOverrides, ...props }: Props) => {\n  const theme = useInternalTheme(themeOverrides);\n  return Platform.OS === 'ios' ? (\n    <CheckboxIOS {...props} theme={theme} />\n  ) : (\n    <CheckboxAndroid {...props} theme={theme} />\n  );\n};\n\nexport default Checkbox;\n\n// @component-docs ignore-next-line\nconst CheckboxWithTheme = Checkbox;\n// @component-docs ignore-next-line\nexport { CheckboxWithTheme as Checkbox };\n","import * as React from 'react';\nimport {\n  Animated,\n  GestureResponderEvent,\n  StyleSheet,\n  View,\n} from 'react-native';\n\nimport { getAndroidSelectionControlColor } from './utils';\nimport { useInternalTheme } from '../../core/theming';\nimport type { $RemoveChildren, ThemeProp } from '../../types';\nimport MaterialCommunityIcon from '../MaterialCommunityIcon';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\n\nexport type Props = $RemoveChildren<typeof TouchableRipple> & {\n  /**\n   * Status of checkbox.\n   */\n  status: 'checked' | 'unchecked' | 'indeterminate';\n  /**\n   * Whether checkbox is disabled.\n   */\n  disabled?: boolean;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: (e: GestureResponderEvent) => void;\n  /**\n   * Custom color for unchecked checkbox.\n   */\n  uncheckedColor?: string;\n  /**\n   * Custom color for checkbox.\n   */\n  color?: string;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n  /**\n   * testID to be used on tests.\n   */\n  testID?: string;\n};\n\n// From https://material.io/design/motion/speed.html#duration\nconst ANIMATION_DURATION = 100;\n\n/**\n * Checkboxes allow the selection of multiple options from a set.\n * This component follows platform guidelines for Android, but can be used\n * on any platform.\n *\n * @extends TouchableRipple props https://callstack.github.io/react-native-paper/docs/components/TouchableRipple\n */\nconst CheckboxAndroid = ({\n  status,\n  theme: themeOverrides,\n  disabled,\n  onPress,\n  testID,\n  ...rest\n}: Props) => {\n  const theme = useInternalTheme(themeOverrides);\n  const { current: scaleAnim } = React.useRef<Animated.Value>(\n    new Animated.Value(1)\n  );\n  const isFirstRendering = React.useRef<boolean>(true);\n\n  const {\n    animation: { scale },\n  } = theme;\n\n  React.useEffect(() => {\n    // Do not run animation on very first rendering\n    if (isFirstRendering.current) {\n      isFirstRendering.current = false;\n      return;\n    }\n\n    const checked = status === 'checked';\n\n    Animated.sequence([\n      Animated.timing(scaleAnim, {\n        toValue: 0.85,\n        duration: checked ? ANIMATION_DURATION * scale : 0,\n        useNativeDriver: false,\n      }),\n      Animated.timing(scaleAnim, {\n        toValue: 1,\n        duration: checked\n          ? ANIMATION_DURATION * scale\n          : ANIMATION_DURATION * scale * 1.75,\n        useNativeDriver: false,\n      }),\n    ]).start();\n  }, [status, scaleAnim, scale]);\n\n  const checked = status === 'checked';\n  const indeterminate = status === 'indeterminate';\n\n  const { rippleColor, selectionControlColor } =\n    getAndroidSelectionControlColor({\n      theme,\n      disabled,\n      checked,\n      customColor: rest.color,\n      customUncheckedColor: rest.uncheckedColor,\n    });\n\n  const borderWidth = scaleAnim.interpolate({\n    inputRange: [0.8, 1],\n    outputRange: [7, 0],\n  });\n\n  const icon = indeterminate\n    ? 'minus-box'\n    : checked\n    ? 'checkbox-marked'\n    : 'checkbox-blank-outline';\n\n  return (\n    <TouchableRipple\n      {...rest}\n      borderless\n      rippleColor={rippleColor}\n      onPress={onPress}\n      disabled={disabled}\n      accessibilityRole=\"checkbox\"\n      accessibilityState={{ disabled, checked }}\n      accessibilityLiveRegion=\"polite\"\n      style={styles.container}\n      testID={testID}\n      theme={theme}\n    >\n      <Animated.View style={{ transform: [{ scale: scaleAnim }] }}>\n        <MaterialCommunityIcon\n          allowFontScaling={false}\n          name={icon}\n          size={24}\n          color={selectionControlColor}\n          direction=\"ltr\"\n        />\n        <View style={[StyleSheet.absoluteFill, styles.fillContainer]}>\n          <Animated.View\n            style={[\n              styles.fill,\n              { borderColor: selectionControlColor },\n              { borderWidth },\n            ]}\n          />\n        </View>\n      </Animated.View>\n    </TouchableRipple>\n  );\n};\n\nCheckboxAndroid.displayName = 'Checkbox.Android';\n\nconst styles = StyleSheet.create({\n  container: {\n    borderRadius: 18,\n    width: 36,\n    height: 36,\n    padding: 6,\n  },\n  fillContainer: {\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  fill: {\n    height: 14,\n    width: 14,\n  },\n});\n\nexport default CheckboxAndroid;\n\n// @component-docs ignore-next-line\nexport { CheckboxAndroid };\n","import * as React from 'react';\nimport { GestureResponderEvent, StyleSheet, View } from 'react-native';\n\nimport { getSelectionControlIOSColor } from './utils';\nimport { useInternalTheme } from '../../core/theming';\nimport type { $RemoveChildren, ThemeProp } from '../../types';\nimport MaterialCommunityIcon from '../MaterialCommunityIcon';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\n\nexport type Props = $RemoveChildren<typeof TouchableRipple> & {\n  /**\n   * Status of checkbox.\n   */\n  status: 'checked' | 'unchecked' | 'indeterminate';\n  /**\n   * Whether checkbox is disabled.\n   */\n  disabled?: boolean;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: (e: GestureResponderEvent) => void;\n  /**\n   * Custom color for checkbox.\n   */\n  color?: string;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n  /**\n   * testID to be used on tests.\n   */\n  testID?: string;\n};\n\n/**\n * Checkboxes allow the selection of multiple options from a set.\n * This component follows platform guidelines for iOS, but can be used\n * on any platform.\n *\n * @extends TouchableRipple props https://callstack.github.io/react-native-paper/docs/components/TouchableRipple\n */\nconst CheckboxIOS = ({\n  status,\n  disabled,\n  onPress,\n  theme: themeOverrides,\n  testID,\n  ...rest\n}: Props) => {\n  const theme = useInternalTheme(themeOverrides);\n  const checked = status === 'checked';\n  const indeterminate = status === 'indeterminate';\n\n  const { checkedColor, rippleColor } = getSelectionControlIOSColor({\n    theme,\n    disabled,\n    customColor: rest.color,\n  });\n\n  const icon = indeterminate ? 'minus' : 'check';\n  const opacity = indeterminate || checked ? 1 : 0;\n\n  return (\n    <TouchableRipple\n      {...rest}\n      borderless\n      rippleColor={rippleColor}\n      onPress={onPress}\n      disabled={disabled}\n      accessibilityRole=\"checkbox\"\n      accessibilityState={{ disabled, checked }}\n      accessibilityLiveRegion=\"polite\"\n      style={styles.container}\n      testID={testID}\n      theme={theme}\n    >\n      <View style={{ opacity }}>\n        <MaterialCommunityIcon\n          allowFontScaling={false}\n          name={icon}\n          size={24}\n          color={checkedColor}\n          direction=\"ltr\"\n        />\n      </View>\n    </TouchableRipple>\n  );\n};\n\nCheckboxIOS.displayName = 'Checkbox.IOS';\n\nconst styles = StyleSheet.create({\n  container: {\n    borderRadius: 18,\n    padding: 6,\n  },\n});\n\nexport default CheckboxIOS;\n\n// @component-docs ignore-next-line\nexport { CheckboxIOS };\n","import * as React from 'react';\nimport {\n  ColorValue,\n  GestureResponderEvent,\n  PressableAndroidRippleConfig,\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport Checkbox from './Checkbox';\nimport CheckboxAndroid from './CheckboxAndroid';\nimport CheckboxIOS from './CheckboxIOS';\nimport { useInternalTheme } from '../../core/theming';\nimport type { ThemeProp, MD3TypescaleKey } from '../../types';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport Text from '../Typography/Text';\n\nexport type Props = {\n  /**\n   * Status of checkbox.\n   */\n  status: 'checked' | 'unchecked' | 'indeterminate';\n  /**\n   * Whether checkbox is disabled.\n   */\n  disabled?: boolean;\n  /**\n   * Label to be displayed on the item.\n   */\n  label: string;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: (e: GestureResponderEvent) => void;\n  /**\n   * Function to execute on long press.\n   */\n  onLongPress?: (e: GestureResponderEvent) => void;\n  /**\n   * Type of background drawabale to display the feedback (Android).\n   * https://reactnative.dev/docs/pressable#rippleconfig\n   */\n  background?: PressableAndroidRippleConfig;\n  /**\n   * Accessibility label for the touchable. This is read by the screen reader when the user taps the touchable.\n   */\n  accessibilityLabel?: string;\n  /**\n   * Custom color for unchecked checkbox.\n   */\n  uncheckedColor?: string;\n  /**\n   * Custom color for checkbox.\n   */\n  color?: string;\n  /**\n   * Color of the ripple effect.\n   */\n  rippleColor?: ColorValue;\n  /**\n   * Additional styles for container View.\n   */\n  style?: StyleProp<ViewStyle>;\n  /**\n   * Specifies the largest possible scale a label font can reach.\n   */\n  labelMaxFontSizeMultiplier?: number;\n  /**\n   * Style that is passed to Label element.\n   */\n  labelStyle?: StyleProp<TextStyle>;\n  /**\n   * @supported Available in v5.x with theme version 3\n   *\n   * Label text variant defines appropriate text styles for type role and its size.\n   * Available variants:\n   *\n   *  Display: `displayLarge`, `displayMedium`, `displaySmall`\n   *\n   *  Headline: `headlineLarge`, `headlineMedium`, `headlineSmall`\n   *\n   *  Title: `titleLarge`, `titleMedium`, `titleSmall`\n   *\n   *  Label:  `labelLarge`, `labelMedium`, `labelSmall`\n   *\n   *  Body: `bodyLarge`, `bodyMedium`, `bodySmall`\n   */\n  labelVariant?: keyof typeof MD3TypescaleKey;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n  /**\n   * testID to be used on tests.\n   */\n  testID?: string;\n  /**\n   * Checkbox control position.\n   */\n  position?: 'leading' | 'trailing';\n  /**\n   * Whether `<Checkbox.Android />` or `<Checkbox.IOS />` should be used.\n   * Left undefined `<Checkbox />` will be used.\n   */\n  mode?: 'android' | 'ios';\n};\n\n/**\n * Checkbox.Item allows you to press the whole row (item) instead of only the Checkbox.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { View } from 'react-native';\n * import { Checkbox } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <View>\n *     <Checkbox.Item label=\"Item\" status=\"checked\" />\n *   </View>\n * );\n *\n * export default MyComponent;\n *```\n */\n\nconst CheckboxItem = ({\n  style,\n  status,\n  label,\n  onPress,\n  onLongPress,\n  labelStyle,\n  theme: themeOverrides,\n  testID,\n  mode,\n  position = 'trailing',\n  accessibilityLabel = label,\n  disabled,\n  labelVariant = 'bodyLarge',\n  labelMaxFontSizeMultiplier = 1.5,\n  rippleColor,\n  background,\n  ...props\n}: Props) => {\n  const theme = useInternalTheme(themeOverrides);\n  const checkboxProps = { ...props, status, theme, disabled };\n  const isLeading = position === 'leading';\n  let checkbox;\n\n  if (mode === 'android') {\n    checkbox = <CheckboxAndroid {...checkboxProps} />;\n  } else if (mode === 'ios') {\n    checkbox = <CheckboxIOS {...checkboxProps} />;\n  } else {\n    checkbox = <Checkbox {...checkboxProps} />;\n  }\n\n  const textColor = theme.isV3 ? theme.colors.onSurface : theme.colors.text;\n  const disabledTextColor = theme.isV3\n    ? theme.colors.onSurfaceDisabled\n    : theme.colors.disabled;\n  const textAlign = isLeading ? 'right' : 'left';\n\n  const computedStyle = {\n    color: disabled ? disabledTextColor : textColor,\n    textAlign,\n  } as TextStyle;\n\n  return (\n    <TouchableRipple\n      accessibilityLabel={accessibilityLabel}\n      accessibilityRole=\"checkbox\"\n      accessibilityState={{\n        checked: status === 'checked',\n        disabled,\n      }}\n      onPress={onPress}\n      onLongPress={onLongPress}\n      testID={testID}\n      disabled={disabled}\n      rippleColor={rippleColor}\n      theme={theme}\n      background={background}\n    >\n      <View\n        style={[styles.container, style]}\n        pointerEvents=\"none\"\n        importantForAccessibility=\"no-hide-descendants\"\n      >\n        {isLeading && checkbox}\n        <Text\n          variant={labelVariant}\n          testID={`${testID}-text`}\n          maxFontSizeMultiplier={labelMaxFontSizeMultiplier}\n          style={[\n            styles.label,\n            !theme.isV3 && styles.font,\n            computedStyle,\n            labelStyle,\n          ]}\n        >\n          {label}\n        </Text>\n        {!isLeading && checkbox}\n      </View>\n    </TouchableRipple>\n  );\n};\n\nCheckboxItem.displayName = 'Checkbox.Item';\n\nexport default CheckboxItem;\n\n// @component-docs ignore-next-line\nexport { CheckboxItem };\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    paddingVertical: 8,\n    paddingHorizontal: 16,\n  },\n  label: {\n    flexShrink: 1,\n    flexGrow: 1,\n  },\n  font: {\n    fontSize: 16,\n  },\n});\n","import CheckboxComponent from './Checkbox';\nimport CheckboxAndroid from './CheckboxAndroid';\nimport CheckboxIOS from './CheckboxIOS';\nimport CheckboxItem from './CheckboxItem';\n\nconst Checkbox = Object.assign(\n  // @component ./Checkbox.tsx\n  CheckboxComponent,\n  {\n    // @component ./CheckboxItem.tsx\n    Item: CheckboxItem,\n    // @component ./CheckboxAndroid.tsx\n    Android: CheckboxAndroid,\n    // @component ./CheckboxIOS.tsx\n    IOS: CheckboxIOS,\n  }\n);\n\nexport default Checkbox;\n","import color from 'color';\n\nimport type { InternalTheme } from '../../types';\n\nconst getAndroidCheckedColor = ({\n  theme,\n  customColor,\n}: {\n  theme: InternalTheme;\n  customColor?: string;\n}) => {\n  if (customColor) {\n    return customColor;\n  }\n\n  if (theme.isV3) {\n    return theme.colors.primary;\n  }\n\n  return theme.colors.accent;\n};\n\nconst getAndroidUncheckedColor = ({\n  theme,\n  customUncheckedColor,\n}: {\n  theme: InternalTheme;\n  customUncheckedColor?: string;\n}) => {\n  if (customUncheckedColor) {\n    return customUncheckedColor;\n  }\n\n  if (theme.isV3) {\n    return theme.colors.onSurfaceVariant;\n  }\n\n  if (theme.dark) {\n    return color(theme.colors.text).alpha(0.7).rgb().string();\n  }\n\n  return color(theme.colors.text).alpha(0.54).rgb().string();\n};\n\nconst getAndroidRippleColor = ({\n  theme,\n  checkedColor,\n  disabled,\n}: {\n  theme: InternalTheme;\n  checkedColor: string;\n  disabled?: boolean;\n}) => {\n  if (disabled) {\n    if (theme.isV3) {\n      return color(theme.colors.onSurface).alpha(0.16).rgb().string();\n    }\n    return color(theme.colors.text).alpha(0.16).rgb().string();\n  }\n\n  return color(checkedColor).fade(0.32).rgb().string();\n};\n\nconst getAndroidControlColor = ({\n  theme,\n  checked,\n  disabled,\n  checkedColor,\n  uncheckedColor,\n}: {\n  theme: InternalTheme;\n  checked: boolean;\n  checkedColor: string;\n  uncheckedColor: string;\n  disabled?: boolean;\n}) => {\n  if (disabled) {\n    if (theme.isV3) {\n      return theme.colors.onSurfaceDisabled;\n    }\n    return theme.colors.disabled;\n  }\n\n  if (checked) {\n    return checkedColor;\n  }\n  return uncheckedColor;\n};\n\nexport const getAndroidSelectionControlColor = ({\n  theme,\n  disabled,\n  checked,\n  customColor,\n  customUncheckedColor,\n}: {\n  theme: InternalTheme;\n  checked: boolean;\n  disabled?: boolean;\n  customColor?: string;\n  customUncheckedColor?: string;\n}) => {\n  const checkedColor = getAndroidCheckedColor({ theme, customColor });\n  const uncheckedColor = getAndroidUncheckedColor({\n    theme,\n    customUncheckedColor,\n  });\n  return {\n    rippleColor: getAndroidRippleColor({ theme, checkedColor, disabled }),\n    selectionControlColor: getAndroidControlColor({\n      theme,\n      disabled,\n      checked,\n      checkedColor,\n      uncheckedColor,\n    }),\n  };\n};\n\nconst getIOSCheckedColor = ({\n  theme,\n  disabled,\n  customColor,\n}: {\n  theme: InternalTheme;\n  customColor?: string;\n  disabled?: boolean;\n}) => {\n  if (disabled) {\n    if (theme.isV3) {\n      return theme.colors.onSurfaceDisabled;\n    }\n    return theme.colors.disabled;\n  }\n\n  if (customColor) {\n    return customColor;\n  }\n\n  if (theme.isV3) {\n    return theme.colors.primary;\n  }\n\n  return theme.colors.accent;\n};\n\nconst getIOSRippleColor = ({\n  theme,\n  checkedColor,\n  disabled,\n}: {\n  theme: InternalTheme;\n  checkedColor: string;\n  disabled?: boolean;\n}) => {\n  if (disabled) {\n    if (theme.isV3) {\n      return color(theme.colors.onSurface).alpha(0.16).rgb().string();\n    }\n    return color(theme.colors.text).alpha(0.16).rgb().string();\n  }\n  return color(checkedColor).fade(0.32).rgb().string();\n};\n\nexport const getSelectionControlIOSColor = ({\n  theme,\n  disabled,\n  customColor,\n}: {\n  theme: InternalTheme;\n  disabled?: boolean;\n  customColor?: string;\n}) => {\n  const checkedColor = getIOSCheckedColor({ theme, disabled, customColor });\n  return {\n    checkedColor,\n    rippleColor: getIOSRippleColor({\n      theme,\n      checkedColor,\n      disabled,\n    }),\n  };\n};\n","import * as React from 'react';\nimport {\n  AccessibilityState,\n  Animated,\n  ColorValue,\n  GestureResponderEvent,\n  Platform,\n  PressableAndroidRippleConfig,\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  Pressable,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport useLatestCallback from 'use-latest-callback';\n\nimport { getChipColors } from './helpers';\nimport { useInternalTheme } from '../../core/theming';\nimport { white } from '../../styles/themes/v2/colors';\nimport type { $Omit, EllipsizeProp, ThemeProp } from '../../types';\nimport hasTouchHandler from '../../utils/hasTouchHandler';\nimport type { IconSource } from '../Icon';\nimport Icon from '../Icon';\nimport MaterialCommunityIcon from '../MaterialCommunityIcon';\nimport Surface from '../Surface';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport Text from '../Typography/Text';\n\nexport type Props = $Omit<React.ComponentProps<typeof Surface>, 'mode'> & {\n  /**\n   * Mode of the chip.\n   * - `flat` - flat chip without outline.\n   * - `outlined` - chip with an outline.\n   */\n  mode?: 'flat' | 'outlined';\n  /**\n   * Text content of the `Chip`.\n   */\n  children: React.ReactNode;\n  /**\n   * Icon to display for the `Chip`. Both icon and avatar cannot be specified.\n   */\n  icon?: IconSource;\n  /**\n   * Avatar to display for the `Chip`. Both icon and avatar cannot be specified.\n   */\n  avatar?: React.ReactNode;\n  /**\n   * Icon to display as the close button for the `Chip`. The icon appears only when the onClose prop is specified.\n   */\n  closeIcon?: IconSource;\n  /**\n   * Whether chip is selected.\n   */\n  selected?: boolean;\n  /**\n   * Whether to style the chip color as selected.\n   * Note: With theme version 3 `selectedColor` doesn't apply to the `icon`.\n   *       If you want specify custom color for the `icon`, render your own `Icon` component.\n   */\n  selectedColor?: string;\n  /**\n   * @supported Available in v5.x with theme version 3\n   * Whether to display overlay on selected chip\n   */\n  showSelectedOverlay?: boolean;\n  /**\n   * Whether to display default check icon on selected chip.\n   * Note: Check will not be shown if `icon` is specified. If specified, `icon` will be shown regardless of `selected`.\n   */\n  showSelectedCheck?: boolean;\n  /**\n   * Color of the ripple effect.\n   */\n  rippleColor?: ColorValue;\n  /**\n   * Whether the chip is disabled. A disabled chip is greyed out and `onPress` is not called on touch.\n   */\n  disabled?: boolean;\n  /**\n   * Type of background drawabale to display the feedback (Android).\n   * https://reactnative.dev/docs/pressable#rippleconfig\n   */\n  background?: PressableAndroidRippleConfig;\n  /**\n   * Accessibility label for the chip. This is read by the screen reader when the user taps the chip.\n   */\n  accessibilityLabel?: string;\n  /**\n   * Accessibility label for the close icon. This is read by the screen reader when the user taps the close icon.\n   */\n  closeIconAccessibilityLabel?: string;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: (e: GestureResponderEvent) => void;\n  /**\n   * Function to execute on long press.\n   */\n  onLongPress?: () => void;\n  /**\n   * Function to execute as soon as the touchable element is pressed and invoked even before onPress.\n   */\n  onPressIn?: (e: GestureResponderEvent) => void;\n  /**\n   * Function to execute as soon as the touch is released even before onPress.\n   */\n  onPressOut?: (e: GestureResponderEvent) => void;\n  /**\n   * Function to execute on close button press. The close button appears only when this prop is specified.\n   */\n  onClose?: () => void;\n  /**\n   * The number of milliseconds a user must touch the element before executing `onLongPress`.\n   */\n  delayLongPress?: number;\n  /**\n   * @supported Available in v5.x with theme version 3\n   * Sets smaller horizontal paddings `12dp` around label, when there is only label.\n   */\n  compact?: boolean;\n  /**\n   * @supported Available in v5.x with theme version 3\n   * Whether chip should have the elevation.\n   */\n  elevated?: boolean;\n  /**\n   * Style of chip's text\n   */\n  textStyle?: StyleProp<TextStyle>;\n  style?: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n  /**\n   * Pass down testID from chip props to touchable for Detox tests.\n   */\n  testID?: string;\n  /**\n   * Ellipsize Mode for the children text\n   */\n  ellipsizeMode?: EllipsizeProp;\n  /**\n   * Specifies the largest possible scale a text font can reach.\n   */\n  maxFontSizeMultiplier?: number;\n};\n\n/**\n * Chips are compact elements that can represent inputs, attributes, or actions.\n * They can have an icon or avatar on the left, and a close button icon on the right.\n * They are typically used to:\n * <ul>\n *  <li>Present multiple options </li>\n *  <li>Represent attributes active or chosen </li>\n *  <li>Present filter options </li>\n *  <li>Trigger actions related to primary content </li>\n * </ul>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Chip } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <Chip icon=\"information\" onPress={() => console.log('Pressed')}>Example Chip</Chip>\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst Chip = ({\n  mode = 'flat',\n  children,\n  icon,\n  avatar,\n  selected = false,\n  disabled = false,\n  background,\n  accessibilityLabel,\n  accessibilityRole = 'button',\n  closeIconAccessibilityLabel = 'Close',\n  onPress,\n  onLongPress,\n  onPressOut,\n  onPressIn,\n  delayLongPress,\n  onClose,\n  closeIcon,\n  textStyle,\n  style,\n  theme: themeOverrides,\n  testID = 'chip',\n  selectedColor,\n  rippleColor: customRippleColor,\n  showSelectedOverlay = false,\n  showSelectedCheck = true,\n  ellipsizeMode,\n  compact,\n  elevated = false,\n  maxFontSizeMultiplier,\n  ...rest\n}: Props) => {\n  const theme = useInternalTheme(themeOverrides);\n  const { isV3, roundness } = theme;\n\n  const { current: elevation } = React.useRef<Animated.Value>(\n    new Animated.Value(isV3 && elevated ? 1 : 0)\n  );\n\n  const hasPassedTouchHandler = hasTouchHandler({\n    onPress,\n    onLongPress,\n    onPressIn,\n    onPressOut,\n  });\n\n  const isOutlined = mode === 'outlined';\n\n  const handlePressIn = useLatestCallback((e: GestureResponderEvent) => {\n    const { scale } = theme.animation;\n    onPressIn?.(e);\n    Animated.timing(elevation, {\n      toValue: isV3 ? (elevated ? 2 : 0) : 4,\n      duration: 200 * scale,\n      useNativeDriver:\n        Platform.OS === 'web' ||\n        Platform.constants.reactNativeVersion.minor <= 72,\n    }).start();\n  });\n\n  const handlePressOut = useLatestCallback((e: GestureResponderEvent) => {\n    const { scale } = theme.animation;\n    onPressOut?.(e);\n    Animated.timing(elevation, {\n      toValue: isV3 && elevated ? 1 : 0,\n      duration: 150 * scale,\n      useNativeDriver:\n        Platform.OS === 'web' ||\n        Platform.constants.reactNativeVersion.minor <= 72,\n    }).start();\n  });\n\n  const opacity = isV3 ? 0.38 : 0.26;\n  const defaultBorderRadius = roundness * (isV3 ? 2 : 4);\n  const iconSize = isV3 ? 18 : 16;\n\n  const {\n    backgroundColor: customBackgroundColor,\n    borderRadius = defaultBorderRadius,\n  } = (StyleSheet.flatten(style) || {}) as ViewStyle;\n\n  const {\n    borderColor,\n    textColor,\n    iconColor,\n    rippleColor,\n    selectedBackgroundColor,\n    backgroundColor,\n  } = getChipColors({\n    isOutlined,\n    theme,\n    selectedColor,\n    showSelectedOverlay,\n    customBackgroundColor,\n    disabled,\n    customRippleColor,\n  });\n\n  const accessibilityState: AccessibilityState = {\n    selected,\n    disabled,\n  };\n\n  const elevationStyle = isV3 || Platform.OS === 'android' ? elevation : 0;\n  const multiplier = isV3 ? (compact ? 1.5 : 2) : 1;\n  const labelSpacings = {\n    marginRight: onClose ? 0 : 8 * multiplier,\n    marginLeft:\n      avatar || icon || (selected && showSelectedCheck)\n        ? 4 * multiplier\n        : 8 * multiplier,\n  };\n  const contentSpacings = {\n    paddingRight: isV3 ? (onClose ? 34 : 0) : onClose ? 32 : 4,\n  };\n  const labelTextStyle = {\n    color: textColor,\n    ...(isV3 ? theme.fonts.labelLarge : theme.fonts.regular),\n  };\n  return (\n    <Surface\n      style={[\n        styles.container,\n        isV3 &&\n          (isOutlined ? styles.md3OutlineContainer : styles.md3FlatContainer),\n        !theme.isV3 && {\n          elevation: elevationStyle,\n        },\n        {\n          backgroundColor: selected ? selectedBackgroundColor : backgroundColor,\n          borderColor,\n          borderRadius,\n        },\n        style,\n      ]}\n      {...(theme.isV3 && { elevation: elevationStyle })}\n      {...rest}\n      testID={`${testID}-container`}\n      theme={theme}\n    >\n      <TouchableRipple\n        borderless\n        background={background}\n        style={[{ borderRadius }, styles.touchable]}\n        onPress={onPress}\n        onLongPress={onLongPress}\n        onPressIn={hasPassedTouchHandler ? handlePressIn : undefined}\n        onPressOut={hasPassedTouchHandler ? handlePressOut : undefined}\n        delayLongPress={delayLongPress}\n        rippleColor={rippleColor}\n        disabled={disabled}\n        accessibilityLabel={accessibilityLabel}\n        accessibilityRole={accessibilityRole}\n        accessibilityState={accessibilityState}\n        testID={testID}\n        theme={theme}\n      >\n        <View\n          style={[styles.content, isV3 && styles.md3Content, contentSpacings]}\n        >\n          {avatar && !icon ? (\n            <View\n              style={[\n                styles.avatarWrapper,\n                isV3 && styles.md3AvatarWrapper,\n                disabled && { opacity },\n              ]}\n            >\n              {React.isValidElement(avatar)\n                ? React.cloneElement(avatar as React.ReactElement<any>, {\n                    style: [styles.avatar, avatar.props.style],\n                  })\n                : avatar}\n            </View>\n          ) : null}\n          {icon || (selected && showSelectedCheck) ? (\n            <View\n              style={[\n                styles.icon,\n                isV3 && styles.md3Icon,\n                avatar\n                  ? [\n                      styles.avatar,\n                      styles.avatarSelected,\n                      isV3 && selected && styles.md3SelectedIcon,\n                    ]\n                  : null,\n              ]}\n            >\n              {icon ? (\n                <Icon\n                  source={icon}\n                  color={\n                    avatar\n                      ? white\n                      : !disabled && theme.isV3\n                      ? theme.colors.primary\n                      : iconColor\n                  }\n                  size={18}\n                  theme={theme}\n                />\n              ) : (\n                <MaterialCommunityIcon\n                  name=\"check\"\n                  color={avatar ? white : iconColor}\n                  size={18}\n                  direction=\"ltr\"\n                />\n              )}\n            </View>\n          ) : null}\n          <Text\n            variant=\"labelLarge\"\n            selectable={false}\n            numberOfLines={1}\n            style={[\n              isV3 ? styles.md3LabelText : styles.labelText,\n              labelTextStyle,\n              labelSpacings,\n              textStyle,\n            ]}\n            ellipsizeMode={ellipsizeMode}\n            maxFontSizeMultiplier={maxFontSizeMultiplier}\n          >\n            {children}\n          </Text>\n        </View>\n      </TouchableRipple>\n      {onClose ? (\n        <View style={styles.closeButtonStyle}>\n          <Pressable\n            onPress={onClose}\n            disabled={disabled}\n            accessibilityRole=\"button\"\n            accessibilityLabel={closeIconAccessibilityLabel}\n          >\n            <View\n              style={[\n                styles.icon,\n                styles.closeIcon,\n                isV3 && styles.md3CloseIcon,\n              ]}\n            >\n              {closeIcon ? (\n                <Icon source={closeIcon} color={iconColor} size={iconSize} />\n              ) : (\n                <MaterialCommunityIcon\n                  name={isV3 ? 'close' : 'close-circle'}\n                  size={iconSize}\n                  color={iconColor}\n                  direction=\"ltr\"\n                />\n              )}\n            </View>\n          </Pressable>\n        </View>\n      ) : null}\n    </Surface>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    borderWidth: StyleSheet.hairlineWidth,\n    borderStyle: 'solid',\n    flexDirection: Platform.select({ default: 'column', web: 'row' }),\n  },\n  md3OutlineContainer: {\n    borderWidth: 1,\n  },\n  md3FlatContainer: {\n    borderWidth: 0,\n  },\n  content: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingLeft: 4,\n    position: 'relative',\n  },\n  md3Content: {\n    paddingLeft: 0,\n  },\n  icon: {\n    padding: 4,\n    alignSelf: 'center',\n  },\n  md3Icon: {\n    paddingLeft: 8,\n    paddingRight: 0,\n  },\n  closeIcon: {\n    marginRight: 4,\n  },\n  md3CloseIcon: {\n    marginRight: 8,\n    padding: 0,\n  },\n  labelText: {\n    minHeight: 24,\n    lineHeight: 24,\n    textAlignVertical: 'center',\n    marginVertical: 4,\n  },\n  md3LabelText: {\n    textAlignVertical: 'center',\n    marginVertical: 6,\n  },\n  avatar: {\n    width: 24,\n    height: 24,\n    borderRadius: 12,\n  },\n  avatarWrapper: {\n    marginRight: 4,\n  },\n  md3AvatarWrapper: {\n    marginLeft: 4,\n    marginRight: 0,\n  },\n  md3SelectedIcon: {\n    paddingLeft: 4,\n  },\n  // eslint-disable-next-line react-native/no-color-literals\n  avatarSelected: {\n    position: 'absolute',\n    top: 4,\n    left: 4,\n    backgroundColor: 'rgba(0, 0, 0, .29)',\n  },\n  closeButtonStyle: {\n    position: 'absolute',\n    right: 0,\n    height: '100%',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  touchable: {\n    width: '100%',\n  },\n});\n\nexport default Chip;\n","import type { ColorValue } from 'react-native';\n\nimport color from 'color';\n\nimport { black, white } from '../../styles/themes/v2/colors';\nimport type { InternalTheme } from '../../types';\n\ntype BaseProps = {\n  theme: InternalTheme;\n  isOutlined: boolean;\n  disabled?: boolean;\n};\n\nconst getBorderColor = ({\n  theme,\n  isOutlined,\n  disabled,\n  selectedColor,\n  backgroundColor,\n}: BaseProps & { backgroundColor: string; selectedColor?: string }) => {\n  const isSelectedColor = selectedColor !== undefined;\n\n  if (theme.isV3) {\n    if (disabled) {\n      return color(theme.colors.onSurfaceVariant).alpha(0.12).rgb().string();\n    }\n\n    if (isSelectedColor) {\n      return color(selectedColor).alpha(0.29).rgb().string();\n    }\n\n    return theme.colors.outline;\n  }\n\n  if (isOutlined) {\n    if (isSelectedColor) {\n      return color(selectedColor).alpha(0.29).rgb().string();\n    }\n\n    if (theme.dark) {\n      return color(white).alpha(0.29).rgb().string();\n    }\n\n    return color(black).alpha(0.29).rgb().string();\n  }\n\n  return backgroundColor;\n};\n\nconst getTextColor = ({\n  theme,\n  isOutlined,\n  disabled,\n  selectedColor,\n}: BaseProps & {\n  selectedColor?: string;\n}) => {\n  const isSelectedColor = selectedColor !== undefined;\n  if (theme.isV3) {\n    if (disabled) {\n      return theme.colors.onSurfaceDisabled;\n    }\n\n    if (isSelectedColor) {\n      return selectedColor;\n    }\n\n    if (isOutlined) {\n      return theme.colors.onSurfaceVariant;\n    }\n\n    return theme.colors.onSecondaryContainer;\n  }\n\n  if (disabled) {\n    return theme.colors.disabled;\n  }\n\n  if (isSelectedColor) {\n    return color(selectedColor).alpha(0.87).rgb().string();\n  }\n\n  return color(theme.colors.text).alpha(0.87).rgb().string();\n};\n\nconst getDefaultBackgroundColor = ({\n  theme,\n  isOutlined,\n}: Omit<BaseProps, 'disabled' | 'selectedColor'>) => {\n  if (theme.isV3) {\n    if (isOutlined) {\n      return theme.colors.surface;\n    }\n\n    return theme.colors.secondaryContainer;\n  }\n\n  if (isOutlined) {\n    return theme.colors?.surface;\n  }\n\n  if (theme.dark) {\n    return '#383838';\n  }\n\n  return '#ebebeb';\n};\n\nconst getBackgroundColor = ({\n  theme,\n  isOutlined,\n  disabled,\n  customBackgroundColor,\n}: BaseProps & {\n  customBackgroundColor?: ColorValue;\n}) => {\n  if (typeof customBackgroundColor === 'string') {\n    return customBackgroundColor;\n  }\n\n  if (theme.isV3) {\n    if (disabled) {\n      if (isOutlined) {\n        return 'transparent';\n      }\n      return color(theme.colors.onSurfaceVariant).alpha(0.12).rgb().string();\n    }\n  }\n\n  return getDefaultBackgroundColor({ theme, isOutlined });\n};\n\nconst getSelectedBackgroundColor = ({\n  theme,\n  isOutlined,\n  disabled,\n  customBackgroundColor,\n  showSelectedOverlay,\n}: BaseProps & {\n  customBackgroundColor?: ColorValue;\n  showSelectedOverlay?: boolean;\n}) => {\n  const backgroundColor = getBackgroundColor({\n    theme,\n    disabled,\n    isOutlined,\n    customBackgroundColor,\n  });\n\n  if (theme.isV3) {\n    if (isOutlined) {\n      if (showSelectedOverlay) {\n        return color(backgroundColor)\n          .mix(color(theme.colors.onSurfaceVariant), 0.12)\n          .rgb()\n          .string();\n      }\n      return color(backgroundColor)\n        .mix(color(theme.colors.onSurfaceVariant), 0)\n        .rgb()\n        .string();\n    }\n\n    if (showSelectedOverlay) {\n      return color(backgroundColor)\n        .mix(color(theme.colors.onSecondaryContainer), 0.12)\n        .rgb()\n        .string();\n    }\n\n    return color(backgroundColor)\n      .mix(color(theme.colors.onSecondaryContainer), 0)\n      .rgb()\n      .string();\n  }\n\n  if (theme.dark) {\n    if (isOutlined) {\n      return color(backgroundColor).lighten(0.2).rgb().string();\n    }\n    return color(backgroundColor).lighten(0.4).rgb().string();\n  }\n\n  if (isOutlined) {\n    return color(backgroundColor).darken(0.08).rgb().string();\n  }\n\n  return color(backgroundColor).darken(0.2).rgb().string();\n};\n\nconst getIconColor = ({\n  theme,\n  isOutlined,\n  disabled,\n  selectedColor,\n}: BaseProps & {\n  selectedColor?: string;\n}) => {\n  const isSelectedColor = selectedColor !== undefined;\n  if (theme.isV3) {\n    if (disabled) {\n      return theme.colors.onSurfaceDisabled;\n    }\n\n    if (isSelectedColor) {\n      return selectedColor;\n    }\n\n    if (isOutlined) {\n      return theme.colors.onSurfaceVariant;\n    }\n\n    return theme.colors.onSecondaryContainer;\n  }\n\n  if (disabled) {\n    return theme.colors.disabled;\n  }\n\n  if (isSelectedColor) {\n    return color(selectedColor).alpha(0.54).rgb().string();\n  }\n\n  return color(theme.colors.text).alpha(0.54).rgb().string();\n};\n\nconst getRippleColor = ({\n  theme,\n  isOutlined,\n  disabled,\n  selectedColor,\n  selectedBackgroundColor,\n  customRippleColor,\n}: BaseProps & {\n  selectedBackgroundColor: string;\n  selectedColor?: string;\n  customRippleColor?: ColorValue;\n}) => {\n  if (customRippleColor) {\n    return customRippleColor;\n  }\n\n  const isSelectedColor = selectedColor !== undefined;\n  const textColor = getTextColor({\n    theme,\n    disabled,\n    selectedColor,\n    isOutlined,\n  });\n\n  if (theme.isV3) {\n    if (isSelectedColor) {\n      return color(selectedColor).alpha(0.12).rgb().string();\n    }\n\n    return color(textColor).alpha(0.12).rgb().string();\n  }\n\n  if (isSelectedColor) {\n    return color(selectedColor).fade(0.5).rgb().string();\n  }\n\n  return selectedBackgroundColor;\n};\n\nexport const getChipColors = ({\n  isOutlined,\n  theme,\n  selectedColor,\n  showSelectedOverlay,\n  customBackgroundColor,\n  disabled,\n  customRippleColor,\n}: BaseProps & {\n  customBackgroundColor?: ColorValue;\n  disabled?: boolean;\n  showSelectedOverlay?: boolean;\n  selectedColor?: string;\n  customRippleColor?: ColorValue;\n}) => {\n  const baseChipColorProps = { theme, isOutlined, disabled };\n\n  const backgroundColor = getBackgroundColor({\n    ...baseChipColorProps,\n    customBackgroundColor,\n  });\n\n  const selectedBackgroundColor = getSelectedBackgroundColor({\n    ...baseChipColorProps,\n    customBackgroundColor,\n    showSelectedOverlay,\n  });\n\n  return {\n    borderColor: getBorderColor({\n      ...baseChipColorProps,\n      selectedColor,\n      backgroundColor,\n    }),\n    textColor: getTextColor({\n      ...baseChipColorProps,\n      selectedColor,\n    }),\n    iconColor: getIconColor({\n      ...baseChipColorProps,\n      selectedColor,\n    }),\n    rippleColor: getRippleColor({\n      ...baseChipColorProps,\n      selectedColor,\n      selectedBackgroundColor,\n      customRippleColor,\n    }),\n    backgroundColor,\n    selectedBackgroundColor,\n  };\n};\n","import * as React from 'react';\nimport { Animated, StyleSheet, View } from 'react-native';\n\nimport Icon, { IconSource, isEqualIcon, isValidIcon } from './Icon';\nimport { useInternalTheme } from '../core/theming';\nimport type { ThemeProp } from '../types';\n\ntype Props = {\n  /**\n   * Icon to display for the `CrossFadeIcon`.\n   */\n  source: IconSource;\n  /**\n   * Color of the icon.\n   */\n  color: string;\n  /**\n   * Size of the icon.\n   */\n  size: number;\n  /**\n   * TestID used for testing purposes\n   */\n  testID?: string;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n};\n\nconst CrossFadeIcon = ({\n  color,\n  size,\n  source,\n  theme: themeOverrides,\n  testID = 'cross-fade-icon',\n}: Props) => {\n  const theme = useInternalTheme(themeOverrides);\n  const [currentIcon, setCurrentIcon] = React.useState<IconSource>(\n    () => source\n  );\n  const [previousIcon, setPreviousIcon] = React.useState<IconSource | null>(\n    null\n  );\n  const { current: fade } = React.useRef<Animated.Value>(new Animated.Value(1));\n\n  const { scale } = theme.animation;\n\n  if (currentIcon !== source) {\n    setPreviousIcon(() => currentIcon);\n    setCurrentIcon(() => source);\n  }\n\n  React.useEffect(() => {\n    if (isValidIcon(previousIcon) && !isEqualIcon(previousIcon, currentIcon)) {\n      fade.setValue(1);\n\n      Animated.timing(fade, {\n        duration: scale * 200,\n        toValue: 0,\n        useNativeDriver: true,\n      }).start();\n    }\n  }, [currentIcon, previousIcon, fade, scale]);\n\n  const opacityPrev = fade;\n  const opacityNext = previousIcon\n    ? fade.interpolate({\n        inputRange: [0, 1],\n        outputRange: [1, 0],\n      })\n    : 1;\n\n  const rotatePrev = fade.interpolate({\n    inputRange: [0, 1],\n    outputRange: ['-90deg', '0deg'],\n  });\n\n  const rotateNext = previousIcon\n    ? fade.interpolate({\n        inputRange: [0, 1],\n        outputRange: ['0deg', '-180deg'],\n      })\n    : '0deg';\n\n  return (\n    <View\n      style={[\n        styles.content,\n        {\n          height: size,\n          width: size,\n        },\n      ]}\n    >\n      {previousIcon ? (\n        <Animated.View\n          style={[\n            styles.icon,\n            {\n              opacity: opacityPrev,\n              transform: [{ rotate: rotatePrev }],\n            },\n          ]}\n          testID={`${testID}-previous`}\n        >\n          <Icon source={previousIcon} size={size} color={color} theme={theme} />\n        </Animated.View>\n      ) : null}\n      <Animated.View\n        style={[\n          styles.icon,\n          {\n            opacity: opacityNext,\n            transform: [{ rotate: rotateNext }],\n          },\n        ]}\n        testID={`${testID}-current`}\n      >\n        <Icon source={currentIcon} size={size} color={color} theme={theme} />\n      </Animated.View>\n    </View>\n  );\n};\n\nexport default CrossFadeIcon;\n\nconst styles = StyleSheet.create({\n  content: {\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  icon: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet, StyleProp, View, ViewStyle } from 'react-native';\n\nimport DataTableCell from './DataTableCell';\nimport DataTableHeader, {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  DataTableHeader as _DataTableHeader,\n} from './DataTableHeader';\nimport DataTablePagination, {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  DataTablePagination as _DataTablePagination,\n} from './DataTablePagination';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport DataTableRow, { DataTableRow as _DataTableRow } from './DataTableRow';\nimport DataTableTitle, {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  DataTableTitle as _DataTableTitle,\n} from './DataTableTitle';\n\nexport type Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * Content of the `DataTable`.\n   */\n  children: React.ReactNode;\n  style?: StyleProp<ViewStyle>;\n};\n\n/**\n * Data tables allow displaying sets of data.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { DataTable } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [page, setPage] = React.useState<number>(0);\n *   const [numberOfItemsPerPageList] = React.useState([2, 3, 4]);\n *   const [itemsPerPage, onItemsPerPageChange] = React.useState(\n *     numberOfItemsPerPageList[0]\n *   );\n *\n *   const [items] = React.useState([\n *    {\n *      key: 1,\n *      name: 'Cupcake',\n *      calories: 356,\n *      fat: 16,\n *    },\n *    {\n *      key: 2,\n *      name: 'Eclair',\n *      calories: 262,\n *      fat: 16,\n *    },\n *    {\n *      key: 3,\n *      name: 'Frozen yogurt',\n *      calories: 159,\n *      fat: 6,\n *    },\n *    {\n *      key: 4,\n *      name: 'Gingerbread',\n *      calories: 305,\n *      fat: 3.7,\n *    },\n *   ]);\n *\n *   const from = page * itemsPerPage;\n *   const to = Math.min((page + 1) * itemsPerPage, items.length);\n *\n *   React.useEffect(() => {\n *     setPage(0);\n *   }, [itemsPerPage]);\n *\n *   return (\n *     <DataTable>\n *       <DataTable.Header>\n *         <DataTable.Title>Dessert</DataTable.Title>\n *         <DataTable.Title numeric>Calories</DataTable.Title>\n *         <DataTable.Title numeric>Fat</DataTable.Title>\n *       </DataTable.Header>\n *\n *       {items.slice(from, to).map((item) => (\n *         <DataTable.Row key={item.key}>\n *           <DataTable.Cell>{item.name}</DataTable.Cell>\n *           <DataTable.Cell numeric>{item.calories}</DataTable.Cell>\n *           <DataTable.Cell numeric>{item.fat}</DataTable.Cell>\n *         </DataTable.Row>\n *       ))}\n *\n *       <DataTable.Pagination\n *         page={page}\n *         numberOfPages={Math.ceil(items.length / itemsPerPage)}\n *         onPageChange={(page) => setPage(page)}\n *         label={`${from + 1}-${to} of ${items.length}`}\n *         numberOfItemsPerPageList={numberOfItemsPerPageList}\n *         numberOfItemsPerPage={itemsPerPage}\n *         onItemsPerPageChange={onItemsPerPageChange}\n *         showFastPaginationControls\n *         selectPageDropdownLabel={'Rows per page'}\n *       />\n *     </DataTable>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nconst DataTable = ({ children, style, ...rest }: Props) => (\n  <View {...rest} style={[styles.container, style]}>\n    {children}\n  </View>\n);\n\n// @component ./DataTableHeader.tsx\nDataTable.Header = DataTableHeader;\n\n// @component ./DataTableTitle.tsx\nDataTable.Title = DataTableTitle;\n\n// @component ./DataTableRow.tsx\nDataTable.Row = DataTableRow;\n\n// @component ./DataTableCell.tsx\nDataTable.Cell = DataTableCell;\n\n// @component ./DataTablePagination.tsx\nDataTable.Pagination = DataTablePagination;\n\nconst styles = StyleSheet.create({\n  container: {\n    width: '100%',\n  },\n});\n\nexport default DataTable;\n","import * as React from 'react';\nimport {\n  StyleSheet,\n  StyleProp,\n  ViewStyle,\n  TextStyle,\n  GestureResponderEvent,\n} from 'react-native';\n\nimport type { $RemoveChildren } from '../../types';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport Text from '../Typography/Text';\n\nexport type Props = $RemoveChildren<typeof TouchableRipple> & {\n  /**\n   * Content of the `DataTableCell`.\n   */\n  children: React.ReactNode;\n  /**\n   * Align the text to the right. Generally monetary or number fields are aligned to right.\n   */\n  numeric?: boolean;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: (e: GestureResponderEvent) => void;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * Text content style of the `DataTableCell`.\n   */\n  textStyle?: StyleProp<TextStyle>;\n  /**\n   * Specifies the largest possible scale a text font can reach.\n   */\n  maxFontSizeMultiplier?: number;\n  /**\n   * testID to be used on tests.\n   */\n  testID?: string;\n};\n\n/**\n * A component to show a single cell inside of a table.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { DataTable } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *      <DataTable.Row>\n *        <DataTable.Cell numeric>1</DataTable.Cell>\n *        <DataTable.Cell numeric>2</DataTable.Cell>\n *        <DataTable.Cell numeric>3</DataTable.Cell>\n *        <DataTable.Cell numeric>4</DataTable.Cell>\n *      </DataTable.Row>\n * );\n *\n * export default MyComponent;\n * ```\n *\n * If you want to support multiline text, please use View instead, as multiline text doesn't comply with\n * MD Guidelines (https://github.com/callstack/react-native-paper/issues/2381).\n *\n * @extends TouchableRipple props https://callstack.github.io/react-native-paper/docs/components/TouchableRipple\n */\nconst DataTableCell = ({\n  children,\n  textStyle,\n  style,\n  numeric,\n  maxFontSizeMultiplier,\n  testID,\n  ...rest\n}: Props) => {\n  return (\n    <TouchableRipple\n      {...rest}\n      testID={testID}\n      style={[styles.container, numeric && styles.right, style]}\n    >\n      <CellContent\n        textStyle={textStyle}\n        testID={testID}\n        maxFontSizeMultiplier={maxFontSizeMultiplier}\n      >\n        {children}\n      </CellContent>\n    </TouchableRipple>\n  );\n};\n\nconst CellContent = ({\n  children,\n  textStyle,\n  maxFontSizeMultiplier,\n  testID,\n}: Pick<\n  Props,\n  'children' | 'textStyle' | 'testID' | 'maxFontSizeMultiplier'\n>) => {\n  if (React.isValidElement(children)) {\n    return children;\n  }\n\n  return (\n    <Text\n      style={textStyle}\n      numberOfLines={1}\n      maxFontSizeMultiplier={maxFontSizeMultiplier}\n      testID={`${testID}-text-container`}\n    >\n      {children}\n    </Text>\n  );\n};\n\nDataTableCell.displayName = 'DataTable.Cell';\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n\n  right: {\n    justifyContent: 'flex-end',\n  },\n});\n\nexport default DataTableCell;\n","import * as React from 'react';\nimport { StyleProp, StyleSheet, View, ViewStyle } from 'react-native';\n\nimport color from 'color';\n\nimport { useInternalTheme } from '../../core/theming';\nimport { black, white } from '../../styles/themes/v2/colors';\nimport type { ThemeProp } from '../../types';\n\nexport type Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * Content of the `DataTableHeader`.\n   */\n  children: React.ReactNode;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n};\n\n/**\n * A component to display title in table header.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { DataTable } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *       <DataTable>\n *         <DataTable.Header>\n *           <DataTable.Title\n *             sortDirection='descending'\n *           >\n *             Dessert\n *           </DataTable.Title>\n *           <DataTable.Title numeric>Calories</DataTable.Title>\n *           <DataTable.Title numeric>Fat (g)</DataTable.Title>\n *         </DataTable.Header>\n *       </DataTable>\n * );\n *\n * export default MyComponent;\n * ```\n */\n\nconst DataTableHeader = ({\n  children,\n  style,\n  theme: themeOverrides,\n  ...rest\n}: Props) => {\n  const theme = useInternalTheme(themeOverrides);\n  const borderBottomColor = theme.isV3\n    ? theme.colors.surfaceVariant\n    : color(theme.dark ? white : black)\n        .alpha(0.12)\n        .rgb()\n        .string();\n\n  return (\n    <View {...rest} style={[styles.header, { borderBottomColor }, style]}>\n      {children}\n    </View>\n  );\n};\n\nDataTableHeader.displayName = 'DataTable.Header';\n\nconst styles = StyleSheet.create({\n  header: {\n    flexDirection: 'row',\n    paddingHorizontal: 16,\n    borderBottomWidth: StyleSheet.hairlineWidth * 2,\n  },\n});\n\nexport default DataTableHeader;\n\n// @component-docs ignore-next-line\nexport { DataTableHeader };\n","import * as React from 'react';\nimport {\n  ColorValue,\n  I18nManager,\n  StyleProp,\n  StyleSheet,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport color from 'color';\nimport type { ThemeProp } from 'src/types';\n\nimport { useInternalTheme } from '../../core/theming';\nimport Button from '../Button/Button';\nimport IconButton from '../IconButton/IconButton';\nimport MaterialCommunityIcon from '../MaterialCommunityIcon';\nimport Menu from '../Menu/Menu';\nimport Text from '../Typography/Text';\n\nexport type Props = React.ComponentPropsWithRef<typeof View> &\n  PaginationControlsProps &\n  PaginationDropdownProps & {\n    /**\n     * Label text for select page dropdown to display.\n     */\n    selectPageDropdownLabel?: React.ReactNode;\n    /**\n     * AccessibilityLabel for `selectPageDropdownLabel`.\n     */\n    selectPageDropdownAccessibilityLabel?: string;\n    /**\n     * Label text to display which indicates current pagination.\n     */\n    label?: React.ReactNode;\n    /**\n     * AccessibilityLabel for `label`.\n     */\n    accessibilityLabel?: string;\n    style?: StyleProp<ViewStyle>;\n    /**\n     * @optional\n     */\n    theme?: ThemeProp;\n  };\n\ntype PaginationDropdownProps = {\n  /**\n   * The current number of rows per page.\n   */\n  numberOfItemsPerPage?: number;\n  /**\n   * Options for a number of rows per page to choose from.\n   */\n  numberOfItemsPerPageList?: Array<number>;\n  /**\n   * The function to set the number of rows per page.\n   */\n  onItemsPerPageChange?: (numberOfItemsPerPage: number) => void;\n  /**\n   * Color of the dropdown item ripple effect.\n   */\n  dropdownItemRippleColor?: ColorValue;\n  /**\n   * Color of the select page dropdown ripple effect.\n   */\n  selectPageDropdownRippleColor?: ColorValue;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n};\n\ntype PaginationControlsProps = {\n  /**\n   * The currently visible page (starting with 0).\n   */\n  page: number;\n  /**\n   * The total number of pages.\n   */\n  numberOfPages: number;\n  /**\n   * Function to execute on page change.\n   */\n  onPageChange: (page: number) => void;\n  /**\n   * Whether to show fast forward and fast rewind buttons in pagination. False by default.\n   */\n  showFastPaginationControls?: boolean;\n  /**\n   * Color of the pagination control ripple effect.\n   */\n  paginationControlRippleColor?: ColorValue;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n};\n\nconst PaginationControls = ({\n  page,\n  numberOfPages,\n  onPageChange,\n  showFastPaginationControls,\n  theme: themeOverrides,\n  paginationControlRippleColor,\n}: PaginationControlsProps) => {\n  const theme = useInternalTheme(themeOverrides);\n\n  const textColor = theme.isV3 ? theme.colors.onSurface : theme.colors.text;\n\n  return (\n    <>\n      {showFastPaginationControls ? (\n        <IconButton\n          icon={({ size, color }) => (\n            <MaterialCommunityIcon\n              name=\"page-first\"\n              color={color}\n              size={size}\n              direction={I18nManager.getConstants().isRTL ? 'rtl' : 'ltr'}\n            />\n          )}\n          iconColor={textColor}\n          rippleColor={paginationControlRippleColor}\n          disabled={page === 0}\n          onPress={() => onPageChange(0)}\n          accessibilityLabel=\"page-first\"\n          theme={theme}\n        />\n      ) : null}\n      <IconButton\n        icon={({ size, color }) => (\n          <MaterialCommunityIcon\n            name=\"chevron-left\"\n            color={color}\n            size={size}\n            direction={I18nManager.getConstants().isRTL ? 'rtl' : 'ltr'}\n          />\n        )}\n        iconColor={textColor}\n        rippleColor={paginationControlRippleColor}\n        disabled={page === 0}\n        onPress={() => onPageChange(page - 1)}\n        accessibilityLabel=\"chevron-left\"\n        theme={theme}\n      />\n      <IconButton\n        icon={({ size, color }) => (\n          <MaterialCommunityIcon\n            name=\"chevron-right\"\n            color={color}\n            size={size}\n            direction={I18nManager.getConstants().isRTL ? 'rtl' : 'ltr'}\n          />\n        )}\n        iconColor={textColor}\n        rippleColor={paginationControlRippleColor}\n        disabled={numberOfPages === 0 || page === numberOfPages - 1}\n        onPress={() => onPageChange(page + 1)}\n        accessibilityLabel=\"chevron-right\"\n        theme={theme}\n      />\n      {showFastPaginationControls ? (\n        <IconButton\n          icon={({ size, color }) => (\n            <MaterialCommunityIcon\n              name=\"page-last\"\n              color={color}\n              size={size}\n              direction={I18nManager.getConstants().isRTL ? 'rtl' : 'ltr'}\n            />\n          )}\n          iconColor={textColor}\n          rippleColor={paginationControlRippleColor}\n          disabled={numberOfPages === 0 || page === numberOfPages - 1}\n          onPress={() => onPageChange(numberOfPages - 1)}\n          accessibilityLabel=\"page-last\"\n          theme={theme}\n        />\n      ) : null}\n    </>\n  );\n};\n\nconst PaginationDropdown = ({\n  numberOfItemsPerPageList,\n  numberOfItemsPerPage,\n  onItemsPerPageChange,\n  theme: themeOverrides,\n  selectPageDropdownRippleColor,\n  dropdownItemRippleColor,\n}: PaginationDropdownProps) => {\n  const theme = useInternalTheme(themeOverrides);\n  const { colors } = theme;\n  const [showSelect, toggleSelect] = React.useState<boolean>(false);\n\n  return (\n    <Menu\n      visible={showSelect}\n      onDismiss={() => toggleSelect(!showSelect)}\n      theme={theme}\n      anchor={\n        <Button\n          mode=\"outlined\"\n          onPress={() => toggleSelect(true)}\n          style={styles.button}\n          icon=\"menu-down\"\n          contentStyle={styles.contentStyle}\n          theme={theme}\n          rippleColor={selectPageDropdownRippleColor}\n        >\n          {`${numberOfItemsPerPage}`}\n        </Button>\n      }\n    >\n      {numberOfItemsPerPageList?.map((option) => (\n        <Menu.Item\n          key={option}\n          titleStyle={\n            option === numberOfItemsPerPage && {\n              color: colors?.primary,\n            }\n          }\n          onPress={() => {\n            onItemsPerPageChange?.(option);\n            toggleSelect(false);\n          }}\n          rippleColor={dropdownItemRippleColor}\n          title={option}\n          theme={theme}\n        />\n      ))}\n    </Menu>\n  );\n};\n\n/**\n * A component to show pagination for data table.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { DataTable } from 'react-native-paper';\n *\n * const numberOfItemsPerPageList = [2, 3, 4];\n *\n * const items = [\n *   {\n *     key: 1,\n *     name: 'Page 1',\n *   },\n *   {\n *     key: 2,\n *     name: 'Page 2',\n *   },\n *   {\n *     key: 3,\n *     name: 'Page 3',\n *   },\n * ];\n *\n * const MyComponent = () => {\n *   const [page, setPage] = React.useState(0);\n *   const [numberOfItemsPerPage, onItemsPerPageChange] = React.useState(numberOfItemsPerPageList[0]);\n *   const from = page * numberOfItemsPerPage;\n *   const to = Math.min((page + 1) * numberOfItemsPerPage, items.length);\n *\n *   React.useEffect(() => {\n *      setPage(0);\n *   }, [numberOfItemsPerPage]);\n *\n *   return (\n *     <DataTable>\n *       <DataTable.Pagination\n *         page={page}\n *         numberOfPages={Math.ceil(items.length / numberOfItemsPerPage)}\n *         onPageChange={page => setPage(page)}\n *         label={`${from + 1}-${to} of ${items.length}`}\n *         showFastPaginationControls\n *         numberOfItemsPerPageList={numberOfItemsPerPageList}\n *         numberOfItemsPerPage={numberOfItemsPerPage}\n *         onItemsPerPageChange={onItemsPerPageChange}\n *         selectPageDropdownLabel={'Rows per page'}\n *       />\n *     </DataTable>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nconst DataTablePagination = ({\n  label,\n  accessibilityLabel,\n  page,\n  numberOfPages,\n  onPageChange,\n  style,\n  showFastPaginationControls = false,\n  numberOfItemsPerPageList,\n  numberOfItemsPerPage,\n  onItemsPerPageChange,\n  selectPageDropdownLabel,\n  selectPageDropdownAccessibilityLabel,\n  selectPageDropdownRippleColor,\n  dropdownItemRippleColor,\n  theme: themeOverrides,\n  ...rest\n}: Props) => {\n  const theme = useInternalTheme(themeOverrides);\n  const labelColor = color(\n    theme.isV3 ? theme.colors.onSurface : theme?.colors.text\n  )\n    .alpha(0.6)\n    .rgb()\n    .string();\n\n  return (\n    <View\n      {...rest}\n      style={[styles.container, style]}\n      accessibilityLabel=\"pagination-container\"\n    >\n      {numberOfItemsPerPageList &&\n        numberOfItemsPerPage &&\n        onItemsPerPageChange && (\n          <View\n            accessibilityLabel=\"Options Select\"\n            style={styles.optionsContainer}\n          >\n            <Text\n              style={[styles.label, { color: labelColor }]}\n              numberOfLines={3}\n              accessibilityLabel={\n                selectPageDropdownAccessibilityLabel ||\n                'selectPageDropdownLabel'\n              }\n            >\n              {selectPageDropdownLabel}\n            </Text>\n            <PaginationDropdown\n              numberOfItemsPerPageList={numberOfItemsPerPageList}\n              numberOfItemsPerPage={numberOfItemsPerPage}\n              onItemsPerPageChange={onItemsPerPageChange}\n              selectPageDropdownRippleColor={selectPageDropdownRippleColor}\n              dropdownItemRippleColor={dropdownItemRippleColor}\n              theme={theme}\n            />\n          </View>\n        )}\n      <Text\n        style={[styles.label, { color: labelColor }]}\n        numberOfLines={3}\n        accessibilityLabel={accessibilityLabel || 'label'}\n      >\n        {label}\n      </Text>\n      <View style={styles.iconsContainer}>\n        <PaginationControls\n          showFastPaginationControls={showFastPaginationControls}\n          onPageChange={onPageChange}\n          page={page}\n          numberOfPages={numberOfPages}\n          theme={theme}\n        />\n      </View>\n    </View>\n  );\n};\n\nDataTablePagination.displayName = 'DataTable.Pagination';\n\nconst styles = StyleSheet.create({\n  container: {\n    justifyContent: 'flex-end',\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingLeft: 16,\n    flexWrap: 'wrap',\n  },\n  optionsContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginVertical: 6,\n  },\n  label: {\n    fontSize: 12,\n    marginRight: 16,\n  },\n  button: {\n    textAlign: 'center',\n    marginRight: 16,\n  },\n  iconsContainer: {\n    flexDirection: 'row',\n  },\n  contentStyle: {\n    flexDirection: 'row-reverse',\n  },\n});\n\nexport default DataTablePagination;\n\n// @component-docs ignore-next-line\nexport { DataTablePagination };\n","import * as React from 'react';\nimport {\n  GestureResponderEvent,\n  StyleProp,\n  StyleSheet,\n  View,\n  ViewProps,\n  ViewStyle,\n} from 'react-native';\n\nimport color from 'color';\n\nimport { useInternalTheme } from '../../core/theming';\nimport { black, white } from '../../styles/themes/v2/colors';\nimport type { $RemoveChildren, ThemeProp } from '../../types';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\n\nexport type Props = $RemoveChildren<typeof TouchableRipple> & {\n  /**\n   * Content of the `DataTableRow`.\n   */\n  children: React.ReactNode;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: (e: GestureResponderEvent) => void;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n  /**\n   * `pointerEvents` passed to the `View` container, which is wrapping children within `TouchableRipple`.\n   */\n  pointerEvents?: ViewProps['pointerEvents'];\n};\n\n/**\n * A component to show a single row inside of a table.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { DataTable } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *      <DataTable.Row>\n *        <DataTable.Cell numeric>1</DataTable.Cell>\n *        <DataTable.Cell numeric>2</DataTable.Cell>\n *        <DataTable.Cell numeric>3</DataTable.Cell>\n *        <DataTable.Cell numeric>4</DataTable.Cell>\n *      </DataTable.Row>\n * );\n *\n * export default MyComponent;\n * ```\n *\n * @extends TouchableRipple props https://callstack.github.io/react-native-paper/docs/components/TouchableRipple\n */\nconst DataTableRow = ({\n  onPress,\n  style,\n  children,\n  pointerEvents,\n  theme: themeOverrides,\n  ...rest\n}: Props) => {\n  const theme = useInternalTheme(themeOverrides);\n  const borderBottomColor = theme.isV3\n    ? theme.colors.surfaceVariant\n    : color(theme.dark ? white : black)\n        .alpha(0.12)\n        .rgb()\n        .string();\n\n  return (\n    <TouchableRipple\n      {...rest}\n      onPress={onPress}\n      style={[styles.container, { borderBottomColor }, style]}\n    >\n      <View style={styles.content} pointerEvents={pointerEvents}>\n        {children}\n      </View>\n    </TouchableRipple>\n  );\n};\n\nDataTableRow.displayName = 'DataTable.Row';\n\nconst styles = StyleSheet.create({\n  container: {\n    borderStyle: 'solid',\n    borderBottomWidth: StyleSheet.hairlineWidth,\n    minHeight: 48,\n    paddingHorizontal: 16,\n  },\n  content: {\n    flex: 1,\n    flexDirection: 'row',\n  },\n});\n\nexport default DataTableRow;\n\n// @component-docs ignore-next-line\nexport { DataTableRow };\n","import * as React from 'react';\nimport {\n  Animated,\n  GestureResponderEvent,\n  I18nManager,\n  Pressable,\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  ViewStyle,\n} from 'react-native';\n\nimport color from 'color';\n\nimport { useInternalTheme } from '../../core/theming';\nimport type { ThemeProp } from '../../types';\nimport MaterialCommunityIcon from '../MaterialCommunityIcon';\nimport Text from '../Typography/Text';\n\nexport type Props = React.ComponentPropsWithRef<typeof Pressable> & {\n  /**\n   * Text content of the `DataTableTitle`.\n   */\n  children: React.ReactNode;\n  /**\n   * Align the text to the right. Generally monetary or number fields are aligned to right.\n   */\n  numeric?: boolean;\n  /**\n   * Direction of sorting. An arrow indicating the direction is displayed when this is given.\n   */\n  sortDirection?: 'ascending' | 'descending';\n  /**\n   * The number of lines to show.\n   */\n  numberOfLines?: number;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: (e: GestureResponderEvent) => void;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * Text content style of the `DataTableTitle`.\n   */\n  textStyle?: StyleProp<TextStyle>;\n  /**\n   * Specifies the largest possible scale a text font can reach.\n   */\n  maxFontSizeMultiplier?: number;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n};\n\n/**\n * A component to display title in table header.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { DataTable } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *       <DataTable>\n *         <DataTable.Header>\n *           <DataTable.Title\n *             sortDirection='descending'\n *           >\n *             Dessert\n *           </DataTable.Title>\n *           <DataTable.Title numeric>Calories</DataTable.Title>\n *           <DataTable.Title numeric>Fat (g)</DataTable.Title>\n *         </DataTable.Header>\n *       </DataTable>\n * );\n *\n * export default MyComponent;\n * ```\n */\n\nconst DataTableTitle = ({\n  numeric,\n  children,\n  onPress,\n  sortDirection,\n  textStyle,\n  style,\n  theme: themeOverrides,\n  numberOfLines = 1,\n  maxFontSizeMultiplier,\n  ...rest\n}: Props) => {\n  const theme = useInternalTheme(themeOverrides);\n  const { current: spinAnim } = React.useRef<Animated.Value>(\n    new Animated.Value(sortDirection === 'ascending' ? 0 : 1)\n  );\n\n  React.useEffect(() => {\n    Animated.timing(spinAnim, {\n      toValue: sortDirection === 'ascending' ? 0 : 1,\n      duration: 150,\n      useNativeDriver: true,\n    }).start();\n  }, [sortDirection, spinAnim]);\n\n  const textColor = theme.isV3 ? theme.colors.onSurface : theme?.colors?.text;\n\n  const alphaTextColor = color(textColor).alpha(0.6).rgb().string();\n\n  const spin = spinAnim.interpolate({\n    inputRange: [0, 1],\n    outputRange: ['0deg', '180deg'],\n  });\n\n  const icon = sortDirection ? (\n    <Animated.View style={[styles.icon, { transform: [{ rotate: spin }] }]}>\n      <MaterialCommunityIcon\n        name=\"arrow-up\"\n        size={16}\n        color={textColor}\n        direction={I18nManager.getConstants().isRTL ? 'rtl' : 'ltr'}\n      />\n    </Animated.View>\n  ) : null;\n\n  return (\n    <Pressable\n      disabled={!onPress}\n      onPress={onPress}\n      {...rest}\n      style={[styles.container, numeric && styles.right, style]}\n    >\n      {icon}\n\n      <Text\n        style={[\n          styles.cell,\n          // height must scale with numberOfLines\n          { maxHeight: 24 * numberOfLines },\n          // if numberOfLines causes wrap, center is lost. Align directly, sensitive to numeric and RTL\n          numberOfLines > 1\n            ? numeric\n              ? I18nManager.getConstants().isRTL\n                ? styles.leftText\n                : styles.rightText\n              : styles.centerText\n            : {},\n          sortDirection ? styles.sorted : { color: alphaTextColor },\n          textStyle,\n        ]}\n        numberOfLines={numberOfLines}\n        maxFontSizeMultiplier={maxFontSizeMultiplier}\n      >\n        {children}\n      </Text>\n    </Pressable>\n  );\n};\n\nDataTableTitle.displayName = 'DataTable.Title';\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'row',\n    alignContent: 'center',\n    paddingVertical: 12,\n  },\n\n  rightText: {\n    textAlign: 'right',\n  },\n\n  leftText: {\n    textAlign: 'left',\n  },\n\n  centerText: {\n    textAlign: 'center',\n  },\n\n  right: {\n    justifyContent: 'flex-end',\n  },\n\n  cell: {\n    lineHeight: 24,\n    fontSize: 12,\n    fontWeight: '500',\n    alignItems: 'center',\n  },\n\n  sorted: {\n    marginLeft: 8,\n  },\n\n  icon: {\n    height: 24,\n    justifyContent: 'center',\n  },\n});\n\nexport default DataTableTitle;\n\n// @component-docs ignore-next-line\nexport { DataTableTitle };\n","import * as React from 'react';\nimport {\n  Animated,\n  Platform,\n  StyleProp,\n  StyleSheet,\n  ViewStyle,\n} from 'react-native';\n\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\n\nimport DialogActions from './DialogActions';\nimport DialogContent from './DialogContent';\nimport DialogIcon from './DialogIcon';\nimport DialogScrollArea from './DialogScrollArea';\nimport DialogTitle from './DialogTitle';\nimport { useInternalTheme } from '../../core/theming';\nimport overlay from '../../styles/overlay';\nimport type { ThemeProp } from '../../types';\nimport Modal from '../Modal';\n\nexport type Props = {\n  /**\n   * Determines whether clicking outside the dialog dismiss it.\n   */\n  dismissable?: boolean;\n  /**\n   * Determines whether clicking Android hardware back button dismiss dialog.\n   */\n  dismissableBackButton?: boolean;\n  /**\n   * Callback that is called when the user dismisses the dialog.\n   */\n  onDismiss?: () => void;\n  /**\n   * Determines Whether the dialog is visible.\n   */\n  visible: boolean;\n  /**\n   * Content of the `Dialog`.\n   */\n  children: React.ReactNode;\n  style?: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n  /**\n   * testID to be used on tests.\n   */\n  testID?: string;\n};\n\nconst DIALOG_ELEVATION: number = 24;\n\n/**\n * Dialogs inform users about a specific task and may contain critical information, require decisions, or involve multiple tasks.\n * To render the `Dialog` above other components, you'll need to wrap it with the [`Portal`](../../Portal) component.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { View } from 'react-native';\n * import { Button, Dialog, Portal, PaperProvider, Text } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [visible, setVisible] = React.useState(false);\n *\n *   const showDialog = () => setVisible(true);\n *\n *   const hideDialog = () => setVisible(false);\n *\n *   return (\n *     <PaperProvider>\n *       <View>\n *         <Button onPress={showDialog}>Show Dialog</Button>\n *         <Portal>\n *           <Dialog visible={visible} onDismiss={hideDialog}>\n *             <Dialog.Title>Alert</Dialog.Title>\n *             <Dialog.Content>\n *               <Text variant=\"bodyMedium\">This is simple dialog</Text>\n *             </Dialog.Content>\n *             <Dialog.Actions>\n *               <Button onPress={hideDialog}>Done</Button>\n *             </Dialog.Actions>\n *           </Dialog>\n *         </Portal>\n *       </View>\n *     </PaperProvider>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nconst Dialog = ({\n  children,\n  dismissable = true,\n  dismissableBackButton = dismissable,\n  onDismiss,\n  visible = false,\n  style,\n  theme: themeOverrides,\n  testID,\n}: Props) => {\n  const { right, left } = useSafeAreaInsets();\n  const theme = useInternalTheme(themeOverrides);\n  const { isV3, dark, mode, colors, roundness } = theme;\n  const borderRadius = (isV3 ? 7 : 1) * roundness;\n\n  const backgroundColorV2 =\n    dark && mode === 'adaptive'\n      ? overlay(DIALOG_ELEVATION, colors?.surface)\n      : colors?.surface;\n  const backgroundColor = isV3\n    ? theme.colors.elevation.level3\n    : backgroundColorV2;\n\n  return (\n    <Modal\n      dismissable={dismissable}\n      dismissableBackButton={dismissableBackButton}\n      onDismiss={onDismiss}\n      visible={visible}\n      contentContainerStyle={[\n        {\n          borderRadius,\n          backgroundColor,\n          marginHorizontal: Math.max(left, right, 26),\n        },\n        styles.container,\n        style,\n      ]}\n      theme={theme}\n      testID={testID}\n    >\n      {React.Children.toArray(children)\n        .filter((child) => child != null && typeof child !== 'boolean')\n        .map((child, i) => {\n          if (isV3) {\n            if (i === 0 && React.isValidElement(child)) {\n              return React.cloneElement(child as React.ReactElement<any>, {\n                style: [{ marginTop: 24 }, child.props.style],\n              });\n            }\n          }\n\n          if (\n            i === 0 &&\n            React.isValidElement(child) &&\n            child.type === DialogContent\n          ) {\n            // Dialog content is the first item, so we add a top padding\n            return React.cloneElement(child as React.ReactElement<any>, {\n              style: [{ paddingTop: 24 }, child.props.style],\n            });\n          }\n\n          return child;\n        })}\n    </Modal>\n  );\n};\n\n// @component ./DialogContent.tsx\nDialog.Content = DialogContent;\n// @component ./DialogActions.tsx\nDialog.Actions = DialogActions;\n// @component ./DialogTitle.tsx\nDialog.Title = DialogTitle;\n// @component ./DialogScrollArea.tsx\nDialog.ScrollArea = DialogScrollArea;\n// @component ./DialogIcon.tsx\nDialog.Icon = DialogIcon;\n\nconst styles = StyleSheet.create({\n  container: {\n    /**\n     * This prevents the shadow from being clipped on Android since Android\n     * doesn't support `overflow: visible`.\n     * One downside for this fix is that it will disable clicks on the area\n     * of the shadow around the dialog, consequently, if you click around the\n     * dialog (44 pixel from the top and bottom) it won't be dismissed.\n     */\n    marginVertical: Platform.OS === 'android' ? 44 : 0,\n    elevation: DIALOG_ELEVATION,\n    justifyContent: 'flex-start',\n  },\n});\n\nexport default Dialog;\n","import * as React from 'react';\nimport { StyleProp, StyleSheet, View, ViewStyle } from 'react-native';\n\nimport type { ThemeProp } from 'src/types';\n\nimport { useInternalTheme } from '../../core/theming';\n\nexport type Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * Content of the `DialogActions`.\n   */\n  children: React.ReactNode;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n};\n\n/**\n * A component to show a list of actions in a Dialog.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Button, Dialog, Portal } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [visible, setVisible] = React.useState(false);\n *\n *   const hideDialog = () => setVisible(false);\n *\n *   return (\n *     <Portal>\n *       <Dialog visible={visible} onDismiss={hideDialog}>\n *         <Dialog.Actions>\n *           <Button onPress={() => console.log('Cancel')}>Cancel</Button>\n *           <Button onPress={() => console.log('Ok')}>Ok</Button>\n *         </Dialog.Actions>\n *       </Dialog>\n *     </Portal>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nconst DialogActions = (props: Props) => {\n  const { isV3 } = useInternalTheme(props.theme);\n  const actionsLength = React.Children.toArray(props.children).length;\n\n  return (\n    <View\n      {...props}\n      style={[isV3 ? styles.v3Container : styles.container, props.style]}\n    >\n      {React.Children.map(props.children, (child, i) =>\n        React.isValidElement(child)\n          ? React.cloneElement(child as React.ReactElement<any>, {\n              compact: true,\n              uppercase: !isV3,\n              style: [\n                isV3 && {\n                  marginRight: i + 1 === actionsLength ? 0 : 8,\n                },\n                child.props.style,\n              ],\n            })\n          : child\n      )}\n    </View>\n  );\n};\n\nDialogActions.displayName = 'Dialog.Actions';\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: 8,\n  },\n  v3Container: {\n    flexDirection: 'row',\n    flexGrow: 1,\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    paddingBottom: 24,\n    paddingHorizontal: 24,\n  },\n});\n\nexport default DialogActions;\n","import * as React from 'react';\nimport { View, ViewStyle, StyleSheet, StyleProp } from 'react-native';\n\nexport type Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * Content of the `DialogContent`.\n   */\n  children: React.ReactNode;\n  style?: StyleProp<ViewStyle>;\n};\n\n/**\n * A component to show content in a Dialog.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Dialog, Portal, Text } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [visible, setVisible] = React.useState(false);\n *\n *   const hideDialog = () => setVisible(false);\n *\n *   return (\n *     <Portal>\n *       <Dialog visible={visible} onDismiss={hideDialog}>\n *         <Dialog.Content>\n *           <Text variant=\"bodyMedium\">This is simple dialog</Text>\n *         </Dialog.Content>\n *       </Dialog>\n *     </Portal>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nconst DialogContent = (props: Props) => (\n  <View {...props} style={[styles.container, props.style]}>\n    {props.children}\n  </View>\n);\n\nDialogContent.displayName = 'Dialog.Content';\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingBottom: 24,\n    paddingHorizontal: 24,\n  },\n});\n\nexport default DialogContent;\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\n\nimport type { ThemeProp } from 'src/types';\n\nimport { useInternalTheme } from '../../core/theming';\nimport Icon, { IconSource } from '../Icon';\n\nexport type Props = {\n  /**\n   *  Custom color for action icon.\n   */\n  color?: string;\n  /**\n   * Name of the icon to show.\n   */\n  icon: IconSource;\n  /**\n   * Optional icon size.\n   */\n  size?: number;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n};\n\n/**\n * @supported Available in v5.x with theme version 3\n * A component to show an icon in a Dialog.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { StyleSheet } from 'react-native';\n * import { Dialog, Portal, Text } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [visible, setVisible] = React.useState(false);\n *\n *   const hideDialog = () => setVisible(false);\n *\n *   return (\n *     <Portal>\n *       <Dialog visible={visible} onDismiss={hideDialog}>\n *         <Dialog.Icon icon=\"alert\" />\n *         <Dialog.Title style={styles.title}>This is a title</Dialog.Title>\n *         <Dialog.Content>\n *           <Text variant=\"bodyMedium\">This is simple dialog</Text>\n *         </Dialog.Content>\n *       </Dialog>\n *     </Portal>\n *   );\n * };\n *\n * const styles = StyleSheet.create({\n *   title: {\n *     textAlign: 'center',\n *   },\n * })\n *\n * export default MyComponent;\n * ```\n */\nconst DialogIcon = ({\n  size = 24,\n  color,\n  icon,\n  theme: themeOverrides,\n}: Props) => {\n  const theme = useInternalTheme(themeOverrides);\n\n  if (!theme.isV3) {\n    return null;\n  }\n\n  //@ts-ignore\n  const iconColor = color || theme.colors.secondary;\n\n  return (\n    <View style={styles.wrapper}>\n      <Icon source={icon} color={iconColor} size={size} />\n    </View>\n  );\n};\n\nDialogIcon.displayName = 'Dialog.Icon';\n\nconst styles = StyleSheet.create({\n  wrapper: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingTop: 24,\n  },\n});\n\nexport default DialogIcon;\n\n// @component-docs ignore-next-line\nexport { DialogIcon };\n","import * as React from 'react';\nimport { StyleProp, StyleSheet, View, ViewStyle } from 'react-native';\n\nimport type { ThemeProp } from 'src/types';\n\nimport { useInternalTheme } from '../../core/theming';\n\nexport type Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * Content of the `DialogScrollArea`.\n   */\n  children: React.ReactNode;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n};\n\n/**\n * A component to show a scrollable content in a Dialog. The component only provides appropriate styling.\n * For the scrollable content you can use `ScrollView`, `FlatList` etc. depending on your requirement.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { ScrollView } from 'react-native';\n * import { Dialog, Portal, Text } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [visible, setVisible] = React.useState(false);\n *\n *   const hideDialog = () => setVisible(false);\n *\n *   return (\n *     <Portal>\n *       <Dialog visible={visible} onDismiss={hideDialog}>\n *         <Dialog.ScrollArea>\n *           <ScrollView contentContainerStyle={{paddingHorizontal: 24}}>\n *             <Text>This is a scrollable area</Text>\n *           </ScrollView>\n *         </Dialog.ScrollArea>\n *       </Dialog>\n *     </Portal>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nconst DialogScrollArea = (props: Props) => {\n  const theme = useInternalTheme(props.theme);\n  const borderStyles = {\n    borderColor: theme.isV3\n      ? theme.colors.surfaceVariant\n      : 'rgba(0, 0, 0, .12)',\n    borderTopWidth: theme.isV3 ? 1 : StyleSheet.hairlineWidth,\n    borderBottomWidth: theme.isV3 ? 1 : StyleSheet.hairlineWidth,\n  };\n  return (\n    <View\n      {...props}\n      style={[\n        styles.container,\n        borderStyles,\n        theme.isV3 && styles.v3Container,\n        props.style,\n      ]}\n    >\n      {props.children}\n    </View>\n  );\n};\n\nDialogScrollArea.displayName = 'Dialog.ScrollArea';\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 24,\n    flexGrow: 1,\n    flexShrink: 1,\n  },\n  v3Container: {\n    marginBottom: 24,\n  },\n});\n\nexport default DialogScrollArea;\n","import * as React from 'react';\nimport { StyleProp, StyleSheet, TextStyle } from 'react-native';\n\nimport { useInternalTheme } from '../../core/theming';\nimport type { ThemeProp } from '../../types';\nimport Text from '../Typography/Text';\nimport Title from '../Typography/v2/Title';\n\nexport type Props = React.ComponentPropsWithRef<typeof Title> & {\n  /**\n   * Title text for the `DialogTitle`.\n   */\n  children: React.ReactNode;\n  style?: StyleProp<TextStyle>;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n};\n\n/**\n * A component to show a title in a Dialog.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Dialog, Portal, Text } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [visible, setVisible] = React.useState(false);\n *\n *   const hideDialog = () => setVisible(false);\n *\n *   return (\n *     <Portal>\n *       <Dialog visible={visible} onDismiss={hideDialog}>\n *         <Dialog.Title>This is a title</Dialog.Title>\n *         <Dialog.Content>\n *           <Text variant=\"bodyMedium\">This is simple dialog</Text>\n *         </Dialog.Content>\n *       </Dialog>\n *     </Portal>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nconst DialogTitle = ({\n  children,\n  theme: themeOverrides,\n  style,\n  ...rest\n}: Props) => {\n  const theme = useInternalTheme(themeOverrides);\n  const { isV3, colors, fonts } = theme;\n\n  const TextComponent = isV3 ? Text : Title;\n\n  const headerTextStyle = {\n    color: isV3 ? colors.onSurface : colors?.text,\n    ...(isV3 ? fonts.headlineSmall : {}),\n  };\n\n  return (\n    <TextComponent\n      variant=\"headlineSmall\"\n      accessibilityRole=\"header\"\n      style={[styles.text, isV3 && styles.v3Text, headerTextStyle, style]}\n      {...rest}\n    >\n      {children}\n    </TextComponent>\n  );\n};\n\nDialogTitle.displayName = 'Dialog.Title';\n\nconst styles = StyleSheet.create({\n  text: {\n    marginTop: 22,\n    marginBottom: 18,\n    marginHorizontal: 24,\n  },\n  v3Text: {\n    marginTop: 16,\n    marginBottom: 16,\n  },\n});\n\nexport default DialogTitle;\n\n// @component-docs ignore-next-line\nexport { DialogTitle };\n","import * as React from 'react';\nimport { StyleProp, StyleSheet, View, ViewStyle } from 'react-native';\n\nimport color from 'color';\n\nimport { useInternalTheme } from '../core/theming';\nimport { black, white } from '../styles/themes/v2/colors';\nimport type { $RemoveChildren, ThemeProp } from '../types';\n\nexport type Props = $RemoveChildren<typeof View> & {\n  /**\n   * @renamed Renamed from 'inset' to 'leftInset` in v5.x\n   * Whether divider has a left inset.\n   */\n  leftInset?: boolean;\n  /**\n   * @supported Available in v5.x with theme version 3\n   *  Whether divider has a horizontal inset on both sides.\n   */\n  horizontalInset?: boolean;\n  /**\n   * @supported Available in v5.x with theme version 3\n   *  Whether divider should be bolded.\n   */\n  bold?: boolean;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n};\n\n/**\n * A divider is a thin, lightweight separator that groups content in lists and page layouts.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { View } from 'react-native';\n * import { Divider, Text } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <View>\n *     <Text>Lemon</Text>\n *     <Divider />\n *     <Text>Mango</Text>\n *     <Divider />\n *   </View>\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst Divider = ({\n  leftInset,\n  horizontalInset = false,\n  style,\n  theme: themeOverrides,\n  bold = false,\n  ...rest\n}: Props) => {\n  const theme = useInternalTheme(themeOverrides);\n  const { dark: isDarkTheme, isV3 } = theme;\n\n  const dividerColor = isV3\n    ? theme.colors.outlineVariant\n    : color(isDarkTheme ? white : black)\n        .alpha(0.12)\n        .rgb()\n        .string();\n\n  return (\n    <View\n      {...rest}\n      style={[\n        { height: StyleSheet.hairlineWidth, backgroundColor: dividerColor },\n        leftInset && (isV3 ? styles.v3LeftInset : styles.leftInset),\n        isV3 && horizontalInset && styles.horizontalInset,\n        isV3 && bold && styles.bold,\n        style,\n      ]}\n    />\n  );\n};\n\nconst styles = StyleSheet.create({\n  leftInset: {\n    marginLeft: 72,\n  },\n  v3LeftInset: {\n    marginLeft: 16,\n  },\n  horizontalInset: {\n    marginLeft: 16,\n    marginRight: 16,\n  },\n  bold: {\n    height: 1,\n  },\n});\n\nexport default Divider;\n","// @component ./DrawerItem.tsx\nexport { default as Item } from './DrawerItem';\n\n// @component ./DrawerCollapsedItem.tsx\nexport { default as CollapsedItem } from './DrawerCollapsedItem';\n\n// @component ./DrawerSection.tsx\nexport { default as Section } from './DrawerSection';\n","import * as React from 'react';\nimport {\n  Animated,\n  GestureResponderEvent,\n  NativeSyntheticEvent,\n  Platform,\n  Pressable,\n  StyleProp,\n  StyleSheet,\n  TextLayoutEventData,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport { useInternalTheme } from '../../core/theming';\nimport type { ThemeProp } from '../../types';\nimport Badge from '../Badge';\nimport Icon, { IconSource } from '../Icon';\nimport Text from '../Typography/Text';\n\nexport type Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * The label text of the item.\n   */\n  label?: string;\n  /**\n   * Badge to show on the icon, can be `true` to show a dot, `string` or `number` to show text.\n   */\n  badge?: string | number | boolean;\n  /**\n   * Whether the item is disabled.\n   */\n  disabled?: boolean;\n  /**\n   * @renamed Renamed from 'icon' to 'focusedIcon' in v5.x\n   * Icon to use as the focused destination icon, can be a string, an image source or a react component\n   */\n  focusedIcon?: IconSource;\n  /**\n   * @renamed Renamed from 'icon' to 'focusedIcon' in v5.x\n   * Icon to use as the unfocused destination icon, can be a string, an image source or a react component\n   */\n  unfocusedIcon?: IconSource;\n  /**\n   * Whether to highlight the drawer item as active.\n   */\n  active?: boolean;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: (e: GestureResponderEvent) => void;\n  /**\n   * Specifies the largest possible scale a label font can reach.\n   */\n  labelMaxFontSizeMultiplier?: number;\n  /**\n   * Accessibility label for the button. This is read by the screen reader when the user taps the button.\n   */\n  accessibilityLabel?: string;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n\n  /**\n   * TestID used for testing purposes\n   */\n  testID?: string;\n};\n\nconst badgeSize = 8;\nconst iconSize = 24;\nconst itemSize = 56;\nconst outlineHeight = 32;\n\n/**\n * Note: Available in v5.x with theme version 3\n *\n * Collapsed component used to show an action item with an icon and optionally label in a navigation drawer.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Drawer } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *    <Drawer.CollapsedItem\n *      focusedIcon=\"inbox\"\n *      unfocusedIcon=\"inbox-outline\"\n *      label=\"Inbox\"\n *    />\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst DrawerCollapsedItem = ({\n  focusedIcon,\n  unfocusedIcon,\n  label,\n  active,\n  theme: themeOverrides,\n  style,\n  onPress,\n  disabled,\n  accessibilityLabel,\n  badge = false,\n  testID = 'drawer-collapsed-item',\n  labelMaxFontSizeMultiplier,\n  ...rest\n}: Props) => {\n  const theme = useInternalTheme(themeOverrides);\n  const { isV3 } = theme;\n  const { scale } = theme.animation;\n\n  const [numOfLines, setNumOfLines] = React.useState(1);\n\n  const { current: animScale } = React.useRef<Animated.Value>(\n    new Animated.Value(active ? 1 : 0.5)\n  );\n\n  React.useEffect(() => {\n    if (!active) {\n      animScale.setValue(0.5);\n    }\n  }, [animScale, active]);\n\n  if (!isV3) {\n    return null;\n  }\n\n  const handlePressOut = () => {\n    Animated.timing(animScale, {\n      toValue: 1,\n      duration: 150 * scale,\n      useNativeDriver: true,\n    }).start();\n  };\n\n  const iconPadding = ((!label ? itemSize : outlineHeight) - iconSize) / 2;\n\n  const backgroundColor = active\n    ? theme.colors.secondaryContainer\n    : 'transparent';\n  const labelColor = active\n    ? theme.colors.onSurface\n    : theme.colors.onSurfaceVariant;\n  const iconColor = active\n    ? theme.colors.onSecondaryContainer\n    : theme.colors.onSurfaceVariant;\n\n  const onTextLayout = ({\n    nativeEvent,\n  }: NativeSyntheticEvent<TextLayoutEventData>) => {\n    setNumOfLines(nativeEvent.lines.length);\n  };\n\n  // Label is cut off on Android, when centered \"labelMedium\" text\n  // has more than 4 lines, so there is a need to decrease the letter spacing.\n  const androidLetterSpacingStyle =\n    Platform.OS === 'android' && numOfLines > 4 && styles.letterSpacing;\n\n  const labelTextStyle = {\n    color: labelColor,\n    ...(isV3 ? theme.fonts.labelMedium : {}),\n  };\n\n  const icon =\n    !active && unfocusedIcon !== undefined ? unfocusedIcon : focusedIcon;\n\n  return (\n    <View {...rest}>\n      {/* eslint-disable-next-line react-native-a11y/has-accessibility-props */}\n      <Pressable\n        onPress={onPress}\n        onPressOut={onPress ? handlePressOut : undefined}\n        disabled={disabled}\n        // @ts-expect-error We keep old a11y props for backwards compat with old RN versions\n        accessibilityTraits={active ? ['button', 'selected'] : 'button'}\n        accessibilityComponentType=\"button\"\n        accessibilityRole=\"button\"\n        accessibilityState={{ selected: active }}\n        accessibilityLabel={accessibilityLabel}\n        testID={testID}\n      >\n        <View style={styles.wrapper}>\n          <Animated.View\n            style={[\n              styles.outline,\n              !label && styles.roundedOutline,\n              {\n                transform: [\n                  label\n                    ? {\n                        scaleX: animScale,\n                      }\n                    : { scale: animScale },\n                ],\n                backgroundColor,\n              },\n              style,\n            ]}\n            testID={`${testID}-outline`}\n          />\n\n          <View\n            style={[styles.icon, { top: iconPadding }]}\n            testID={`${testID}-container`}\n          >\n            {badge && (\n              <View style={styles.badgeContainer}>\n                {typeof badge === 'boolean' ? (\n                  <Badge visible={badge} size={badgeSize} />\n                ) : (\n                  <Badge visible={badge != null} size={2 * badgeSize}>\n                    {badge}\n                  </Badge>\n                )}\n              </View>\n            )}\n            <Icon source={icon} size={iconSize} color={iconColor} />\n          </View>\n\n          {label ? (\n            <Text\n              variant=\"labelMedium\"\n              selectable={false}\n              numberOfLines={2}\n              onTextLayout={onTextLayout}\n              style={[styles.label, androidLetterSpacingStyle, labelTextStyle]}\n              maxFontSizeMultiplier={labelMaxFontSizeMultiplier}\n            >\n              {label}\n            </Text>\n          ) : null}\n        </View>\n      </Pressable>\n    </View>\n  );\n};\n\nDrawerCollapsedItem.displayName = 'Drawer.CollapsedItem';\n\nconst styles = StyleSheet.create({\n  wrapper: {\n    width: 80,\n    marginBottom: 12,\n    minHeight: itemSize,\n    alignItems: 'center',\n  },\n  outline: {\n    width: itemSize,\n    height: outlineHeight,\n    borderRadius: itemSize / 2,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  roundedOutline: {\n    height: itemSize,\n  },\n  icon: {\n    position: 'absolute',\n  },\n  letterSpacing: {\n    letterSpacing: 0.3,\n    alignSelf: 'stretch',\n  },\n  label: {\n    marginHorizontal: 12,\n    marginTop: 4,\n    textAlign: 'center',\n  },\n  badgeContainer: {\n    position: 'absolute',\n    left: 20,\n    bottom: 20,\n    zIndex: 2,\n  },\n});\n\nexport default DrawerCollapsedItem;\n","import * as React from 'react';\nimport {\n  ColorValue,\n  GestureResponderEvent,\n  PressableAndroidRippleConfig,\n  StyleProp,\n  StyleSheet,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport color from 'color';\n\nimport { useInternalTheme } from '../../core/theming';\nimport type { ThemeProp } from '../../types';\nimport Icon, { IconSource } from '../Icon';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport Text from '../Typography/Text';\n\nexport type Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * The label text of the item.\n   */\n  label: string;\n  /**\n   * Icon to display for the `DrawerItem`.\n   */\n  icon?: IconSource;\n  /**\n   * Whether to highlight the drawer item as active.\n   */\n  active?: boolean;\n  /**\n   * Whether the item is disabled.\n   */\n  disabled?: boolean;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: (e: GestureResponderEvent) => void;\n  /**\n   * Type of background drawabale to display the feedback (Android).\n   * https://reactnative.dev/docs/pressable#rippleconfig\n   */\n  background?: PressableAndroidRippleConfig;\n  /**\n   * Accessibility label for the button. This is read by the screen reader when the user taps the button.\n   */\n  accessibilityLabel?: string;\n  /**\n   * Callback which returns a React element to display on the right side. For instance a Badge.\n   */\n  right?: (props: { color: string }) => React.ReactNode;\n  /**\n   * Specifies the largest possible scale a label font can reach.\n   */\n  labelMaxFontSizeMultiplier?: number;\n  /**\n   * Color of the ripple effect.\n   */\n  rippleColor?: ColorValue;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n};\n\n/**\n * A component used to show an action item with an icon and a label in a navigation drawer.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Drawer } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *    <Drawer.Item\n *      style={{ backgroundColor: '#64ffda' }}\n *      icon=\"star\"\n *      label=\"First Item\"\n *    />\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst DrawerItem = ({\n  icon,\n  label,\n  active,\n  disabled,\n  theme: themeOverrides,\n  rippleColor: customRippleColor,\n  style,\n  onPress,\n  background,\n  accessibilityLabel,\n  right,\n  labelMaxFontSizeMultiplier,\n  ...rest\n}: Props) => {\n  const theme = useInternalTheme(themeOverrides);\n  const { roundness, isV3 } = theme;\n\n  const backgroundColor = active\n    ? isV3\n      ? theme.colors.secondaryContainer\n      : color(theme.colors.primary).alpha(0.12).rgb().string()\n    : undefined;\n  const contentColor = active\n    ? isV3\n      ? theme.colors.onSecondaryContainer\n      : theme.colors.primary\n    : isV3\n    ? theme.colors.onSurfaceVariant\n    : color(theme.colors.text).alpha(0.68).rgb().string();\n\n  const labelMargin = icon ? (isV3 ? 12 : 32) : 0;\n  const borderRadius = (isV3 ? 7 : 1) * roundness;\n  const rippleColor = isV3\n    ? color(contentColor).alpha(0.12).rgb().string()\n    : undefined;\n  const font = isV3 ? theme.fonts.labelLarge : theme.fonts.medium;\n\n  return (\n    <View {...rest}>\n      <TouchableRipple\n        borderless\n        disabled={disabled}\n        background={background}\n        onPress={onPress}\n        style={[\n          styles.container,\n          { backgroundColor, borderRadius },\n          isV3 && styles.v3Container,\n          style,\n        ]}\n        accessibilityRole=\"button\"\n        accessibilityState={{ selected: active }}\n        accessibilityLabel={accessibilityLabel}\n        rippleColor={customRippleColor || rippleColor}\n        theme={theme}\n      >\n        <View style={[styles.wrapper, isV3 && styles.v3Wrapper]}>\n          <View style={styles.content}>\n            {icon ? (\n              <Icon source={icon} size={24} color={contentColor} />\n            ) : null}\n            <Text\n              variant=\"labelLarge\"\n              selectable={false}\n              numberOfLines={1}\n              style={[\n                styles.label,\n                {\n                  color: contentColor,\n                  marginLeft: labelMargin,\n                  ...font,\n                },\n              ]}\n              maxFontSizeMultiplier={labelMaxFontSizeMultiplier}\n            >\n              {label}\n            </Text>\n          </View>\n\n          {right?.({ color: contentColor })}\n        </View>\n      </TouchableRipple>\n    </View>\n  );\n};\n\nDrawerItem.displayName = 'Drawer.Item';\n\nconst styles = StyleSheet.create({\n  container: {\n    marginHorizontal: 10,\n    marginVertical: 4,\n  },\n  v3Container: {\n    justifyContent: 'center',\n    height: 56,\n    marginLeft: 12,\n    marginRight: 12,\n    marginVertical: 0,\n  },\n  wrapper: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    padding: 8,\n  },\n  v3Wrapper: {\n    marginLeft: 16,\n    marginRight: 24,\n    padding: 0,\n  },\n  content: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  label: {\n    marginRight: 32,\n  },\n});\n\nexport default DrawerItem;\n","import * as React from 'react';\nimport { StyleProp, StyleSheet, View, ViewStyle } from 'react-native';\n\nimport color from 'color';\n\nimport { useInternalTheme } from '../../core/theming';\nimport { MD3Colors } from '../../styles/themes/v3/tokens';\nimport type { ThemeProp } from '../../types';\nimport Divider from '../Divider';\nimport Text from '../Typography/Text';\n\nexport type Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * Title to show as the header for the section.\n   */\n  title?: string;\n  /**\n   * Content of the `Drawer.Section`.\n   */\n  children: React.ReactNode;\n  /**\n   * Whether to show `Divider` at the end of the section. True by default.\n   */\n  showDivider?: boolean;\n  /**\n   * Specifies the largest possible scale a title font can reach.\n   */\n  titleMaxFontSizeMultiplier?: number;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n};\n\n/**\n * A component to group content inside a navigation drawer.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Drawer } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [active, setActive] = React.useState('');\n *\n *   return (\n *     <Drawer.Section title=\"Some title\">\n *       <Drawer.Item\n *         label=\"First Item\"\n *         active={active === 'first'}\n *         onPress={() => setActive('first')}\n *       />\n *       <Drawer.Item\n *         label=\"Second Item\"\n *         active={active === 'second'}\n *         onPress={() => setActive('second')}\n *       />\n *     </Drawer.Section>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nconst DrawerSection = ({\n  children,\n  title,\n  theme: themeOverrides,\n  style,\n  showDivider = true,\n  titleMaxFontSizeMultiplier,\n  ...rest\n}: Props) => {\n  const theme = useInternalTheme(themeOverrides);\n  const { isV3 } = theme;\n  const titleColor = isV3\n    ? theme.colors.onSurfaceVariant\n    : color(theme.colors.text).alpha(0.54).rgb().string();\n  const titleMargin = isV3 ? 28 : 16;\n  const font = isV3 ? theme.fonts.titleSmall : theme.fonts.medium;\n\n  return (\n    <View style={[styles.container, style]} {...rest}>\n      {title && (\n        <View style={[styles.titleContainer, isV3 && styles.v3TitleContainer]}>\n          {title && (\n            <Text\n              variant=\"titleSmall\"\n              numberOfLines={1}\n              style={[\n                {\n                  color: titleColor,\n                  marginLeft: titleMargin,\n                  ...font,\n                },\n              ]}\n              maxFontSizeMultiplier={titleMaxFontSizeMultiplier}\n            >\n              {title}\n            </Text>\n          )}\n        </View>\n      )}\n      {children}\n      {showDivider && (\n        <Divider\n          {...(isV3 && { horizontalInset: true, bold: true })}\n          style={[styles.divider, isV3 && styles.v3Divider]}\n          theme={theme}\n        />\n      )}\n    </View>\n  );\n};\n\nDrawerSection.displayName = 'Drawer.Section';\n\nconst styles = StyleSheet.create({\n  container: {\n    marginBottom: 4,\n  },\n  titleContainer: {\n    height: 40,\n    justifyContent: 'center',\n  },\n  v3TitleContainer: {\n    height: 56,\n  },\n  divider: {\n    marginTop: 4,\n  },\n  v3Divider: {\n    backgroundColor: MD3Colors.neutralVariant50,\n  },\n});\n\nexport default DrawerSection;\n","import * as React from 'react';\nimport type {\n  AccessibilityState,\n  ColorValue,\n  NativeSyntheticEvent,\n  PressableAndroidRippleConfig,\n  TextLayoutEventData,\n} from 'react-native';\nimport {\n  Animated,\n  Easing,\n  GestureResponderEvent,\n  I18nManager,\n  Platform,\n  ScrollView,\n  StyleProp,\n  StyleSheet,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport color from 'color';\n\nimport { getCombinedStyles, getFABColors } from './utils';\nimport { useInternalTheme } from '../../core/theming';\nimport type { $Omit, $RemoveChildren, ThemeProp } from '../../types';\nimport type { IconSource } from '../Icon';\nimport Icon from '../Icon';\nimport Surface from '../Surface';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport AnimatedText from '../Typography/AnimatedText';\n\nexport type AnimatedFABIconMode = 'static' | 'dynamic';\nexport type AnimatedFABAnimateFrom = 'left' | 'right';\n\nexport type Props = $Omit<$RemoveChildren<typeof Surface>, 'mode'> & {\n  /**\n   * Icon to display for the `FAB`.\n   */\n  icon: IconSource;\n  /**\n   * Label for extended `FAB`.\n   */\n  label: string;\n  /**\n   * Make the label text uppercased.\n   */\n  uppercase?: boolean;\n  /**\n   * Type of background drawabale to display the feedback (Android).\n   * https://reactnative.dev/docs/pressable#rippleconfig\n   */\n  background?: PressableAndroidRippleConfig;\n  /**\n   * Accessibility label for the FAB. This is read by the screen reader when the user taps the FAB.\n   * Uses `label` by default if specified.\n   */\n  accessibilityLabel?: string;\n  /**\n   * Accessibility state for the FAB. This is read by the screen reader when the user taps the FAB.\n   */\n  accessibilityState?: AccessibilityState;\n  /**\n   * Custom color for the icon and label of the `FAB`.\n   */\n  color?: string;\n  /**\n   * Color of the ripple effect.\n   */\n  rippleColor?: ColorValue;\n  /**\n   * Whether `FAB` is disabled. A disabled button is greyed out and `onPress` is not called on touch.\n   */\n  disabled?: boolean;\n  /**\n   * Whether `FAB` is currently visible.\n   */\n  visible?: boolean;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: (e: GestureResponderEvent) => void;\n  /**\n   * Function to execute on long press.\n   */\n  onLongPress?: (e: GestureResponderEvent) => void;\n  /**\n   * The number of milliseconds a user must touch the element before executing `onLongPress`.\n   */\n  delayLongPress?: number;\n  /**\n   * Whether icon should be translated to the end of extended `FAB` or be static and stay in the same place. The default value is `dynamic`.\n   */\n  iconMode?: AnimatedFABIconMode;\n  /**\n   * Indicates from which direction animation should be performed. The default value is `right`.\n   */\n  animateFrom?: AnimatedFABAnimateFrom;\n  /**\n   * Whether `FAB` should start animation to extend.\n   */\n  extended: boolean;\n  /**\n   * Specifies the largest possible scale a label font can reach.\n   */\n  labelMaxFontSizeMultiplier?: number;\n  /**\n   * @supported Available in v5.x with theme version 3\n   *\n   * Color mappings variant for combinations of container and icon colors.\n   */\n  variant?: 'primary' | 'secondary' | 'tertiary' | 'surface';\n  style?: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n  /**\n   * TestID used for testing purposes\n   */\n  testID?: string;\n};\n\nconst SIZE = 56;\nconst SCALE = 0.9;\n\n/**\n * An animated, extending horizontally floating action button represents the primary action in an application.\n *\n * ## Usage\n * ```js\n * import React from 'react';\n * import {\n *   StyleProp,\n *   ViewStyle,\n *   Animated,\n *   StyleSheet,\n *   Platform,\n *   ScrollView,\n *   Text,\n *   SafeAreaView,\n *   I18nManager,\n * } from 'react-native';\n * import { AnimatedFAB } from 'react-native-paper';\n *\n * const MyComponent = ({\n *   animatedValue,\n *   visible,\n *   extended,\n *   label,\n *   animateFrom,\n *   style,\n *   iconMode,\n * }) => {\n *   const [isExtended, setIsExtended] = React.useState(true);\n *\n *   const isIOS = Platform.OS === 'ios';\n *\n *   const onScroll = ({ nativeEvent }) => {\n *     const currentScrollPosition =\n *       Math.floor(nativeEvent?.contentOffset?.y) ?? 0;\n *\n *     setIsExtended(currentScrollPosition <= 0);\n *   };\n *\n *   const fabStyle = { [animateFrom]: 16 };\n *\n *   return (\n *     <SafeAreaView style={styles.container}>\n *       <ScrollView onScroll={onScroll}>\n *         {[...new Array(100).keys()].map((_, i) => (\n *           <Text>{i}</Text>\n *         ))}\n *       </ScrollView>\n *       <AnimatedFAB\n *         icon={'plus'}\n *         label={'Label'}\n *         extended={isExtended}\n *         onPress={() => console.log('Pressed')}\n *         visible={visible}\n *         animateFrom={'right'}\n *         iconMode={'static'}\n *         style={[styles.fabStyle, style, fabStyle]}\n *       />\n *     </SafeAreaView>\n *   );\n * };\n *\n * export default MyComponent;\n *\n * const styles = StyleSheet.create({\n *   container: {\n *     flexGrow: 1,\n *   },\n *   fabStyle: {\n *     bottom: 16,\n *     right: 16,\n *     position: 'absolute',\n *   },\n * });\n * ```\n */\nconst AnimatedFAB = ({\n  icon,\n  label,\n  background,\n  accessibilityLabel = label,\n  accessibilityState,\n  color: customColor,\n  rippleColor: customRippleColor,\n  disabled,\n  onPress,\n  onLongPress,\n  delayLongPress,\n  theme: themeOverrides,\n  style,\n  visible = true,\n  uppercase: uppercaseProp,\n  testID = 'animated-fab',\n  animateFrom = 'right',\n  extended = false,\n  iconMode = 'dynamic',\n  variant = 'primary',\n  labelMaxFontSizeMultiplier,\n  ...rest\n}: Props) => {\n  const theme = useInternalTheme(themeOverrides);\n  const uppercase: boolean = uppercaseProp ?? !theme.isV3;\n  const isIOS = Platform.OS === 'ios';\n  const isAnimatedFromRight = animateFrom === 'right';\n  const isIconStatic = iconMode === 'static';\n  const { isRTL } = I18nManager;\n  const { current: visibility } = React.useRef<Animated.Value>(\n    new Animated.Value(visible ? 1 : 0)\n  );\n  const { current: animFAB } = React.useRef<Animated.Value>(\n    new Animated.Value(0)\n  );\n  const { isV3, animation } = theme;\n  const { scale } = animation;\n\n  const [textWidth, setTextWidth] = React.useState<number>(0);\n  const [textHeight, setTextHeight] = React.useState<number>(0);\n\n  const borderRadius = SIZE / (isV3 ? 3.5 : 2);\n\n  React.useEffect(() => {\n    if (visible) {\n      Animated.timing(visibility, {\n        toValue: 1,\n        duration: 200 * scale,\n        useNativeDriver: true,\n      }).start();\n    } else {\n      Animated.timing(visibility, {\n        toValue: 0,\n        duration: 150 * scale,\n        useNativeDriver: true,\n      }).start();\n    }\n  }, [visible, scale, visibility]);\n\n  const { backgroundColor: customBackgroundColor, ...restStyle } =\n    (StyleSheet.flatten(style) || {}) as ViewStyle;\n\n  const { backgroundColor, foregroundColor } = getFABColors({\n    theme,\n    variant,\n    disabled,\n    customColor,\n    customBackgroundColor,\n  });\n\n  const rippleColor =\n    customRippleColor || color(foregroundColor).alpha(0.12).rgb().string();\n\n  const extendedWidth = textWidth + SIZE + borderRadius;\n\n  const distance = isAnimatedFromRight\n    ? -textWidth - borderRadius\n    : textWidth + borderRadius;\n\n  React.useEffect(() => {\n    Animated.timing(animFAB, {\n      toValue: !extended ? 0 : distance,\n      duration: 150 * scale,\n      useNativeDriver: true,\n      easing: Easing.linear,\n    }).start();\n  }, [animFAB, scale, distance, extended]);\n\n  const onTextLayout = ({\n    nativeEvent,\n  }: NativeSyntheticEvent<TextLayoutEventData>) => {\n    const currentWidth = Math.ceil(nativeEvent.lines[0].width);\n    const currentHeight = Math.ceil(nativeEvent.lines[0].height);\n\n    if (currentWidth !== textWidth || currentHeight !== textHeight) {\n      setTextHeight(currentHeight);\n\n      if (isIOS) {\n        return setTextWidth(currentWidth - 12);\n      }\n\n      setTextWidth(currentWidth);\n    }\n  };\n\n  const propForDirection = <T,>(right: T[]): T[] => {\n    if (isAnimatedFromRight) {\n      return right;\n    }\n\n    return right.reverse();\n  };\n\n  const combinedStyles = getCombinedStyles({\n    isAnimatedFromRight,\n    isIconStatic,\n    distance,\n    animFAB,\n  });\n\n  const font = isV3 ? theme.fonts.labelLarge : theme.fonts.medium;\n\n  const textStyle = {\n    color: foregroundColor,\n    ...font,\n  };\n\n  const md2Elevation = disabled || !isIOS ? 0 : 6;\n  const md3Elevation = disabled || !isIOS ? 0 : 3;\n\n  const shadowStyle = isV3 ? styles.v3Shadow : styles.shadow;\n  const baseStyle = [\n    StyleSheet.absoluteFill,\n    disabled ? styles.disabled : shadowStyle,\n  ];\n\n  const newAccessibilityState = { ...accessibilityState, disabled };\n\n  return (\n    <Surface\n      {...rest}\n      testID={`${testID}-container`}\n      style={[\n        {\n          opacity: visibility,\n          transform: [\n            {\n              scale: visibility,\n            },\n          ],\n          borderRadius,\n        },\n        !isV3 && {\n          elevation: md2Elevation,\n        },\n        styles.container,\n        restStyle,\n      ]}\n      {...(isV3 && { elevation: md3Elevation })}\n      theme={theme}\n    >\n      <Animated.View\n        style={[\n          !isV3 && {\n            transform: [\n              {\n                scaleY: animFAB.interpolate({\n                  inputRange: propForDirection([distance, 0]),\n                  outputRange: propForDirection([SCALE, 1]),\n                }),\n              },\n            ],\n          },\n          styles.standard,\n          { borderRadius },\n        ]}\n      >\n        <View style={[StyleSheet.absoluteFill, styles.shadowWrapper]}>\n          <Animated.View\n            pointerEvents=\"none\"\n            style={[\n              baseStyle,\n              {\n                width: extendedWidth,\n                opacity: animFAB.interpolate({\n                  inputRange: propForDirection([distance, 0.9 * distance, 0]),\n                  outputRange: propForDirection([1, 0.15, 0]),\n                }),\n                borderRadius,\n              },\n            ]}\n            testID={`${testID}-extended-shadow`}\n          />\n          <Animated.View\n            pointerEvents=\"none\"\n            style={[\n              baseStyle,\n              {\n                opacity: animFAB.interpolate({\n                  inputRange: propForDirection([distance, 0.9 * distance, 0]),\n                  outputRange: propForDirection([0, 0.85, 1]),\n                }),\n                width: SIZE,\n                borderRadius: animFAB.interpolate({\n                  inputRange: propForDirection([distance, 0]),\n                  outputRange: propForDirection([\n                    SIZE / (extendedWidth / SIZE),\n                    borderRadius,\n                  ]),\n                }),\n              },\n              combinedStyles.absoluteFill,\n            ]}\n            testID={`${testID}-shadow`}\n          />\n        </View>\n        <Animated.View\n          pointerEvents=\"box-none\"\n          style={[styles.innerWrapper, { borderRadius }]}\n        >\n          <Animated.View\n            style={[\n              styles.standard,\n              {\n                width: extendedWidth,\n                backgroundColor,\n                borderRadius,\n              },\n              combinedStyles.innerWrapper,\n            ]}\n          >\n            <TouchableRipple\n              borderless\n              background={background}\n              onPress={onPress}\n              onLongPress={onLongPress}\n              delayLongPress={delayLongPress}\n              rippleColor={rippleColor}\n              disabled={disabled}\n              accessibilityLabel={accessibilityLabel}\n              accessibilityRole=\"button\"\n              accessibilityState={newAccessibilityState}\n              testID={testID}\n              style={{ borderRadius }}\n              theme={theme}\n            >\n              <View\n                style={[\n                  styles.standard,\n                  {\n                    width: extendedWidth,\n                    borderRadius,\n                  },\n                ]}\n              />\n            </TouchableRipple>\n          </Animated.View>\n        </Animated.View>\n      </Animated.View>\n\n      <Animated.View\n        style={[styles.iconWrapper, combinedStyles.iconWrapper]}\n        pointerEvents=\"none\"\n      >\n        <Icon source={icon} size={24} color={foregroundColor} theme={theme} />\n      </Animated.View>\n\n      <View pointerEvents=\"none\">\n        <AnimatedText\n          variant=\"labelLarge\"\n          numberOfLines={1}\n          onTextLayout={isIOS ? onTextLayout : undefined}\n          ellipsizeMode={'tail'}\n          style={[\n            {\n              [isAnimatedFromRight || isRTL ? 'right' : 'left']: isIconStatic\n                ? textWidth - SIZE + borderRadius / (isV3 ? 1 : 2)\n                : borderRadius,\n            },\n            {\n              minWidth: textWidth,\n              top: -SIZE / 2 - textHeight / 2,\n              opacity: animFAB.interpolate({\n                inputRange: propForDirection([distance, 0.7 * distance, 0]),\n                outputRange: propForDirection([1, 0, 0]),\n              }) as unknown as number,\n              // TODO: check\n              transform: [\n                {\n                  translateX: animFAB.interpolate({\n                    inputRange: propForDirection([distance, 0]),\n                    outputRange: propForDirection([0, SIZE]),\n                  }),\n                },\n              ],\n            },\n            styles.label,\n            uppercase && styles.uppercaseLabel,\n            textStyle,\n          ]}\n          theme={theme}\n          testID={`${testID}-text`}\n          maxFontSizeMultiplier={labelMaxFontSizeMultiplier}\n        >\n          {label}\n        </AnimatedText>\n      </View>\n\n      {!isIOS && (\n        // Method `onTextLayout` on Android returns sizes of text visible on the screen,\n        // however during render the text in `FAB` isn't fully visible. In order to get\n        // proper text measurements there is a need to additionaly render that text, but\n        // wrapped in absolutely positioned `ScrollView` which height is 0.\n        <ScrollView style={styles.textPlaceholderContainer}>\n          <AnimatedText\n            variant=\"labelLarge\"\n            numberOfLines={1}\n            onTextLayout={onTextLayout}\n            ellipsizeMode={'tail'}\n            style={[\n              styles.label,\n              uppercase && styles.uppercaseLabel,\n              textStyle,\n            ]}\n            theme={theme}\n          >\n            {label}\n          </AnimatedText>\n        </ScrollView>\n      )}\n    </Surface>\n  );\n};\n\nconst styles = StyleSheet.create({\n  standard: {\n    height: SIZE,\n  },\n  disabled: {\n    elevation: 0,\n  },\n  // eslint-disable-next-line react-native/no-color-literals\n  container: {\n    position: 'absolute',\n    backgroundColor: 'transparent',\n  },\n  innerWrapper: {\n    flexDirection: 'row',\n    overflow: 'hidden',\n  },\n  shadowWrapper: {\n    elevation: 0,\n  },\n  shadow: {\n    elevation: 6,\n  },\n  v3Shadow: {\n    elevation: 3,\n  },\n  iconWrapper: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    position: 'absolute',\n    height: SIZE,\n    width: SIZE,\n  },\n  label: {\n    position: 'absolute',\n  },\n  uppercaseLabel: {\n    textTransform: 'uppercase',\n  },\n  textPlaceholderContainer: {\n    height: 0,\n    position: 'absolute',\n  },\n});\n\nexport default AnimatedFAB;\n","import * as React from 'react';\nimport {\n  AccessibilityState,\n  Animated,\n  ColorValue,\n  GestureResponderEvent,\n  PressableAndroidRippleConfig,\n  StyleProp,\n  StyleSheet,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport { getExtendedFabStyle, getFABColors, getFabStyle } from './utils';\nimport { useInternalTheme } from '../../core/theming';\nimport type { $Omit, $RemoveChildren, ThemeProp } from '../../types';\nimport { forwardRef } from '../../utils/forwardRef';\nimport ActivityIndicator from '../ActivityIndicator';\nimport CrossFadeIcon from '../CrossFadeIcon';\nimport Icon, { IconSource } from '../Icon';\nimport Surface from '../Surface';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport Text from '../Typography/Text';\n\ntype FABSize = 'small' | 'medium' | 'large';\n\ntype FABMode = 'flat' | 'elevated';\n\ntype IconOrLabel =\n  | {\n      icon: IconSource;\n      label?: string;\n    }\n  | {\n      icon?: IconSource;\n      label: string;\n    };\n\nexport type Props = $Omit<$RemoveChildren<typeof Surface>, 'mode'> & {\n  // For `icon` and `label` props their types are duplicated due to the generation of documentation.\n  // Appropriate type for them is `IconOrLabel` contains the both union and intersection types.\n  /**\n   * Icon to display for the `FAB`. It's optional only if `label` is defined.\n   */\n  icon?: IconSource;\n  /**\n   * Optional label for extended `FAB`. It's optional only if `icon` is defined.\n   */\n  label?: string;\n  /**\n   * Make the label text uppercased.\n   */\n  uppercase?: boolean;\n  /**\n   * Type of background drawabale to display the feedback (Android).\n   * https://reactnative.dev/docs/pressable#rippleconfig\n   */\n  background?: PressableAndroidRippleConfig;\n  /**\n   * Accessibility label for the FAB. This is read by the screen reader when the user taps the FAB.\n   * Uses `label` by default if specified.\n   */\n  accessibilityLabel?: string;\n  /**\n   * Accessibility state for the FAB. This is read by the screen reader when the user taps the FAB.\n   */\n  accessibilityState?: AccessibilityState;\n  /**\n   * Whether an icon change is animated.\n   */\n  animated?: boolean;\n  /**\n   *  @deprecated Deprecated in v.5x - use prop size=\"small\".\n   *\n   *  Whether FAB is mini-sized, used to create visual continuity with other elements. This has no effect if `label` is specified.\n   */\n  small?: boolean;\n  /**\n   * Custom color for the icon and label of the `FAB`.\n   */\n  color?: string;\n  /**\n   * Color of the ripple effect.\n   */\n  rippleColor?: ColorValue;\n  /**\n   * Whether `FAB` is disabled. A disabled button is greyed out and `onPress` is not called on touch.\n   */\n  disabled?: boolean;\n  /**\n   * Whether `FAB` is currently visible.\n   */\n  visible?: boolean;\n  /**\n   * Whether to show a loading indicator.\n   */\n  loading?: boolean;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: (e: GestureResponderEvent) => void;\n  /**\n   * Function to execute on long press.\n   */\n  onLongPress?: (e: GestureResponderEvent) => void;\n  /**\n   * The number of milliseconds a user must touch the element before executing `onLongPress`.\n   */\n  delayLongPress?: number;\n  /**\n   * @supported Available in v5.x with theme version 3\n   *\n   * Size of the `FAB`.\n   * - `small` - FAB with small height (40).\n   * - `medium` - FAB with default medium height (56).\n   * - `large` - FAB with large height (96).\n   */\n  size?: FABSize;\n  /**\n   * Custom size for the `FAB`. This prop takes precedence over size prop\n   */\n  customSize?: number;\n  /**\n   * @supported Available in v5.x with theme version 3\n   *\n   * Mode of the `FAB`. You can change the mode to adjust the the shadow:\n   * - `flat` - button without a shadow.\n   * - `elevated` - button with a shadow.\n   */\n  mode?: FABMode;\n  /**\n   * @supported Available in v5.x with theme version 3\n   *\n   * Color mappings variant for combinations of container and icon colors.\n   */\n  variant?: 'primary' | 'secondary' | 'tertiary' | 'surface';\n  /**\n   * Specifies the largest possible scale a label font can reach.\n   */\n  labelMaxFontSizeMultiplier?: number;\n  style?: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n  /**\n   * TestID used for testing purposes\n   */\n  testID?: string;\n  ref?: React.RefObject<View>;\n} & IconOrLabel;\n\n/**\n * A floating action button represents the primary action on a screen. It appears in front of all screen content.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { StyleSheet } from 'react-native';\n * import { FAB } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <FAB\n *     icon=\"plus\"\n *     style={styles.fab}\n *     onPress={() => console.log('Pressed')}\n *   />\n * );\n *\n * const styles = StyleSheet.create({\n *   fab: {\n *     position: 'absolute',\n *     margin: 16,\n *     right: 0,\n *     bottom: 0,\n *   },\n * })\n *\n * export default MyComponent;\n * ```\n */\nconst FAB = forwardRef<View, Props>(\n  (\n    {\n      icon,\n      label,\n      background,\n      accessibilityLabel = label,\n      accessibilityState,\n      animated = true,\n      color: customColor,\n      rippleColor: customRippleColor,\n      disabled,\n      onPress,\n      onLongPress,\n      delayLongPress,\n      theme: themeOverrides,\n      style,\n      visible = true,\n      uppercase: uppercaseProp,\n      loading,\n      testID = 'fab',\n      size = 'medium',\n      customSize,\n      mode = 'elevated',\n      variant = 'primary',\n      labelMaxFontSizeMultiplier,\n      ...rest\n    }: Props,\n    ref\n  ) => {\n    const theme = useInternalTheme(themeOverrides);\n    const uppercase = uppercaseProp ?? !theme.isV3;\n    const { current: visibility } = React.useRef<Animated.Value>(\n      new Animated.Value(visible ? 1 : 0)\n    );\n    const { isV3, animation } = theme;\n    const { scale } = animation;\n\n    React.useEffect(() => {\n      if (visible) {\n        Animated.timing(visibility, {\n          toValue: 1,\n          duration: 200 * scale,\n          useNativeDriver: true,\n        }).start();\n      } else {\n        Animated.timing(visibility, {\n          toValue: 0,\n          duration: 150 * scale,\n          useNativeDriver: true,\n        }).start();\n      }\n    }, [visible, scale, visibility]);\n\n    const IconComponent = animated ? CrossFadeIcon : Icon;\n\n    const fabStyle = getFabStyle({ customSize, size, theme });\n\n    const {\n      borderRadius = fabStyle.borderRadius,\n      backgroundColor: customBackgroundColor,\n    } = (StyleSheet.flatten(style) || {}) as ViewStyle;\n\n    const { backgroundColor, foregroundColor, rippleColor } = getFABColors({\n      theme,\n      variant,\n      disabled,\n      customColor,\n      customBackgroundColor,\n      customRippleColor,\n    });\n\n    const isLargeSize = size === 'large';\n    const isFlatMode = mode === 'flat';\n    const iconSize = isLargeSize ? 36 : 24;\n    const loadingIndicatorSize = isLargeSize ? 24 : 18;\n    const font = isV3 ? theme.fonts.labelLarge : theme.fonts.medium;\n\n    const extendedStyle = getExtendedFabStyle({ customSize, theme });\n    const textStyle = {\n      color: foregroundColor,\n      ...font,\n    };\n\n    const md3Elevation = isFlatMode || disabled ? 0 : 3;\n\n    const newAccessibilityState = { ...accessibilityState, disabled };\n\n    return (\n      <Surface\n        ref={ref}\n        {...rest}\n        style={[\n          {\n            borderRadius,\n            backgroundColor,\n            opacity: visibility,\n            transform: [\n              {\n                scale: visibility,\n              },\n            ],\n          },\n          !isV3 && styles.elevated,\n          !isV3 && disabled && styles.disabled,\n          style,\n        ]}\n        pointerEvents={visible ? 'auto' : 'none'}\n        testID={`${testID}-container`}\n        {...(isV3 && { elevation: md3Elevation })}\n      >\n        <TouchableRipple\n          borderless\n          background={background}\n          onPress={onPress}\n          onLongPress={onLongPress}\n          delayLongPress={delayLongPress}\n          rippleColor={rippleColor}\n          disabled={disabled}\n          accessibilityLabel={accessibilityLabel}\n          accessibilityRole=\"button\"\n          accessibilityState={newAccessibilityState}\n          testID={testID}\n          style={{ borderRadius }}\n          {...rest}\n        >\n          <View\n            style={[styles.content, label ? extendedStyle : fabStyle]}\n            testID={`${testID}-content`}\n            pointerEvents=\"none\"\n          >\n            {icon && loading !== true ? (\n              <IconComponent\n                source={icon}\n                size={customSize ? customSize / 2 : iconSize}\n                color={foregroundColor}\n              />\n            ) : null}\n            {loading ? (\n              <ActivityIndicator\n                size={customSize ? customSize / 2 : loadingIndicatorSize}\n                color={foregroundColor}\n              />\n            ) : null}\n            {label ? (\n              <Text\n                variant=\"labelLarge\"\n                selectable={false}\n                testID={`${testID}-text`}\n                style={[\n                  styles.label,\n                  uppercase && styles.uppercaseLabel,\n                  textStyle,\n                ]}\n                maxFontSizeMultiplier={labelMaxFontSizeMultiplier}\n              >\n                {label}\n              </Text>\n            ) : null}\n          </View>\n        </TouchableRipple>\n      </Surface>\n    );\n  }\n);\n\nconst styles = StyleSheet.create({\n  elevated: {\n    elevation: 6,\n  },\n  content: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  label: {\n    marginHorizontal: 8,\n  },\n  uppercaseLabel: {\n    textTransform: 'uppercase',\n  },\n  disabled: {\n    elevation: 0,\n  },\n});\n\nexport default FAB;\n\n// @component-docs ignore-next-line\nexport { FAB };\n","import * as React from 'react';\nimport {\n  Animated,\n  ColorValue,\n  GestureResponderEvent,\n  Pressable,\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\n\nimport FAB from './FAB';\nimport { getFABGroupColors } from './utils';\nimport { useInternalTheme } from '../../core/theming';\nimport type { ThemeProp } from '../../types';\nimport Card from '../Card/Card';\nimport type { IconSource } from '../Icon';\nimport Text from '../Typography/Text';\n\nconst AnimatedPressable = Animated.createAnimatedComponent(Pressable);\n\nexport type Props = {\n  /**\n   * Action items to display in the form of a speed dial.\n   * An action item should contain the following properties:\n   * - `icon`: icon to display (required)\n   * - `label`: optional label text\n   * - `color`: custom icon color of the action item\n   * - `labelTextColor`: custom label text color of the action item\n   * - `accessibilityLabel`: accessibility label for the action, uses label by default if specified\n   * - `accessibilityHint`: accessibility hint for the action\n   * - `style`: pass additional styles for the fab item, for example, `backgroundColor`\n   * - `containerStyle`: pass additional styles for the fab item label container, for example, `backgroundColor` @supported Available in 5.x\n   * - `labelStyle`: pass additional styles for the fab item label, for example, `fontSize`\n   * - `labelMaxFontSizeMultiplier`: specifies the largest possible scale a title font can reach.\n   * - `onPress`: callback that is called when `FAB` is pressed (required)\n   * - `onLongPress`: callback that is called when `FAB` is long pressed\n   * - `toggleStackOnLongPress`: callback that is called when `FAB` is long pressed\n   * - `size`: size of action item. Defaults to `small`. @supported Available in v5.x\n   * - `testID`: testID to be used on tests\n   * - `rippleColor`: color of the ripple effect.\n   */\n  actions: Array<{\n    icon: IconSource;\n    label?: string;\n    color?: string;\n    labelTextColor?: string;\n    accessibilityLabel?: string;\n    accessibilityHint?: string;\n    style?: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\n    containerStyle?: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\n    labelStyle?: StyleProp<TextStyle>;\n    labelMaxFontSizeMultiplier?: number;\n    onPress: (e: GestureResponderEvent) => void;\n    size?: 'small' | 'medium';\n    testID?: string;\n    rippleColor?: ColorValue;\n  }>;\n  /**\n   * Icon to display for the `FAB`.\n   * You can toggle it based on whether the speed dial is open to display a different icon.\n   */\n  icon: IconSource;\n  /**\n   * Accessibility label for the FAB. This is read by the screen reader when the user taps the FAB.\n   */\n  accessibilityLabel?: string;\n  /**\n   * Custom color for the `FAB`.\n   */\n  color?: string;\n  /**\n   * Custom backdrop color for opened speed dial background.\n   */\n  backdropColor?: string;\n  /**\n   * Color of the ripple effect.\n   */\n  rippleColor?: ColorValue;\n  /**\n   * Function to execute on pressing the `FAB`.\n   */\n  onPress?: (e: GestureResponderEvent) => void;\n  /**\n   * Function to execute on long pressing the `FAB`.\n   */\n  onLongPress?: (e: GestureResponderEvent) => void;\n  /**\n   * Makes actions stack appear on long press instead of on press.\n   */\n  toggleStackOnLongPress?: boolean;\n  /**\n   * Changes the delay for long press reaction.\n   */\n  delayLongPress?: number;\n  /**\n   * Allows for onLongPress when stack is opened.\n   */\n  enableLongPressWhenStackOpened?: boolean;\n  /**\n   * Whether the speed dial is open.\n   */\n  open: boolean;\n  /**\n   * Callback which is called on opening and closing the speed dial.\n   * The open state needs to be updated when it's called, otherwise the change is dropped.\n   */\n  onStateChange: (state: { open: boolean }) => void;\n  /**\n   * Whether `FAB` is currently visible.\n   */\n  visible: boolean;\n  /**\n   * Style for the group. You can use it to pass additional styles if you need.\n   * For example, you can set an additional padding if you have a tab bar at the bottom.\n   */\n  style?: StyleProp<ViewStyle>;\n  /**\n   * Style for the FAB. It allows to pass the FAB button styles, such as backgroundColor.\n   */\n  fabStyle?: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\n  /**\n   * @supported Available in v5.x with theme version 3\n   *\n   * Color mappings variant for combinations of container and icon colors.\n   */\n  variant?: 'primary' | 'secondary' | 'tertiary' | 'surface';\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n  /**\n   * Optional label for `FAB`.\n   */\n  label?: string;\n  /**\n   * Pass down testID from Group props to FAB.\n   */\n  testID?: string;\n};\n\n/**\n * A component to display a stack of FABs with related actions in a speed dial.\n * To render the group above other components, you'll need to wrap it with the [`Portal`](../Portal) component.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { FAB, Portal, PaperProvider } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [state, setState] = React.useState({ open: false });\n *\n *   const onStateChange = ({ open }) => setState({ open });\n *\n *   const { open } = state;\n *\n *   return (\n *     <PaperProvider>\n *       <Portal>\n *         <FAB.Group\n *           open={open}\n *           visible\n *           icon={open ? 'calendar-today' : 'plus'}\n *           actions={[\n *             { icon: 'plus', onPress: () => console.log('Pressed add') },\n *             {\n *               icon: 'star',\n *               label: 'Star',\n *               onPress: () => console.log('Pressed star'),\n *             },\n *             {\n *               icon: 'email',\n *               label: 'Email',\n *               onPress: () => console.log('Pressed email'),\n *             },\n *             {\n *               icon: 'bell',\n *               label: 'Remind',\n *               onPress: () => console.log('Pressed notifications'),\n *             },\n *           ]}\n *           onStateChange={onStateChange}\n *           onPress={() => {\n *             if (open) {\n *               // do something if the speed dial is open\n *             }\n *           }}\n *         />\n *       </Portal>\n *     </PaperProvider>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nconst FABGroup = ({\n  actions,\n  icon,\n  open,\n  onPress,\n  onLongPress,\n  toggleStackOnLongPress,\n  accessibilityLabel,\n  theme: themeOverrides,\n  style,\n  fabStyle,\n  visible,\n  label,\n  testID,\n  onStateChange,\n  color: colorProp,\n  delayLongPress = 200,\n  variant = 'primary',\n  enableLongPressWhenStackOpened = false,\n  backdropColor: customBackdropColor,\n  rippleColor,\n}: Props) => {\n  const theme = useInternalTheme(themeOverrides);\n  const { current: backdrop } = React.useRef<Animated.Value>(\n    new Animated.Value(0)\n  );\n  const animations = React.useRef<Animated.Value[]>(\n    actions.map(() => new Animated.Value(open ? 1 : 0))\n  );\n\n  const [prevActions, setPrevActions] = React.useState<\n    | {\n        icon: IconSource;\n        label?: string;\n        color?: string;\n        accessibilityLabel?: string;\n        style?: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\n        onPress: (e: GestureResponderEvent) => void;\n        testID?: string;\n      }[]\n    | null\n  >(null);\n\n  const { scale } = theme.animation;\n  const { isV3 } = theme;\n\n  React.useEffect(() => {\n    if (open) {\n      Animated.parallel([\n        Animated.timing(backdrop, {\n          toValue: 1,\n          duration: 250 * scale,\n          useNativeDriver: true,\n        }),\n        Animated.stagger(\n          isV3 ? 15 : 50 * scale,\n          animations.current\n            .map((animation) =>\n              Animated.timing(animation, {\n                toValue: 1,\n                duration: 150 * scale,\n                useNativeDriver: true,\n              })\n            )\n            .reverse()\n        ),\n      ]).start();\n    } else {\n      Animated.parallel([\n        Animated.timing(backdrop, {\n          toValue: 0,\n          duration: 200 * scale,\n          useNativeDriver: true,\n        }),\n        ...animations.current.map((animation) =>\n          Animated.timing(animation, {\n            toValue: 0,\n            duration: 150 * scale,\n            useNativeDriver: true,\n          })\n        ),\n      ]).start();\n    }\n  }, [open, actions, backdrop, scale, isV3]);\n\n  const close = () => onStateChange({ open: false });\n\n  const toggle = () => onStateChange({ open: !open });\n\n  const { labelColor, backdropColor, stackedFABBackgroundColor } =\n    getFABGroupColors({ theme, customBackdropColor });\n\n  const backdropOpacity = open\n    ? backdrop.interpolate({\n        inputRange: [0, 0.5, 1],\n        outputRange: [0, 1, 1],\n      })\n    : backdrop;\n\n  const opacities = animations.current;\n  const scales = opacities.map((opacity) =>\n    open\n      ? opacity.interpolate({\n          inputRange: [0, 1],\n          outputRange: [0.5, 1],\n        })\n      : 1\n  );\n\n  const translations = opacities.map((opacity) =>\n    open\n      ? opacity.interpolate({\n          inputRange: [0, 1],\n          outputRange: [24, -8],\n        })\n      : -8\n  );\n  const labelTranslations = opacities.map((opacity) =>\n    open\n      ? opacity.interpolate({\n          inputRange: [0, 1],\n          outputRange: [8, -8],\n        })\n      : -8\n  );\n\n  const { top, bottom, right, left } = useSafeAreaInsets();\n  const containerPaddings = {\n    paddingBottom: bottom,\n    paddingRight: right,\n    paddingLeft: left,\n    paddingTop: top,\n  };\n\n  if (actions.length !== prevActions?.length) {\n    animations.current = actions.map(\n      (_, i) => animations.current[i] || new Animated.Value(open ? 1 : 0)\n    );\n    setPrevActions(actions);\n  }\n\n  return (\n    <View\n      pointerEvents=\"box-none\"\n      style={[styles.container, containerPaddings, style]}\n    >\n      <AnimatedPressable\n        accessibilityRole=\"button\"\n        onPress={close}\n        pointerEvents={open ? 'auto' : 'none'}\n        style={[\n          styles.backdrop,\n          {\n            opacity: backdropOpacity,\n            backgroundColor: backdropColor,\n          },\n        ]}\n      />\n      <View pointerEvents=\"box-none\" style={styles.safeArea}>\n        <View pointerEvents={open ? 'box-none' : 'none'}>\n          {actions.map((it, i) => {\n            const labelTextStyle = {\n              color: it.labelTextColor ?? labelColor,\n              ...(isV3 ? theme.fonts.titleMedium : {}),\n            };\n            const marginHorizontal =\n              typeof it.size === 'undefined' || it.size === 'small' ? 24 : 16;\n            const accessibilityLabel =\n              typeof it.accessibilityLabel !== 'undefined'\n                ? it.accessibilityLabel\n                : it.label;\n            const size = typeof it.size !== 'undefined' ? it.size : 'small';\n\n            return (\n              <View\n                key={i} // eslint-disable-line react/no-array-index-key\n                style={[\n                  styles.item,\n                  {\n                    marginHorizontal,\n                  },\n                ]}\n                pointerEvents={open ? 'box-none' : 'none'}\n                accessibilityRole=\"button\"\n                importantForAccessibility=\"yes\"\n                accessible={true}\n                accessibilityLabel={accessibilityLabel}\n              >\n                {it.label && (\n                  <View>\n                    <Card\n                      mode={isV3 ? 'contained' : 'elevated'}\n                      onPress={(e) => {\n                        it.onPress(e);\n                        close();\n                      }}\n                      accessibilityHint={it.accessibilityHint}\n                      importantForAccessibility=\"no-hide-descendants\"\n                      accessibilityElementsHidden={true}\n                      style={[\n                        styles.containerStyle,\n                        {\n                          transform: [\n                            isV3\n                              ? { translateY: labelTranslations[i] }\n                              : { scale: scales[i] },\n                          ],\n                          opacity: opacities[i],\n                        },\n                        isV3 && styles.v3ContainerStyle,\n                        it.containerStyle,\n                      ]}\n                    >\n                      <Text\n                        variant=\"titleMedium\"\n                        importantForAccessibility=\"no-hide-descendants\"\n                        accessibilityElementsHidden={true}\n                        style={[labelTextStyle, it.labelStyle]}\n                        maxFontSizeMultiplier={it.labelMaxFontSizeMultiplier}\n                      >\n                        {it.label}\n                      </Text>\n                    </Card>\n                  </View>\n                )}\n                <FAB\n                  size={size}\n                  icon={it.icon}\n                  color={it.color}\n                  style={[\n                    {\n                      transform: [{ scale: scales[i] }],\n                      opacity: opacities[i],\n                      backgroundColor: stackedFABBackgroundColor,\n                    },\n                    isV3 && { transform: [{ translateY: translations[i] }] },\n                    it.style,\n                  ]}\n                  accessibilityElementsHidden={true}\n                  theme={theme}\n                  onPress={(e) => {\n                    it.onPress(e);\n                    close();\n                  }}\n                  importantForAccessibility=\"no-hide-descendants\"\n                  testID={it.testID}\n                  visible={open}\n                  rippleColor={it.rippleColor}\n                />\n              </View>\n            );\n          })}\n        </View>\n        <FAB\n          onPress={(e) => {\n            onPress?.(e);\n            if (!toggleStackOnLongPress || open) {\n              toggle();\n            }\n          }}\n          onLongPress={(e) => {\n            if (!open || enableLongPressWhenStackOpened) {\n              onLongPress?.(e);\n              if (toggleStackOnLongPress) {\n                toggle();\n              }\n            }\n          }}\n          delayLongPress={delayLongPress}\n          icon={icon}\n          color={colorProp}\n          accessibilityLabel={accessibilityLabel}\n          accessibilityRole=\"button\"\n          accessibilityState={{ expanded: open }}\n          style={[styles.fab, fabStyle]}\n          theme={theme}\n          visible={visible}\n          label={label}\n          testID={testID}\n          variant={variant}\n          rippleColor={rippleColor}\n        />\n      </View>\n    </View>\n  );\n};\n\nFABGroup.displayName = 'FAB.Group';\n\nexport default FABGroup;\n\n// @component-docs ignore-next-line\nexport { FABGroup };\n\nconst styles = StyleSheet.create({\n  safeArea: {\n    alignItems: 'flex-end',\n  },\n  container: {\n    ...StyleSheet.absoluteFillObject,\n    justifyContent: 'flex-end',\n  },\n  fab: {\n    marginHorizontal: 16,\n    marginBottom: 16,\n    marginTop: 0,\n  },\n  backdrop: {\n    ...StyleSheet.absoluteFillObject,\n  },\n  containerStyle: {\n    borderRadius: 5,\n    paddingHorizontal: 12,\n    paddingVertical: 6,\n    marginVertical: 8,\n    marginHorizontal: 16,\n    elevation: 2,\n  },\n  item: {\n    marginBottom: 16,\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    alignItems: 'center',\n  },\n  // eslint-disable-next-line react-native/no-color-literals\n  v3ContainerStyle: {\n    backgroundColor: 'transparent',\n    elevation: 0,\n  },\n});\n","import FABComponent from './FAB';\nimport FABGroup from './FABGroup';\n\nconst FAB = Object.assign(\n  // @component ./FAB.tsx\n  FABComponent,\n  {\n    // @component ./FABGroup.tsx\n    Group: FABGroup,\n  }\n);\n\nexport default FAB;\n","import { Animated, ColorValue, I18nManager, ViewStyle } from 'react-native';\n\nimport color from 'color';\n\nimport { black, white } from '../../styles/themes/v2/colors';\nimport type { InternalTheme } from '../../types';\nimport getContrastingColor from '../../utils/getContrastingColor';\n\ntype GetCombinedStylesProps = {\n  isAnimatedFromRight: boolean;\n  isIconStatic: boolean;\n  distance: number;\n  animFAB: Animated.Value;\n};\n\ntype CombinedStyles = {\n  innerWrapper: Animated.WithAnimatedValue<ViewStyle>;\n  iconWrapper: Animated.WithAnimatedValue<ViewStyle>;\n  absoluteFill: Animated.WithAnimatedValue<ViewStyle>;\n};\n\ntype Variant = 'primary' | 'secondary' | 'tertiary' | 'surface';\n\ntype BaseProps = {\n  isVariant: (variant: Variant) => boolean;\n  theme: InternalTheme;\n  disabled?: boolean;\n};\n\nexport const getCombinedStyles = ({\n  isAnimatedFromRight,\n  isIconStatic,\n  distance,\n  animFAB,\n}: GetCombinedStylesProps): CombinedStyles => {\n  const { isRTL } = I18nManager;\n\n  const defaultPositionStyles = { left: -distance, right: undefined };\n\n  const combinedStyles: CombinedStyles = {\n    innerWrapper: {\n      ...defaultPositionStyles,\n    },\n    iconWrapper: {\n      ...defaultPositionStyles,\n    },\n    absoluteFill: {},\n  };\n\n  const animatedFromRight = isAnimatedFromRight && !isRTL;\n  const animatedFromRightRTL = isAnimatedFromRight && isRTL;\n  const animatedFromLeft = !isAnimatedFromRight && !isRTL;\n  const animatedFromLeftRTL = !isAnimatedFromRight && isRTL;\n\n  if (animatedFromRight) {\n    combinedStyles.innerWrapper.transform = [\n      {\n        translateX: animFAB.interpolate({\n          inputRange: [distance, 0],\n          outputRange: [distance, 0],\n        }),\n      },\n    ];\n    combinedStyles.iconWrapper.transform = [\n      {\n        translateX: isIconStatic ? 0 : animFAB,\n      },\n    ];\n    combinedStyles.absoluteFill.transform = [\n      {\n        translateX: animFAB.interpolate({\n          inputRange: [distance, 0],\n          outputRange: [Math.abs(distance) / 2, Math.abs(distance)],\n        }),\n      },\n    ];\n  } else if (animatedFromRightRTL) {\n    combinedStyles.iconWrapper.transform = [\n      {\n        translateX: isIconStatic\n          ? 0\n          : animFAB.interpolate({\n              inputRange: [distance, 0],\n              outputRange: [-distance, 0],\n            }),\n      },\n    ];\n    combinedStyles.innerWrapper.transform = [\n      {\n        translateX: animFAB.interpolate({\n          inputRange: [distance, 0],\n          outputRange: [-distance, 0],\n        }),\n      },\n    ];\n    combinedStyles.absoluteFill.transform = [\n      {\n        translateX: animFAB.interpolate({\n          inputRange: [distance, 0],\n          outputRange: [0, distance],\n        }),\n      },\n    ];\n  } else if (animatedFromLeft) {\n    combinedStyles.iconWrapper.transform = [\n      {\n        translateX: isIconStatic\n          ? distance\n          : animFAB.interpolate({\n              inputRange: [0, distance],\n              outputRange: [distance, distance * 2],\n            }),\n      },\n    ];\n    combinedStyles.innerWrapper.transform = [\n      {\n        translateX: animFAB,\n      },\n    ];\n    combinedStyles.absoluteFill.transform = [\n      {\n        translateX: animFAB.interpolate({\n          inputRange: [0, distance],\n          outputRange: [0, Math.abs(distance) / 2],\n        }),\n      },\n    ];\n  } else if (animatedFromLeftRTL) {\n    combinedStyles.iconWrapper.transform = [\n      {\n        translateX: isIconStatic\n          ? animFAB.interpolate({\n              inputRange: [0, distance],\n              outputRange: [-distance, -distance * 2],\n            })\n          : -distance,\n      },\n    ];\n    combinedStyles.innerWrapper.transform = [\n      {\n        translateX: animFAB.interpolate({\n          inputRange: [0, distance],\n          outputRange: [0, -distance],\n        }),\n      },\n    ];\n    combinedStyles.absoluteFill.transform = [\n      {\n        translateX: animFAB.interpolate({\n          inputRange: [0, distance],\n          outputRange: [0, -distance],\n        }),\n      },\n    ];\n  }\n\n  return combinedStyles;\n};\n\nconst getBackgroundColor = ({\n  theme,\n  isVariant,\n  disabled,\n  customBackgroundColor,\n}: BaseProps & { customBackgroundColor?: ColorValue }) => {\n  if (customBackgroundColor && !disabled) {\n    return customBackgroundColor;\n  }\n\n  if (theme.isV3) {\n    if (disabled) {\n      return theme.colors.surfaceDisabled;\n    }\n\n    if (isVariant('primary')) {\n      return theme.colors.primaryContainer;\n    }\n\n    if (isVariant('secondary')) {\n      return theme.colors.secondaryContainer;\n    }\n\n    if (isVariant('tertiary')) {\n      return theme.colors.tertiaryContainer;\n    }\n\n    if (isVariant('surface')) {\n      return theme.colors.elevation.level3;\n    }\n  }\n\n  if (disabled) {\n    if (theme.dark) {\n      return color(white).alpha(0.12).rgb().string();\n    }\n    return color(black).alpha(0.12).rgb().string();\n  }\n\n  //@ts-ignore\n  return theme.colors?.accent;\n};\n\nconst getForegroundColor = ({\n  theme,\n  isVariant,\n  disabled,\n  backgroundColor,\n  customColor,\n}: BaseProps & { backgroundColor: string; customColor?: string }) => {\n  if (typeof customColor !== 'undefined' && !disabled) {\n    return customColor;\n  }\n\n  if (theme.isV3) {\n    if (disabled) {\n      return theme.colors.onSurfaceDisabled;\n    }\n\n    if (isVariant('primary')) {\n      return theme.colors.onPrimaryContainer;\n    }\n\n    if (isVariant('secondary')) {\n      return theme.colors.onSecondaryContainer;\n    }\n\n    if (isVariant('tertiary')) {\n      return theme.colors.onTertiaryContainer;\n    }\n\n    if (isVariant('surface')) {\n      return theme.colors.primary;\n    }\n  }\n\n  if (disabled) {\n    if (theme.dark) {\n      return color(white).alpha(0.32).rgb().string();\n    }\n    return color(black).alpha(0.32).rgb().string();\n  }\n\n  if (backgroundColor) {\n    return getContrastingColor(\n      backgroundColor || white,\n      white,\n      'rgba(0, 0, 0, .54)'\n    );\n  }\n\n  return getContrastingColor(white, white, 'rgba(0, 0, 0, .54)');\n};\n\nexport const getFABColors = ({\n  theme,\n  variant,\n  disabled,\n  customColor,\n  customBackgroundColor,\n  customRippleColor,\n}: {\n  theme: InternalTheme;\n  variant: string;\n  disabled?: boolean;\n  customColor?: string;\n  customBackgroundColor?: ColorValue;\n  customRippleColor?: ColorValue;\n}) => {\n  const isVariant = (variantToCompare: Variant) => {\n    return variant === variantToCompare;\n  };\n\n  const baseFABColorProps = { theme, isVariant, disabled };\n\n  const backgroundColor = getBackgroundColor({\n    ...baseFABColorProps,\n    customBackgroundColor,\n  });\n\n  const foregroundColor = getForegroundColor({\n    ...baseFABColorProps,\n    customColor,\n    backgroundColor,\n  });\n\n  return {\n    backgroundColor,\n    foregroundColor,\n    rippleColor:\n      customRippleColor || color(foregroundColor).alpha(0.12).rgb().string(),\n  };\n};\n\nconst getLabelColor = ({ theme }: { theme: InternalTheme }) => {\n  if (theme.isV3) {\n    return theme.colors.onSurface;\n  }\n\n  if (theme.dark) {\n    return theme.colors.text;\n  }\n\n  return color(theme.colors.text).fade(0.54).rgb().string();\n};\n\nconst getBackdropColor = ({\n  theme,\n  customBackdropColor,\n}: {\n  theme: InternalTheme;\n  customBackdropColor?: string;\n}) => {\n  if (customBackdropColor) {\n    return customBackdropColor;\n  }\n  if (theme.isV3) {\n    return color(theme.colors.background).alpha(0.95).rgb().string();\n  }\n  return theme.colors?.backdrop;\n};\n\nconst getStackedFABBackgroundColor = ({ theme }: { theme: InternalTheme }) => {\n  if (theme.isV3) {\n    return theme.colors.elevation.level3;\n  }\n  return theme.colors.surface;\n};\n\nexport const getFABGroupColors = ({\n  theme,\n  customBackdropColor,\n}: {\n  theme: InternalTheme;\n  customBackdropColor?: string;\n}) => {\n  return {\n    labelColor: getLabelColor({ theme }),\n    backdropColor: getBackdropColor({ theme, customBackdropColor }),\n    stackedFABBackgroundColor: getStackedFABBackgroundColor({ theme }),\n  };\n};\n\nconst standardSize = {\n  height: 56,\n  width: 56,\n  borderRadius: 28,\n};\nconst smallSize = {\n  height: 40,\n  width: 40,\n  borderRadius: 28,\n};\nconst v3SmallSize = {\n  height: 40,\n  width: 40,\n};\nconst v3MediumSize = {\n  height: 56,\n  width: 56,\n};\nconst v3LargeSize = {\n  height: 96,\n  width: 96,\n};\n\nconst getCustomFabSize = (customSize: number, roundness: number) => ({\n  height: customSize,\n  width: customSize,\n  borderRadius: roundness === 0 ? 0 : customSize / roundness,\n});\n\nexport const getFabStyle = ({\n  size,\n  theme,\n  customSize,\n}: {\n  customSize?: number;\n  size: 'small' | 'medium' | 'large';\n  theme: InternalTheme;\n}) => {\n  const { isV3, roundness } = theme;\n\n  if (customSize) return getCustomFabSize(customSize, roundness);\n\n  if (isV3) {\n    switch (size) {\n      case 'small':\n        return { ...v3SmallSize, borderRadius: 3 * roundness };\n      case 'medium':\n        return { ...v3MediumSize, borderRadius: 4 * roundness };\n      case 'large':\n        return { ...v3LargeSize, borderRadius: 7 * roundness };\n    }\n  }\n\n  if (size === 'small') {\n    return smallSize;\n  }\n  return standardSize;\n};\n\nconst extended = {\n  height: 48,\n  paddingHorizontal: 16,\n};\n\nconst v3Extended = {\n  height: 56,\n  borderRadius: 16,\n  paddingHorizontal: 16,\n};\n\nconst getExtendedFabDimensions = (customSize: number) => ({\n  height: customSize,\n  paddingHorizontal: 16,\n});\n\nexport const getExtendedFabStyle = ({\n  customSize,\n  theme,\n}: {\n  customSize?: number;\n  theme: InternalTheme;\n}) => {\n  if (customSize) return getExtendedFabDimensions(customSize);\n\n  const { isV3 } = theme;\n\n  return isV3 ? v3Extended : extended;\n};\n","import * as React from 'react';\nimport {\n  Animated,\n  LayoutChangeEvent,\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n} from 'react-native';\n\nimport { getTextColor } from './utils';\nimport { useInternalTheme } from '../../core/theming';\nimport type { $Omit, ThemeProp } from '../../types';\nimport AnimatedText from '../Typography/AnimatedText';\n\nexport type Props = $Omit<\n  $Omit<React.ComponentPropsWithRef<typeof AnimatedText>, 'padding'>,\n  'type'\n> & {\n  /**\n   * Type of the helper text.\n   */\n  type: 'error' | 'info';\n  /**\n   * Text content of the HelperText.\n   */\n  children: React.ReactNode;\n  /**\n   * Whether to display the helper text.\n   */\n  visible?: boolean;\n  /**\n   * Whether to apply padding to the helper text.\n   */\n  padding?: 'none' | 'normal';\n  /**\n   * Whether the text input tied with helper text is disabled.\n   */\n  disabled?: boolean;\n  style?: StyleProp<TextStyle>;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n  /**\n   * TestID used for testing purposes\n   */\n  testID?: string;\n};\n\n/**\n * Helper text is used in conjuction with input elements to provide additional hints for the user.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { View } from 'react-native';\n * import { HelperText, TextInput } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [text, setText] = React.useState('');\n *\n *    const onChangeText = text => setText(text);\n *\n *   const hasErrors = () => {\n *     return !text.includes('@');\n *   };\n *\n *  return (\n *     <View>\n *       <TextInput label=\"Email\" value={text} onChangeText={onChangeText} />\n *       <HelperText type=\"error\" visible={hasErrors()}>\n *         Email address is invalid!\n *       </HelperText>\n *     </View>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nconst HelperText = ({\n  style,\n  type = 'info',\n  visible = true,\n  theme: themeOverrides,\n  onLayout,\n  padding = 'normal',\n  disabled,\n  ...rest\n}: Props) => {\n  const theme = useInternalTheme(themeOverrides);\n  const { current: shown } = React.useRef<Animated.Value>(\n    new Animated.Value(visible ? 1 : 0)\n  );\n\n  let { current: textHeight } = React.useRef<number>(0);\n\n  const { scale } = theme.animation;\n\n  const { maxFontSizeMultiplier = 1.5 } = rest;\n\n  React.useEffect(() => {\n    if (visible) {\n      // show text\n      Animated.timing(shown, {\n        toValue: 1,\n        duration: 150 * scale,\n        useNativeDriver: true,\n      }).start();\n    } else {\n      // hide text\n      Animated.timing(shown, {\n        toValue: 0,\n        duration: 180 * scale,\n        useNativeDriver: true,\n      }).start();\n    }\n  }, [visible, scale, shown]);\n\n  const handleTextLayout = (e: LayoutChangeEvent) => {\n    onLayout?.(e);\n    textHeight = e.nativeEvent.layout.height;\n  };\n\n  const textColor = getTextColor({ theme, disabled, type });\n\n  return (\n    <AnimatedText\n      onLayout={handleTextLayout}\n      style={[\n        styles.text,\n        padding !== 'none' ? styles.padding : {},\n        {\n          color: textColor,\n          opacity: shown,\n          transform:\n            visible && type === 'error'\n              ? [\n                  {\n                    translateY: shown.interpolate({\n                      inputRange: [0, 1],\n                      outputRange: [-textHeight / 2, 0],\n                    }),\n                  },\n                ]\n              : [],\n        },\n        style,\n      ]}\n      maxFontSizeMultiplier={maxFontSizeMultiplier}\n      {...rest}\n    >\n      {rest.children}\n    </AnimatedText>\n  );\n};\n\nconst styles = StyleSheet.create({\n  text: {\n    fontSize: 12,\n    paddingVertical: 4,\n  },\n  padding: {\n    paddingHorizontal: 12,\n  },\n});\n\nexport default HelperText;\n","import color from 'color';\n\nimport type { InternalTheme } from '../../types';\n\ntype BaseProps = {\n  theme: InternalTheme;\n  disabled?: boolean;\n  type?: 'error' | 'info';\n};\n\nexport function getTextColor({ theme, disabled, type }: BaseProps) {\n  const { colors, dark } = theme;\n\n  if (type === 'error') {\n    return colors?.error;\n  }\n\n  if (theme.isV3) {\n    if (disabled) {\n      return theme.colors.onSurfaceDisabled;\n    } else {\n      return theme.colors.onSurfaceVariant;\n    }\n  }\n\n  return color(theme?.colors?.text)\n    .alpha(dark ? 0.7 : 0.54)\n    .rgb()\n    .string();\n}\n","import * as React from 'react';\nimport {\n  I18nManager,\n  Image,\n  ImageSourcePropType,\n  Platform,\n} from 'react-native';\n\nimport { accessibilityProps } from './MaterialCommunityIcon';\nimport { Consumer as SettingsConsumer } from '../core/settings';\nimport { useInternalTheme } from '../core/theming';\nimport type { ThemeProp } from '../types';\n\ntype IconSourceBase = string | ImageSourcePropType;\n\nexport type IconSource =\n  | IconSourceBase\n  | Readonly<{ source: IconSourceBase; direction: 'rtl' | 'ltr' | 'auto' }>\n  | ((props: IconProps & { color: string }) => React.ReactNode);\n\ntype IconProps = {\n  /**\n   * Size of icon.\n   */\n  size: number;\n  allowFontScaling?: boolean;\n};\n\nconst isImageSource = (source: any) =>\n  // source is an object with uri\n  (typeof source === 'object' &&\n    source !== null &&\n    Object.prototype.hasOwnProperty.call(source, 'uri') &&\n    typeof source.uri === 'string') ||\n  // source is a module, e.g. - require('image')\n  typeof source === 'number' ||\n  // image url on web\n  (Platform.OS === 'web' &&\n    typeof source === 'string' &&\n    (source.startsWith('data:image') ||\n      /\\.(bmp|jpg|jpeg|png|gif|svg)$/.test(source)));\n\nconst getIconId = (source: any) => {\n  if (\n    typeof source === 'object' &&\n    source !== null &&\n    Object.prototype.hasOwnProperty.call(source, 'uri') &&\n    typeof source.uri === 'string'\n  ) {\n    return source.uri;\n  }\n\n  return source;\n};\n\nexport const isValidIcon = (source: any) =>\n  typeof source === 'string' ||\n  typeof source === 'function' ||\n  isImageSource(source);\n\nexport const isEqualIcon = (a: any, b: any) =>\n  a === b || getIconId(a) === getIconId(b);\n\nexport type Props = IconProps & {\n  /**\n   * Icon to display.\n   */\n  source: any;\n  /**\n   * Color of the icon.\n   */\n  color?: string;\n  /**\n   * TestID used for testing purposes\n   */\n  testID?: string;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n};\n\n/**\n * An icon component which renders icon from vector library.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Icon, MD3Colors } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <Icon\n *     source=\"camera\"\n *     color={MD3Colors.error50}\n *     size={20}\n *   />\n * );\n *\n * export default MyComponent;\n * ```\n */\n\nconst Icon = ({\n  source,\n  color,\n  size,\n  theme: themeOverrides,\n  testID,\n  ...rest\n}: Props) => {\n  const theme = useInternalTheme(themeOverrides);\n  const direction =\n    typeof source === 'object' && source.direction && source.source\n      ? source.direction === 'auto'\n        ? I18nManager.getConstants().isRTL\n          ? 'rtl'\n          : 'ltr'\n        : source.direction\n      : null;\n\n  const s =\n    typeof source === 'object' && source.direction && source.source\n      ? source.source\n      : source;\n  const iconColor =\n    color || (theme.isV3 ? theme.colors.onSurface : theme.colors.text);\n\n  if (isImageSource(s)) {\n    return (\n      <Image\n        {...rest}\n        testID={testID}\n        source={s}\n        style={[\n          {\n            transform: [{ scaleX: direction === 'rtl' ? -1 : 1 }],\n          },\n          {\n            width: size,\n            height: size,\n            tintColor: color,\n            resizeMode: `contain`,\n          },\n        ]}\n        {...accessibilityProps}\n        accessibilityIgnoresInvertColors\n      />\n    );\n  } else if (typeof s === 'string') {\n    return (\n      <SettingsConsumer>\n        {({ icon }) => {\n          return icon?.({\n            name: s,\n            color: iconColor,\n            size,\n            direction,\n            testID,\n          });\n        }}\n      </SettingsConsumer>\n    );\n  } else if (typeof s === 'function') {\n    return s({ color: iconColor, size, direction, testID });\n  }\n\n  return null;\n};\n\nexport default Icon;\n","import * as React from 'react';\nimport {\n  GestureResponderEvent,\n  StyleProp,\n  StyleSheet,\n  ViewStyle,\n  View,\n  Animated,\n  ColorValue,\n} from 'react-native';\n\nimport { getIconButtonColor } from './utils';\nimport { useInternalTheme } from '../../core/theming';\nimport type { $RemoveChildren, ThemeProp } from '../../types';\nimport { forwardRef } from '../../utils/forwardRef';\nimport ActivityIndicator from '../ActivityIndicator';\nimport CrossFadeIcon from '../CrossFadeIcon';\nimport Icon, { IconSource } from '../Icon';\nimport Surface from '../Surface';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\n\nconst PADDING = 8;\n\ntype IconButtonMode = 'outlined' | 'contained' | 'contained-tonal';\n\nexport type Props = $RemoveChildren<typeof TouchableRipple> & {\n  /**\n   * Icon to display.\n   */\n  icon: IconSource;\n  /**\n   * @supported Available in v5.x with theme version 3\n   * Mode of the icon button. By default there is no specified mode - only pressable icon will be rendered.\n   */\n  mode?: IconButtonMode;\n  /**\n   * @renamed Renamed from 'color' to 'iconColor' in v5.x\n   * Color of the icon.\n   */\n  iconColor?: string;\n  /**\n   * Background color of the icon container.\n   */\n  containerColor?: string;\n  /**\n   * Color of the ripple effect.\n   */\n  rippleColor?: ColorValue;\n  /**\n   * @supported Available in v5.x with theme version 3\n   * Whether icon button is selected. A selected button receives alternative combination of icon and container colors.\n   */\n  selected?: boolean;\n  /**\n   * Size of the icon.\n   */\n  size?: number;\n  /**\n   * Whether the button is disabled. A disabled button is greyed out and `onPress` is not called on touch.\n   */\n  disabled?: boolean;\n  /**\n   * Whether an icon change is animated.\n   */\n  animated?: boolean;\n  /**\n   * Accessibility label for the button. This is read by the screen reader when the user taps the button.\n   */\n  accessibilityLabel?: string;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: (e: GestureResponderEvent) => void;\n  style?: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\n  ref?: React.RefObject<View>;\n  /**\n   * TestID used for testing purposes\n   */\n  testID?: string;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n  /**\n   * Whether to show a loading indicator.\n   */\n  loading?: boolean;\n};\n\n/**\n * An icon button is a button which displays only an icon without a label.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { IconButton, MD3Colors } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <IconButton\n *     icon=\"camera\"\n *     iconColor={MD3Colors.error50}\n *     size={20}\n *     onPress={() => console.log('Pressed')}\n *   />\n * );\n *\n * export default MyComponent;\n * ```\n *\n * @extends TouchableRipple props https://callstack.github.io/react-native-paper/docs/components/TouchableRipple\n */\nconst IconButton = forwardRef<View, Props>(\n  (\n    {\n      icon,\n      iconColor: customIconColor,\n      containerColor: customContainerColor,\n      rippleColor: customRippleColor,\n      size = 24,\n      accessibilityLabel,\n      disabled,\n      onPress,\n      selected = false,\n      animated = false,\n      mode,\n      style,\n      theme: themeOverrides,\n      testID = 'icon-button',\n      loading = false,\n      ...rest\n    }: Props,\n    ref\n  ) => {\n    const theme = useInternalTheme(themeOverrides);\n    const { isV3 } = theme;\n\n    const IconComponent = animated ? CrossFadeIcon : Icon;\n\n    const { iconColor, rippleColor, backgroundColor, borderColor } =\n      getIconButtonColor({\n        theme,\n        disabled,\n        selected,\n        mode,\n        customIconColor,\n        customContainerColor,\n        customRippleColor,\n      });\n\n    const buttonSize = isV3 ? size + 2 * PADDING : size * 1.5;\n\n    const {\n      borderWidth = isV3 && mode === 'outlined' && !selected ? 1 : 0,\n      borderRadius = buttonSize / 2,\n    } = (StyleSheet.flatten(style) || {}) as ViewStyle;\n\n    const borderStyles = {\n      borderWidth,\n      borderRadius,\n      borderColor,\n    };\n\n    return (\n      <Surface\n        ref={ref}\n        testID={`${testID}-container`}\n        style={[\n          {\n            backgroundColor,\n            width: buttonSize,\n            height: buttonSize,\n          },\n          styles.container,\n          borderStyles,\n          !isV3 && disabled && styles.disabled,\n          style,\n        ]}\n        {...(isV3 && { elevation: 0 })}\n      >\n        <TouchableRipple\n          borderless\n          centered\n          onPress={onPress}\n          rippleColor={rippleColor}\n          accessibilityLabel={accessibilityLabel}\n          style={[styles.touchable, { borderRadius }]}\n          // @ts-expect-error We keep old a11y props for backwards compat with old RN versions\n          accessibilityTraits={disabled ? ['button', 'disabled'] : 'button'}\n          accessibilityComponentType=\"button\"\n          accessibilityRole=\"button\"\n          accessibilityState={{ disabled }}\n          disabled={disabled}\n          hitSlop={\n            TouchableRipple.supported\n              ? { top: 10, left: 10, bottom: 10, right: 10 }\n              : { top: 6, left: 6, bottom: 6, right: 6 }\n          }\n          testID={testID}\n          {...rest}\n        >\n          {loading ? (\n            <ActivityIndicator size={size} color={iconColor} />\n          ) : (\n            <IconComponent color={iconColor} source={icon} size={size} />\n          )}\n        </TouchableRipple>\n      </Surface>\n    );\n  }\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    overflow: 'hidden',\n    margin: 6,\n    elevation: 0,\n  },\n  touchable: {\n    flexGrow: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  disabled: {\n    opacity: 0.32,\n  },\n});\n\nexport default IconButton;\n","import type { ColorValue } from 'react-native';\n\nimport color from 'color';\n\nimport type { InternalTheme } from '../../types';\n\ntype IconButtonMode = 'outlined' | 'contained' | 'contained-tonal';\n\ntype BaseProps = {\n  theme: InternalTheme;\n  isMode: (mode: IconButtonMode) => boolean;\n  disabled?: boolean;\n  selected?: boolean;\n};\n\nconst getBorderColor = ({\n  theme,\n  disabled,\n}: {\n  theme: InternalTheme;\n  disabled?: boolean;\n}) => {\n  if (theme.isV3) {\n    if (disabled) {\n      return theme.colors.surfaceDisabled;\n    }\n\n    return theme.colors.outline;\n  }\n\n  return undefined;\n};\n\nconst getBackgroundColor = ({\n  theme,\n  isMode,\n  disabled,\n  selected,\n  customContainerColor,\n}: BaseProps & { customContainerColor?: string }) => {\n  if (theme.isV3) {\n    if (disabled) {\n      if (isMode('contained') || isMode('contained-tonal')) {\n        return theme.colors.surfaceDisabled;\n      }\n    }\n\n    if (typeof customContainerColor !== 'undefined') {\n      return customContainerColor;\n    }\n\n    if (isMode('contained')) {\n      if (selected) {\n        return theme.colors.primary;\n      }\n      return theme.colors.surfaceVariant;\n    }\n\n    if (isMode('contained-tonal')) {\n      if (selected) {\n        return theme.colors.secondaryContainer;\n      }\n      return theme.colors.surfaceVariant;\n    }\n\n    if (isMode('outlined')) {\n      if (selected) {\n        return theme.colors.inverseSurface;\n      }\n    }\n  }\n\n  if (typeof customContainerColor !== 'undefined') {\n    return customContainerColor;\n  }\n\n  return undefined;\n};\n\nconst getIconColor = ({\n  theme,\n  isMode,\n  disabled,\n  selected,\n  customIconColor,\n}: BaseProps & { customIconColor?: string }) => {\n  if (theme.isV3) {\n    if (disabled) {\n      return theme.colors.onSurfaceDisabled;\n    }\n\n    if (typeof customIconColor !== 'undefined') {\n      return customIconColor;\n    }\n\n    if (isMode('contained')) {\n      if (selected) {\n        return theme.colors.onPrimary;\n      }\n      return theme.colors.primary;\n    }\n\n    if (isMode('contained-tonal')) {\n      if (selected) {\n        return theme.colors.onSecondaryContainer;\n      }\n      return theme.colors.onSurfaceVariant;\n    }\n\n    if (isMode('outlined')) {\n      if (selected) {\n        return theme.colors.inverseOnSurface;\n      }\n      return theme.colors.onSurfaceVariant;\n    }\n\n    if (selected) {\n      return theme.colors.primary;\n    }\n    return theme.colors.onSurfaceVariant;\n  }\n\n  if (typeof customIconColor !== 'undefined') {\n    return customIconColor;\n  }\n\n  return theme.colors.text;\n};\n\nconst getRippleColor = ({\n  theme,\n  iconColor,\n  customRippleColor,\n}: {\n  theme: InternalTheme;\n  iconColor: string;\n  customRippleColor?: ColorValue;\n}) => {\n  if (customRippleColor) {\n    return customRippleColor;\n  }\n  if (theme.isV3) {\n    return color(iconColor).alpha(0.12).rgb().string();\n  }\n  return color(iconColor).alpha(0.32).rgb().string();\n};\n\nexport const getIconButtonColor = ({\n  theme,\n  disabled,\n  mode,\n  selected,\n  customIconColor,\n  customContainerColor,\n  customRippleColor,\n}: {\n  theme: InternalTheme;\n  disabled?: boolean;\n  selected?: boolean;\n  mode?: IconButtonMode;\n  customIconColor?: string;\n  customContainerColor?: string;\n  customRippleColor?: ColorValue;\n}) => {\n  const isMode = (modeToCompare: IconButtonMode) => {\n    return mode === modeToCompare;\n  };\n\n  const baseIconColorProps = {\n    theme,\n    isMode,\n    disabled,\n    selected,\n  };\n\n  const iconColor = getIconColor({\n    ...baseIconColorProps,\n    customIconColor,\n  });\n\n  return {\n    iconColor,\n    backgroundColor: getBackgroundColor({\n      ...baseIconColorProps,\n      customContainerColor,\n    }),\n    rippleColor: getRippleColor({ theme, iconColor, customRippleColor }),\n    borderColor: getBorderColor({ theme, disabled }),\n  };\n};\n","// @component ./ListAccordion.tsx\nexport { default as Accordion } from './ListAccordion';\n\n// @component ./ListAccordionGroup.tsx\nexport { default as AccordionGroup } from './ListAccordionGroup';\n\n// @component ./ListIcon.tsx\nexport { default as Icon } from './ListIcon';\n\n// @component ./ListItem.tsx\nexport { default as Item } from './ListItem';\n\n// @component ./ListSection.tsx\nexport { default as Section } from './ListSection';\n\n// @component ./ListSubheader.tsx\nexport { default as Subheader } from './ListSubheader';\n\n// @component ./ListImage.tsx\nexport { default as Image } from './ListImage';\n","import * as React from 'react';\nimport {\n  ColorValue,\n  GestureResponderEvent,\n  I18nManager,\n  NativeSyntheticEvent,\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  TextLayoutEventData,\n  View,\n  ViewProps,\n  ViewStyle,\n  PressableAndroidRippleConfig,\n} from 'react-native';\n\nimport { ListAccordionGroupContext } from './ListAccordionGroup';\nimport type { Style } from './utils';\nimport { getAccordionColors, getLeftStyles } from './utils';\nimport { useInternalTheme } from '../../core/theming';\nimport type { ThemeProp } from '../../types';\nimport MaterialCommunityIcon from '../MaterialCommunityIcon';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport Text from '../Typography/Text';\n\nexport type Props = {\n  /**\n   * Title text for the list accordion.\n   */\n  title: React.ReactNode;\n  /**\n   * Description text for the list accordion.\n   */\n  description?: React.ReactNode;\n  /**\n   * Callback which returns a React element to display on the left side.\n   */\n  left?: (props: { color: string; style: Style }) => React.ReactNode;\n  /**\n   * Callback which returns a React element to display on the right side.\n   */\n  right?: (props: { isExpanded: boolean }) => React.ReactNode;\n  /**\n   * Whether the accordion is expanded\n   * If this prop is provided, the accordion will behave as a \"controlled component\".\n   * You'll need to update this prop when you want to toggle the component or on `onPress`.\n   */\n  expanded?: boolean;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: (e: GestureResponderEvent) => void;\n  /**\n   * Function to execute on long press.\n   */\n  onLongPress?: (e: GestureResponderEvent) => void;\n  /**\n   * The number of milliseconds a user must touch the element before executing `onLongPress`.\n   */\n  delayLongPress?: number;\n  /**\n   * Content of the section.\n   */\n  children: React.ReactNode;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n  /**\n   * Type of background drawabale to display the feedback (Android).\n   * https://reactnative.dev/docs/pressable#rippleconfig\n   */\n  background?: PressableAndroidRippleConfig;\n  /**\n   * Style that is passed to the wrapping TouchableRipple element.\n   */\n  style?: StyleProp<ViewStyle>;\n  /**\n   * Style that is passed to Title element.\n   */\n  titleStyle?: StyleProp<TextStyle>;\n  /**\n   * Style that is passed to Description element.\n   */\n  descriptionStyle?: StyleProp<TextStyle>;\n  /**\n   * Color of the ripple effect.\n   */\n  rippleColor?: ColorValue;\n  /**\n   * Truncate Title text such that the total number of lines does not\n   * exceed this number.\n   */\n  titleNumberOfLines?: number;\n  /**\n   * Truncate Description text such that the total number of lines does not\n   * exceed this number.\n   */\n  descriptionNumberOfLines?: number;\n  /**\n   * Specifies the largest possible scale a title font can reach.\n   */\n  titleMaxFontSizeMultiplier?: number;\n  /**\n   * Specifies the largest possible scale a description font can reach.\n   */\n  descriptionMaxFontSizeMultiplier?: number;\n  /**\n   * Id is used for distinguishing specific accordion when using List.AccordionGroup. Property is required when using List.AccordionGroup and has no impact on behavior when using standalone List.Accordion.\n   */\n  id?: string | number;\n  /**\n   * TestID used for testing purposes\n   */\n  testID?: string;\n  /**\n   * Accessibility label for the TouchableRipple. This is read by the screen reader when the user taps the touchable.\n   */\n  accessibilityLabel?: string;\n  /**\n   * `pointerEvents` passed to the `View` container\n   */\n  pointerEvents?: ViewProps['pointerEvents'];\n};\n\n/**\n * A component used to display an expandable list item.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { List } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [expanded, setExpanded] = React.useState(true);\n *\n *   const handlePress = () => setExpanded(!expanded);\n *\n *   return (\n *     <List.Section title=\"Accordions\">\n *       <List.Accordion\n *         title=\"Uncontrolled Accordion\"\n *         left={props => <List.Icon {...props} icon=\"folder\" />}>\n *         <List.Item title=\"First item\" />\n *         <List.Item title=\"Second item\" />\n *       </List.Accordion>\n *\n *       <List.Accordion\n *         title=\"Controlled Accordion\"\n *         left={props => <List.Icon {...props} icon=\"folder\" />}\n *         expanded={expanded}\n *         onPress={handlePress}>\n *         <List.Item title=\"First item\" />\n *         <List.Item title=\"Second item\" />\n *       </List.Accordion>\n *     </List.Section>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nconst ListAccordion = ({\n  left,\n  right,\n  title,\n  description,\n  children,\n  theme: themeOverrides,\n  titleStyle,\n  descriptionStyle,\n  titleNumberOfLines = 1,\n  descriptionNumberOfLines = 2,\n  rippleColor: customRippleColor,\n  style,\n  id,\n  testID,\n  background,\n  onPress,\n  onLongPress,\n  delayLongPress,\n  expanded: expandedProp,\n  accessibilityLabel,\n  pointerEvents = 'none',\n  titleMaxFontSizeMultiplier,\n  descriptionMaxFontSizeMultiplier,\n}: Props) => {\n  const theme = useInternalTheme(themeOverrides);\n  const [expanded, setExpanded] = React.useState<boolean>(\n    expandedProp || false\n  );\n  const [alignToTop, setAlignToTop] = React.useState(false);\n\n  const onDescriptionTextLayout = (\n    event: NativeSyntheticEvent<TextLayoutEventData>\n  ) => {\n    if (!theme.isV3) {\n      return;\n    }\n    const { nativeEvent } = event;\n    setAlignToTop(nativeEvent.lines.length >= 2);\n  };\n\n  const handlePressAction = (e: GestureResponderEvent) => {\n    onPress?.(e);\n\n    if (expandedProp === undefined) {\n      // Only update state of the `expanded` prop was not passed\n      // If it was passed, the component will act as a controlled component\n      setExpanded((expanded) => !expanded);\n    }\n  };\n\n  const expandedInternal = expandedProp !== undefined ? expandedProp : expanded;\n\n  const groupContext = React.useContext(ListAccordionGroupContext);\n  if (groupContext !== null && (id === undefined || id === null || id === '')) {\n    throw new Error(\n      'List.Accordion is used inside a List.AccordionGroup without specifying an id prop.'\n    );\n  }\n  const isExpanded = groupContext\n    ? groupContext.expandedId === id\n    : expandedInternal;\n\n  const { titleColor, descriptionColor, titleTextColor, rippleColor } =\n    getAccordionColors({\n      theme,\n      isExpanded,\n      customRippleColor,\n    });\n\n  const handlePress =\n    groupContext && id !== undefined\n      ? () => groupContext.onAccordionPress(id)\n      : handlePressAction;\n  return (\n    <View>\n      <View style={{ backgroundColor: theme?.colors?.background }}>\n        <TouchableRipple\n          style={[theme.isV3 ? styles.containerV3 : styles.container, style]}\n          onPress={handlePress}\n          onLongPress={onLongPress}\n          delayLongPress={delayLongPress}\n          rippleColor={rippleColor}\n          accessibilityRole=\"button\"\n          accessibilityState={{ expanded: isExpanded }}\n          accessibilityLabel={accessibilityLabel}\n          testID={testID}\n          theme={theme}\n          background={background}\n          borderless\n        >\n          <View\n            style={theme.isV3 ? styles.rowV3 : styles.row}\n            pointerEvents={pointerEvents}\n          >\n            {left\n              ? left({\n                  color: isExpanded ? theme.colors?.primary : descriptionColor,\n                  style: getLeftStyles(alignToTop, description, theme.isV3),\n                })\n              : null}\n            <View\n              style={[theme.isV3 ? styles.itemV3 : styles.item, styles.content]}\n            >\n              <Text\n                selectable={false}\n                numberOfLines={titleNumberOfLines}\n                style={[\n                  styles.title,\n                  {\n                    color: titleTextColor,\n                  },\n                  titleStyle,\n                ]}\n                maxFontSizeMultiplier={titleMaxFontSizeMultiplier}\n              >\n                {title}\n              </Text>\n              {description ? (\n                <Text\n                  selectable={false}\n                  numberOfLines={descriptionNumberOfLines}\n                  style={[\n                    styles.description,\n                    {\n                      color: descriptionColor,\n                    },\n                    descriptionStyle,\n                  ]}\n                  onTextLayout={onDescriptionTextLayout}\n                  maxFontSizeMultiplier={descriptionMaxFontSizeMultiplier}\n                >\n                  {description}\n                </Text>\n              ) : null}\n            </View>\n            <View\n              style={[styles.item, description ? styles.multiline : undefined]}\n            >\n              {right ? (\n                right({\n                  isExpanded: isExpanded,\n                })\n              ) : (\n                <MaterialCommunityIcon\n                  name={isExpanded ? 'chevron-up' : 'chevron-down'}\n                  color={theme.isV3 ? descriptionColor : titleColor}\n                  size={24}\n                  direction={I18nManager.getConstants().isRTL ? 'rtl' : 'ltr'}\n                />\n              )}\n            </View>\n          </View>\n        </TouchableRipple>\n      </View>\n\n      {isExpanded\n        ? React.Children.map(children, (child) => {\n            if (\n              left &&\n              React.isValidElement(child) &&\n              !child.props.left &&\n              !child.props.right\n            ) {\n              return React.cloneElement(child as React.ReactElement<any>, {\n                style: [\n                  theme.isV3 ? styles.childV3 : styles.child,\n                  child.props.style,\n                ],\n                theme,\n              });\n            }\n\n            return child;\n          })\n        : null}\n    </View>\n  );\n};\n\nListAccordion.displayName = 'List.Accordion';\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 8,\n  },\n  containerV3: {\n    paddingVertical: 8,\n    paddingRight: 24,\n  },\n  row: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  rowV3: {\n    flexDirection: 'row',\n    marginVertical: 6,\n  },\n  multiline: {\n    height: 40,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  title: {\n    fontSize: 16,\n  },\n  description: {\n    fontSize: 14,\n  },\n  item: {\n    marginVertical: 6,\n    paddingLeft: 8,\n  },\n  itemV3: {\n    paddingLeft: 16,\n  },\n  child: {\n    paddingLeft: 64,\n  },\n  childV3: {\n    paddingLeft: 40,\n  },\n  content: {\n    flex: 1,\n    justifyContent: 'center',\n  },\n});\n\nexport default ListAccordion;\n","import * as React from 'react';\n\nexport type Props = {\n  /**\n   * Function to execute on selection change.\n   */\n  onAccordionPress?: (expandedId: string | number) => void;\n  /**\n   * Id of the currently expanded list accordion\n   */\n  expandedId?: string | number;\n  /**\n   * React elements containing list accordions\n   */\n  children: React.ReactNode;\n};\n\nexport type ListAccordionGroupContextType = {\n  expandedId: string | number | undefined;\n  onAccordionPress: (expandedId: string | number) => void;\n} | null;\n\nexport const ListAccordionGroupContext =\n  React.createContext<ListAccordionGroupContextType>(null);\n\n/**\n * List.AccordionGroup allows to control a group of List Accordions. `id` prop for List.Accordion is required in order for group to work.\n * List.AccordionGroup can be a controlled or uncontrolled component. The example shows the uncontrolled version.\n * At most one Accordion can be expanded at a given time.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { View, Text } from 'react-native';\n * import { List } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <List.AccordionGroup>\n *     <List.Accordion title=\"Accordion 1\" id=\"1\">\n *       <List.Item title=\"Item 1\" />\n *     </List.Accordion>\n *     <List.Accordion title=\"Accordion 2\" id=\"2\">\n *       <List.Item title=\"Item 2\" />\n *     </List.Accordion>\n *     <View>\n *       <Text>\n *         List.Accordion can be wrapped because implementation uses React.Context.\n *       </Text>\n *       <List.Accordion title=\"Accordion 3\" id=\"3\">\n *         <List.Item title=\"Item 3\" />\n *       </List.Accordion>\n *     </View>\n *   </List.AccordionGroup>\n * );\n *\n * export default MyComponent;\n *```\n */\nconst ListAccordionGroup = ({\n  expandedId: expandedIdProp,\n  onAccordionPress,\n  children,\n}: Props) => {\n  const [expandedId, setExpandedId] = React.useState<\n    string | number | undefined\n  >(undefined);\n\n  const onAccordionPressDefault = (newExpandedId: string | number) => {\n    setExpandedId((currentExpandedId) =>\n      currentExpandedId === newExpandedId ? undefined : newExpandedId\n    );\n  };\n\n  return (\n    <ListAccordionGroupContext.Provider\n      value={{\n        expandedId: expandedIdProp || expandedId, // component can be controlled or uncontrolled\n        onAccordionPress: onAccordionPress || onAccordionPressDefault,\n      }}\n    >\n      {children}\n    </ListAccordionGroupContext.Provider>\n  );\n};\n\nListAccordionGroup.displayName = 'List.AccordionGroup';\n\nexport default ListAccordionGroup;\n","import * as React from 'react';\nimport { View, ViewStyle, StyleSheet, StyleProp } from 'react-native';\n\nimport { useInternalTheme } from '../../core/theming';\nimport type { ThemeProp } from '../../types';\nimport Icon, { IconSource } from '../Icon';\n\nexport type Props = {\n  /**\n   * Icon to show.\n   */\n  icon: IconSource;\n  /**\n   * Color for the icon.\n   */\n  color?: string;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n};\n\nconst ICON_SIZE = 24;\n\n/**\n * A component to show an icon in a list item.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { List, MD3Colors } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <>\n *     <List.Icon color={MD3Colors.tertiary70} icon=\"folder\" />\n *     <List.Icon color={MD3Colors.tertiary70} icon=\"equal\" />\n *     <List.Icon color={MD3Colors.tertiary70} icon=\"calendar\" />\n *   </>\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst ListIcon = ({\n  icon,\n  color: iconColor,\n  style,\n  theme: themeOverrides,\n}: Props) => {\n  const theme = useInternalTheme(themeOverrides);\n\n  return (\n    <View\n      style={[theme.isV3 ? styles.itemV3 : styles.item, style]}\n      pointerEvents=\"box-none\"\n    >\n      <Icon source={icon} size={ICON_SIZE} color={iconColor} theme={theme} />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  item: {\n    margin: 8,\n    height: 40,\n    width: 40,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  itemV3: {\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n\nListIcon.displayName = 'List.Icon';\n\nexport default ListIcon;\n","import * as React from 'react';\nimport {\n  StyleSheet,\n  StyleProp,\n  Image,\n  ImageSourcePropType,\n  ImageStyle,\n} from 'react-native';\n\nimport { useInternalTheme } from '../../core/theming';\nimport type { ThemeProp } from '../../types';\n\nexport type Props = {\n  source: ImageSourcePropType;\n  variant?: 'image' | 'video';\n  style?: StyleProp<ImageStyle>;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n};\n\n/**\n * A component to show image in a list item.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { List, MD3Colors } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <>\n *     <List.Image variant=\"image\" source={{uri: 'https://www.someurl.com/apple'}} />\n *     <List.Image variant=\"video\" source={require('../../some-apple.png')} />\n *   </>\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst ListImage = ({\n  style,\n  source,\n  variant = 'image',\n  theme: themeOverrides,\n}: Props) => {\n  const theme = useInternalTheme(themeOverrides);\n  const getStyles = () => {\n    if (variant === 'video') {\n      if (!theme.isV3) {\n        return [style, styles.video];\n      }\n\n      return [style, styles.videoV3];\n    }\n\n    return [style, styles.image];\n  };\n\n  return (\n    <Image\n      style={getStyles()}\n      source={source}\n      accessibilityIgnoresInvertColors\n      testID=\"list-image\"\n    />\n  );\n};\n\nconst styles = StyleSheet.create({\n  image: {\n    width: 56,\n    height: 56,\n  },\n  video: {\n    width: 100,\n    height: 64,\n    marginLeft: 0,\n  },\n  videoV3: {\n    width: 114,\n    height: 64,\n    marginLeft: 0,\n  },\n});\n\nListImage.displayName = 'List.Image';\n\nexport default ListImage;\n","import * as React from 'react';\nimport {\n  GestureResponderEvent,\n  NativeSyntheticEvent,\n  StyleProp,\n  StyleSheet,\n  TextLayoutEventData,\n  TextStyle,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport color from 'color';\n\nimport { Style, getLeftStyles, getRightStyles } from './utils';\nimport { useInternalTheme } from '../../core/theming';\nimport type { $RemoveChildren, EllipsizeProp, ThemeProp } from '../../types';\nimport { forwardRef } from '../../utils/forwardRef';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport Text from '../Typography/Text';\n\ntype Title =\n  | React.ReactNode\n  | ((props: {\n      selectable: boolean;\n      ellipsizeMode: EllipsizeProp | undefined;\n      color: string;\n      fontSize: number;\n    }) => React.ReactNode);\n\ntype Description =\n  | React.ReactNode\n  | ((props: {\n      selectable: boolean;\n      ellipsizeMode: EllipsizeProp | undefined;\n      color: string;\n      fontSize: number;\n    }) => React.ReactNode);\n\nexport type Props = $RemoveChildren<typeof TouchableRipple> & {\n  /**\n   * Title text for the list item.\n   */\n  title: Title;\n  /**\n   * Description text for the list item or callback which returns a React element to display the description.\n   */\n  description?: Description;\n  /**\n   * Callback which returns a React element to display on the left side.\n   */\n  left?: (props: { color: string; style: Style }) => React.ReactNode;\n  /**\n   * Callback which returns a React element to display on the right side.\n   */\n  right?: (props: { color: string; style?: Style }) => React.ReactNode;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: (e: GestureResponderEvent) => void;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n  /**\n   * Style that is passed to the wrapping TouchableRipple element.\n   */\n  style?: StyleProp<ViewStyle>;\n  /**\n   * Style that is passed to the container wrapping title and descripton.\n   */\n  contentStyle?: StyleProp<ViewStyle>;\n  /**\n   * Style that is passed to Title element.\n   */\n  titleStyle?: StyleProp<TextStyle>;\n  /**\n   * Style that is passed to Description element.\n   */\n  descriptionStyle?: StyleProp<TextStyle>;\n  /**\n   * Truncate Title text such that the total number of lines does not\n   * exceed this number.\n   */\n  titleNumberOfLines?: number;\n  /**\n   * Truncate Description text such that the total number of lines does not\n   * exceed this number.\n   */\n  descriptionNumberOfLines?: number;\n  /**\n   * Ellipsize Mode for the Title.  One of `'head'`, `'middle'`, `'tail'`, `'clip'`.\n   *\n   * See [`ellipsizeMode`](https://reactnative.dev/docs/text#ellipsizemode)\n   */\n  titleEllipsizeMode?: EllipsizeProp;\n  /**\n   * Ellipsize Mode for the Description.  One of `'head'`, `'middle'`, `'tail'`, `'clip'`.\n   *\n   * See [`ellipsizeMode`](https://reactnative.dev/docs/text#ellipsizemode)\n   */\n  descriptionEllipsizeMode?: EllipsizeProp;\n  /**\n   * Specifies the largest possible scale a title font can reach.\n   */\n  titleMaxFontSizeMultiplier?: number;\n  /**\n   * Specifies the largest possible scale a description font can reach.\n   */\n  descriptionMaxFontSizeMultiplier?: number;\n  /**\n   * TestID used for testing purposes\n   */\n  testID?: string;\n};\n\n/**\n * A component to show tiles inside a List.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { List } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <List.Item\n *     title=\"First Item\"\n *     description=\"Item description\"\n *     left={props => <List.Icon {...props} icon=\"folder\" />}\n *   />\n * );\n *\n * export default MyComponent;\n * ```\n *\n * @extends TouchableRipple props https://callstack.github.io/react-native-paper/docs/components/TouchableRipple\n */\nconst ListItem = (\n  {\n    left,\n    right,\n    title,\n    description,\n    onPress,\n    theme: themeOverrides,\n    style,\n    contentStyle,\n    titleStyle,\n    titleNumberOfLines = 1,\n    descriptionNumberOfLines = 2,\n    titleEllipsizeMode,\n    descriptionEllipsizeMode,\n    descriptionStyle,\n    descriptionMaxFontSizeMultiplier,\n    titleMaxFontSizeMultiplier,\n    testID,\n    ...rest\n  }: Props,\n  ref: React.ForwardedRef<View>\n) => {\n  const theme = useInternalTheme(themeOverrides);\n  const [alignToTop, setAlignToTop] = React.useState(false);\n\n  const onDescriptionTextLayout = (\n    event: NativeSyntheticEvent<TextLayoutEventData>\n  ) => {\n    if (!theme.isV3) {\n      return;\n    }\n    const { nativeEvent } = event;\n    setAlignToTop(nativeEvent.lines.length >= 2);\n  };\n\n  const renderDescription = (\n    descriptionColor: string,\n    description?: Description | null\n  ) => {\n    return typeof description === 'function' ? (\n      description({\n        selectable: false,\n        ellipsizeMode: descriptionEllipsizeMode,\n        color: descriptionColor,\n        fontSize: styles.description.fontSize,\n      })\n    ) : (\n      <Text\n        selectable={false}\n        numberOfLines={descriptionNumberOfLines}\n        ellipsizeMode={descriptionEllipsizeMode}\n        style={[\n          styles.description,\n          { color: descriptionColor },\n          descriptionStyle,\n        ]}\n        onTextLayout={onDescriptionTextLayout}\n        maxFontSizeMultiplier={descriptionMaxFontSizeMultiplier}\n      >\n        {description}\n      </Text>\n    );\n  };\n\n  const renderTitle = () => {\n    const titleColor = theme.isV3\n      ? theme.colors.onSurface\n      : color(theme.colors.text).alpha(0.87).rgb().string();\n\n    return typeof title === 'function' ? (\n      title({\n        selectable: false,\n        ellipsizeMode: titleEllipsizeMode,\n        color: titleColor,\n        fontSize: styles.title.fontSize,\n      })\n    ) : (\n      <Text\n        selectable={false}\n        ellipsizeMode={titleEllipsizeMode}\n        numberOfLines={titleNumberOfLines}\n        style={[styles.title, { color: titleColor }, titleStyle]}\n        maxFontSizeMultiplier={titleMaxFontSizeMultiplier}\n      >\n        {title}\n      </Text>\n    );\n  };\n\n  const descriptionColor = theme.isV3\n    ? theme.colors.onSurfaceVariant\n    : color(theme.colors.text).alpha(0.54).rgb().string();\n\n  return (\n    <TouchableRipple\n      {...rest}\n      ref={ref}\n      style={[theme.isV3 ? styles.containerV3 : styles.container, style]}\n      onPress={onPress}\n      theme={theme}\n      testID={testID}\n    >\n      <View style={theme.isV3 ? styles.rowV3 : styles.row}>\n        {left\n          ? left({\n              color: descriptionColor,\n              style: getLeftStyles(alignToTop, description, theme.isV3),\n            })\n          : null}\n        <View\n          style={[\n            theme.isV3 ? styles.itemV3 : styles.item,\n            styles.content,\n            contentStyle,\n          ]}\n          testID={`${testID}-content`}\n        >\n          {renderTitle()}\n\n          {description\n            ? renderDescription(descriptionColor, description)\n            : null}\n        </View>\n        {right\n          ? right({\n              color: descriptionColor,\n              style: getRightStyles(alignToTop, description, theme.isV3),\n            })\n          : null}\n      </View>\n    </TouchableRipple>\n  );\n};\n\nconst Component = forwardRef(ListItem);\nComponent.displayName = 'List.Item';\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 8,\n  },\n  containerV3: {\n    paddingVertical: 8,\n    paddingRight: 24,\n  },\n  row: {\n    width: '100%',\n    flexDirection: 'row',\n  },\n  rowV3: {\n    width: '100%',\n    flexDirection: 'row',\n    marginVertical: 6,\n  },\n  title: {\n    fontSize: 16,\n  },\n  description: {\n    fontSize: 14,\n  },\n  item: {\n    marginVertical: 6,\n    paddingLeft: 8,\n  },\n  itemV3: {\n    paddingLeft: 16,\n  },\n  content: {\n    flexShrink: 1,\n    flexGrow: 1,\n    justifyContent: 'center',\n  },\n});\n\nexport default Component;\n","import * as React from 'react';\nimport {\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport ListSubheader from './ListSubheader';\nimport { useInternalTheme } from '../../core/theming';\nimport type { ThemeProp } from '../../types';\n\nexport type Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * Title text for the section.\n   */\n  title?: string;\n  /**\n   * Content of the section.\n   */\n  children: React.ReactNode;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n  /**\n   * Style that is passed to Title element.\n   */\n  titleStyle?: StyleProp<TextStyle>;\n  style?: StyleProp<ViewStyle>;\n};\n\n/**\n * A component used to group list items.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { List, MD3Colors } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <List.Section>\n *     <List.Subheader>Some title</List.Subheader>\n *     <List.Item title=\"First Item\" left={() => <List.Icon icon=\"folder\" />} />\n *     <List.Item\n *       title=\"Second Item\"\n *       left={() => <List.Icon color={MD3Colors.tertiary70} icon=\"folder\" />}\n *     />\n *   </List.Section>\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst ListSection = ({\n  children,\n  title,\n  titleStyle,\n  style,\n  theme: themeOverrides,\n  ...rest\n}: Props) => {\n  const theme = useInternalTheme(themeOverrides);\n  const viewProps = { ...rest, theme };\n\n  return (\n    <View {...viewProps} style={[styles.container, style]}>\n      {title ? (\n        <ListSubheader style={titleStyle} theme={theme}>\n          {title}\n        </ListSubheader>\n      ) : null}\n      {children}\n    </View>\n  );\n};\n\nListSection.displayName = 'List.Section';\n\nconst styles = StyleSheet.create({\n  container: {\n    marginVertical: 8,\n  },\n});\n\nexport default ListSection;\n","import * as React from 'react';\nimport { StyleProp, StyleSheet, TextStyle } from 'react-native';\n\nimport color from 'color';\nimport type { ThemeProp } from 'src/types';\n\nimport { useInternalTheme } from '../../core/theming';\nimport Text from '../Typography/Text';\n\nexport type Props = React.ComponentProps<typeof Text> & {\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n  /**\n   * Style that is passed to Text element.\n   */\n  style?: StyleProp<TextStyle>;\n  /**\n   * Specifies the largest possible scale a text font can reach.\n   */\n  maxFontSizeMultiplier?: number;\n};\n\n/**\n * A component used to display a header in lists.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { List } from 'react-native-paper';\n *\n * const MyComponent = () => <List.Subheader>My List Title</List.Subheader>;\n *\n * export default MyComponent;\n * ```\n */\nconst ListSubheader = ({\n  style,\n  theme: overrideTheme,\n  maxFontSizeMultiplier,\n  ...rest\n}: Props) => {\n  const theme = useInternalTheme(overrideTheme);\n\n  const textColor = theme.isV3\n    ? theme.colors.onSurfaceVariant\n    : color(theme.colors.text).alpha(0.54).rgb().string();\n\n  const font = theme.isV3 ? theme.fonts.bodyMedium : theme.fonts.medium;\n\n  return (\n    <Text\n      variant=\"bodyMedium\"\n      numberOfLines={1}\n      maxFontSizeMultiplier={maxFontSizeMultiplier}\n      {...rest}\n      style={[\n        styles.container,\n        {\n          color: textColor,\n          ...font,\n        },\n        style,\n      ]}\n    />\n  );\n};\n\nListSubheader.displayName = 'List.Subheader';\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 16,\n    paddingVertical: 13,\n  },\n});\n\nexport default ListSubheader;\n","import { FlexAlignType, ColorValue, StyleSheet } from 'react-native';\n\nimport color from 'color';\nimport type { EllipsizeProp, InternalTheme } from 'src/types';\n\ntype Description =\n  | React.ReactNode\n  | ((props: {\n      selectable: boolean;\n      ellipsizeMode: EllipsizeProp | undefined;\n      color: string;\n      fontSize: number;\n    }) => React.ReactNode);\n\nexport type Style = {\n  marginLeft?: number;\n  marginRight?: number;\n  marginVertical?: number;\n  alignSelf?: FlexAlignType;\n};\n\nexport const getLeftStyles = (\n  alignToTop: boolean,\n  description: Description,\n  isV3: boolean\n) => {\n  const stylesV3 = {\n    marginRight: 0,\n    marginLeft: 16,\n    alignSelf: alignToTop ? 'flex-start' : 'center',\n  };\n\n  if (!description) {\n    return {\n      ...styles.iconMarginLeft,\n      ...styles.marginVerticalNone,\n      ...(isV3 && { ...stylesV3 }),\n    };\n  }\n\n  if (!isV3) {\n    return styles.iconMarginLeft;\n  }\n\n  return {\n    ...styles.iconMarginLeft,\n    ...stylesV3,\n  };\n};\n\nexport const getRightStyles = (\n  alignToTop: boolean,\n  description: Description,\n  isV3: boolean\n) => {\n  const stylesV3 = {\n    marginLeft: 16,\n    alignSelf: alignToTop ? 'flex-start' : 'center',\n  };\n\n  if (!description) {\n    return {\n      ...styles.iconMarginRight,\n      ...styles.marginVerticalNone,\n      ...(isV3 && { ...stylesV3 }),\n    };\n  }\n\n  if (!isV3) {\n    return styles.iconMarginRight;\n  }\n\n  return {\n    ...styles.iconMarginRight,\n    ...stylesV3,\n  };\n};\n\nconst styles = StyleSheet.create({\n  marginVerticalNone: { marginVertical: 0 },\n  iconMarginLeft: { marginLeft: 0, marginRight: 16 },\n  iconMarginRight: { marginRight: 0 },\n});\n\nexport const getAccordionColors = ({\n  theme,\n  isExpanded,\n  customRippleColor,\n}: {\n  theme: InternalTheme;\n  isExpanded?: boolean;\n  customRippleColor?: ColorValue;\n}) => {\n  const titleColor = theme.isV3\n    ? theme.colors.onSurface\n    : color(theme.colors.text).alpha(0.87).rgb().string();\n\n  const descriptionColor = theme.isV3\n    ? theme.colors.onSurfaceVariant\n    : color(theme.colors.text).alpha(0.54).rgb().string();\n\n  const titleTextColor = isExpanded ? theme.colors?.primary : titleColor;\n\n  const rippleColor =\n    customRippleColor || color(titleTextColor).alpha(0.12).rgb().string();\n\n  return {\n    titleColor,\n    descriptionColor,\n    titleTextColor,\n    rippleColor,\n  };\n};\n","import * as React from 'react';\nimport { StyleSheet, Text, Platform, ViewProps, Role } from 'react-native';\n\nimport { black } from '../styles/themes/v2/colors';\n\nexport type IconProps = {\n  name: string;\n  color?: string;\n  size: number;\n  direction: 'rtl' | 'ltr';\n  allowFontScaling?: boolean;\n  testID?: string;\n};\n\ntype AccessibilityProps =\n  | {\n      role?: Role;\n      focusable?: boolean;\n    }\n  | {\n      accessibilityElementsHidden?: boolean;\n      importantForAccessibility?: 'auto' | 'yes' | 'no' | 'no-hide-descendants';\n    };\n\nlet MaterialCommunityIcons: React.ComponentType<\n  React.ComponentProps<\n    typeof import('react-native-vector-icons/MaterialCommunityIcons').default\n  > & {\n    color: string;\n    pointerEvents?: ViewProps['pointerEvents'];\n  }\n>;\n\ntry {\n  // Optionally require vector-icons\n  MaterialCommunityIcons =\n    require('react-native-vector-icons/MaterialCommunityIcons').default;\n} catch (e) {\n  let isErrorLogged = false;\n\n  // Fallback component for icons\n  MaterialCommunityIcons = ({ name, color, size, ...rest }) => {\n    /* eslint-disable no-console */\n    if (!isErrorLogged) {\n      if (\n        !/(Cannot find module|Module not found|Cannot resolve module)/.test(\n          (e as any).message\n        )\n      ) {\n        console.error(e);\n      }\n\n      console.warn(\n        `Tried to use the icon '${name}' in a component from 'react-native-paper', but 'react-native-vector-icons/MaterialCommunityIcons' could not be loaded.`,\n        `To remove this warning, try installing 'react-native-vector-icons' or use another method to specify icon: https://callstack.github.io/react-native-paper/docs/guides/icons`\n      );\n\n      isErrorLogged = true;\n    }\n\n    return (\n      <Text\n        {...rest}\n        style={[styles.icon, { color, fontSize: size }]}\n        // @ts-expect-error: Text doesn't support this, but it seems to affect TouchableNativeFeedback\n        pointerEvents=\"none\"\n        selectable={false}\n      >\n        □\n      </Text>\n    );\n  };\n}\n\nexport const accessibilityProps: AccessibilityProps =\n  Platform.OS === 'web'\n    ? {\n        role: 'img',\n        focusable: false,\n      }\n    : {\n        accessibilityElementsHidden: true,\n        importantForAccessibility:\n          'no-hide-descendants' as 'no-hide-descendants',\n      };\n\nconst defaultIcon = ({\n  name,\n  color = black,\n  size,\n  direction,\n  allowFontScaling,\n  testID,\n}: IconProps) => (\n  <MaterialCommunityIcons\n    allowFontScaling={allowFontScaling}\n    name={name}\n    color={color}\n    size={size}\n    style={[\n      {\n        transform: [{ scaleX: direction === 'rtl' ? -1 : 1 }],\n        lineHeight: size,\n      },\n      styles.icon,\n    ]}\n    pointerEvents=\"none\"\n    selectable={false}\n    testID={testID}\n    {...accessibilityProps}\n  />\n);\n\nconst styles = StyleSheet.create({\n  // eslint-disable-next-line react-native/no-color-literals\n  icon: {\n    backgroundColor: 'transparent',\n  },\n});\n\nexport default defaultIcon;\n","import * as React from 'react';\nimport {\n  Animated,\n  Dimensions,\n  Easing,\n  EmitterSubscription,\n  findNodeHandle,\n  I18nManager,\n  Keyboard,\n  KeyboardEvent as RNKeyboardEvent,\n  LayoutRectangle,\n  NativeEventSubscription,\n  Platform,\n  ScrollView,\n  ScrollViewProps,\n  StyleProp,\n  StyleSheet,\n  View,\n  ViewStyle,\n  Pressable,\n} from 'react-native';\n\nimport MenuItem from './MenuItem';\nimport { APPROX_STATUSBAR_HEIGHT } from '../../constants';\nimport { withInternalTheme } from '../../core/theming';\nimport type { $Omit, InternalTheme, MD3Elevation } from '../../types';\nimport { ElevationLevels } from '../../types';\nimport { addEventListener } from '../../utils/addEventListener';\nimport { BackHandler } from '../../utils/BackHandler/BackHandler';\nimport Portal from '../Portal/Portal';\nimport Surface from '../Surface';\n\nexport type Props = {\n  /**\n   * Whether the Menu is currently visible.\n   */\n  visible: boolean;\n  /**\n   * The anchor to open the menu from. In most cases, it will be a button that opens the menu.\n   */\n  anchor: React.ReactNode | { x: number; y: number };\n  /**\n   * Whether the menu should open at the top of the anchor or at its bottom.\n   * Applied only when anchor is a node, not an x/y position.\n   */\n  anchorPosition?: 'top' | 'bottom';\n  /**\n   * Extra margin to add at the top of the menu to account for translucent status bar on Android.\n   * If you are using Expo, we assume translucent status bar and set a height for status bar automatically.\n   * Pass `0` or a custom value to and customize it.\n   * This is automatically handled on iOS.\n   */\n  statusBarHeight?: number;\n  /**\n   * Callback called when Menu is dismissed. The `visible` prop needs to be updated when this is called.\n   */\n  onDismiss?: () => void;\n  /**\n   * Accessibility label for the overlay. This is read by the screen reader when the user taps outside the menu.\n   */\n  overlayAccessibilityLabel?: string;\n  /**\n   * Content of the `Menu`.\n   */\n  children: React.ReactNode;\n  /**\n   * Style of menu's inner content.\n   */\n  contentStyle?: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * Elevation level of the menu's content. Shadow styles are calculated based on this value. Default `backgroundColor` is taken from the corresponding `theme.colors.elevation` property. By default equals `2`.\n   * @supported Available in v5.x with theme version 3\n   */\n  elevation?: MD3Elevation;\n  /**\n   * Mode of the menu's content.\n   * - `elevated` - Surface with a shadow and background color corresponding to set `elevation` value.\n   * - `flat` - Surface without a shadow, with the background color corresponding to set `elevation` value.\n   *\n   * @supported Available in v5.x with theme version 3\n   */\n  mode?: 'flat' | 'elevated';\n  /**\n   * @optional\n   */\n  theme: InternalTheme;\n  /**\n   * Inner ScrollView prop\n   */\n  keyboardShouldPersistTaps?: ScrollViewProps['keyboardShouldPersistTaps'];\n  /**\n   * testID to be used on tests.\n   */\n  testID?: string;\n};\n\ntype Layout = $Omit<$Omit<LayoutRectangle, 'x'>, 'y'>;\n\ntype State = {\n  rendered: boolean;\n  top: number;\n  left: number;\n  menuLayout: Layout;\n  anchorLayout: Layout;\n  opacityAnimation: Animated.Value;\n  scaleAnimation: Animated.ValueXY;\n  windowLayout: Layout;\n};\n\n// Minimum padding between the edge of the screen and the menu\nconst SCREEN_INDENT = 8;\n// From https://material.io/design/motion/speed.html#duration\nconst ANIMATION_DURATION = 250;\n// From the 'Standard easing' section of https://material.io/design/motion/speed.html#easing\nconst EASING = Easing.bezier(0.4, 0, 0.2, 1);\n\nconst WINDOW_LAYOUT = Dimensions.get('window');\n\nconst DEFAULT_ELEVATION: MD3Elevation = 2;\nexport const ELEVATION_LEVELS_MAP = Object.values(\n  ElevationLevels\n) as ElevationLevels[];\n\nconst DEFAULT_MODE = 'elevated';\n\n/**\n * Menus display a list of choices on temporary elevated surfaces. Their placement varies based on the element that opens them.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { View } from 'react-native';\n * import { Button, Menu, Divider, PaperProvider } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [visible, setVisible] = React.useState(false);\n *\n *   const openMenu = () => setVisible(true);\n *\n *   const closeMenu = () => setVisible(false);\n *\n *   return (\n *     <PaperProvider>\n *       <View\n *         style={{\n *           paddingTop: 50,\n *           flexDirection: 'row',\n *           justifyContent: 'center',\n *         }}>\n *         <Menu\n *           visible={visible}\n *           onDismiss={closeMenu}\n *           anchor={<Button onPress={openMenu}>Show menu</Button>}>\n *           <Menu.Item onPress={() => {}} title=\"Item 1\" />\n *           <Menu.Item onPress={() => {}} title=\"Item 2\" />\n *           <Divider />\n *           <Menu.Item onPress={() => {}} title=\"Item 3\" />\n *         </Menu>\n *       </View>\n *     </PaperProvider>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n *\n * ### Note\n * When using `Menu` within a React Native's `Modal` component, you need to wrap all\n * `Modal` contents within a `PaperProvider` in order for the menu to show. This\n * wrapping is not necessary if you use Paper's `Modal` instead.\n */\nclass Menu extends React.Component<Props, State> {\n  // @component ./MenuItem.tsx\n  static Item = MenuItem;\n\n  static defaultProps = {\n    statusBarHeight: APPROX_STATUSBAR_HEIGHT,\n    overlayAccessibilityLabel: 'Close menu',\n    testID: 'menu',\n  };\n\n  static getDerivedStateFromProps(nextProps: Props, prevState: State) {\n    if (nextProps.visible && !prevState.rendered) {\n      return { rendered: true };\n    }\n\n    return null;\n  }\n\n  state = {\n    rendered: this.props.visible,\n    top: 0,\n    left: 0,\n    menuLayout: { width: 0, height: 0 },\n    anchorLayout: { width: 0, height: 0 },\n    opacityAnimation: new Animated.Value(0),\n    scaleAnimation: new Animated.ValueXY({ x: 0, y: 0 }),\n    windowLayout: {\n      width: WINDOW_LAYOUT.width,\n      height: WINDOW_LAYOUT.height,\n    },\n  };\n\n  componentDidMount() {\n    this.keyboardDidShowListener = Keyboard.addListener(\n      'keyboardDidShow',\n      this.keyboardDidShow\n    );\n    this.keyboardDidHideListener = Keyboard.addListener(\n      'keyboardDidHide',\n      this.keyboardDidHide\n    );\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.visible !== this.props.visible) {\n      this.updateVisibility();\n    }\n  }\n\n  componentWillUnmount() {\n    this.removeListeners();\n    this.keyboardDidShowListener?.remove();\n    this.keyboardDidHideListener?.remove();\n  }\n\n  private anchor?: View | null = null;\n  private menu?: View | null = null;\n  private backHandlerSubscription: NativeEventSubscription | undefined;\n  private dimensionsSubscription: NativeEventSubscription | undefined;\n  private keyboardDidShowListener: EmitterSubscription | undefined;\n  private keyboardDidHideListener: EmitterSubscription | undefined;\n  private keyboardHeight: number = 0;\n\n  private isCoordinate = (anchor: any): anchor is { x: number; y: number } =>\n    !React.isValidElement(anchor) &&\n    typeof anchor?.x === 'number' &&\n    typeof anchor?.y === 'number';\n\n  private measureMenuLayout = () =>\n    new Promise<LayoutRectangle>((resolve) => {\n      if (this.menu) {\n        this.menu.measureInWindow((x, y, width, height) => {\n          resolve({ x, y, width, height });\n        });\n      }\n    });\n\n  private measureAnchorLayout = () =>\n    new Promise<LayoutRectangle>((resolve) => {\n      const { anchor } = this.props;\n      if (this.isCoordinate(anchor)) {\n        resolve({ x: anchor.x, y: anchor.y, width: 0, height: 0 });\n        return;\n      }\n\n      if (this.anchor) {\n        this.anchor.measureInWindow((x, y, width, height) => {\n          resolve({ x, y, width, height });\n        });\n      }\n    });\n\n  private updateVisibility = async () => {\n    // Menu is rendered in Portal, which updates items asynchronously\n    // We need to do the same here so that the ref is up-to-date\n    await Promise.resolve();\n\n    if (this.props.visible) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  };\n\n  private isBrowser = () => Platform.OS === 'web' && 'document' in global;\n\n  private focusFirstDOMNode = (el: View | null | undefined) => {\n    if (el && this.isBrowser()) {\n      // When in the browser, we want to focus the first focusable item on toggle\n      // For example, when menu is shown, focus the first item in the menu\n      // And when menu is dismissed, send focus back to the button to resume tabbing\n      const node: any = findNodeHandle(el);\n      const focusableNode = node.querySelector(\n        // This is a rough list of selectors that can be focused\n        'button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])'\n      );\n\n      focusableNode?.focus();\n    }\n  };\n\n  private handleDismiss = () => {\n    if (this.props.visible) {\n      this.props.onDismiss?.();\n    }\n    return true;\n  };\n\n  private handleKeypress = (e: KeyboardEvent) => {\n    if (e.key === 'Escape') {\n      this.props.onDismiss?.();\n    }\n  };\n\n  private attachListeners = () => {\n    this.backHandlerSubscription = addEventListener(\n      BackHandler,\n      'hardwareBackPress',\n      this.handleDismiss\n    );\n    this.dimensionsSubscription = addEventListener(\n      Dimensions,\n      'change',\n      this.handleDismiss\n    );\n    this.isBrowser() && document.addEventListener('keyup', this.handleKeypress);\n  };\n\n  private removeListeners = () => {\n    this.backHandlerSubscription?.remove();\n    this.dimensionsSubscription?.remove();\n    this.isBrowser() &&\n      document.removeEventListener('keyup', this.handleKeypress);\n  };\n\n  private show = async () => {\n    const windowLayout = Dimensions.get('window');\n    const [menuLayout, anchorLayout] = await Promise.all([\n      this.measureMenuLayout(),\n      this.measureAnchorLayout(),\n    ]);\n\n    // When visible is true for first render\n    // native views can be still not rendered and\n    // measureMenuLayout/measureAnchorLayout functions\n    // return wrong values e.g { x:0, y: 0, width: 0, height: 0 }\n    // so we have to wait until views are ready\n    // and rerun this function to show menu\n    if (\n      !windowLayout.width ||\n      !windowLayout.height ||\n      !menuLayout.width ||\n      !menuLayout.height ||\n      (!anchorLayout.width && !this.isCoordinate(this.props.anchor)) ||\n      (!anchorLayout.height && !this.isCoordinate(this.props.anchor))\n    ) {\n      requestAnimationFrame(this.show);\n      return;\n    }\n\n    this.setState(\n      () => ({\n        left: anchorLayout.x,\n        top: anchorLayout.y,\n        anchorLayout: {\n          height: anchorLayout.height,\n          width: anchorLayout.width,\n        },\n        menuLayout: {\n          width: menuLayout.width,\n          height: menuLayout.height,\n        },\n        windowLayout: {\n          height: windowLayout.height - this.keyboardHeight,\n          width: windowLayout.width,\n        },\n      }),\n      () => {\n        this.attachListeners();\n\n        const { animation } = this.props.theme;\n        Animated.parallel([\n          Animated.timing(this.state.scaleAnimation, {\n            toValue: { x: menuLayout.width, y: menuLayout.height },\n            duration: ANIMATION_DURATION * animation.scale,\n            easing: EASING,\n            useNativeDriver: true,\n          }),\n          Animated.timing(this.state.opacityAnimation, {\n            toValue: 1,\n            duration: ANIMATION_DURATION * animation.scale,\n            easing: EASING,\n            useNativeDriver: true,\n          }),\n        ]).start(({ finished }) => {\n          if (finished) {\n            this.focusFirstDOMNode(this.menu);\n          }\n        });\n      }\n    );\n  };\n\n  private hide = () => {\n    this.removeListeners();\n\n    const { animation } = this.props.theme;\n    Animated.timing(this.state.opacityAnimation, {\n      toValue: 0,\n      duration: ANIMATION_DURATION * animation.scale,\n      easing: EASING,\n      useNativeDriver: true,\n    }).start(({ finished }) => {\n      if (finished) {\n        this.setState({ menuLayout: { width: 0, height: 0 }, rendered: false });\n        this.state.scaleAnimation.setValue({ x: 0, y: 0 });\n        this.focusFirstDOMNode(this.anchor);\n      }\n    });\n  };\n\n  private keyboardDidShow = (e: RNKeyboardEvent) => {\n    const keyboardHeight = e.endCoordinates.height;\n    this.keyboardHeight = keyboardHeight;\n  };\n\n  private keyboardDidHide = () => {\n    this.keyboardHeight = 0;\n  };\n\n  render() {\n    const {\n      visible,\n      anchor,\n      anchorPosition,\n      contentStyle,\n      style,\n      elevation = DEFAULT_ELEVATION,\n      mode = DEFAULT_MODE,\n      children,\n      theme,\n      statusBarHeight,\n      onDismiss,\n      overlayAccessibilityLabel,\n      keyboardShouldPersistTaps,\n      testID,\n    } = this.props;\n\n    const {\n      rendered,\n      menuLayout,\n      anchorLayout,\n      opacityAnimation,\n      scaleAnimation,\n      windowLayout,\n    } = this.state;\n\n    let { left, top } = this.state;\n\n    if (!this.isCoordinate(this.anchor) && anchorPosition === 'bottom') {\n      top += anchorLayout.height;\n    }\n\n    // I don't know why but on Android measure function is wrong by 24\n    const additionalVerticalValue = Platform.select({\n      android: statusBarHeight,\n      default: 0,\n    });\n\n    const scaleTransforms = [\n      {\n        scaleX: scaleAnimation.x.interpolate({\n          inputRange: [0, menuLayout.width],\n          outputRange: [0, 1],\n        }),\n      },\n      {\n        scaleY: scaleAnimation.y.interpolate({\n          inputRange: [0, menuLayout.height],\n          outputRange: [0, 1],\n        }),\n      },\n    ];\n\n    // We need to translate menu while animating scale to imitate transform origin for scale animation\n    const positionTransforms = [];\n\n    // Check if menu fits horizontally and if not align it to right.\n    if (left <= windowLayout.width - menuLayout.width - SCREEN_INDENT) {\n      positionTransforms.push({\n        translateX: scaleAnimation.x.interpolate({\n          inputRange: [0, menuLayout.width],\n          outputRange: [-(menuLayout.width / 2), 0],\n        }),\n      });\n\n      // Check if menu position has enough space from left side\n      if (left < SCREEN_INDENT) {\n        left = SCREEN_INDENT;\n      }\n    } else {\n      positionTransforms.push({\n        translateX: scaleAnimation.x.interpolate({\n          inputRange: [0, menuLayout.width],\n          outputRange: [menuLayout.width / 2, 0],\n        }),\n      });\n\n      left += anchorLayout.width - menuLayout.width;\n\n      const right = left + menuLayout.width;\n      // Check if menu position has enough space from right side\n      if (right > windowLayout.width - SCREEN_INDENT) {\n        left = windowLayout.width - SCREEN_INDENT - menuLayout.width;\n      }\n    }\n\n    // If the menu is larger than available vertical space,\n    // calculate the height of scrollable view\n    let scrollableMenuHeight = 0;\n\n    // Check if the menu should be scrollable\n    if (\n      // Check if the menu overflows from bottom side\n      top >=\n        windowLayout.height -\n          menuLayout.height -\n          SCREEN_INDENT -\n          additionalVerticalValue &&\n      // And bottom side of the screen has more space than top side\n      top <= windowLayout.height - top\n    ) {\n      // Scrollable menu should be below the anchor (expands downwards)\n      scrollableMenuHeight =\n        windowLayout.height - top - SCREEN_INDENT - additionalVerticalValue;\n    } else if (\n      // Check if the menu overflows from bottom side\n      top >=\n        windowLayout.height -\n          menuLayout.height -\n          SCREEN_INDENT -\n          additionalVerticalValue &&\n      // And top side of the screen has more space than bottom side\n      top >= windowLayout.height - top &&\n      // And menu overflows from top side\n      top <=\n        menuLayout.height -\n          anchorLayout.height +\n          SCREEN_INDENT -\n          additionalVerticalValue\n    ) {\n      // Scrollable menu should be above the anchor (expands upwards)\n      scrollableMenuHeight =\n        top + anchorLayout.height - SCREEN_INDENT + additionalVerticalValue;\n    }\n\n    // Scrollable menu max height\n    scrollableMenuHeight =\n      scrollableMenuHeight > windowLayout.height - 2 * SCREEN_INDENT\n        ? windowLayout.height - 2 * SCREEN_INDENT\n        : scrollableMenuHeight;\n\n    // Menu is typically positioned below the element that generates it\n    // So first check if it fits below the anchor (expands downwards)\n    if (\n      // Check if menu fits vertically\n      top <=\n        windowLayout.height -\n          menuLayout.height -\n          SCREEN_INDENT -\n          additionalVerticalValue ||\n      // Or if the menu overflows from bottom side\n      (top >=\n        windowLayout.height -\n          menuLayout.height -\n          SCREEN_INDENT -\n          additionalVerticalValue &&\n        // And bottom side of the screen has more space than top side\n        top <= windowLayout.height - top)\n    ) {\n      positionTransforms.push({\n        translateY: scaleAnimation.y.interpolate({\n          inputRange: [0, menuLayout.height],\n          outputRange: [-((scrollableMenuHeight || menuLayout.height) / 2), 0],\n        }),\n      });\n\n      // Check if menu position has enough space from top side\n      if (top < SCREEN_INDENT) {\n        top = SCREEN_INDENT;\n      }\n    } else {\n      positionTransforms.push({\n        translateY: scaleAnimation.y.interpolate({\n          inputRange: [0, menuLayout.height],\n          outputRange: [(scrollableMenuHeight || menuLayout.height) / 2, 0],\n        }),\n      });\n\n      top += anchorLayout.height - (scrollableMenuHeight || menuLayout.height);\n\n      const bottom =\n        top +\n        (scrollableMenuHeight || menuLayout.height) +\n        additionalVerticalValue;\n\n      // Check if menu position has enough space from bottom side\n      if (bottom > windowLayout.height - SCREEN_INDENT) {\n        top =\n          scrollableMenuHeight === windowLayout.height - 2 * SCREEN_INDENT\n            ? -SCREEN_INDENT * 2\n            : windowLayout.height -\n              menuLayout.height -\n              SCREEN_INDENT -\n              additionalVerticalValue;\n      }\n    }\n\n    const shadowMenuContainerStyle = {\n      opacity: opacityAnimation,\n      transform: scaleTransforms,\n      borderRadius: theme.roundness,\n      ...(!theme.isV3 && { elevation: 8 }),\n      ...(scrollableMenuHeight ? { height: scrollableMenuHeight } : {}),\n    };\n\n    const positionStyle = {\n      top: this.isCoordinate(anchor) ? top : top + additionalVerticalValue,\n      ...(I18nManager.getConstants().isRTL ? { right: left } : { left }),\n    };\n\n    const pointerEvents = visible ? 'box-none' : 'none';\n\n    return (\n      <View\n        ref={(ref) => {\n          this.anchor = ref;\n        }}\n        collapsable={false}\n      >\n        {this.isCoordinate(anchor) ? null : anchor}\n        {rendered ? (\n          <Portal>\n            <Pressable\n              accessibilityLabel={overlayAccessibilityLabel}\n              accessibilityRole=\"button\"\n              onPress={onDismiss}\n              style={styles.pressableOverlay}\n            />\n            <View\n              ref={(ref) => {\n                this.menu = ref;\n              }}\n              collapsable={false}\n              accessibilityViewIsModal={visible}\n              style={[styles.wrapper, positionStyle, style]}\n              pointerEvents={pointerEvents}\n              onAccessibilityEscape={onDismiss}\n              testID={`${testID}-view`}\n            >\n              <Animated.View\n                pointerEvents={pointerEvents}\n                style={{\n                  transform: positionTransforms,\n                }}\n              >\n                <Surface\n                  mode={mode}\n                  pointerEvents={pointerEvents}\n                  style={[\n                    styles.shadowMenuContainer,\n                    shadowMenuContainerStyle,\n                    theme.isV3 && {\n                      backgroundColor:\n                        theme.colors.elevation[ELEVATION_LEVELS_MAP[elevation]],\n                    },\n                    contentStyle,\n                  ]}\n                  {...(theme.isV3 && { elevation })}\n                  testID={`${testID}-surface`}\n                  theme={theme}\n                >\n                  {(scrollableMenuHeight && (\n                    <ScrollView\n                      keyboardShouldPersistTaps={keyboardShouldPersistTaps}\n                    >\n                      {children}\n                    </ScrollView>\n                  )) || <React.Fragment>{children}</React.Fragment>}\n                </Surface>\n              </Animated.View>\n            </View>\n          </Portal>\n        ) : null}\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  wrapper: {\n    position: 'absolute',\n  },\n  shadowMenuContainer: {\n    opacity: 0,\n    paddingVertical: 8,\n  },\n  pressableOverlay: {\n    ...StyleSheet.absoluteFillObject,\n    ...(Platform.OS === 'web' && {\n      cursor: 'default',\n    }),\n    width: '100%',\n  },\n});\n\nexport default withInternalTheme(Menu);\n","import * as React from 'react';\nimport {\n  AccessibilityState,\n  ColorValue,\n  GestureResponderEvent,\n  PressableAndroidRippleConfig,\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport {\n  getContentMaxWidth,\n  getMenuItemColor,\n  MAX_WIDTH,\n  MIN_WIDTH,\n} from './utils';\nimport { useInternalTheme } from '../../core/theming';\nimport type { ThemeProp } from '../../types';\nimport Icon, { IconSource } from '../Icon';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport Text from '../Typography/Text';\n\nexport type Props = {\n  /**\n   * Title text for the `MenuItem`.\n   */\n  title: React.ReactNode;\n  /**\n   * @renamed Renamed from 'icon' to 'leadingIcon' in v5.x\n   *\n   * Leading icon to display for the `MenuItem`.\n   */\n  leadingIcon?: IconSource;\n  /**\n   * @supported Available in v5.x with theme version 3\n   *\n   * Trailing icon to display for the `MenuItem`.\n   */\n  trailingIcon?: IconSource;\n  /**\n   * Whether the 'item' is disabled. A disabled 'item' is greyed out and `onPress` is not called on touch.\n   */\n  disabled?: boolean;\n  /**\n   * @supported Available in v5.x with theme version 3\n   *\n   * Sets min height with densed layout.\n   */\n  dense?: boolean;\n  /**\n   * Type of background drawabale to display the feedback (Android).\n   * https://reactnative.dev/docs/pressable#rippleconfig\n   */\n  background?: PressableAndroidRippleConfig;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: (e: GestureResponderEvent) => void;\n  /**\n   * Specifies the largest possible scale a title font can reach.\n   */\n  titleMaxFontSizeMultiplier?: number;\n  /**\n   * @optional\n   */\n  style?: StyleProp<ViewStyle>;\n  contentStyle?: StyleProp<ViewStyle>;\n  titleStyle?: StyleProp<TextStyle>;\n  /**\n   * Color of the ripple effect.\n   */\n  rippleColor?: ColorValue;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n  /**\n   * TestID used for testing purposes\n   */\n  testID?: string;\n  /**\n   * Accessibility label for the Touchable. This is read by the screen reader when the user taps the component.\n   */\n  accessibilityLabel?: string;\n  /**\n   * Accessibility state for the Touchable. This is read by the screen reader when the user taps the component.\n   */\n  accessibilityState?: AccessibilityState;\n};\n\n/**\n * A component to show a single list item inside a Menu.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { View } from 'react-native';\n * import { Menu } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <View style={{ flex: 1 }}>\n *     <Menu.Item leadingIcon=\"redo\" onPress={() => {}} title=\"Redo\" />\n *     <Menu.Item leadingIcon=\"undo\" onPress={() => {}} title=\"Undo\" />\n *     <Menu.Item leadingIcon=\"content-cut\" onPress={() => {}} title=\"Cut\" disabled />\n *     <Menu.Item leadingIcon=\"content-copy\" onPress={() => {}} title=\"Copy\" disabled />\n *     <Menu.Item leadingIcon=\"content-paste\" onPress={() => {}} title=\"Paste\" />\n *   </View>\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst MenuItem = ({\n  leadingIcon,\n  trailingIcon,\n  dense,\n  title,\n  disabled,\n  background,\n  onPress,\n  style,\n  contentStyle,\n  titleStyle,\n  rippleColor: customRippleColor,\n  testID = 'menu-item',\n  accessibilityLabel,\n  accessibilityState,\n  theme: themeOverrides,\n  titleMaxFontSizeMultiplier = 1.5,\n}: Props) => {\n  const theme = useInternalTheme(themeOverrides);\n  const { titleColor, iconColor, rippleColor } = getMenuItemColor({\n    theme,\n    disabled,\n    customRippleColor,\n  });\n  const { isV3 } = theme;\n\n  const containerPadding = isV3 ? 12 : 8;\n\n  const iconWidth = isV3 ? 24 : 40;\n\n  const minWidth = MIN_WIDTH - (isV3 ? 12 : 16);\n\n  const maxWidth = getContentMaxWidth({\n    isV3,\n    iconWidth,\n    leadingIcon,\n    trailingIcon,\n  });\n\n  const titleTextStyle = {\n    color: titleColor,\n    ...(isV3 ? theme.fonts.bodyLarge : {}),\n  };\n\n  const newAccessibilityState = { ...accessibilityState, disabled };\n\n  return (\n    <TouchableRipple\n      style={[\n        styles.container,\n        { paddingHorizontal: containerPadding },\n        dense && styles.md3DenseContainer,\n        style,\n      ]}\n      onPress={onPress}\n      disabled={disabled}\n      testID={testID}\n      background={background}\n      accessibilityLabel={accessibilityLabel}\n      accessibilityRole=\"menuitem\"\n      accessibilityState={newAccessibilityState}\n      rippleColor={rippleColor}\n    >\n      <View style={styles.row}>\n        {leadingIcon ? (\n          <View\n            style={[!isV3 && styles.item, { width: iconWidth }]}\n            pointerEvents=\"box-none\"\n          >\n            <Icon source={leadingIcon} size={24} color={iconColor} />\n          </View>\n        ) : null}\n        <View\n          style={[\n            !isV3 && styles.item,\n            styles.content,\n            { minWidth, maxWidth },\n            isV3 &&\n              (leadingIcon\n                ? styles.md3LeadingIcon\n                : styles.md3WithoutLeadingIcon),\n            contentStyle,\n          ]}\n          pointerEvents=\"none\"\n        >\n          <Text\n            variant=\"bodyLarge\"\n            selectable={false}\n            numberOfLines={1}\n            testID={`${testID}-title`}\n            style={[!isV3 && styles.title, titleTextStyle, titleStyle]}\n            maxFontSizeMultiplier={titleMaxFontSizeMultiplier}\n          >\n            {title}\n          </Text>\n        </View>\n        {isV3 && trailingIcon ? (\n          <View\n            style={[!isV3 && styles.item, { width: iconWidth }]}\n            pointerEvents=\"box-none\"\n          >\n            <Icon source={trailingIcon} size={24} color={iconColor} />\n          </View>\n        ) : null}\n      </View>\n    </TouchableRipple>\n  );\n};\n\nMenuItem.displayName = 'Menu.Item';\n\nconst styles = StyleSheet.create({\n  container: {\n    minWidth: MIN_WIDTH,\n    maxWidth: MAX_WIDTH,\n    height: 48,\n    justifyContent: 'center',\n  },\n  md3DenseContainer: {\n    height: 32,\n  },\n  row: {\n    flexDirection: 'row',\n  },\n  title: {\n    fontSize: 16,\n  },\n  item: {\n    marginHorizontal: 8,\n  },\n  content: {\n    justifyContent: 'center',\n  },\n  md3LeadingIcon: {\n    marginLeft: 12,\n  },\n  md3WithoutLeadingIcon: {\n    marginLeft: 4,\n  },\n});\n\nexport default MenuItem;\n","import type { ColorValue } from 'react-native';\n\nimport color from 'color';\n\nimport { black, white } from '../../styles/themes/v2/colors';\nimport type { InternalTheme } from '../../types';\nimport type { IconSource } from '../Icon';\n\nexport const MIN_WIDTH = 112;\nexport const MAX_WIDTH = 280;\n\ntype ContentProps = {\n  isV3: boolean;\n  iconWidth: number;\n  leadingIcon?: IconSource;\n  trailingIcon?: IconSource;\n};\n\ntype ColorProps = {\n  theme: InternalTheme;\n  disabled?: boolean;\n  customRippleColor?: ColorValue;\n};\n\nconst getDisabledColor = (theme: InternalTheme) => {\n  if (theme.isV3) {\n    return theme.colors.onSurfaceDisabled;\n  }\n\n  return color(theme.dark ? white : black)\n    .alpha(0.32)\n    .rgb()\n    .string();\n};\n\nconst getTitleColor = ({ theme, disabled }: ColorProps) => {\n  if (disabled) {\n    return getDisabledColor(theme);\n  }\n\n  if (theme.isV3) {\n    return theme.colors.onSurface;\n  }\n\n  return color(theme.colors.text).alpha(0.87).rgb().string();\n};\n\nconst getIconColor = ({ theme, disabled }: ColorProps) => {\n  if (disabled) {\n    return getDisabledColor(theme);\n  }\n\n  if (theme.isV3) {\n    return theme.colors.onSurfaceVariant;\n  }\n\n  return color(theme.colors.text).alpha(0.54).rgb().string();\n};\n\nconst getRippleColor = ({\n  theme,\n  customRippleColor,\n}: Omit<ColorProps, 'disabled'>) => {\n  if (customRippleColor) {\n    return customRippleColor;\n  }\n\n  if (theme.isV3) {\n    return color(theme.colors.onSurfaceVariant).alpha(0.12).rgb().string();\n  }\n\n  return undefined;\n};\n\nexport const getMenuItemColor = ({\n  theme,\n  disabled,\n  customRippleColor,\n}: ColorProps) => {\n  return {\n    titleColor: getTitleColor({ theme, disabled }),\n    iconColor: getIconColor({ theme, disabled }),\n    rippleColor: getRippleColor({ theme, customRippleColor }),\n  };\n};\n\nexport const getContentMaxWidth = ({\n  isV3,\n  iconWidth,\n  leadingIcon,\n  trailingIcon,\n}: ContentProps) => {\n  if (isV3) {\n    if (leadingIcon && trailingIcon) {\n      return MAX_WIDTH - (2 * iconWidth + 24);\n    }\n\n    if (leadingIcon || trailingIcon) {\n      return MAX_WIDTH - (iconWidth + 24);\n    }\n\n    return MAX_WIDTH - 12;\n  }\n\n  if (leadingIcon) {\n    return MAX_WIDTH - (iconWidth + 48);\n  }\n\n  return MAX_WIDTH - 16;\n};\n","import * as React from 'react';\nimport {\n  Animated,\n  Easing,\n  StyleProp,\n  StyleSheet,\n  Pressable,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\nimport useLatestCallback from 'use-latest-callback';\n\nimport Surface from './Surface';\nimport { useInternalTheme } from '../core/theming';\nimport type { ThemeProp } from '../types';\nimport { addEventListener } from '../utils/addEventListener';\nimport { BackHandler } from '../utils/BackHandler/BackHandler';\nimport useAnimatedValue from '../utils/useAnimatedValue';\n\nexport type Props = {\n  /**\n   * Determines whether clicking outside the modal dismiss it.\n   */\n  dismissable?: boolean;\n  /**\n   * Determines whether clicking Android hardware back button dismiss dialog.\n   */\n  dismissableBackButton?: boolean;\n  /**\n   * Callback that is called when the user dismisses the modal.\n   */\n  onDismiss?: () => void;\n  /**\n   * Accessibility label for the overlay. This is read by the screen reader when the user taps outside the modal.\n   */\n  overlayAccessibilityLabel?: string;\n  /**\n   * Determines Whether the modal is visible.\n   */\n  visible: boolean;\n  /**\n   * Content of the `Modal`.\n   */\n  children: React.ReactNode;\n  /**\n   * Style for the content of the modal\n   */\n  contentContainerStyle?: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\n  /**\n   * Style for the wrapper of the modal.\n   * Use this prop to change the default wrapper style or to override safe area insets with marginTop and marginBottom.\n   */\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n  /**\n   * testID to be used on tests.\n   */\n  testID?: string;\n};\n\nconst DEFAULT_DURATION = 220;\nconst AnimatedPressable = Animated.createAnimatedComponent(Pressable);\n\n/**\n * The Modal component is a simple way to present content above an enclosing view.\n * To render the `Modal` above other components, you'll need to wrap it with the [`Portal`](./Portal) component.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Modal, Portal, Text, Button, PaperProvider } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [visible, setVisible] = React.useState(false);\n *\n *   const showModal = () => setVisible(true);\n *   const hideModal = () => setVisible(false);\n *   const containerStyle = {backgroundColor: 'white', padding: 20};\n *\n *   return (\n *     <PaperProvider>\n *       <Portal>\n *         <Modal visible={visible} onDismiss={hideModal} contentContainerStyle={containerStyle}>\n *           <Text>Example Modal.  Click outside this area to dismiss.</Text>\n *         </Modal>\n *       </Portal>\n *       <Button style={{marginTop: 30}} onPress={showModal}>\n *         Show\n *       </Button>\n *     </PaperProvider>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nfunction Modal({\n  dismissable = true,\n  dismissableBackButton = dismissable,\n  visible = false,\n  overlayAccessibilityLabel = 'Close modal',\n  onDismiss = () => {},\n  children,\n  contentContainerStyle,\n  style,\n  theme: themeOverrides,\n  testID = 'modal',\n}: Props) {\n  const theme = useInternalTheme(themeOverrides);\n  const visibleRef = React.useRef(visible);\n\n  React.useEffect(() => {\n    visibleRef.current = visible;\n  });\n\n  const onDismissCallback = useLatestCallback(onDismiss);\n\n  const { scale } = theme.animation;\n\n  const { top, bottom } = useSafeAreaInsets();\n\n  const opacity = useAnimatedValue(visible ? 1 : 0);\n\n  const [rendered, setRendered] = React.useState(visible);\n\n  if (visible && !rendered) {\n    setRendered(true);\n  }\n\n  const showModal = React.useCallback(() => {\n    Animated.timing(opacity, {\n      toValue: 1,\n      duration: scale * DEFAULT_DURATION,\n      easing: Easing.out(Easing.cubic),\n      useNativeDriver: true,\n    }).start();\n  }, [opacity, scale]);\n\n  const hideModal = React.useCallback(() => {\n    Animated.timing(opacity, {\n      toValue: 0,\n      duration: scale * DEFAULT_DURATION,\n      easing: Easing.out(Easing.cubic),\n      useNativeDriver: true,\n    }).start(({ finished }) => {\n      if (!finished) {\n        return;\n      }\n\n      if (visible) {\n        onDismissCallback();\n      }\n\n      if (visibleRef.current) {\n        showModal();\n      } else {\n        setRendered(false);\n      }\n    });\n  }, [onDismissCallback, opacity, scale, showModal, visible]);\n\n  React.useEffect(() => {\n    if (!visible) {\n      return undefined;\n    }\n\n    const onHardwareBackPress = () => {\n      if (dismissable || dismissableBackButton) {\n        hideModal();\n      }\n\n      return true;\n    };\n\n    const subscription = addEventListener(\n      BackHandler,\n      'hardwareBackPress',\n      onHardwareBackPress\n    );\n    return () => subscription.remove();\n  }, [dismissable, dismissableBackButton, hideModal, visible]);\n\n  const prevVisible = React.useRef<boolean | null>(null);\n\n  React.useEffect(() => {\n    if (prevVisible.current !== visible) {\n      if (visible) {\n        showModal();\n      } else {\n        hideModal();\n      }\n    }\n    prevVisible.current = visible;\n  });\n\n  if (!rendered) return null;\n\n  return (\n    <Animated.View\n      pointerEvents={visible ? 'auto' : 'none'}\n      accessibilityViewIsModal\n      accessibilityLiveRegion=\"polite\"\n      style={StyleSheet.absoluteFill}\n      onAccessibilityEscape={hideModal}\n      testID={testID}\n    >\n      <AnimatedPressable\n        accessibilityLabel={overlayAccessibilityLabel}\n        accessibilityRole=\"button\"\n        disabled={!dismissable}\n        onPress={dismissable ? hideModal : undefined}\n        importantForAccessibility=\"no\"\n        style={[\n          styles.backdrop,\n          {\n            backgroundColor: theme.colors?.backdrop,\n            opacity,\n          },\n        ]}\n        testID={`${testID}-backdrop`}\n      />\n      <View\n        style={[\n          styles.wrapper,\n          { marginTop: top, marginBottom: bottom },\n          style,\n        ]}\n        pointerEvents=\"box-none\"\n        testID={`${testID}-wrapper`}\n      >\n        <Surface\n          testID={`${testID}-surface`}\n          theme={theme}\n          style={[{ opacity }, styles.content, contentContainerStyle]}\n        >\n          {children}\n        </Surface>\n      </View>\n    </Animated.View>\n  );\n}\n\nexport default Modal;\n\nconst styles = StyleSheet.create({\n  backdrop: {\n    flex: 1,\n  },\n  wrapper: {\n    ...StyleSheet.absoluteFillObject,\n    justifyContent: 'center',\n  },\n  // eslint-disable-next-line react-native/no-color-literals\n  content: {\n    backgroundColor: 'transparent',\n    justifyContent: 'center',\n  },\n});\n"],"names":["_reactNative","e","r","__esModule","default","t","_getRequireWildcardCache","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","_interopRequireWildcard","require","_CheckboxAndroid","_interopRequireDefault","_CheckboxIOS","_theming","_jsxRuntime","_excluded","WeakMap","Checkbox","_ref","themeOverrides","theme","props","_objectWithoutProperties2","useInternalTheme","Platform","OS","jsx","assign","exports","React","_utils","_MaterialCommunityIcon","_TouchableRipple","CheckboxAndroid","status","disabled","onPress","testID","rest","scaleAnim","useRef","Animated","Value","current","isFirstRendering","scale","animation","useEffect","checked","sequence","timing","toValue","duration","useNativeDriver","start","indeterminate","_getAndroidSelectionC","getAndroidSelectionControlColor","customColor","color","customUncheckedColor","uncheckedColor","rippleColor","selectionControlColor","borderWidth","interpolate","inputRange","outputRange","icon","borderless","accessibilityRole","accessibilityState","accessibilityLiveRegion","style","styles","container","children","jsxs","View","transform","allowFontScaling","name","size","direction","StyleSheet","absoluteFill","fillContainer","fill","borderColor","displayName","create","borderRadius","width","height","padding","alignItems","justifyContent","CheckboxIOS","_getSelectionControlI","getSelectionControlIOSColor","checkedColor","opacity","_Checkbox","_Text","CheckboxItem","checkbox","label","onLongPress","labelStyle","mode","_ref$position","position","_ref$accessibilityLab","accessibilityLabel","_ref$labelVariant","labelVariant","_ref$labelMaxFontSize","labelMaxFontSizeMultiplier","background","checkboxProps","isLeading","textColor","isV3","colors","onSurface","text","disabledTextColor","onSurfaceDisabled","computedStyle","textAlign","pointerEvents","importantForAccessibility","variant","maxFontSizeMultiplier","font","flexDirection","paddingVertical","paddingHorizontal","flexShrink","flexGrow","fontSize","_CheckboxItem","CheckboxComponent","Item","Android","IOS","_color","getAndroidRippleColor","_ref3","alpha","rgb","string","fade","getAndroidControlColor","_ref4","getIOSRippleColor","_ref5","primary","accent","getAndroidCheckedColor","_ref2","onSurfaceVariant","dark","getAndroidUncheckedColor","_ref7","_ref8","_ref6","getIOSCheckedColor","_useLatestCallback","_helpers","_colors","_hasTouchHandler","_Icon","_Surface","hairlineWidth","borderStyle","select","web","md3OutlineContainer","md3FlatContainer","content","paddingLeft","md3Content","alignSelf","md3Icon","paddingRight","closeIcon","marginRight","md3CloseIcon","labelText","minHeight","lineHeight","textAlignVertical","marginVertical","md3LabelText","avatar","avatarWrapper","md3AvatarWrapper","marginLeft","md3SelectedIcon","avatarSelected","top","left","backgroundColor","closeButtonStyle","right","touchable","_ref$mode","_ref$selected","selected","_ref$disabled","_ref$accessibilityRol","_ref$closeIconAccessi","closeIconAccessibilityLabel","onPressOut","onPressIn","delayLongPress","onClose","textStyle","_ref$testID","selectedColor","customRippleColor","_ref$showSelectedOver","showSelectedOverlay","_ref$showSelectedChec","showSelectedCheck","ellipsizeMode","compact","_ref$elevated","elevated","roundness","elevation","hasPassedTouchHandler","hasTouchHandler","isOutlined","handlePressIn","useLatestCallback","constants","reactNativeVersion","minor","handlePressOut","defaultBorderRadius","iconSize","flatten","customBackgroundColor","_ref2$borderRadius","_getChipColors","getChipColors","iconColor","selectedBackgroundColor","elevationStyle","multiplier","labelSpacings","contentSpacings","labelTextStyle","fonts","labelLarge","regular","undefined","isValidElement","cloneElement","source","white","selectable","numberOfLines","Pressable","getBorderColor","isSelectedColor","outline","black","getTextColor","onSecondaryContainer","getBackgroundColor","_theme$colors","surface","secondaryContainer","getDefaultBackgroundColor","getIconColor","getRippleColor","baseChipColorProps","mix","lighten","darken","getSelectedBackgroundColor","_React$useState","useState","_React$useState2","_slicedToArray2","currentIcon","setCurrentIcon","_React$useState3","_React$useState4","previousIcon","setPreviousIcon","isValidIcon","isEqualIcon","setValue","opacityPrev","opacityNext","rotatePrev","rotateNext","rotate","bottom","_DataTableCell","_DataTableHeader2","_DataTablePagination2","_DataTableRow2","_DataTableTitle2","DataTable","Header","DataTableHeader","Title","DataTableTitle","Row","DataTableRow","Cell","DataTableCell","Pagination","DataTablePagination","numeric","CellContent","flex","borderBottomColor","surfaceVariant","header","borderBottomWidth","_Button","_IconButton","_Menu","PaginationControls","page","numberOfPages","onPageChange","showFastPaginationControls","paginationControlRippleColor","Fragment","I18nManager","getConstants","isRTL","PaginationDropdown","numberOfItemsPerPageList","numberOfItemsPerPage","onItemsPerPageChange","selectPageDropdownRippleColor","dropdownItemRippleColor","showSelect","toggleSelect","visible","onDismiss","anchor","button","contentStyle","map","option","titleStyle","title","_ref7$showFastPaginat","selectPageDropdownLabel","selectPageDropdownAccessibilityLabel","labelColor","optionsContainer","iconsContainer","flexWrap","sortDirection","_ref$numberOfLines","spinAnim","alphaTextColor","spin","cell","maxHeight","leftText","rightText","centerText","sorted","alignContent","fontWeight","_reactNativeSafeAreaContext","_DialogActions","_DialogContent","_DialogIcon","_DialogScrollArea","_DialogTitle","_overlay","_Modal","Dialog","_ref$dismissable","dismissable","_ref$dismissableBackB","dismissableBackButton","_ref$visible","_useSafeAreaInsets","useSafeAreaInsets","backgroundColorV2","overlay","level3","contentContainerStyle","marginHorizontal","Math","max","Children","toArray","filter","child","marginTop","type","DialogContent","paddingTop","Content","Actions","DialogActions","DialogTitle","ScrollArea","DialogScrollArea","Icon","DialogIcon","actionsLength","length","v3Container","uppercase","paddingBottom","_ref$size","secondary","wrapper","borderStyles","borderTopWidth","marginBottom","_Title","TextComponent","Text","headerTextStyle","headlineSmall","v3Text","leftInset","v3LeftInset","horizontalInset","bold","_ref$horizontalInset","_ref$bold","isDarkTheme","dividerColor","outlineVariant","_DrawerItem","_DrawerCollapsedItem","_DrawerSection","_Badge","DrawerCollapsedItem","focusedIcon","unfocusedIcon","active","_ref$badge","badge","numOfLines","setNumOfLines","animScale","iconPadding","androidLetterSpacingStyle","letterSpacing","labelMedium","accessibilityTraits","accessibilityComponentType","roundedOutline","scaleX","badgeContainer","onTextLayout","nativeEvent","lines","itemSize","zIndex","DrawerItem","contentColor","labelMargin","medium","v3Wrapper","_tokens","_Divider","DrawerSection","_ref$showDivider","showDivider","titleMaxFontSizeMultiplier","titleColor","titleMargin","titleSmall","titleContainer","v3TitleContainer","divider","v3Divider","MD3Colors","neutralVariant50","_AnimatedText","_excluded2","SIZE","standard","innerWrapper","overflow","shadowWrapper","shadow","v3Shadow","iconWrapper","uppercaseLabel","textTransform","textPlaceholderContainer","uppercaseProp","_ref$animateFrom","animateFrom","_ref$extended","extended","_ref$iconMode","iconMode","_ref$variant","isIOS","isAnimatedFromRight","isIconStatic","visibility","animFAB","textWidth","setTextWidth","textHeight","setTextHeight","restStyle","_getFABColors","getFABColors","foregroundColor","extendedWidth","distance","easing","Easing","linear","currentWidth","ceil","currentHeight","propForDirection","reverse","combinedStyles","getCombinedStyles","md2Elevation","md3Elevation","shadowStyle","baseStyle","newAccessibilityState","scaleY","_defineProperty2","minWidth","translateX","ScrollView","_forwardRef","_ActivityIndicator","_CrossFadeIcon","FAB","forwardRef","ref","_ref$animated","animated","loading","customSize","IconComponent","CrossFadeIcon","fabStyle","getFabStyle","isLargeSize","isFlatMode","loadingIndicatorSize","extendedStyle","getExtendedFabStyle","_FAB","_Card","AnimatedPressable","createAnimatedComponent","FABGroup","actions","open","toggleStackOnLongPress","onStateChange","colorProp","_ref$delayLongPress","_ref$enableLongPressW","enableLongPressWhenStackOpened","customBackdropColor","backdropColor","backdrop","animations","prevActions","setPrevActions","parallel","stagger","concat","_toConsumableArray2","close","toggle","_getFABGroupColors","getFABGroupColors","stackedFABBackgroundColor","backdropOpacity","opacities","scales","translations","labelTranslations","containerPaddings","_","safeArea","it","_it$labelTextColor","labelTextColor","titleMedium","item","accessible","accessibilityHint","accessibilityElementsHidden","containerStyle","translateY","v3ContainerStyle","expanded","fab","absoluteFillObject","_FABGroup","FABComponent","Group","_getContrastingColor","getLabelColor","defaultPositionStyles","animatedFromRightRTL","animatedFromLeft","animatedFromLeftRTL","abs","baseFABColorProps","isVariant","variantToCompare","surfaceDisabled","primaryContainer","tertiaryContainer","onPrimaryContainer","onTertiaryContainer","getContrastingColor","getForegroundColor","getBackdropColor","_theme$colors2","getStackedFABBackgroundColor","standardSize","smallSize","v3SmallSize","v3MediumSize","v3LargeSize","_ref9","getCustomFabSize","v3Extended","_ref10","getExtendedFabDimensions","_ref$type","onLayout","_ref$padding","shown","_rest$maxFontSizeMult","layout","error","_settings","isImageSource","prototype","uri","startsWith","test","getIconId","b","s","Image","tintColor","resizeMode","accessibilityProps","accessibilityIgnoresInvertColors","Consumer","IconButton","customIconColor","customContainerColor","containerColor","_ref$loading","_getIconButtonColor","getIconButtonColor","buttonSize","_ref2$borderWidth","centered","hitSlop","TouchableRipple","supported","margin","isMode","inverseSurface","baseIconColorProps","modeToCompare","onPrimary","inverseOnSurface","_ListAccordion","_ListAccordionGroup","_ListIcon","_ListItem","_ListSection","_ListSubheader","_ListImage","ListAccordion","description","descriptionStyle","_ref$titleNumberOfLin","titleNumberOfLines","_ref$descriptionNumbe","descriptionNumberOfLines","id","expandedProp","_ref$pointerEvents","descriptionMaxFontSizeMultiplier","setExpanded","alignToTop","setAlignToTop","expandedInternal","groupContext","useContext","ListAccordionGroupContext","Error","isExpanded","expandedId","_getAccordionColors","getAccordionColors","descriptionColor","titleTextColor","handlePress","onAccordionPress","containerV3","rowV3","row","getLeftStyles","itemV3","event","multiline","childV3","createContext","ListAccordionGroup","expandedIdProp","setExpandedId","Provider","value","newExpandedId","currentExpandedId","ListIcon","ListImage","videoV3","video","image","Component","titleEllipsizeMode","descriptionEllipsizeMode","onDescriptionTextLayout","renderDescription","getRightStyles","ListSection","viewProps","ListSubheader","overrideTheme","bodyMedium","stylesV3","iconMarginLeft","marginVerticalNone","iconMarginRight","MaterialCommunityIcons","isErrorLogged","message","console","warn","role","focusable","_ref2$color","_MenuItem","_constants","_types","_addEventListener","_BackHandler","_Portal","_callSuper","o","_getPrototypeOf2","_possibleConstructorReturn2","_isNativeReflectConstruct","Reflect","construct","constructor","apply","Boolean","valueOf","EASING","bezier","WINDOW_LAYOUT","Dimensions","ELEVATION_LEVELS_MAP","values","ElevationLevels","Menu","_React$Component","_this","_classCallCheck2","_len","arguments","args","Array","_key","state","rendered","menuLayout","anchorLayout","opacityAnimation","scaleAnimation","ValueXY","x","y","windowLayout","menu","keyboardHeight","isCoordinate","measureMenuLayout","Promise","resolve","measureInWindow","measureAnchorLayout","updateVisibility","_asyncToGenerator2","show","hide","isBrowser","global","focusFirstDOMNode","el","focusableNode","findNodeHandle","querySelector","focus","handleDismiss","handleKeypress","key","attachListeners","backHandlerSubscription","addEventListener","BackHandler","dimensionsSubscription","document","removeListeners","_this$backHandlerSubs","_this$dimensionsSubsc","remove","removeEventListener","_yield$Promise$all","all","_yield$Promise$all2","setState","finished","requestAnimationFrame","keyboardDidShow","endCoordinates","keyboardDidHide","_inherits2","_createClass2","this","keyboardDidShowListener","Keyboard","addListener","keyboardDidHideListener","prevProps","_this$keyboardDidShow","_this$keyboardDidHide","_this2","_this$props","anchorPosition","_this$props$elevation","_this$props$mode","statusBarHeight","overlayAccessibilityLabel","keyboardShouldPersistTaps","_this$state","_this$state2","additionalVerticalValue","android","scaleTransforms","positionTransforms","push","scrollableMenuHeight","shadowMenuContainerStyle","positionStyle","collapsable","pressableOverlay","accessibilityViewIsModal","onAccessibilityEscape","shadowMenuContainer","nextProps","prevState","MenuItem","defaultProps","APPROX_STATUSBAR_HEIGHT","cursor","withInternalTheme","leadingIcon","trailingIcon","dense","_ref$titleMaxFontSize","_getMenuItemColor","getMenuItemColor","containerPadding","iconWidth","MIN_WIDTH","maxWidth","getContentMaxWidth","titleTextStyle","bodyLarge","md3DenseContainer","md3LeadingIcon","md3WithoutLeadingIcon","MAX_WIDTH","getDisabledColor","getTitleColor","_useAnimatedValue","_ref$overlayAccessibi","_ref$onDismiss","visibleRef","onDismissCallback","useAnimatedValue","setRendered","showModal","useCallback","out","cubic","hideModal","subscription","prevVisible"],"sourceRoot":""}