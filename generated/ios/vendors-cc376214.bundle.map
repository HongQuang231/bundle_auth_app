{"version":3,"file":"vendors-cc376214.bundle","mappings":"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","sources":["webpack:///./node_modules/react-native/Libraries/EventEmitter/NativeEventEmitter.js","webpack:///./node_modules/react-native/Libraries/EventEmitter/RCTDeviceEventEmitter.js","webpack:///./node_modules/react-native/Libraries/EventEmitter/RCTEventEmitter.js","webpack:///./node_modules/react-native/Libraries/EventEmitter/RCTNativeAppEventEmitter.js","webpack:///./node_modules/react-native/Libraries/Events/CustomEvent.js","webpack:///./node_modules/react-native/Libraries/Events/EventPolyfill.js","webpack:///./node_modules/react-native/Libraries/HeapCapture/HeapCapture.js","webpack:///./node_modules/react-native/Libraries/HeapCapture/NativeJSCHeapCapture.js","webpack:///./node_modules/react-native/Libraries/Image/AssetRegistry.js","webpack:///./node_modules/react-native/Libraries/Image/AssetSourceResolver.js","webpack:///./node_modules/react-native/Libraries/Image/AssetUtils.js","webpack:///./node_modules/react-native/Libraries/Image/Image.ios.js","webpack:///./node_modules/react-native/Libraries/Image/ImageAnalyticsTagContext.js","webpack:///./node_modules/react-native/Libraries/Image/ImageBackground.js","webpack:///./node_modules/react-native/Libraries/Image/ImageInjection.js","webpack:///./node_modules/react-native/Libraries/Image/ImageSourceUtils.js","webpack:///./node_modules/react-native/Libraries/Image/ImageUtils.js","webpack:///./node_modules/react-native/Libraries/Image/ImageViewNativeComponent.js","webpack:///./node_modules/react-native/Libraries/Image/NativeImageLoaderIOS.js","webpack:///./node_modules/react-native/Libraries/Image/resolveAssetSource.js","webpack:///./node_modules/react-native/Libraries/Interaction/FrameRateLogger.js","webpack:///./node_modules/react-native/Libraries/Interaction/InteractionManager.js","webpack:///./node_modules/react-native/Libraries/Interaction/NativeFrameRateLogger.js","webpack:///./node_modules/react-native/Libraries/Interaction/PanResponder.js","webpack:///./node_modules/react-native/Libraries/Interaction/TaskQueue.js","webpack:///./node_modules/react-native/Libraries/Interaction/TouchHistoryMath.js","webpack:///./node_modules/react-native/Libraries/LayoutAnimation/LayoutAnimation.js","webpack:///./node_modules/react-native/Libraries/Linking/Linking.js","webpack:///./node_modules/react-native/Libraries/Linking/NativeIntentAndroid.js","webpack:///./node_modules/react-native/Libraries/Linking/NativeLinkingManager.js","webpack:///./node_modules/react-native/Libraries/Lists/FlatList.js","webpack:///./node_modules/react-native/Libraries/Lists/SectionList.js","webpack:///./node_modules/react-native/Libraries/Lists/VirtualizedList.js","webpack:///./node_modules/react-native/Libraries/Lists/VirtualizedSectionList.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nimport type {\n  EventSubscription,\n  IEventEmitter,\n} from '../vendor/emitter/EventEmitter';\n\nimport Platform from '../Utilities/Platform';\nimport RCTDeviceEventEmitter from './RCTDeviceEventEmitter';\nimport invariant from 'invariant';\n\ninterface NativeModule {\n  addListener(eventType: string): void;\n  removeListeners(count: number): void;\n}\n\nexport type {EventSubscription};\n\n/**\n * `NativeEventEmitter` is intended for use by Native Modules to emit events to\n * JavaScript listeners. If a `NativeModule` is supplied to the constructor, it\n * will be notified (via `addListener` and `removeListeners`) when the listener\n * count changes to manage \"native memory\".\n *\n * Currently, all native events are fired via a global `RCTDeviceEventEmitter`.\n * This means event names must be globally unique, and it means that call sites\n * can theoretically listen to `RCTDeviceEventEmitter` (although discouraged).\n */\nexport default class NativeEventEmitter<TEventToArgsMap: {...}>\n  implements IEventEmitter<TEventToArgsMap>\n{\n  _nativeModule: ?NativeModule;\n\n  constructor(nativeModule: ?NativeModule) {\n    if (Platform.OS === 'ios') {\n      invariant(\n        nativeModule != null,\n        '`new NativeEventEmitter()` requires a non-null argument.',\n      );\n    }\n\n    const hasAddListener =\n      // $FlowFixMe[method-unbinding] added when improving typing for this parameters\n      !!nativeModule && typeof nativeModule.addListener === 'function';\n    const hasRemoveListeners =\n      // $FlowFixMe[method-unbinding] added when improving typing for this parameters\n      !!nativeModule && typeof nativeModule.removeListeners === 'function';\n\n    if (nativeModule && hasAddListener && hasRemoveListeners) {\n      this._nativeModule = nativeModule;\n    } else if (nativeModule != null) {\n      if (!hasAddListener) {\n        console.warn(\n          '`new NativeEventEmitter()` was called with a non-null argument without the required `addListener` method.',\n        );\n      }\n      if (!hasRemoveListeners) {\n        console.warn(\n          '`new NativeEventEmitter()` was called with a non-null argument without the required `removeListeners` method.',\n        );\n      }\n    }\n  }\n\n  addListener<TEvent: $Keys<TEventToArgsMap>>(\n    eventType: TEvent,\n    listener: (...args: $ElementType<TEventToArgsMap, TEvent>) => mixed,\n    context?: mixed,\n  ): EventSubscription {\n    this._nativeModule?.addListener(eventType);\n    let subscription: ?EventSubscription = RCTDeviceEventEmitter.addListener(\n      eventType,\n      listener,\n      context,\n    );\n\n    return {\n      remove: () => {\n        if (subscription != null) {\n          this._nativeModule?.removeListeners(1);\n          // $FlowFixMe[incompatible-use]\n          subscription.remove();\n          subscription = null;\n        }\n      },\n    };\n  }\n\n  emit<TEvent: $Keys<TEventToArgsMap>>(\n    eventType: TEvent,\n    ...args: $ElementType<TEventToArgsMap, TEvent>\n  ): void {\n    // Generally, `RCTDeviceEventEmitter` is directly invoked. But this is\n    // included for completeness.\n    RCTDeviceEventEmitter.emit(eventType, ...args);\n  }\n\n  removeAllListeners<TEvent: $Keys<TEventToArgsMap>>(\n    eventType?: ?TEvent,\n  ): void {\n    invariant(\n      eventType != null,\n      '`NativeEventEmitter.removeAllListener()` requires a non-null argument.',\n    );\n    this._nativeModule?.removeListeners(this.listenerCount(eventType));\n    RCTDeviceEventEmitter.removeAllListeners(eventType);\n  }\n\n  listenerCount<TEvent: $Keys<TEventToArgsMap>>(eventType: TEvent): number {\n    return RCTDeviceEventEmitter.listenerCount(eventType);\n  }\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nimport type {IEventEmitter} from '../vendor/emitter/EventEmitter';\n\nimport {beginEvent, endEvent} from '../Performance/Systrace';\nimport EventEmitter from '../vendor/emitter/EventEmitter';\n\n// FIXME: use typed events\ntype RCTDeviceEventDefinitions = $FlowFixMe;\n\n/**\n * Global EventEmitter used by the native platform to emit events to JavaScript.\n * Events are identified by globally unique event names.\n *\n * NativeModules that emit events should instead subclass `NativeEventEmitter`.\n */\nclass RCTDeviceEventEmitter extends EventEmitter<RCTDeviceEventDefinitions> {\n  // Add systrace to RCTDeviceEventEmitter.emit method for debugging\n  emit<TEvent: $Keys<RCTDeviceEventDefinitions>>(\n    eventType: TEvent,\n    ...args: RCTDeviceEventDefinitions[TEvent]\n  ): void {\n    beginEvent(() => `RCTDeviceEventEmitter.emit#${eventType}`);\n    super.emit(eventType, ...args);\n    endEvent();\n  }\n}\nconst instance = new RCTDeviceEventEmitter();\n\nObject.defineProperty(global, '__rctDeviceEventEmitter', {\n  configurable: true,\n  value: instance,\n});\n\nexport default (instance: IEventEmitter<RCTDeviceEventDefinitions>);\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\nconst BatchedBridge = require('../BatchedBridge/BatchedBridge');\n\nconst RCTEventEmitter = {\n  register(eventEmitter: any) {\n    if (global.RN$Bridgeless) {\n      global.RN$registerCallableModule('RCTEventEmitter', () => eventEmitter);\n    } else {\n      BatchedBridge.registerCallableModule('RCTEventEmitter', eventEmitter);\n    }\n  },\n};\n\nmodule.exports = RCTEventEmitter;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\nimport RCTDeviceEventEmitter from './RCTDeviceEventEmitter';\n\n/**\n * Deprecated - subclass NativeEventEmitter to create granular event modules instead of\n * adding all event listeners directly to RCTNativeAppEventEmitter.\n */\nconst RCTNativeAppEventEmitter = RCTDeviceEventEmitter;\nmodule.exports = RCTNativeAppEventEmitter;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\n// Make sure global Event is defined\nimport EventPolyfill from './EventPolyfill';\n\ntype CustomEvent$Options = $ReadOnly<{|\n  bubbles?: boolean,\n  cancelable?: boolean,\n  composed?: boolean,\n  detail?: {...},\n|}>;\n\nclass CustomEvent extends EventPolyfill {\n  detail: ?{...};\n\n  constructor(typeArg: string, options: CustomEvent$Options) {\n    const {bubbles, cancelable, composed} = options;\n    super(typeArg, {bubbles, cancelable, composed});\n\n    this.detail = options.detail; // this would correspond to `NativeEvent` in SyntheticEvent\n  }\n}\n\nexport default CustomEvent;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\n// https://dom.spec.whatwg.org/#dictdef-eventinit\ntype Event$Init = {\n  bubbles?: boolean,\n  cancelable?: boolean,\n  composed?: boolean,\n  /** Non-standard. See `composed` instead. */\n  scoped?: boolean,\n  ...\n};\n\n/**\n * This is a copy of the Event interface defined in Flow:\n * https://github.com/facebook/flow/blob/741104e69c43057ebd32804dd6bcc1b5e97548ea/lib/dom.js\n * which is itself a faithful interface of the W3 spec:\n * https://dom.spec.whatwg.org/#interface-event\n *\n * Since Flow assumes that Event is provided and is on the global object,\n * we must provide an implementation of Event for CustomEvent (and future\n * alignment of React Native's event system with the W3 spec).\n */\ninterface IEvent {\n  constructor(type: string, eventInitDict?: Event$Init): void;\n  /**\n   * Returns the type of event, e.g. \"click\", \"hashchange\", or \"submit\".\n   */\n  +type: string;\n  /**\n   * Returns the object to which event is dispatched (its target).\n   */\n  +target: EventTarget; // TODO: nullable\n  /** @deprecated */\n  +srcElement: Element; // TODO: nullable\n  /**\n   * Returns the object whose event listener's callback is currently being invoked.\n   */\n  +currentTarget: EventTarget; // TODO: nullable\n  /**\n   * Returns the invocation target objects of event's path (objects on which\n   * listeners will be invoked), except for any nodes in shadow trees of which\n   * the shadow root's mode is \"closed\" that are not reachable from event's\n   * currentTarget.\n   */\n  composedPath(): Array<EventTarget>;\n\n  +NONE: number;\n  +AT_TARGET: number;\n  +BUBBLING_PHASE: number;\n  +CAPTURING_PHASE: number;\n  /**\n   * Returns the event's phase, which is one of NONE, CAPTURING_PHASE, AT_TARGET,\n   * and BUBBLING_PHASE.\n   */\n  +eventPhase: number;\n\n  /**\n   * When dispatched in a tree, invoking this method prevents event from reaching\n   * any objects other than the current object.\n   */\n  stopPropagation(): void;\n  /**\n   * Invoking this method prevents event from reaching any registered event\n   * listeners after the current one finishes running and, when dispatched in a\n   * tree, also prevents event from reaching any other objects.\n   */\n  stopImmediatePropagation(): void;\n\n  /**\n   * Returns true or false depending on how event was initialized. True if\n   * event goes through its target's ancestors in reverse tree order, and\n   * false otherwise.\n   */\n  +bubbles: boolean;\n  /**\n   * Returns true or false depending on how event was initialized. Its\n   * return value does not always carry meaning, but true can indicate\n   * that part of the operation during which event was dispatched, can\n   * be canceled by invoking the preventDefault() method.\n   */\n  +cancelable: boolean;\n  // returnValue: boolean; // legacy, and some subclasses still define it as a string!\n  /**\n   * If invoked when the cancelable attribute value is true, and while\n   * executing a listener for the event with passive set to false, signals to\n   * the operation that caused event to be dispatched that it needs to be\n   * canceled.\n   */\n  preventDefault(): void;\n  /**\n   * Returns true if preventDefault() was invoked successfully to indicate\n   * cancelation, and false otherwise.\n   */\n  +defaultPrevented: boolean;\n  /**\n   * Returns true or false depending on how event was initialized. True if\n   * event invokes listeners past a ShadowRoot node that is the root of its\n   * target, and false otherwise.\n   */\n  +composed: boolean;\n\n  /**\n   * Returns true if event was dispatched by the user agent, and false otherwise.\n   */\n  +isTrusted: boolean;\n  /**\n   * Returns the event's timestamp as the number of milliseconds measured relative\n   * to the time origin.\n   */\n  +timeStamp: number;\n\n  /** Non-standard. See Event.prototype.composedPath */\n  +deepPath?: () => EventTarget[];\n  /** Non-standard. See Event.prototype.composed */\n  +scoped: boolean;\n\n  /**\n   * @deprecated\n   */\n  initEvent(type: string, bubbles: boolean, cancelable: boolean): void;\n}\n\nclass EventPolyfill implements IEvent {\n  type: string;\n  bubbles: boolean;\n  cancelable: boolean;\n  composed: boolean;\n  // Non-standard. See `composed` instead.\n  scoped: boolean;\n  isTrusted: boolean;\n  defaultPrevented: boolean;\n  timeStamp: number;\n\n  // https://developer.mozilla.org/en-US/docs/Web/API/Event/eventPhase\n  NONE: number;\n  AT_TARGET: number;\n  BUBBLING_PHASE: number;\n  CAPTURING_PHASE: number;\n\n  eventPhase: number;\n\n  currentTarget: EventTarget; // TODO: nullable\n  target: EventTarget; // TODO: nullable\n  /** @deprecated */\n  srcElement: Element; // TODO: nullable\n\n  // React Native-specific: proxy data to a SyntheticEvent when\n  // certain methods are called.\n  // SyntheticEvent will also have a reference to this instance -\n  // it is circular - and both classes use this reference to keep\n  // data with the other in sync.\n  _syntheticEvent: mixed;\n\n  constructor(type: string, eventInitDict?: Event$Init) {\n    this.type = type;\n    this.bubbles = !!(eventInitDict?.bubbles || false);\n    this.cancelable = !!(eventInitDict?.cancelable || false);\n    this.composed = !!(eventInitDict?.composed || false);\n    this.scoped = !!(eventInitDict?.scoped || false);\n\n    // TODO: somehow guarantee that only \"private\" instantiations of Event\n    // can set this to true\n    this.isTrusted = false;\n\n    // TODO: in the future we'll want to make sure this has the same\n    // time-basis as events originating from native\n    this.timeStamp = Date.now();\n\n    this.defaultPrevented = false;\n\n    // https://developer.mozilla.org/en-US/docs/Web/API/Event/eventPhase\n    this.NONE = 0;\n    this.AT_TARGET = 1;\n    this.BUBBLING_PHASE = 2;\n    this.CAPTURING_PHASE = 3;\n    this.eventPhase = this.NONE;\n\n    // $FlowFixMe\n    this.currentTarget = null;\n    // $FlowFixMe\n    this.target = null;\n    // $FlowFixMe\n    this.srcElement = null;\n  }\n\n  composedPath(): Array<EventTarget> {\n    throw new Error('TODO: not yet implemented');\n  }\n\n  preventDefault(): void {\n    this.defaultPrevented = true;\n\n    if (this._syntheticEvent != null) {\n      // $FlowFixMe\n      this._syntheticEvent.preventDefault();\n    }\n  }\n\n  initEvent(type: string, bubbles: boolean, cancelable: boolean): void {\n    throw new Error(\n      'TODO: not yet implemented. This method is also deprecated.',\n    );\n  }\n\n  stopImmediatePropagation(): void {\n    throw new Error('TODO: not yet implemented');\n  }\n\n  stopPropagation(): void {\n    if (this._syntheticEvent != null) {\n      // $FlowFixMe\n      this._syntheticEvent.stopPropagation();\n    }\n  }\n\n  setSyntheticEvent(value: mixed): void {\n    this._syntheticEvent = value;\n  }\n}\n\n// Assertion magic for polyfill follows.\ndeclare var checkEvent: Event; // eslint-disable-line no-unused-vars\n\n/*::\n// This can be a strict mode error at runtime so put it in a Flow comment.\n(checkEvent: IEvent);\n*/\n\nglobal.Event = EventPolyfill;\n\nexport default EventPolyfill;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict\n */\n\nimport NativeJSCHeapCapture from './NativeJSCHeapCapture';\n\nconst HeapCapture = {\n  captureHeap: function (path: string) {\n    let error = null;\n    try {\n      global.nativeCaptureHeap(path);\n      console.log('HeapCapture.captureHeap succeeded: ' + path);\n    } catch (e) {\n      console.log('HeapCapture.captureHeap error: ' + e.toString());\n      error = e.toString();\n    }\n    if (NativeJSCHeapCapture) {\n      NativeJSCHeapCapture.captureComplete(path, error);\n    }\n  },\n};\n\nmodule.exports = HeapCapture;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nexport * from '../../src/private/specs/modules/NativeJSCHeapCapture';\nimport NativeJSCHeapCapture from '../../src/private/specs/modules/NativeJSCHeapCapture';\nexport default NativeJSCHeapCapture;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\n'use strict';\n\nmodule.exports = require('@react-native/assets-registry/registry');\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nexport type ResolvedAssetSource = {|\n  +__packager_asset: boolean,\n  +width: ?number,\n  +height: ?number,\n  +uri: string,\n  +scale: number,\n|};\n\nimport type {PackagerAsset} from '@react-native/assets-registry/registry';\n\nconst PixelRatio = require('../Utilities/PixelRatio').default;\nconst Platform = require('../Utilities/Platform');\nconst {pickScale} = require('./AssetUtils');\nconst {\n  getAndroidResourceFolderName,\n  getAndroidResourceIdentifier,\n  getBasePath,\n} = require('@react-native/assets-registry/path-support');\nconst invariant = require('invariant');\n\n/**\n * Returns a path like 'assets/AwesomeModule/icon@2x.png'\n */\nfunction getScaledAssetPath(asset: PackagerAsset): string {\n  const scale = pickScale(asset.scales, PixelRatio.get());\n  const scaleSuffix = scale === 1 ? '' : '@' + scale + 'x';\n  const assetDir = getBasePath(asset);\n  return assetDir + '/' + asset.name + scaleSuffix + '.' + asset.type;\n}\n\n/**\n * Returns a path like 'drawable-mdpi/icon.png'\n */\nfunction getAssetPathInDrawableFolder(asset: PackagerAsset): string {\n  const scale = pickScale(asset.scales, PixelRatio.get());\n  const drawableFolder = getAndroidResourceFolderName(asset, scale);\n  const fileName = getAndroidResourceIdentifier(asset);\n  return drawableFolder + '/' + fileName + '.' + asset.type;\n}\n\nclass AssetSourceResolver {\n  serverUrl: ?string;\n  // where the jsbundle is being run from\n  jsbundleUrl: ?string;\n  // the asset to resolve\n  asset: PackagerAsset;\n\n  constructor(serverUrl: ?string, jsbundleUrl: ?string, asset: PackagerAsset) {\n    this.serverUrl = serverUrl;\n    this.jsbundleUrl = jsbundleUrl;\n    this.asset = asset;\n  }\n\n  isLoadedFromServer(): boolean {\n    return !!this.serverUrl;\n  }\n\n  isLoadedFromFileSystem(): boolean {\n    return this.jsbundleUrl != null && this.jsbundleUrl?.startsWith('file://');\n  }\n\n  defaultAsset(): ResolvedAssetSource {\n    if (this.isLoadedFromServer()) {\n      return this.assetServerURL();\n    }\n\n    if (Platform.OS === 'android') {\n      return this.isLoadedFromFileSystem()\n        ? this.drawableFolderInBundle()\n        : this.resourceIdentifierWithoutScale();\n    } else {\n      return this.scaledAssetURLNearBundle();\n    }\n  }\n\n  /**\n   * Returns an absolute URL which can be used to fetch the asset\n   * from the devserver\n   */\n  assetServerURL(): ResolvedAssetSource {\n    invariant(this.serverUrl != null, 'need server to load from');\n    return this.fromSource(\n      this.serverUrl +\n        getScaledAssetPath(this.asset) +\n        '?platform=' +\n        Platform.OS +\n        '&hash=' +\n        this.asset.hash,\n    );\n  }\n\n  /**\n   * Resolves to just the scaled asset filename\n   * E.g. 'assets/AwesomeModule/icon@2x.png'\n   */\n  scaledAssetPath(): ResolvedAssetSource {\n    return this.fromSource(getScaledAssetPath(this.asset));\n  }\n\n  /**\n   * Resolves to where the bundle is running from, with a scaled asset filename\n   * E.g. 'file:///sdcard/bundle/assets/AwesomeModule/icon@2x.png'\n   */\n  scaledAssetURLNearBundle(): ResolvedAssetSource {\n    const path = this.jsbundleUrl ?? 'file://';\n    return this.fromSource(\n      // Assets can have relative paths outside of the project root.\n      // When bundling them we replace `../` with `_` to make sure they\n      // don't end up outside of the expected assets directory.\n      path + getScaledAssetPath(this.asset).replace(/\\.\\.\\//g, '_'),\n    );\n  }\n\n  /**\n   * The default location of assets bundled with the app, located by\n   * resource identifier\n   * The Android resource system picks the correct scale.\n   * E.g. 'assets_awesomemodule_icon'\n   */\n  resourceIdentifierWithoutScale(): ResolvedAssetSource {\n    invariant(\n      Platform.OS === 'android',\n      'resource identifiers work on Android',\n    );\n    return this.fromSource(getAndroidResourceIdentifier(this.asset));\n  }\n\n  /**\n   * If the jsbundle is running from a sideload location, this resolves assets\n   * relative to its location\n   * E.g. 'file:///sdcard/AwesomeModule/drawable-mdpi/icon.png'\n   */\n  drawableFolderInBundle(): ResolvedAssetSource {\n    const path = this.jsbundleUrl ?? 'file://';\n    return this.fromSource(path + getAssetPathInDrawableFolder(this.asset));\n  }\n\n  fromSource(source: string): ResolvedAssetSource {\n    return {\n      __packager_asset: true,\n      width: this.asset.width,\n      height: this.asset.height,\n      uri: source,\n      scale: pickScale(this.asset.scales, PixelRatio.get()),\n    };\n  }\n\n  static pickScale: (scales: Array<number>, deviceScale?: number) => number =\n    pickScale;\n}\n\nmodule.exports = AssetSourceResolver;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport PixelRatio from '../Utilities/PixelRatio';\n\nlet cacheBreaker;\nlet warnIfCacheBreakerUnset = true;\n\nexport function pickScale(scales: Array<number>, deviceScale?: number): number {\n  const requiredDeviceScale = deviceScale ?? PixelRatio.get();\n\n  // Packager guarantees that `scales` array is sorted\n  for (let i = 0; i < scales.length; i++) {\n    if (scales[i] >= requiredDeviceScale) {\n      return scales[i];\n    }\n  }\n\n  // If nothing matches, device scale is larger than any available\n  // scales, so we return the biggest one. Unless the array is empty,\n  // in which case we default to 1\n  return scales[scales.length - 1] || 1;\n}\n\nexport function setUrlCacheBreaker(appendage: string) {\n  cacheBreaker = appendage;\n}\n\nexport function getUrlCacheBreaker(): string {\n  if (cacheBreaker == null) {\n    if (__DEV__ && warnIfCacheBreakerUnset) {\n      warnIfCacheBreakerUnset = false;\n      console.warn(\n        'AssetUtils.getUrlCacheBreaker: Cache breaker value is unset',\n      );\n    }\n    return '';\n  }\n  return cacheBreaker;\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport type {ImageStyle, ImageStyleProp} from '../StyleSheet/StyleSheet';\nimport type {RootTag} from '../Types/RootTagTypes';\nimport type {AbstractImageIOS, ImageIOS} from './ImageTypes.flow';\n\nimport {createRootTag} from '../ReactNative/RootTag';\nimport flattenStyle from '../StyleSheet/flattenStyle';\nimport StyleSheet from '../StyleSheet/StyleSheet';\nimport ImageAnalyticsTagContext from './ImageAnalyticsTagContext';\nimport {\n  unstable_getImageComponentDecorator,\n  useWrapRefWithImageAttachedCallbacks,\n} from './ImageInjection';\nimport {getImageSourcesFromImageProps} from './ImageSourceUtils';\nimport {convertObjectFitToResizeMode} from './ImageUtils';\nimport ImageViewNativeComponent from './ImageViewNativeComponent';\nimport NativeImageLoaderIOS from './NativeImageLoaderIOS';\nimport resolveAssetSource from './resolveAssetSource';\nimport * as React from 'react';\n\nfunction getSize(\n  uri: string,\n  success: (width: number, height: number) => void,\n  failure?: (error: mixed) => void,\n): void {\n  NativeImageLoaderIOS.getSize(uri)\n    .then(([width, height]) => success(width, height))\n    .catch(\n      failure ||\n        function () {\n          console.warn('Failed to get size for image ' + uri);\n        },\n    );\n}\n\nfunction getSizeWithHeaders(\n  uri: string,\n  headers: {[string]: string, ...},\n  success: (width: number, height: number) => void,\n  failure?: (error: mixed) => void,\n): void {\n  NativeImageLoaderIOS.getSizeWithHeaders(uri, headers)\n    .then(function (sizes) {\n      success(sizes.width, sizes.height);\n    })\n    .catch(\n      failure ||\n        function () {\n          console.warn('Failed to get size for image: ' + uri);\n        },\n    );\n}\n\nfunction prefetchWithMetadata(\n  url: string,\n  queryRootName: string,\n  rootTag?: ?RootTag,\n): Promise<boolean> {\n  if (NativeImageLoaderIOS.prefetchImageWithMetadata) {\n    // number params like rootTag cannot be nullable before TurboModules is available\n    return NativeImageLoaderIOS.prefetchImageWithMetadata(\n      url,\n      queryRootName,\n      // NOTE: RootTag type\n      rootTag != null ? rootTag : createRootTag(0),\n    );\n  } else {\n    return NativeImageLoaderIOS.prefetchImage(url);\n  }\n}\n\nfunction prefetch(url: string): Promise<boolean> {\n  return NativeImageLoaderIOS.prefetchImage(url);\n}\n\nasync function queryCache(\n  urls: Array<string>,\n): Promise<{[string]: 'memory' | 'disk' | 'disk/memory', ...}> {\n  return NativeImageLoaderIOS.queryCache(urls);\n}\n\n/**\n * A React component for displaying different types of images,\n * including network images, static resources, temporary local images, and\n * images from local disk, such as the camera roll.\n *\n * See https://reactnative.dev/docs/image\n */\nlet BaseImage: AbstractImageIOS = React.forwardRef((props, forwardedRef) => {\n  const source = getImageSourcesFromImageProps(props) || {\n    uri: undefined,\n    width: undefined,\n    height: undefined,\n  };\n\n  let sources;\n  let style: ImageStyle;\n\n  if (Array.isArray(source)) {\n    style =\n      flattenStyle<ImageStyleProp>([styles.base, props.style]) ||\n      ({}: ImageStyle);\n    sources = source;\n  } else {\n    const {uri} = source;\n    const width = source.width ?? props.width;\n    const height = source.height ?? props.height;\n    style =\n      flattenStyle<ImageStyleProp>([\n        {width, height},\n        styles.base,\n        props.style,\n      ]) || ({}: ImageStyle);\n    sources = [source];\n\n    if (uri === '') {\n      console.warn('source.uri should not be an empty string');\n    }\n  }\n\n  const objectFit =\n    style.objectFit != null\n      ? convertObjectFitToResizeMode(style.objectFit)\n      : null;\n  const resizeMode =\n    objectFit || props.resizeMode || style.resizeMode || 'cover';\n  const tintColor = props.tintColor ?? style.tintColor;\n\n  if (props.children != null) {\n    throw new Error(\n      'The <Image> component cannot contain children. If you want to render content on top of the image, consider using the <ImageBackground> component or absolute positioning.',\n    );\n  }\n  const {\n    'aria-busy': ariaBusy,\n    'aria-checked': ariaChecked,\n    'aria-disabled': ariaDisabled,\n    'aria-expanded': ariaExpanded,\n    'aria-selected': ariaSelected,\n    height,\n    src,\n    width,\n    ...restProps\n  } = props;\n\n  const _accessibilityState = {\n    busy: ariaBusy ?? props.accessibilityState?.busy,\n    checked: ariaChecked ?? props.accessibilityState?.checked,\n    disabled: ariaDisabled ?? props.accessibilityState?.disabled,\n    expanded: ariaExpanded ?? props.accessibilityState?.expanded,\n    selected: ariaSelected ?? props.accessibilityState?.selected,\n  };\n  const accessibilityLabel = props['aria-label'] ?? props.accessibilityLabel;\n\n  const actualRef = useWrapRefWithImageAttachedCallbacks(forwardedRef);\n\n  return (\n    <ImageAnalyticsTagContext.Consumer>\n      {analyticTag => {\n        return (\n          <ImageViewNativeComponent\n            accessibilityState={_accessibilityState}\n            {...restProps}\n            accessible={props.alt !== undefined ? true : props.accessible}\n            accessibilityLabel={accessibilityLabel ?? props.alt}\n            ref={actualRef}\n            style={style}\n            resizeMode={resizeMode}\n            tintColor={tintColor}\n            source={sources}\n            internal_analyticTag={analyticTag}\n          />\n        );\n      }}\n    </ImageAnalyticsTagContext.Consumer>\n  );\n});\n\nconst imageComponentDecorator = unstable_getImageComponentDecorator();\nif (imageComponentDecorator != null) {\n  BaseImage = imageComponentDecorator(BaseImage);\n}\n\n// $FlowExpectedError[incompatible-type] Eventually we need to move these functions from statics of the component to exports in the module.\nconst Image: ImageIOS = BaseImage;\n\nImage.displayName = 'Image';\n\n/**\n * Retrieve the width and height (in pixels) of an image prior to displaying it.\n *\n * See https://reactnative.dev/docs/image#getsize\n */\n// $FlowFixMe[incompatible-use] This property isn't writable but we're actually defining it here for the first time.\nImage.getSize = getSize;\n\n/**\n * Retrieve the width and height (in pixels) of an image prior to displaying it\n * with the ability to provide the headers for the request.\n *\n * See https://reactnative.dev/docs/image#getsizewithheaders\n */\n// $FlowFixMe[incompatible-use] This property isn't writable but we're actually defining it here for the first time.\nImage.getSizeWithHeaders = getSizeWithHeaders;\n\n/**\n * Prefetches a remote image for later use by downloading it to the disk\n * cache.\n *\n * See https://reactnative.dev/docs/image#prefetch\n */\n// $FlowFixMe[incompatible-use] This property isn't writable but we're actually defining it here for the first time.\nImage.prefetch = prefetch;\n\n/**\n * Prefetches a remote image for later use by downloading it to the disk\n * cache, and adds metadata for queryRootName and rootTag.\n *\n * See https://reactnative.dev/docs/image#prefetch\n */\n// $FlowFixMe[incompatible-use] This property isn't writable but we're actually defining it here for the first time.\nImage.prefetchWithMetadata = prefetchWithMetadata;\n\n/**\n * Performs cache interrogation.\n *\n *  See https://reactnative.dev/docs/image#querycache\n */\n// $FlowFixMe[incompatible-use] This property isn't writable but we're actually defining it here for the first time.\nImage.queryCache = queryCache;\n\n/**\n * Resolves an asset reference into an object.\n *\n * See https://reactnative.dev/docs/image#resolveassetsource\n */\n// $FlowFixMe[incompatible-use] This property isn't writable but we're actually defining it here for the first time.\nImage.resolveAssetSource = resolveAssetSource;\n\nconst styles = StyleSheet.create({\n  base: {\n    overflow: 'hidden',\n  },\n});\n\nmodule.exports = Image;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nimport * as React from 'react';\n\ntype ContextType = ?string;\n\nconst Context: React.Context<ContextType> =\n  React.createContext<ContextType>(null);\n\nif (__DEV__) {\n  Context.displayName = 'ImageAnalyticsTagContext';\n}\n\nexport default Context;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nimport type {ViewProps} from '../Components/View/ViewPropTypes';\nimport type {HostComponent} from '../Renderer/shims/ReactNativeTypes';\nimport type {ImageBackgroundProps} from './ImageProps';\n\nimport View from '../Components/View/View';\nimport flattenStyle from '../StyleSheet/flattenStyle';\nimport StyleSheet from '../StyleSheet/StyleSheet';\nimport Image from './Image';\nimport * as React from 'react';\n\n/**\n * Very simple drop-in replacement for <Image> which supports nesting views.\n *\n * ```ReactNativeWebPlayer\n * import React, { Component } from 'react';\n * import { AppRegistry, View, ImageBackground, Text } from 'react-native';\n *\n * class DisplayAnImageBackground extends Component {\n *   render() {\n *     return (\n *       <ImageBackground\n *         style={{width: 50, height: 50}}\n *         source={{uri: 'https://reactnative.dev/img/opengraph.png'}}\n *       >\n *         <Text>React</Text>\n *       </ImageBackground>\n *     );\n *   }\n * }\n *\n * // App registration and rendering\n * AppRegistry.registerComponent('DisplayAnImageBackground', () => DisplayAnImageBackground);\n * ```\n */\nclass ImageBackground extends React.Component<ImageBackgroundProps> {\n  setNativeProps(props: {...}) {\n    // Work-around flow\n    const viewRef = this._viewRef;\n    if (viewRef) {\n      viewRef.setNativeProps(props);\n    }\n  }\n\n  _viewRef: ?React.ElementRef<typeof View> = null;\n\n  _captureRef = (\n    ref: null | React$ElementRef<\n      React$AbstractComponent<\n        ViewProps,\n        React.ElementRef<HostComponent<ViewProps>>,\n      >,\n    >,\n  ) => {\n    this._viewRef = ref;\n  };\n\n  render(): React.Node {\n    const {\n      children,\n      style,\n      imageStyle,\n      imageRef,\n      importantForAccessibility,\n      ...props\n    } = this.props;\n\n    // $FlowFixMe[underconstrained-implicit-instantiation]\n    const flattenedStyle = flattenStyle(style);\n    return (\n      <View\n        accessibilityIgnoresInvertColors={true}\n        importantForAccessibility={importantForAccessibility}\n        style={style}\n        ref={this._captureRef}>\n        {/* $FlowFixMe[incompatible-use] */}\n        <Image\n          {...props}\n          importantForAccessibility={importantForAccessibility}\n          style={[\n            StyleSheet.absoluteFill,\n            {\n              // Temporary Workaround:\n              // Current (imperfect yet) implementation of <Image> overwrites width and height styles\n              // (which is not quite correct), and these styles conflict with explicitly set styles\n              // of <ImageBackground> and with our internal layout model here.\n              // So, we have to proxy/reapply these styles explicitly for actual <Image> component.\n              // This workaround should be removed after implementing proper support of\n              // intrinsic content size of the <Image>.\n              // $FlowFixMe[prop-missing]\n              width: flattenedStyle?.width,\n              // $FlowFixMe[prop-missing]\n              height: flattenedStyle?.height,\n            },\n            imageStyle,\n          ]}\n          ref={imageRef}\n        />\n        {children}\n      </View>\n    );\n  }\n}\n\nmodule.exports = ImageBackground;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\nimport type {\n  AbstractImageAndroid,\n  AbstractImageIOS,\n  Image as ImageComponent,\n} from './ImageTypes.flow';\n\nimport useMergeRefs from '../Utilities/useMergeRefs';\nimport * as React from 'react';\nimport {useRef} from 'react';\n\ntype ImageComponentDecorator = (AbstractImageAndroid => AbstractImageAndroid) &\n  (AbstractImageIOS => AbstractImageIOS);\n\nlet injectedImageComponentDecorator: ?ImageComponentDecorator;\n\nexport function unstable_setImageComponentDecorator(\n  imageComponentDecorator: ?ImageComponentDecorator,\n): void {\n  injectedImageComponentDecorator = imageComponentDecorator;\n}\n\nexport function unstable_getImageComponentDecorator(): ?ImageComponentDecorator {\n  return injectedImageComponentDecorator;\n}\n\ntype ImageInstance = React.ElementRef<ImageComponent>;\n\ntype ImageAttachedCallback = (\n  imageInstance: ImageInstance,\n) => void | (() => void);\n\nconst imageAttachedCallbacks = new Set<ImageAttachedCallback>();\n\nexport function unstable_registerImageAttachedCallback(\n  callback: ImageAttachedCallback,\n): void {\n  imageAttachedCallbacks.add(callback);\n}\n\nexport function unstable_unregisterImageAttachedCallback(\n  callback: ImageAttachedCallback,\n): void {\n  imageAttachedCallbacks.delete(callback);\n}\n\nexport function useWrapRefWithImageAttachedCallbacks(\n  forwardedRef: React.RefSetter<ImageInstance>,\n): React.RefSetter<ImageInstance> {\n  const pendingCleanupCallbacks = useRef<Array<() => void>>([]);\n\n  const imageAttachedCallbacksRef =\n    useRef<?(node: ImageInstance | null) => void>(null);\n\n  if (imageAttachedCallbacksRef.current == null) {\n    imageAttachedCallbacksRef.current = (node: ImageInstance | null): void => {\n      if (node == null) {\n        if (pendingCleanupCallbacks.current.length > 0) {\n          pendingCleanupCallbacks.current.forEach(cb => cb());\n          pendingCleanupCallbacks.current = [];\n        }\n      } else {\n        imageAttachedCallbacks.forEach(imageAttachedCallback => {\n          const maybeCleanupCallback = imageAttachedCallback(node);\n          if (maybeCleanupCallback != null) {\n            pendingCleanupCallbacks.current.push(maybeCleanupCallback);\n          }\n        });\n      }\n    };\n  }\n\n  // `useMergeRefs` returns a stable ref if its arguments don't change.\n  return useMergeRefs<ImageInstance>(\n    forwardedRef,\n    imageAttachedCallbacksRef.current,\n  );\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nimport type {ResolvedAssetSource} from './AssetSourceResolver';\nimport type {ImageProps} from './ImageProps';\n\nimport resolveAssetSource from './resolveAssetSource';\n\n/**\n * A function which returns the appropriate value for image source\n * by resolving the `source`, `src` and `srcSet` props.\n */\nexport function getImageSourcesFromImageProps(\n  imageProps: ImageProps,\n): ?ResolvedAssetSource | $ReadOnlyArray<{uri: string, ...}> {\n  let source = resolveAssetSource(imageProps.source);\n\n  let sources;\n\n  const {crossOrigin, referrerPolicy, src, srcSet, width, height} = imageProps;\n\n  const headers: {[string]: string} = {};\n  if (crossOrigin === 'use-credentials') {\n    headers['Access-Control-Allow-Credentials'] = 'true';\n  }\n  if (referrerPolicy != null) {\n    headers['Referrer-Policy'] = referrerPolicy;\n  }\n  if (srcSet != null) {\n    const sourceList = [];\n    const srcSetList = srcSet.split(', ');\n    // `src` prop should be used with default scale if `srcSet` does not have 1x scale.\n    let shouldUseSrcForDefaultScale = true;\n    srcSetList.forEach(imageSrc => {\n      const [uri, xScale = '1x'] = imageSrc.split(' ');\n      if (!xScale.endsWith('x')) {\n        console.warn(\n          'The provided format for scale is not supported yet. Please use scales like 1x, 2x, etc.',\n        );\n      } else {\n        const scale = parseInt(xScale.split('x')[0], 10);\n        if (!isNaN(scale)) {\n          // 1x scale is provided in `srcSet` prop so ignore the `src` prop if provided.\n          shouldUseSrcForDefaultScale =\n            scale === 1 ? false : shouldUseSrcForDefaultScale;\n          sourceList.push({headers: headers, scale, uri, width, height});\n        }\n      }\n    });\n\n    if (shouldUseSrcForDefaultScale && src != null) {\n      sourceList.push({\n        headers: headers,\n        scale: 1,\n        uri: src,\n        width,\n        height,\n      });\n    }\n    if (sourceList.length === 0) {\n      console.warn('The provided value for srcSet is not valid.');\n    }\n\n    sources = sourceList;\n  } else if (src != null) {\n    sources = [{uri: src, headers: headers, width, height}];\n  } else {\n    sources = source;\n  }\n  return sources;\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\ntype ResizeMode = 'cover' | 'contain' | 'stretch' | 'repeat' | 'center';\n\nexport function convertObjectFitToResizeMode(objectFit: string): ResizeMode {\n  const objectFitMap = {\n    contain: 'contain',\n    cover: 'cover',\n    fill: 'stretch',\n    'scale-down': 'contain',\n  };\n  return objectFitMap[objectFit];\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport type {ViewProps} from '../Components/View/ViewPropTypes';\nimport type {\n  HostComponent,\n  PartialViewConfig,\n} from '../Renderer/shims/ReactNativeTypes';\nimport type {\n  ColorValue,\n  DangerouslyImpreciseStyle,\n  ImageStyleProp,\n} from '../StyleSheet/StyleSheet';\nimport type {ResolvedAssetSource} from './AssetSourceResolver';\nimport type {ImageProps} from './ImageProps';\nimport type {ElementRef} from 'react';\n\nimport * as NativeComponentRegistry from '../NativeComponent/NativeComponentRegistry';\nimport {ConditionallyIgnoredEventHandlers} from '../NativeComponent/ViewConfigIgnore';\nimport codegenNativeCommands from '../Utilities/codegenNativeCommands';\nimport Platform from '../Utilities/Platform';\n\ntype Props = $ReadOnly<{\n  ...ImageProps,\n  ...ViewProps,\n\n  style?: ImageStyleProp | DangerouslyImpreciseStyle,\n\n  // iOS native props\n  tintColor?: ColorValue,\n\n  // Android native props\n  shouldNotifyLoadEvents?: boolean,\n  src?:\n    | ?ResolvedAssetSource\n    | ?$ReadOnlyArray<?$ReadOnly<{uri?: ?string, ...}>>,\n  headers?: ?{[string]: string},\n  defaultSrc?: ?string,\n  loadingIndicatorSrc?: ?string,\n}>;\n\ninterface NativeCommands {\n  +setIsVisible_EXPERIMENTAL: (\n    viewRef: ElementRef<HostComponent<mixed>>,\n    isVisible: boolean,\n  ) => void;\n}\n\nexport const Commands: NativeCommands = codegenNativeCommands<NativeCommands>({\n  supportedCommands: ['setIsVisible_EXPERIMENTAL'],\n});\n\nexport const __INTERNAL_VIEW_CONFIG: PartialViewConfig =\n  Platform.OS === 'android'\n    ? {\n        uiViewClassName: 'RCTImageView',\n        bubblingEventTypes: {},\n        directEventTypes: {\n          topLoadStart: {\n            registrationName: 'onLoadStart',\n          },\n          topProgress: {\n            registrationName: 'onProgress',\n          },\n          topError: {\n            registrationName: 'onError',\n          },\n          topLoad: {\n            registrationName: 'onLoad',\n          },\n          topLoadEnd: {\n            registrationName: 'onLoadEnd',\n          },\n        },\n        validAttributes: {\n          blurRadius: true,\n          internal_analyticTag: true,\n          resizeMode: true,\n          tintColor: {\n            process: require('../StyleSheet/processColor').default,\n          },\n          borderBottomLeftRadius: true,\n          borderTopLeftRadius: true,\n          resizeMethod: true,\n          src: true,\n          // NOTE: New Architecture expects this to be called `source`,\n          // regardless of the platform, therefore propagate it as well.\n          // For the backwards compatibility reasons, we keep both `src`\n          // and `source`, which will be identical at this stage.\n          source: true,\n          borderRadius: true,\n          headers: true,\n          shouldNotifyLoadEvents: true,\n          defaultSrc: true,\n          overlayColor: {\n            process: require('../StyleSheet/processColor').default,\n          },\n          borderColor: {\n            process: require('../StyleSheet/processColor').default,\n          },\n          accessible: true,\n          progressiveRenderingEnabled: true,\n          fadeDuration: true,\n          borderBottomRightRadius: true,\n          borderTopRightRadius: true,\n          loadingIndicatorSrc: true,\n        },\n      }\n    : {\n        uiViewClassName: 'RCTImageView',\n        bubblingEventTypes: {},\n        directEventTypes: {\n          topLoadStart: {\n            registrationName: 'onLoadStart',\n          },\n          topProgress: {\n            registrationName: 'onProgress',\n          },\n          topError: {\n            registrationName: 'onError',\n          },\n          topPartialLoad: {\n            registrationName: 'onPartialLoad',\n          },\n          topLoad: {\n            registrationName: 'onLoad',\n          },\n          topLoadEnd: {\n            registrationName: 'onLoadEnd',\n          },\n        },\n        validAttributes: {\n          blurRadius: true,\n          capInsets: {\n            diff: require('../Utilities/differ/insetsDiffer'),\n          },\n          defaultSource: {\n            process: require('./resolveAssetSource'),\n          },\n          internal_analyticTag: true,\n          resizeMode: true,\n          source: true,\n          tintColor: {\n            process: require('../StyleSheet/processColor').default,\n          },\n          ...ConditionallyIgnoredEventHandlers({\n            onLoadStart: true,\n            onLoad: true,\n            onLoadEnd: true,\n            onProgress: true,\n            onError: true,\n            onPartialLoad: true,\n          }),\n        },\n      };\n\nconst ImageViewNativeComponent: HostComponent<Props> =\n  NativeComponentRegistry.get<Props>(\n    'RCTImageView',\n    () => __INTERNAL_VIEW_CONFIG,\n  );\n\nexport default ImageViewNativeComponent;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nexport * from '../../src/private/specs/modules/NativeImageLoaderIOS';\nimport NativeImageLoaderIOS from '../../src/private/specs/modules/NativeImageLoaderIOS';\nexport default NativeImageLoaderIOS;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\n// Utilities for resolving an asset into a `source` for e.g. `Image`\n\nimport type {ResolvedAssetSource} from './AssetSourceResolver';\nimport type {ImageSource} from './ImageSource';\n\nimport SourceCode from '../NativeModules/specs/NativeSourceCode';\n\nconst AssetSourceResolver = require('./AssetSourceResolver');\nconst {pickScale} = require('./AssetUtils');\nconst AssetRegistry = require('@react-native/assets-registry/registry');\n\ntype CustomSourceTransformer = (\n  resolver: AssetSourceResolver,\n) => ?ResolvedAssetSource;\n\nlet _customSourceTransformers: Array<CustomSourceTransformer> = [];\nlet _serverURL: ?string;\nlet _scriptURL: ?string;\nlet _sourceCodeScriptURL: ?string;\n\nfunction getSourceCodeScriptURL(): ?string {\n  if (_sourceCodeScriptURL != null) {\n    return _sourceCodeScriptURL;\n  }\n\n  _sourceCodeScriptURL = SourceCode.getConstants().scriptURL;\n  return _sourceCodeScriptURL;\n}\n\nfunction getDevServerURL(): ?string {\n  if (_serverURL === undefined) {\n    const sourceCodeScriptURL = getSourceCodeScriptURL();\n    const match = sourceCodeScriptURL?.match(/^https?:\\/\\/.*?\\//);\n    if (match) {\n      // jsBundle was loaded from network\n      _serverURL = match[0];\n    } else {\n      // jsBundle was loaded from file\n      _serverURL = null;\n    }\n  }\n  return _serverURL;\n}\n\nfunction _coerceLocalScriptURL(scriptURL: ?string): ?string {\n  let normalizedScriptURL = scriptURL;\n\n  if (normalizedScriptURL != null) {\n    if (normalizedScriptURL.startsWith('assets://')) {\n      // android: running from within assets, no offline path to use\n      return null;\n    }\n    normalizedScriptURL = normalizedScriptURL.substring(\n      0,\n      normalizedScriptURL.lastIndexOf('/') + 1,\n    );\n    if (!normalizedScriptURL.includes('://')) {\n      // Add file protocol in case we have an absolute file path and not a URL.\n      // This shouldn't really be necessary. scriptURL should be a URL.\n      normalizedScriptURL = 'file://' + normalizedScriptURL;\n    }\n  }\n\n  return normalizedScriptURL;\n}\n\nfunction getScriptURL(): ?string {\n  if (_scriptURL === undefined) {\n    _scriptURL = _coerceLocalScriptURL(getSourceCodeScriptURL());\n  }\n  return _scriptURL;\n}\n\n/**\n * `transformer` can optionally be used to apply a custom transformation when\n * resolving an asset source. This methods overrides all other custom transformers\n * that may have been previously registered.\n */\nfunction setCustomSourceTransformer(\n  transformer: CustomSourceTransformer,\n): void {\n  _customSourceTransformers = [transformer];\n}\n\n/**\n * Adds a `transformer` into the chain of custom source transformers, which will\n * be applied in the order registered, until one returns a non-null value.\n */\nfunction addCustomSourceTransformer(\n  transformer: CustomSourceTransformer,\n): void {\n  _customSourceTransformers.push(transformer);\n}\n\n/**\n * `source` is either a number (opaque type returned by require('./foo.png'))\n * or an `ImageSource` like { uri: '<http location || file path>' }\n */\nfunction resolveAssetSource(source: ?ImageSource): ?ResolvedAssetSource {\n  if (source == null || typeof source === 'object') {\n    // $FlowFixMe[incompatible-exact] `source` doesn't exactly match `ResolvedAssetSource`\n    // $FlowFixMe[incompatible-return] `source` doesn't exactly match `ResolvedAssetSource`\n    return source;\n  }\n\n  const asset = AssetRegistry.getAssetByID(source);\n  if (!asset) {\n    return null;\n  }\n\n  const resolver = new AssetSourceResolver(\n    getDevServerURL(),\n    getScriptURL(),\n    asset,\n  );\n\n  // Apply (chained) custom source transformers, if any\n  if (_customSourceTransformers) {\n    for (const customSourceTransformer of _customSourceTransformers) {\n      const transformedSource = customSourceTransformer(resolver);\n      if (transformedSource != null) {\n        return transformedSource;\n      }\n    }\n  }\n\n  return resolver.defaultAsset();\n}\n\nresolveAssetSource.pickScale = pickScale;\nresolveAssetSource.setCustomSourceTransformer = setCustomSourceTransformer;\nresolveAssetSource.addCustomSourceTransformer = addCustomSourceTransformer;\nmodule.exports = resolveAssetSource;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\nimport NativeFrameRateLogger from './NativeFrameRateLogger';\n\nconst invariant = require('invariant');\n\n/**\n * Flow API for native FrameRateLogger module. If the native module is not installed, function calls\n * are just no-ops.\n *\n * Typical behavior is that `setContext` is called when a new screen is loaded (e.g. via a\n * navigation integration), and then `beginScroll` is called by `ScrollResponder` at which point the\n * native module then begins tracking frame drops. When `ScrollResponder` calls `endScroll`, the\n * native module gathers up all it's frame drop data and reports it via an analytics pipeline for\n * analysis.\n *\n * Note that `beginScroll` may be called multiple times by `ScrollResponder` - unclear if that's a\n * bug, but the native module should be robust to that.\n *\n * In the future we may add support for tracking frame drops in other types of interactions beyond\n * scrolling.\n */\nconst FrameRateLogger = {\n  /**\n   * Enable `debug` to see local logs of what's going on.\n   */\n  setGlobalOptions: function (options: {debug?: boolean, ...}) {\n    if (options.debug !== undefined) {\n      invariant(\n        NativeFrameRateLogger,\n        'Trying to debug FrameRateLogger without the native module!',\n      );\n    }\n    NativeFrameRateLogger?.setGlobalOptions({\n      debug: !!options.debug,\n    });\n  },\n\n  /**\n   * Must call `setContext` before any events can be properly tracked, which is done automatically\n   * in `AppRegistry`, but navigation is also a common place to hook in.\n   */\n  setContext: function (context: string) {\n    NativeFrameRateLogger?.setContext(context);\n  },\n\n  /**\n   * Called in `ScrollResponder` so any component that uses that module will handle this\n   * automatically.\n   */\n  beginScroll() {\n    NativeFrameRateLogger?.beginScroll();\n  },\n\n  /**\n   * Called in `ScrollResponder` so any component that uses that module will handle this\n   * automatically.\n   */\n  endScroll() {\n    NativeFrameRateLogger?.endScroll();\n  },\n};\n\nmodule.exports = FrameRateLogger;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\nimport type {Task} from './TaskQueue';\n\nimport EventEmitter from '../vendor/emitter/EventEmitter';\n\nconst BatchedBridge = require('../BatchedBridge/BatchedBridge');\nconst infoLog = require('../Utilities/infoLog');\nconst TaskQueue = require('./TaskQueue');\nconst invariant = require('invariant');\n\nexport type Handle = number;\n\nconst _emitter = new EventEmitter<{\n  interactionComplete: [],\n  interactionStart: [],\n}>();\n\nconst DEBUG_DELAY: 0 = 0;\nconst DEBUG: false = false;\n\n/**\n * InteractionManager allows long-running work to be scheduled after any\n * interactions/animations have completed. In particular, this allows JavaScript\n * animations to run smoothly.\n *\n * Applications can schedule tasks to run after interactions with the following:\n *\n * ```\n * InteractionManager.runAfterInteractions(() => {\n *   // ...long-running synchronous task...\n * });\n * ```\n *\n * Compare this to other scheduling alternatives:\n *\n * - requestAnimationFrame(): for code that animates a view over time.\n * - setImmediate/setTimeout(): run code later, note this may delay animations.\n * - runAfterInteractions(): run code later, without delaying active animations.\n *\n * The touch handling system considers one or more active touches to be an\n * 'interaction' and will delay `runAfterInteractions()` callbacks until all\n * touches have ended or been cancelled.\n *\n * InteractionManager also allows applications to register animations by\n * creating an interaction 'handle' on animation start, and clearing it upon\n * completion:\n *\n * ```\n * var handle = InteractionManager.createInteractionHandle();\n * // run animation... (`runAfterInteractions` tasks are queued)\n * // later, on animation completion:\n * InteractionManager.clearInteractionHandle(handle);\n * // queued tasks run if all handles were cleared\n * ```\n *\n * `runAfterInteractions` takes either a plain callback function, or a\n * `PromiseTask` object with a `gen` method that returns a `Promise`.  If a\n * `PromiseTask` is supplied, then it is fully resolved (including asynchronous\n * dependencies that also schedule more tasks via `runAfterInteractions`) before\n * starting on the next task that might have been queued up synchronously\n * earlier.\n *\n * By default, queued tasks are executed together in a loop in one\n * `setImmediate` batch. If `setDeadline` is called with a positive number, then\n * tasks will only be executed until the deadline (in terms of js event loop run\n * time) approaches, at which point execution will yield via setTimeout,\n * allowing events such as touches to start interactions and block queued tasks\n * from executing, making apps more responsive.\n */\nconst InteractionManager = {\n  Events: {\n    interactionStart: 'interactionStart',\n    interactionComplete: 'interactionComplete',\n  },\n\n  /**\n   * Schedule a function to run after all interactions have completed. Returns a cancellable\n   * \"promise\".\n   */\n  runAfterInteractions(task: ?Task): {\n    then: <U>(\n      onFulfill?: ?(void) => ?(Promise<U> | U),\n      onReject?: ?(error: mixed) => ?(Promise<U> | U),\n    ) => Promise<U>,\n    cancel: () => void,\n    ...\n  } {\n    const tasks: Array<Task> = [];\n    const promise = new Promise((resolve: () => void) => {\n      _scheduleUpdate();\n      if (task) {\n        tasks.push(task);\n      }\n      tasks.push({\n        run: resolve,\n        name: 'resolve ' + ((task && task.name) || '?'),\n      });\n      _taskQueue.enqueueTasks(tasks);\n    });\n    return {\n      // $FlowFixMe[method-unbinding] added when improving typing for this parameters\n      then: promise.then.bind(promise),\n      cancel: function () {\n        _taskQueue.cancelTasks(tasks);\n      },\n    };\n  },\n\n  /**\n   * Notify manager that an interaction has started.\n   */\n  createInteractionHandle(): Handle {\n    DEBUG && infoLog('InteractionManager: create interaction handle');\n    _scheduleUpdate();\n    const handle = ++_inc;\n    _addInteractionSet.add(handle);\n    return handle;\n  },\n\n  /**\n   * Notify manager that an interaction has completed.\n   */\n  clearInteractionHandle(handle: Handle) {\n    DEBUG && infoLog('InteractionManager: clear interaction handle');\n    invariant(!!handle, 'InteractionManager: Must provide a handle to clear.');\n    _scheduleUpdate();\n    _addInteractionSet.delete(handle);\n    _deleteInteractionSet.add(handle);\n  },\n\n  // $FlowFixMe[method-unbinding] added when improving typing for this parameters\n  addListener: (_emitter.addListener.bind(_emitter): $FlowFixMe),\n\n  /**\n   * A positive number will use setTimeout to schedule any tasks after the\n   * eventLoopRunningTime hits the deadline value, otherwise all tasks will be\n   * executed in one setImmediate batch (default).\n   */\n  setDeadline(deadline: number) {\n    _deadline = deadline;\n  },\n};\n\nconst _interactionSet = new Set<number | Handle>();\nconst _addInteractionSet = new Set<number | Handle>();\nconst _deleteInteractionSet = new Set<Handle>();\nconst _taskQueue = new TaskQueue({onMoreTasks: _scheduleUpdate});\nlet _nextUpdateHandle: $FlowFixMe | TimeoutID = 0;\nlet _inc = 0;\nlet _deadline = -1;\n\n/**\n * Schedule an asynchronous update to the interaction state.\n */\nfunction _scheduleUpdate() {\n  if (!_nextUpdateHandle) {\n    if (_deadline > 0) {\n      _nextUpdateHandle = setTimeout(_processUpdate, 0 + DEBUG_DELAY);\n    } else {\n      _nextUpdateHandle = setImmediate(_processUpdate);\n    }\n  }\n}\n\n/**\n * Notify listeners, process queue, etc\n */\nfunction _processUpdate() {\n  _nextUpdateHandle = 0;\n\n  const interactionCount = _interactionSet.size;\n  _addInteractionSet.forEach(handle => _interactionSet.add(handle));\n  _deleteInteractionSet.forEach(handle => _interactionSet.delete(handle));\n  const nextInteractionCount = _interactionSet.size;\n\n  if (interactionCount !== 0 && nextInteractionCount === 0) {\n    // transition from 1+ --> 0 interactions\n    _emitter.emit(InteractionManager.Events.interactionComplete);\n  } else if (interactionCount === 0 && nextInteractionCount !== 0) {\n    // transition from 0 --> 1+ interactions\n    _emitter.emit(InteractionManager.Events.interactionStart);\n  }\n\n  // process the queue regardless of a transition\n  if (nextInteractionCount === 0) {\n    while (_taskQueue.hasTasksToProcess()) {\n      _taskQueue.processNext();\n      if (\n        _deadline > 0 &&\n        BatchedBridge.getEventLoopRunningTime() >= _deadline\n      ) {\n        // Hit deadline before processing all tasks, so process more later.\n        _scheduleUpdate();\n        break;\n      }\n    }\n  }\n  _addInteractionSet.clear();\n  _deleteInteractionSet.clear();\n}\n\nmodule.exports = InteractionManager;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nexport * from '../../src/private/specs/modules/NativeFrameRateLogger';\nimport NativeFrameRateLogger from '../../src/private/specs/modules/NativeFrameRateLogger';\nexport default NativeFrameRateLogger;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\n'use strict';\n\nimport type {PressEvent} from '../Types/CoreEventTypes';\n\nconst InteractionManager = require('./InteractionManager');\nconst TouchHistoryMath = require('./TouchHistoryMath');\n\nconst currentCentroidXOfTouchesChangedAfter =\n  TouchHistoryMath.currentCentroidXOfTouchesChangedAfter;\nconst currentCentroidYOfTouchesChangedAfter =\n  TouchHistoryMath.currentCentroidYOfTouchesChangedAfter;\nconst previousCentroidXOfTouchesChangedAfter =\n  TouchHistoryMath.previousCentroidXOfTouchesChangedAfter;\nconst previousCentroidYOfTouchesChangedAfter =\n  TouchHistoryMath.previousCentroidYOfTouchesChangedAfter;\nconst currentCentroidX = TouchHistoryMath.currentCentroidX;\nconst currentCentroidY = TouchHistoryMath.currentCentroidY;\n\n/**\n * `PanResponder` reconciles several touches into a single gesture. It makes\n * single-touch gestures resilient to extra touches, and can be used to\n * recognize simple multi-touch gestures.\n *\n * By default, `PanResponder` holds an `InteractionManager` handle to block\n * long-running JS events from interrupting active gestures.\n *\n * It provides a predictable wrapper of the responder handlers provided by the\n * [gesture responder system](docs/gesture-responder-system.html).\n * For each handler, it provides a new `gestureState` object alongside the\n * native event object:\n *\n * ```\n * onPanResponderMove: (event, gestureState) => {}\n * ```\n *\n * A native event is a synthetic touch event with the following form:\n *\n *  - `nativeEvent`\n *      + `changedTouches` - Array of all touch events that have changed since the last event\n *      + `identifier` - The ID of the touch\n *      + `locationX` - The X position of the touch, relative to the element\n *      + `locationY` - The Y position of the touch, relative to the element\n *      + `pageX` - The X position of the touch, relative to the root element\n *      + `pageY` - The Y position of the touch, relative to the root element\n *      + `target` - The node id of the element receiving the touch event\n *      + `timestamp` - A time identifier for the touch, useful for velocity calculation\n *      + `touches` - Array of all current touches on the screen\n *\n * A `gestureState` object has the following:\n *\n *  - `stateID` - ID of the gestureState- persisted as long as there at least\n *     one touch on screen\n *  - `moveX` - the latest screen coordinates of the recently-moved touch\n *  - `moveY` - the latest screen coordinates of the recently-moved touch\n *  - `x0` - the screen coordinates of the responder grant\n *  - `y0` - the screen coordinates of the responder grant\n *  - `dx` - accumulated distance of the gesture since the touch started\n *  - `dy` - accumulated distance of the gesture since the touch started\n *  - `vx` - current velocity of the gesture\n *  - `vy` - current velocity of the gesture\n *  - `numberActiveTouches` - Number of touches currently on screen\n *\n * ### Basic Usage\n *\n * ```\n *   componentWillMount: function() {\n *     this._panResponder = PanResponder.create({\n *       // Ask to be the responder:\n *       onStartShouldSetPanResponder: (evt, gestureState) => true,\n *       onStartShouldSetPanResponderCapture: (evt, gestureState) => true,\n *       onMoveShouldSetPanResponder: (evt, gestureState) => true,\n *       onMoveShouldSetPanResponderCapture: (evt, gestureState) => true,\n *\n *       onPanResponderGrant: (evt, gestureState) => {\n *         // The gesture has started. Show visual feedback so the user knows\n *         // what is happening!\n *\n *         // gestureState.d{x,y} will be set to zero now\n *       },\n *       onPanResponderMove: (evt, gestureState) => {\n *         // The most recent move distance is gestureState.move{X,Y}\n *\n *         // The accumulated gesture distance since becoming responder is\n *         // gestureState.d{x,y}\n *       },\n *       onPanResponderTerminationRequest: (evt, gestureState) => true,\n *       onPanResponderRelease: (evt, gestureState) => {\n *         // The user has released all touches while this view is the\n *         // responder. This typically means a gesture has succeeded\n *       },\n *       onPanResponderTerminate: (evt, gestureState) => {\n *         // Another component has become the responder, so this gesture\n *         // should be cancelled\n *       },\n *       onShouldBlockNativeResponder: (evt, gestureState) => {\n *         // Returns whether this component should block native components from becoming the JS\n *         // responder. Returns true by default. Is currently only supported on android.\n *         return true;\n *       },\n *     });\n *   },\n *\n *   render: function() {\n *     return (\n *       <View {...this._panResponder.panHandlers} />\n *     );\n *   },\n *\n * ```\n *\n * ### Working Example\n *\n * To see it in action, try the\n * [PanResponder example in RNTester](https://github.com/facebook/react-native/blob/HEAD/packages/rn-tester/js/examples/PanResponder/PanResponderExample.js)\n */\n\nexport type GestureState = {|\n  /**\n   * ID of the gestureState - persisted as long as there at least one touch on screen\n   */\n  stateID: number,\n\n  /**\n   * The latest screen coordinates of the recently-moved touch\n   */\n  moveX: number,\n\n  /**\n   * The latest screen coordinates of the recently-moved touch\n   */\n  moveY: number,\n\n  /**\n   * The screen coordinates of the responder grant\n   */\n  x0: number,\n\n  /**\n   * The screen coordinates of the responder grant\n   */\n  y0: number,\n\n  /**\n   * Accumulated distance of the gesture since the touch started\n   */\n  dx: number,\n\n  /**\n   * Accumulated distance of the gesture since the touch started\n   */\n  dy: number,\n\n  /**\n   * Current velocity of the gesture\n   */\n  vx: number,\n\n  /**\n   * Current velocity of the gesture\n   */\n  vy: number,\n\n  /**\n   * Number of touches currently on screen\n   */\n  numberActiveTouches: number,\n\n  /**\n   * All `gestureState` accounts for timeStamps up until this value\n   *\n   * @private\n   */\n  _accountsForMovesUpTo: number,\n|};\n\ntype ActiveCallback = (\n  event: PressEvent,\n  gestureState: GestureState,\n) => boolean;\n\ntype PassiveCallback = (event: PressEvent, gestureState: GestureState) => mixed;\n\nexport type PanHandlers = {|\n  onMoveShouldSetResponder: (event: PressEvent) => boolean,\n  onMoveShouldSetResponderCapture: (event: PressEvent) => boolean,\n  onResponderEnd: (event: PressEvent) => void,\n  onResponderGrant: (event: PressEvent) => boolean,\n  onResponderMove: (event: PressEvent) => void,\n  onResponderReject: (event: PressEvent) => void,\n  onResponderRelease: (event: PressEvent) => void,\n  onResponderStart: (event: PressEvent) => void,\n  onResponderTerminate: (event: PressEvent) => void,\n  onResponderTerminationRequest: (event: PressEvent) => boolean,\n  onStartShouldSetResponder: (event: PressEvent) => boolean,\n  onStartShouldSetResponderCapture: (event: PressEvent) => boolean,\n|};\n\ntype PanResponderConfig = $ReadOnly<{|\n  onMoveShouldSetPanResponder?: ?ActiveCallback,\n  onMoveShouldSetPanResponderCapture?: ?ActiveCallback,\n  onStartShouldSetPanResponder?: ?ActiveCallback,\n  onStartShouldSetPanResponderCapture?: ?ActiveCallback,\n  /**\n   * The body of `onResponderGrant` returns a bool, but the vast majority of\n   * callsites return void and this TODO notice is found in it:\n   *   TODO: t7467124 investigate if this can be removed\n   */\n  onPanResponderGrant?: ?(PassiveCallback | ActiveCallback),\n  onPanResponderReject?: ?PassiveCallback,\n  onPanResponderStart?: ?PassiveCallback,\n  onPanResponderEnd?: ?PassiveCallback,\n  onPanResponderRelease?: ?PassiveCallback,\n  onPanResponderMove?: ?PassiveCallback,\n  onPanResponderTerminate?: ?PassiveCallback,\n  onPanResponderTerminationRequest?: ?ActiveCallback,\n  onShouldBlockNativeResponder?: ?ActiveCallback,\n|}>;\n\nconst PanResponder = {\n  /**\n   *\n   * A graphical explanation of the touch data flow:\n   *\n   * +----------------------------+             +--------------------------------+\n   * | ResponderTouchHistoryStore |             |TouchHistoryMath                |\n   * +----------------------------+             +----------+---------------------+\n   * |Global store of touchHistory|             |Allocation-less math util       |\n   * |including activeness, start |             |on touch history (centroids     |\n   * |position, prev/cur position.|             |and multitouch movement etc)    |\n   * |                            |             |                                |\n   * +----^-----------------------+             +----^---------------------------+\n   *      |                                          |\n   *      | (records relevant history                |\n   *      |  of touches relevant for                 |\n   *      |  implementing higher level               |\n   *      |  gestures)                               |\n   *      |                                          |\n   * +----+-----------------------+             +----|---------------------------+\n   * | ResponderEventPlugin       |             |    |   Your App/Component      |\n   * +----------------------------+             +----|---------------------------+\n   * |Negotiates which view gets  | Low level   |    |             High level    |\n   * |onResponderMove events.     | events w/   |  +-+-------+     events w/     |\n   * |Also records history into   | touchHistory|  |   Pan   |     multitouch +  |\n   * |ResponderTouchHistoryStore. +---------------->Responder+-----> accumulative|\n   * +----------------------------+ attached to |  |         |     distance and  |\n   *                                 each event |  +---------+     velocity.     |\n   *                                            |                                |\n   *                                            |                                |\n   *                                            +--------------------------------+\n   *\n   *\n   *\n   * Gesture that calculates cumulative movement over time in a way that just\n   * \"does the right thing\" for multiple touches. The \"right thing\" is very\n   * nuanced. When moving two touches in opposite directions, the cumulative\n   * distance is zero in each dimension. When two touches move in parallel five\n   * pixels in the same direction, the cumulative distance is five, not ten. If\n   * two touches start, one moves five in a direction, then stops and the other\n   * touch moves fives in the same direction, the cumulative distance is ten.\n   *\n   * This logic requires a kind of processing of time \"clusters\" of touch events\n   * so that two touch moves that essentially occur in parallel but move every\n   * other frame respectively, are considered part of the same movement.\n   *\n   * Explanation of some of the non-obvious fields:\n   *\n   * - moveX/moveY: If no move event has been observed, then `(moveX, moveY)` is\n   *   invalid. If a move event has been observed, `(moveX, moveY)` is the\n   *   centroid of the most recently moved \"cluster\" of active touches.\n   *   (Currently all move have the same timeStamp, but later we should add some\n   *   threshold for what is considered to be \"moving\"). If a palm is\n   *   accidentally counted as a touch, but a finger is moving greatly, the palm\n   *   will move slightly, but we only want to count the single moving touch.\n   * - x0/y0: Centroid location (non-cumulative) at the time of becoming\n   *   responder.\n   * - dx/dy: Cumulative touch distance - not the same thing as sum of each touch\n   *   distance. Accounts for touch moves that are clustered together in time,\n   *   moving the same direction. Only valid when currently responder (otherwise,\n   *   it only represents the drag distance below the threshold).\n   * - vx/vy: Velocity.\n   */\n\n  _initializeGestureState(gestureState: GestureState) {\n    gestureState.moveX = 0;\n    gestureState.moveY = 0;\n    gestureState.x0 = 0;\n    gestureState.y0 = 0;\n    gestureState.dx = 0;\n    gestureState.dy = 0;\n    gestureState.vx = 0;\n    gestureState.vy = 0;\n    gestureState.numberActiveTouches = 0;\n    // All `gestureState` accounts for timeStamps up until:\n    gestureState._accountsForMovesUpTo = 0;\n  },\n\n  /**\n   * This is nuanced and is necessary. It is incorrect to continuously take all\n   * active *and* recently moved touches, find the centroid, and track how that\n   * result changes over time. Instead, we must take all recently moved\n   * touches, and calculate how the centroid has changed just for those\n   * recently moved touches, and append that change to an accumulator. This is\n   * to (at least) handle the case where the user is moving three fingers, and\n   * then one of the fingers stops but the other two continue.\n   *\n   * This is very different than taking all of the recently moved touches and\n   * storing their centroid as `dx/dy`. For correctness, we must *accumulate\n   * changes* in the centroid of recently moved touches.\n   *\n   * There is also some nuance with how we handle multiple moved touches in a\n   * single event. With the way `ReactNativeEventEmitter` dispatches touches as\n   * individual events, multiple touches generate two 'move' events, each of\n   * them triggering `onResponderMove`. But with the way `PanResponder` works,\n   * all of the gesture inference is performed on the first dispatch, since it\n   * looks at all of the touches (even the ones for which there hasn't been a\n   * native dispatch yet). Therefore, `PanResponder` does not call\n   * `onResponderMove` passed the first dispatch. This diverges from the\n   * typical responder callback pattern (without using `PanResponder`), but\n   * avoids more dispatches than necessary.\n   */\n  _updateGestureStateOnMove(\n    gestureState: GestureState,\n    touchHistory: $PropertyType<PressEvent, 'touchHistory'>,\n  ) {\n    gestureState.numberActiveTouches = touchHistory.numberActiveTouches;\n    gestureState.moveX = currentCentroidXOfTouchesChangedAfter(\n      touchHistory,\n      gestureState._accountsForMovesUpTo,\n    );\n    gestureState.moveY = currentCentroidYOfTouchesChangedAfter(\n      touchHistory,\n      gestureState._accountsForMovesUpTo,\n    );\n    const movedAfter = gestureState._accountsForMovesUpTo;\n    const prevX = previousCentroidXOfTouchesChangedAfter(\n      touchHistory,\n      movedAfter,\n    );\n    const x = currentCentroidXOfTouchesChangedAfter(touchHistory, movedAfter);\n    const prevY = previousCentroidYOfTouchesChangedAfter(\n      touchHistory,\n      movedAfter,\n    );\n    const y = currentCentroidYOfTouchesChangedAfter(touchHistory, movedAfter);\n    const nextDX = gestureState.dx + (x - prevX);\n    const nextDY = gestureState.dy + (y - prevY);\n\n    // TODO: This must be filtered intelligently.\n    const dt =\n      touchHistory.mostRecentTimeStamp - gestureState._accountsForMovesUpTo;\n    gestureState.vx = (nextDX - gestureState.dx) / dt;\n    gestureState.vy = (nextDY - gestureState.dy) / dt;\n\n    gestureState.dx = nextDX;\n    gestureState.dy = nextDY;\n    gestureState._accountsForMovesUpTo = touchHistory.mostRecentTimeStamp;\n  },\n\n  /**\n   * @param {object} config Enhanced versions of all of the responder callbacks\n   * that provide not only the typical `ResponderSyntheticEvent`, but also the\n   * `PanResponder` gesture state.  Simply replace the word `Responder` with\n   * `PanResponder` in each of the typical `onResponder*` callbacks. For\n   * example, the `config` object would look like:\n   *\n   *  - `onMoveShouldSetPanResponder: (e, gestureState) => {...}`\n   *  - `onMoveShouldSetPanResponderCapture: (e, gestureState) => {...}`\n   *  - `onStartShouldSetPanResponder: (e, gestureState) => {...}`\n   *  - `onStartShouldSetPanResponderCapture: (e, gestureState) => {...}`\n   *  - `onPanResponderReject: (e, gestureState) => {...}`\n   *  - `onPanResponderGrant: (e, gestureState) => {...}`\n   *  - `onPanResponderStart: (e, gestureState) => {...}`\n   *  - `onPanResponderEnd: (e, gestureState) => {...}`\n   *  - `onPanResponderRelease: (e, gestureState) => {...}`\n   *  - `onPanResponderMove: (e, gestureState) => {...}`\n   *  - `onPanResponderTerminate: (e, gestureState) => {...}`\n   *  - `onPanResponderTerminationRequest: (e, gestureState) => {...}`\n   *  - `onShouldBlockNativeResponder: (e, gestureState) => {...}`\n   *\n   *  In general, for events that have capture equivalents, we update the\n   *  gestureState once in the capture phase and can use it in the bubble phase\n   *  as well.\n   *\n   *  Be careful with onStartShould* callbacks. They only reflect updated\n   *  `gestureState` for start/end events that bubble/capture to the Node.\n   *  Once the node is the responder, you can rely on every start/end event\n   *  being processed by the gesture and `gestureState` being updated\n   *  accordingly. (numberActiveTouches) may not be totally accurate unless you\n   *  are the responder.\n   */\n  create(config: PanResponderConfig): {\n    getInteractionHandle: () => ?number,\n    panHandlers: PanHandlers,\n  } {\n    const interactionState = {\n      handle: (null: ?number),\n    };\n    const gestureState: GestureState = {\n      // Useful for debugging\n      stateID: Math.random(),\n      moveX: 0,\n      moveY: 0,\n      x0: 0,\n      y0: 0,\n      dx: 0,\n      dy: 0,\n      vx: 0,\n      vy: 0,\n      numberActiveTouches: 0,\n      _accountsForMovesUpTo: 0,\n    };\n    const panHandlers = {\n      onStartShouldSetResponder(event: PressEvent): boolean {\n        return config.onStartShouldSetPanResponder == null\n          ? false\n          : config.onStartShouldSetPanResponder(event, gestureState);\n      },\n      onMoveShouldSetResponder(event: PressEvent): boolean {\n        return config.onMoveShouldSetPanResponder == null\n          ? false\n          : config.onMoveShouldSetPanResponder(event, gestureState);\n      },\n      onStartShouldSetResponderCapture(event: PressEvent): boolean {\n        // TODO: Actually, we should reinitialize the state any time\n        // touches.length increases from 0 active to > 0 active.\n        if (event.nativeEvent.touches.length === 1) {\n          PanResponder._initializeGestureState(gestureState);\n        }\n        gestureState.numberActiveTouches =\n          event.touchHistory.numberActiveTouches;\n        return config.onStartShouldSetPanResponderCapture != null\n          ? config.onStartShouldSetPanResponderCapture(event, gestureState)\n          : false;\n      },\n\n      onMoveShouldSetResponderCapture(event: PressEvent): boolean {\n        const touchHistory = event.touchHistory;\n        // Responder system incorrectly dispatches should* to current responder\n        // Filter out any touch moves past the first one - we would have\n        // already processed multi-touch geometry during the first event.\n        if (\n          gestureState._accountsForMovesUpTo ===\n          touchHistory.mostRecentTimeStamp\n        ) {\n          return false;\n        }\n        PanResponder._updateGestureStateOnMove(gestureState, touchHistory);\n        return config.onMoveShouldSetPanResponderCapture\n          ? config.onMoveShouldSetPanResponderCapture(event, gestureState)\n          : false;\n      },\n\n      onResponderGrant(event: PressEvent): boolean {\n        if (!interactionState.handle) {\n          interactionState.handle =\n            InteractionManager.createInteractionHandle();\n        }\n        gestureState.x0 = currentCentroidX(event.touchHistory);\n        gestureState.y0 = currentCentroidY(event.touchHistory);\n        gestureState.dx = 0;\n        gestureState.dy = 0;\n        if (config.onPanResponderGrant) {\n          config.onPanResponderGrant(event, gestureState);\n        }\n        // TODO: t7467124 investigate if this can be removed\n        return config.onShouldBlockNativeResponder == null\n          ? true\n          : config.onShouldBlockNativeResponder(event, gestureState);\n      },\n\n      onResponderReject(event: PressEvent): void {\n        clearInteractionHandle(\n          interactionState,\n          config.onPanResponderReject,\n          event,\n          gestureState,\n        );\n      },\n\n      onResponderRelease(event: PressEvent): void {\n        clearInteractionHandle(\n          interactionState,\n          config.onPanResponderRelease,\n          event,\n          gestureState,\n        );\n        PanResponder._initializeGestureState(gestureState);\n      },\n\n      onResponderStart(event: PressEvent): void {\n        const touchHistory = event.touchHistory;\n        gestureState.numberActiveTouches = touchHistory.numberActiveTouches;\n        if (config.onPanResponderStart) {\n          config.onPanResponderStart(event, gestureState);\n        }\n      },\n\n      onResponderMove(event: PressEvent): void {\n        const touchHistory = event.touchHistory;\n        // Guard against the dispatch of two touch moves when there are two\n        // simultaneously changed touches.\n        if (\n          gestureState._accountsForMovesUpTo ===\n          touchHistory.mostRecentTimeStamp\n        ) {\n          return;\n        }\n        // Filter out any touch moves past the first one - we would have\n        // already processed multi-touch geometry during the first event.\n        PanResponder._updateGestureStateOnMove(gestureState, touchHistory);\n        if (config.onPanResponderMove) {\n          config.onPanResponderMove(event, gestureState);\n        }\n      },\n\n      onResponderEnd(event: PressEvent): void {\n        const touchHistory = event.touchHistory;\n        gestureState.numberActiveTouches = touchHistory.numberActiveTouches;\n        clearInteractionHandle(\n          interactionState,\n          config.onPanResponderEnd,\n          event,\n          gestureState,\n        );\n      },\n\n      onResponderTerminate(event: PressEvent): void {\n        clearInteractionHandle(\n          interactionState,\n          config.onPanResponderTerminate,\n          event,\n          gestureState,\n        );\n        PanResponder._initializeGestureState(gestureState);\n      },\n\n      onResponderTerminationRequest(event: PressEvent): boolean {\n        return config.onPanResponderTerminationRequest == null\n          ? true\n          : config.onPanResponderTerminationRequest(event, gestureState);\n      },\n    };\n    return {\n      panHandlers,\n      getInteractionHandle(): ?number {\n        return interactionState.handle;\n      },\n    };\n  },\n};\n\nfunction clearInteractionHandle(\n  interactionState: {handle: ?number, ...},\n  callback: ?(ActiveCallback | PassiveCallback),\n  event: PressEvent,\n  gestureState: GestureState,\n) {\n  if (interactionState.handle) {\n    InteractionManager.clearInteractionHandle(interactionState.handle);\n    interactionState.handle = null;\n  }\n  if (callback) {\n    callback(event, gestureState);\n  }\n}\n\nexport type PanResponderInstance = ReturnType<(typeof PanResponder)['create']>;\n\nexport default PanResponder;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict\n */\n\n'use strict';\n\nconst infoLog = require('../Utilities/infoLog');\nconst invariant = require('invariant');\n\ntype SimpleTask = {\n  name: string,\n  run: () => void,\n};\ntype PromiseTask = {\n  name: string,\n  gen: () => Promise<void>,\n};\nexport type Task = SimpleTask | PromiseTask | (() => void);\n\nconst DEBUG: false = false;\n\n/**\n * TaskQueue - A system for queueing and executing a mix of simple callbacks and\n * trees of dependent tasks based on Promises. No tasks are executed unless\n * `processNext` is called.\n *\n * `enqueue` takes a Task object with either a simple `run` callback, or a\n * `gen` function that returns a `Promise` and puts it in the queue.  If a gen\n * function is supplied, then the promise it returns will block execution of\n * tasks already in the queue until it resolves. This can be used to make sure\n * the first task is fully resolved (including asynchronous dependencies that\n * also schedule more tasks via `enqueue`) before starting on the next task.\n * The `onMoreTasks` constructor argument is used to inform the owner that an\n * async task has resolved and that the queue should be processed again.\n *\n * Note: Tasks are only actually executed with explicit calls to `processNext`.\n */\nclass TaskQueue {\n  /**\n   * TaskQueue instances are self contained and independent, so multiple tasks\n   * of varying semantics and priority can operate together.\n   *\n   * `onMoreTasks` is invoked when `PromiseTask`s resolve if there are more\n   * tasks to process.\n   */\n  constructor({onMoreTasks}: {onMoreTasks: () => void, ...}) {\n    this._onMoreTasks = onMoreTasks;\n    this._queueStack = [{tasks: [], popable: false}];\n  }\n\n  /**\n   * Add a task to the queue.  It is recommended to name your tasks for easier\n   * async debugging. Tasks will not be executed until `processNext` is called\n   * explicitly.\n   */\n  enqueue(task: Task): void {\n    this._getCurrentQueue().push(task);\n  }\n\n  enqueueTasks(tasks: Array<Task>): void {\n    tasks.forEach(task => this.enqueue(task));\n  }\n\n  cancelTasks(tasksToCancel: Array<Task>): void {\n    // search through all tasks and remove them.\n    this._queueStack = this._queueStack\n      .map(queue => ({\n        ...queue,\n        tasks: queue.tasks.filter(task => tasksToCancel.indexOf(task) === -1),\n      }))\n      .filter((queue, idx) => queue.tasks.length > 0 || idx === 0);\n  }\n\n  /**\n   * Check to see if `processNext` should be called.\n   *\n   * @returns {boolean} Returns true if there are tasks that are ready to be\n   * processed with `processNext`, or returns false if there are no more tasks\n   * to be processed right now, although there may be tasks in the queue that\n   * are blocked by earlier `PromiseTask`s that haven't resolved yet.\n   * `onMoreTasks` will be called after each `PromiseTask` resolves if there are\n   * tasks ready to run at that point.\n   */\n  hasTasksToProcess(): boolean {\n    return this._getCurrentQueue().length > 0;\n  }\n\n  /**\n   * Executes the next task in the queue.\n   */\n  processNext(): void {\n    const queue = this._getCurrentQueue();\n    if (queue.length) {\n      const task = queue.shift();\n      try {\n        if (typeof task === 'object' && task.gen) {\n          DEBUG && infoLog('TaskQueue: genPromise for task ' + task.name);\n          this._genPromise(task);\n        } else if (typeof task === 'object' && task.run) {\n          DEBUG && infoLog('TaskQueue: run task ' + task.name);\n          task.run();\n        } else {\n          invariant(\n            typeof task === 'function',\n            'Expected Function, SimpleTask, or PromiseTask, but got:\\n' +\n              JSON.stringify(task, null, 2),\n          );\n          DEBUG && infoLog('TaskQueue: run anonymous task');\n          task();\n        }\n      } catch (e) {\n        e.message =\n          'TaskQueue: Error with task ' + (task.name || '') + ': ' + e.message;\n        throw e;\n      }\n    }\n  }\n\n  _queueStack: Array<{\n    tasks: Array<Task>,\n    popable: boolean,\n    ...\n  }>;\n  _onMoreTasks: () => void;\n\n  _getCurrentQueue(): Array<Task> {\n    const stackIdx = this._queueStack.length - 1;\n    const queue = this._queueStack[stackIdx];\n    if (\n      queue.popable &&\n      queue.tasks.length === 0 &&\n      this._queueStack.length > 1\n    ) {\n      this._queueStack.pop();\n      DEBUG &&\n        infoLog('TaskQueue: popped queue: ', {\n          stackIdx,\n          queueStackSize: this._queueStack.length,\n        });\n      return this._getCurrentQueue();\n    } else {\n      return queue.tasks;\n    }\n  }\n\n  _genPromise(task: PromiseTask) {\n    // Each async task pushes it's own queue onto the queue stack. This\n    // effectively defers execution of previously queued tasks until the promise\n    // resolves, at which point we allow the new queue to be popped, which\n    // happens once it is fully processed.\n    this._queueStack.push({tasks: [], popable: false});\n    const stackIdx = this._queueStack.length - 1;\n    const stackItem = this._queueStack[stackIdx];\n    DEBUG && infoLog('TaskQueue: push new queue: ', {stackIdx});\n    DEBUG && infoLog('TaskQueue: exec gen task ' + task.name);\n    task\n      .gen()\n      .then(() => {\n        DEBUG &&\n          infoLog('TaskQueue: onThen for gen task ' + task.name, {\n            stackIdx,\n            queueStackSize: this._queueStack.length,\n          });\n        stackItem.popable = true;\n        this.hasTasksToProcess() && this._onMoreTasks();\n      })\n      .catch(ex => {\n        setTimeout(() => {\n          ex.message = `TaskQueue: Error resolving Promise in task ${task.name}: ${ex.message}`;\n          throw ex;\n        }, 0);\n      });\n  }\n}\n\nmodule.exports = TaskQueue;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\nconst TouchHistoryMath = {\n  /**\n   * This code is optimized and not intended to look beautiful. This allows\n   * computing of touch centroids that have moved after `touchesChangedAfter`\n   * timeStamp. You can compute the current centroid involving all touches\n   * moves after `touchesChangedAfter`, or you can compute the previous\n   * centroid of all touches that were moved after `touchesChangedAfter`.\n   *\n   * @param {TouchHistoryMath} touchHistory Standard Responder touch track\n   * data.\n   * @param {number} touchesChangedAfter timeStamp after which moved touches\n   * are considered \"actively moving\" - not just \"active\".\n   * @param {boolean} isXAxis Consider `x` dimension vs. `y` dimension.\n   * @param {boolean} ofCurrent Compute current centroid for actively moving\n   * touches vs. previous centroid of now actively moving touches.\n   * @return {number} value of centroid in specified dimension.\n   */\n  centroidDimension: function (\n    touchHistory,\n    touchesChangedAfter,\n    isXAxis,\n    ofCurrent,\n  ) {\n    const touchBank = touchHistory.touchBank;\n    let total = 0;\n    let count = 0;\n\n    const oneTouchData =\n      touchHistory.numberActiveTouches === 1\n        ? touchHistory.touchBank[touchHistory.indexOfSingleActiveTouch]\n        : null;\n\n    if (oneTouchData !== null) {\n      if (\n        oneTouchData.touchActive &&\n        oneTouchData.currentTimeStamp > touchesChangedAfter\n      ) {\n        total +=\n          ofCurrent && isXAxis\n            ? oneTouchData.currentPageX\n            : ofCurrent && !isXAxis\n            ? oneTouchData.currentPageY\n            : !ofCurrent && isXAxis\n            ? oneTouchData.previousPageX\n            : oneTouchData.previousPageY;\n        count = 1;\n      }\n    } else {\n      for (let i = 0; i < touchBank.length; i++) {\n        const touchTrack = touchBank[i];\n        if (\n          touchTrack !== null &&\n          touchTrack !== undefined &&\n          touchTrack.touchActive &&\n          touchTrack.currentTimeStamp >= touchesChangedAfter\n        ) {\n          let toAdd; // Yuck, program temporarily in invalid state.\n          if (ofCurrent && isXAxis) {\n            toAdd = touchTrack.currentPageX;\n          } else if (ofCurrent && !isXAxis) {\n            toAdd = touchTrack.currentPageY;\n          } else if (!ofCurrent && isXAxis) {\n            toAdd = touchTrack.previousPageX;\n          } else {\n            toAdd = touchTrack.previousPageY;\n          }\n          total += toAdd;\n          count++;\n        }\n      }\n    }\n    return count > 0 ? total / count : TouchHistoryMath.noCentroid;\n  },\n\n  currentCentroidXOfTouchesChangedAfter: function (\n    touchHistory,\n    touchesChangedAfter,\n  ) {\n    return TouchHistoryMath.centroidDimension(\n      touchHistory,\n      touchesChangedAfter,\n      true, // isXAxis\n      true, // ofCurrent\n    );\n  },\n\n  currentCentroidYOfTouchesChangedAfter: function (\n    touchHistory,\n    touchesChangedAfter,\n  ) {\n    return TouchHistoryMath.centroidDimension(\n      touchHistory,\n      touchesChangedAfter,\n      false, // isXAxis\n      true, // ofCurrent\n    );\n  },\n\n  previousCentroidXOfTouchesChangedAfter: function (\n    touchHistory,\n    touchesChangedAfter,\n  ) {\n    return TouchHistoryMath.centroidDimension(\n      touchHistory,\n      touchesChangedAfter,\n      true, // isXAxis\n      false, // ofCurrent\n    );\n  },\n\n  previousCentroidYOfTouchesChangedAfter: function (\n    touchHistory,\n    touchesChangedAfter,\n  ) {\n    return TouchHistoryMath.centroidDimension(\n      touchHistory,\n      touchesChangedAfter,\n      false, // isXAxis\n      false, // ofCurrent\n    );\n  },\n\n  currentCentroidX: function (touchHistory) {\n    return TouchHistoryMath.centroidDimension(\n      touchHistory,\n      0, // touchesChangedAfter\n      true, // isXAxis\n      true, // ofCurrent\n    );\n  },\n\n  currentCentroidY: function (touchHistory) {\n    return TouchHistoryMath.centroidDimension(\n      touchHistory,\n      0, // touchesChangedAfter\n      false, // isXAxis\n      true, // ofCurrent\n    );\n  },\n\n  noCentroid: -1,\n};\n\nmodule.exports = TouchHistoryMath;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nimport type {\n  LayoutAnimationConfig as LayoutAnimationConfig_,\n  LayoutAnimationProperty,\n  LayoutAnimationType,\n} from '../Renderer/shims/ReactNativeTypes';\n\nimport * as ReactNativeFeatureFlags from '../../src/private/featureflags/ReactNativeFeatureFlags';\nimport {getFabricUIManager} from '../ReactNative/FabricUIManager';\nimport Platform from '../Utilities/Platform';\n\nconst UIManager = require('../ReactNative/UIManager');\n\n// Reexport type\nexport type LayoutAnimationConfig = LayoutAnimationConfig_;\n\ntype OnAnimationDidEndCallback = () => void;\ntype OnAnimationDidFailCallback = () => void;\n\nlet isLayoutAnimationEnabled: boolean =\n  ReactNativeFeatureFlags.isLayoutAnimationEnabled();\n\nfunction setEnabled(value: boolean) {\n  isLayoutAnimationEnabled = isLayoutAnimationEnabled;\n}\n\n/**\n * Configures the next commit to be animated.\n *\n * onAnimationDidEnd is guaranteed to be called when the animation completes.\n * onAnimationDidFail is *never* called in the classic, pre-Fabric renderer,\n * and never has been. In the new renderer (Fabric) it is called only if configuration\n * parsing fails.\n */\nfunction configureNext(\n  config: LayoutAnimationConfig,\n  onAnimationDidEnd?: OnAnimationDidEndCallback,\n  onAnimationDidFail?: OnAnimationDidFailCallback,\n) {\n  if (Platform.isDisableAnimations) {\n    return;\n  }\n\n  if (!isLayoutAnimationEnabled) {\n    return;\n  }\n\n  // Since LayoutAnimations may possibly be disabled for now on iOS (Fabric),\n  // or Android (non-Fabric) we race a setTimeout with animation completion,\n  // in case onComplete is never called\n  // from native. Once LayoutAnimations+Fabric unconditionally ship everywhere, we can\n  // delete this mechanism at least in the Fabric branch.\n  let animationCompletionHasRun = false;\n  const onAnimationComplete = () => {\n    if (animationCompletionHasRun) {\n      return;\n    }\n    animationCompletionHasRun = true;\n    clearTimeout(raceWithAnimationId);\n    onAnimationDidEnd?.();\n  };\n  const raceWithAnimationId = setTimeout(\n    onAnimationComplete,\n    (config.duration ?? 0) + 17 /* one frame + 1ms */,\n  );\n\n  // In Fabric, LayoutAnimations are unconditionally enabled for Android, and\n  // conditionally enabled on iOS (pending fully shipping; this is a temporary state).\n  const FabricUIManager = getFabricUIManager();\n  if (FabricUIManager?.configureNextLayoutAnimation) {\n    global?.nativeFabricUIManager?.configureNextLayoutAnimation(\n      config,\n      onAnimationComplete,\n      onAnimationDidFail ??\n        function () {} /* this will only be called if configuration parsing fails */,\n    );\n    return;\n  }\n\n  // This will only run if Fabric is *not* installed.\n  // If you have Fabric + non-Fabric running in the same VM, non-Fabric LayoutAnimations\n  // will not work.\n  if (UIManager?.configureNextLayoutAnimation) {\n    UIManager.configureNextLayoutAnimation(\n      config,\n      onAnimationComplete ?? function () {},\n      onAnimationDidFail ??\n        function () {} /* this should never be called in Non-Fabric */,\n    );\n  }\n}\n\nfunction create(\n  duration: number,\n  type: LayoutAnimationType,\n  property: LayoutAnimationProperty,\n): LayoutAnimationConfig {\n  return {\n    duration,\n    create: {type, property},\n    update: {type},\n    delete: {type, property},\n  };\n}\n\nconst Presets = {\n  easeInEaseOut: (create(\n    300,\n    'easeInEaseOut',\n    'opacity',\n  ): LayoutAnimationConfig),\n  linear: (create(500, 'linear', 'opacity'): LayoutAnimationConfig),\n  spring: {\n    duration: 700,\n    create: {\n      type: 'linear',\n      property: 'opacity',\n    },\n    update: {\n      type: 'spring',\n      springDamping: 0.4,\n    },\n    delete: {\n      type: 'linear',\n      property: 'opacity',\n    },\n  },\n};\n\n/**\n * Automatically animates views to their new positions when the\n * next layout happens.\n *\n * A common way to use this API is to call it before calling `setState`.\n *\n * Note that in order to get this to work on **Android** you need to set the following flags via `UIManager`:\n *\n *     UIManager.setLayoutAnimationEnabledExperimental && UIManager.setLayoutAnimationEnabledExperimental(true);\n */\nconst LayoutAnimation = {\n  /**\n   * Schedules an animation to happen on the next layout.\n   *\n   * @param config Specifies animation properties:\n   *\n   *   - `duration` in milliseconds\n   *   - `create`, `AnimationConfig` for animating in new views\n   *   - `update`, `AnimationConfig` for animating views that have been updated\n   *\n   * @param onAnimationDidEnd Called when the animation finished.\n   * Only supported on iOS.\n   * @param onError Called on error. Only supported on iOS.\n   */\n  configureNext,\n  /**\n   * Helper for creating a config for `configureNext`.\n   */\n  create,\n  Types: Object.freeze({\n    spring: 'spring',\n    linear: 'linear',\n    easeInEaseOut: 'easeInEaseOut',\n    easeIn: 'easeIn',\n    easeOut: 'easeOut',\n    keyboard: 'keyboard',\n  }),\n  Properties: Object.freeze({\n    opacity: 'opacity',\n    scaleX: 'scaleX',\n    scaleY: 'scaleY',\n    scaleXY: 'scaleXY',\n  }),\n  checkConfig(...args: Array<mixed>) {\n    console.error('LayoutAnimation.checkConfig(...) has been disabled.');\n  },\n  Presets,\n  easeInEaseOut: (configureNext.bind(null, Presets.easeInEaseOut): (\n    onAnimationDidEnd?: OnAnimationDidEndCallback,\n  ) => void),\n  linear: (configureNext.bind(null, Presets.linear): (\n    onAnimationDidEnd?: OnAnimationDidEndCallback,\n  ) => void),\n  spring: (configureNext.bind(null, Presets.spring): (\n    onAnimationDidEnd?: OnAnimationDidEndCallback,\n  ) => void),\n  setEnabled,\n};\n\nmodule.exports = LayoutAnimation;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\nimport type {EventSubscription} from '../vendor/emitter/EventEmitter';\n\nimport NativeEventEmitter from '../EventEmitter/NativeEventEmitter';\nimport Platform from '../Utilities/Platform';\nimport NativeIntentAndroid from './NativeIntentAndroid';\nimport NativeLinkingManager from './NativeLinkingManager';\nimport invariant from 'invariant';\nimport nullthrows from 'nullthrows';\n\ntype LinkingEventDefinitions = {\n  url: [{url: string}],\n};\n\n/**\n * `Linking` gives you a general interface to interact with both incoming\n * and outgoing app links.\n *\n * See https://reactnative.dev/docs/linking\n */\nclass Linking extends NativeEventEmitter<LinkingEventDefinitions> {\n  constructor() {\n    super(Platform.OS === 'ios' ? nullthrows(NativeLinkingManager) : undefined);\n  }\n\n  /**\n   * Add a handler to Linking changes by listening to the `url` event type\n   * and providing the handler\n   *\n   * See https://reactnative.dev/docs/linking#addeventlistener\n   */\n  addEventListener<K: $Keys<LinkingEventDefinitions>>(\n    eventType: K,\n    listener: (...$ElementType<LinkingEventDefinitions, K>) => mixed,\n    context: $FlowFixMe,\n  ): EventSubscription {\n    return this.addListener(eventType, listener);\n  }\n\n  /**\n   * Try to open the given `url` with any of the installed apps.\n   *\n   * See https://reactnative.dev/docs/linking#openurl\n   */\n  openURL(url: string): Promise<void> {\n    this._validateURL(url);\n    if (Platform.OS === 'android') {\n      return nullthrows(NativeIntentAndroid).openURL(url);\n    } else {\n      return nullthrows(NativeLinkingManager).openURL(url);\n    }\n  }\n\n  /**\n   * Determine whether or not an installed app can handle a given URL.\n   *\n   * See https://reactnative.dev/docs/linking#canopenurl\n   */\n  canOpenURL(url: string): Promise<boolean> {\n    this._validateURL(url);\n    if (Platform.OS === 'android') {\n      return nullthrows(NativeIntentAndroid).canOpenURL(url);\n    } else {\n      return nullthrows(NativeLinkingManager).canOpenURL(url);\n    }\n  }\n\n  /**\n   * Open app settings.\n   *\n   * See https://reactnative.dev/docs/linking#opensettings\n   */\n  openSettings(): Promise<void> {\n    if (Platform.OS === 'android') {\n      return nullthrows(NativeIntentAndroid).openSettings();\n    } else {\n      return nullthrows(NativeLinkingManager).openSettings();\n    }\n  }\n\n  /**\n   * If the app launch was triggered by an app link,\n   * it will give the link url, otherwise it will give `null`\n   *\n   * See https://reactnative.dev/docs/linking#getinitialurl\n   */\n  getInitialURL(): Promise<?string> {\n    return Platform.OS === 'android'\n      ? nullthrows(NativeIntentAndroid).getInitialURL()\n      : nullthrows(NativeLinkingManager).getInitialURL();\n  }\n\n  /*\n   * Launch an Android intent with extras (optional)\n   *\n   * @platform android\n   *\n   * See https://reactnative.dev/docs/linking#sendintent\n   */\n  sendIntent(\n    action: string,\n    extras?: Array<{\n      key: string,\n      value: string | number | boolean,\n      ...\n    }>,\n  ): Promise<void> {\n    if (Platform.OS === 'android') {\n      return nullthrows(NativeIntentAndroid).sendIntent(action, extras);\n    } else {\n      return new Promise((resolve, reject) => reject(new Error('Unsupported')));\n    }\n  }\n\n  _validateURL(url: string): void {\n    invariant(\n      typeof url === 'string',\n      'Invalid URL: should be a string. Was: ' + url,\n    );\n    invariant(url, 'Invalid URL: cannot be empty');\n  }\n}\n\nmodule.exports = (new Linking(): Linking);\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nexport * from '../../src/private/specs/modules/NativeIntentAndroid';\nimport NativeIntentAndroid from '../../src/private/specs/modules/NativeIntentAndroid';\nexport default NativeIntentAndroid;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nexport * from '../../src/private/specs/modules/NativeLinkingManager';\nimport NativeLinkingManager from '../../src/private/specs/modules/NativeLinkingManager';\nexport default NativeLinkingManager;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\nimport typeof ScrollViewNativeComponent from '../Components/ScrollView/ScrollViewNativeComponent';\nimport type {ViewStyleProp} from '../StyleSheet/StyleSheet';\nimport type {\n  RenderItemProps,\n  RenderItemType,\n  ViewabilityConfigCallbackPair,\n  ViewToken,\n} from '@react-native/virtualized-lists';\n\nimport * as ReactNativeFeatureFlags from '../../src/private/featureflags/ReactNativeFeatureFlags';\nimport {type ScrollResponderType} from '../Components/ScrollView/ScrollView';\nimport {\n  VirtualizedList,\n  keyExtractor as defaultKeyExtractor,\n} from '@react-native/virtualized-lists';\nimport memoizeOne from 'memoize-one';\n\nconst View = require('../Components/View/View');\nconst StyleSheet = require('../StyleSheet/StyleSheet');\nconst deepDiffer = require('../Utilities/differ/deepDiffer');\nconst Platform = require('../Utilities/Platform');\nconst invariant = require('invariant');\nconst React = require('react');\n\ntype RequiredProps<ItemT> = {|\n  /**\n   * An array (or array-like list) of items to render. Other data types can be\n   * used by targeting VirtualizedList directly.\n   */\n  data: ?$ReadOnly<$ArrayLike<ItemT>>,\n|};\ntype OptionalProps<ItemT> = {|\n  /**\n   * Takes an item from `data` and renders it into the list. Example usage:\n   *\n   *     <FlatList\n   *       ItemSeparatorComponent={Platform.OS !== 'android' && ({highlighted}) => (\n   *         <View style={[style.separator, highlighted && {marginLeft: 0}]} />\n   *       )}\n   *       data={[{title: 'Title Text', key: 'item1'}]}\n   *       renderItem={({item, separators}) => (\n   *         <TouchableHighlight\n   *           onPress={() => this._onPress(item)}\n   *           onShowUnderlay={separators.highlight}\n   *           onHideUnderlay={separators.unhighlight}>\n   *           <View style={{backgroundColor: 'white'}}>\n   *             <Text>{item.title}</Text>\n   *           </View>\n   *         </TouchableHighlight>\n   *       )}\n   *     />\n   *\n   * Provides additional metadata like `index` if you need it, as well as a more generic\n   * `separators.updateProps` function which let's you set whatever props you want to change the\n   * rendering of either the leading separator or trailing separator in case the more common\n   * `highlight` and `unhighlight` (which set the `highlighted: boolean` prop) are insufficient for\n   * your use-case.\n   */\n  renderItem?: ?RenderItemType<ItemT>,\n\n  /**\n   * Optional custom style for multi-item rows generated when numColumns > 1.\n   */\n  columnWrapperStyle?: ViewStyleProp,\n  /**\n   * A marker property for telling the list to re-render (since it implements `PureComponent`). If\n   * any of your `renderItem`, Header, Footer, etc. functions depend on anything outside of the\n   * `data` prop, stick it here and treat it immutably.\n   */\n  extraData?: any,\n  /**\n   * `getItemLayout` is an optional optimizations that let us skip measurement of dynamic content if\n   * you know the height of items a priori. `getItemLayout` is the most efficient, and is easy to\n   * use if you have fixed height items, for example:\n   *\n   *     getItemLayout={(data, index) => (\n   *       {length: ITEM_HEIGHT, offset: ITEM_HEIGHT * index, index}\n   *     )}\n   *\n   * Adding `getItemLayout` can be a great performance boost for lists of several hundred items.\n   * Remember to include separator length (height or width) in your offset calculation if you\n   * specify `ItemSeparatorComponent`.\n   */\n  getItemLayout?: (\n    data: ?$ReadOnly<$ArrayLike<ItemT>>,\n    index: number,\n  ) => {\n    length: number,\n    offset: number,\n    index: number,\n    ...\n  },\n  /**\n   * If true, renders items next to each other horizontally instead of stacked vertically.\n   */\n  horizontal?: ?boolean,\n  /**\n   * How many items to render in the initial batch. This should be enough to fill the screen but not\n   * much more. Note these items will never be unmounted as part of the windowed rendering in order\n   * to improve perceived performance of scroll-to-top actions.\n   */\n  initialNumToRender?: ?number,\n  /**\n   * Instead of starting at the top with the first item, start at `initialScrollIndex`. This\n   * disables the \"scroll to top\" optimization that keeps the first `initialNumToRender` items\n   * always rendered and immediately renders the items starting at this initial index. Requires\n   * `getItemLayout` to be implemented.\n   */\n  initialScrollIndex?: ?number,\n  /**\n   * Reverses the direction of scroll. Uses scale transforms of -1.\n   */\n  inverted?: ?boolean,\n  /**\n   * Used to extract a unique key for a given item at the specified index. Key is used for caching\n   * and as the react key to track item re-ordering. The default extractor checks `item.key`, then\n   * falls back to using the index, like React does.\n   */\n  keyExtractor?: ?(item: ItemT, index: number) => string,\n  /**\n   * Multiple columns can only be rendered with `horizontal={false}` and will zig-zag like a\n   * `flexWrap` layout. Items should all be the same height - masonry layouts are not supported.\n   *\n   * The default value is 1.\n   */\n  numColumns?: number,\n  /**\n   * Note: may have bugs (missing content) in some circumstances - use at your own risk.\n   *\n   * This may improve scroll performance for large lists.\n   *\n   * The default value is true for Android.\n   */\n  removeClippedSubviews?: boolean,\n  /**\n   * See `ScrollView` for flow type and further documentation.\n   */\n  fadingEdgeLength?: ?number,\n  /**\n   * Enable an optimization to memoize the item renderer to prevent unnecessary rerenders.\n   */\n  strictMode?: boolean,\n|};\n\n/**\n * Default Props Helper Functions\n * Use the following helper functions for default values\n */\n\n// removeClippedSubviewsOrDefault(this.props.removeClippedSubviews)\nfunction removeClippedSubviewsOrDefault(removeClippedSubviews: ?boolean) {\n  if (ReactNativeFeatureFlags.shouldUseRemoveClippedSubviewsAsDefaultOnIOS()) {\n    return removeClippedSubviews ?? true;\n  } else {\n    return removeClippedSubviews ?? Platform.OS === 'android';\n  }\n}\n\n// numColumnsOrDefault(this.props.numColumns)\nfunction numColumnsOrDefault(numColumns: ?number) {\n  return numColumns ?? 1;\n}\n\nfunction isArrayLike(data: mixed): boolean {\n  // $FlowExpectedError[incompatible-use]\n  return typeof Object(data).length === 'number';\n}\n\ntype FlatListProps<ItemT> = {|\n  ...RequiredProps<ItemT>,\n  ...OptionalProps<ItemT>,\n|};\n\ntype VirtualizedListProps = React.ElementConfig<typeof VirtualizedList>;\n\nexport type Props<ItemT> = {\n  ...$Diff<\n    VirtualizedListProps,\n    {\n      getItem: $PropertyType<VirtualizedListProps, 'getItem'>,\n      getItemCount: $PropertyType<VirtualizedListProps, 'getItemCount'>,\n      getItemLayout: $PropertyType<VirtualizedListProps, 'getItemLayout'>,\n      renderItem: $PropertyType<VirtualizedListProps, 'renderItem'>,\n      keyExtractor: $PropertyType<VirtualizedListProps, 'keyExtractor'>,\n      ...\n    },\n  >,\n  ...FlatListProps<ItemT>,\n  ...\n};\n\n/**\n * A performant interface for rendering simple, flat lists, supporting the most handy features:\n *\n *  - Fully cross-platform.\n *  - Optional horizontal mode.\n *  - Configurable viewability callbacks.\n *  - Header support.\n *  - Footer support.\n *  - Separator support.\n *  - Pull to Refresh.\n *  - Scroll loading.\n *  - ScrollToIndex support.\n *\n * If you need section support, use [`<SectionList>`](docs/sectionlist.html).\n *\n * Minimal Example:\n *\n *     <FlatList\n *       data={[{key: 'a'}, {key: 'b'}]}\n *       renderItem={({item}) => <Text>{item.key}</Text>}\n *     />\n *\n * More complex, multi-select example demonstrating `PureComponent` usage for perf optimization and avoiding bugs.\n *\n * - By binding the `onPressItem` handler, the props will remain `===` and `PureComponent` will\n *   prevent wasteful re-renders unless the actual `id`, `selected`, or `title` props change, even\n *   if the components rendered in `MyListItem` did not have such optimizations.\n * - By passing `extraData={this.state}` to `FlatList` we make sure `FlatList` itself will re-render\n *   when the `state.selected` changes. Without setting this prop, `FlatList` would not know it\n *   needs to re-render any items because it is also a `PureComponent` and the prop comparison will\n *   not show any changes.\n * - `keyExtractor` tells the list to use the `id`s for the react keys instead of the default `key` property.\n *\n *\n *     class MyListItem extends React.PureComponent {\n *       _onPress = () => {\n *         this.props.onPressItem(this.props.id);\n *       };\n *\n *       render() {\n *         const textColor = this.props.selected ? \"red\" : \"black\";\n *         return (\n *           <TouchableOpacity onPress={this._onPress}>\n *             <View>\n *               <Text style={{ color: textColor }}>\n *                 {this.props.title}\n *               </Text>\n *             </View>\n *           </TouchableOpacity>\n *         );\n *       }\n *     }\n *\n *     class MultiSelectList extends React.PureComponent {\n *       state = {selected: (new Map(): Map<string, boolean>)};\n *\n *       _keyExtractor = (item, index) => item.id;\n *\n *       _onPressItem = (id: string) => {\n *         // updater functions are preferred for transactional updates\n *         this.setState((state) => {\n *           // copy the map rather than modifying state.\n *           const selected = new Map(state.selected);\n *           selected.set(id, !selected.get(id)); // toggle\n *           return {selected};\n *         });\n *       };\n *\n *       _renderItem = ({item}) => (\n *         <MyListItem\n *           id={item.id}\n *           onPressItem={this._onPressItem}\n *           selected={!!this.state.selected.get(item.id)}\n *           title={item.title}\n *         />\n *       );\n *\n *       render() {\n *         return (\n *           <FlatList\n *             data={this.props.data}\n *             extraData={this.state}\n *             keyExtractor={this._keyExtractor}\n *             renderItem={this._renderItem}\n *           />\n *         );\n *       }\n *     }\n *\n * This is a convenience wrapper around [`<VirtualizedList>`](docs/virtualizedlist.html),\n * and thus inherits its props (as well as those of `ScrollView`) that aren't explicitly listed\n * here, along with the following caveats:\n *\n * - Internal state is not preserved when content scrolls out of the render window. Make sure all\n *   your data is captured in the item data or external stores like Flux, Redux, or Relay.\n * - This is a `PureComponent` which means that it will not re-render if `props` remain shallow-\n *   equal. Make sure that everything your `renderItem` function depends on is passed as a prop\n *   (e.g. `extraData`) that is not `===` after updates, otherwise your UI may not update on\n *   changes. This includes the `data` prop and parent component state.\n * - In order to constrain memory and enable smooth scrolling, content is rendered asynchronously\n *   offscreen. This means it's possible to scroll faster than the fill rate ands momentarily see\n *   blank content. This is a tradeoff that can be adjusted to suit the needs of each application,\n *   and we are working on improving it behind the scenes.\n * - By default, the list looks for a `key` prop on each item and uses that for the React key.\n *   Alternatively, you can provide a custom `keyExtractor` prop.\n *\n * Also inherits [ScrollView Props](docs/scrollview.html#props), unless it is nested in another FlatList of same orientation.\n */\nclass FlatList<ItemT> extends React.PureComponent<Props<ItemT>, void> {\n  /**\n   * Scrolls to the end of the content. May be janky without `getItemLayout` prop.\n   */\n  scrollToEnd(params?: ?{animated?: ?boolean, ...}) {\n    if (this._listRef) {\n      this._listRef.scrollToEnd(params);\n    }\n  }\n\n  /**\n   * Scrolls to the item at the specified index such that it is positioned in the viewable area\n   * such that `viewPosition` 0 places it at the top, 1 at the bottom, and 0.5 centered in the\n   * middle. `viewOffset` is a fixed number of pixels to offset the final target position.\n   *\n   * Note: cannot scroll to locations outside the render window without specifying the\n   * `getItemLayout` prop.\n   */\n  scrollToIndex(params: {\n    animated?: ?boolean,\n    index: number,\n    viewOffset?: number,\n    viewPosition?: number,\n    ...\n  }) {\n    if (this._listRef) {\n      this._listRef.scrollToIndex(params);\n    }\n  }\n\n  /**\n   * Requires linear scan through data - use `scrollToIndex` instead if possible.\n   *\n   * Note: cannot scroll to locations outside the render window without specifying the\n   * `getItemLayout` prop.\n   */\n  scrollToItem(params: {\n    animated?: ?boolean,\n    item: ItemT,\n    viewOffset?: number,\n    viewPosition?: number,\n    ...\n  }) {\n    if (this._listRef) {\n      this._listRef.scrollToItem(params);\n    }\n  }\n\n  /**\n   * Scroll to a specific content pixel offset in the list.\n   *\n   * Check out [scrollToOffset](docs/virtualizedlist.html#scrolltooffset) of VirtualizedList\n   */\n  scrollToOffset(params: {animated?: ?boolean, offset: number, ...}) {\n    if (this._listRef) {\n      this._listRef.scrollToOffset(params);\n    }\n  }\n\n  /**\n   * Tells the list an interaction has occurred, which should trigger viewability calculations, e.g.\n   * if `waitForInteractions` is true and the user has not scrolled. This is typically called by\n   * taps on items or by navigation actions.\n   */\n  recordInteraction() {\n    if (this._listRef) {\n      this._listRef.recordInteraction();\n    }\n  }\n\n  /**\n   * Displays the scroll indicators momentarily.\n   *\n   * @platform ios\n   */\n  flashScrollIndicators() {\n    if (this._listRef) {\n      this._listRef.flashScrollIndicators();\n    }\n  }\n\n  /**\n   * Provides a handle to the underlying scroll responder.\n   */\n  getScrollResponder(): ?ScrollResponderType {\n    if (this._listRef) {\n      return this._listRef.getScrollResponder();\n    }\n  }\n\n  /**\n   * Provides a reference to the underlying host component\n   */\n  getNativeScrollRef():\n    | ?React.ElementRef<typeof View>\n    | ?React.ElementRef<ScrollViewNativeComponent> {\n    if (this._listRef) {\n      /* $FlowFixMe[incompatible-return] Suppresses errors found when fixing\n       * TextInput typing */\n      return this._listRef.getScrollRef();\n    }\n  }\n\n  getScrollableNode(): any {\n    if (this._listRef) {\n      return this._listRef.getScrollableNode();\n    }\n  }\n\n  setNativeProps(props: {[string]: mixed, ...}) {\n    if (this._listRef) {\n      this._listRef.setNativeProps(props);\n    }\n  }\n\n  constructor(props: Props<ItemT>) {\n    super(props);\n    this._checkProps(this.props);\n    if (this.props.viewabilityConfigCallbackPairs) {\n      this._virtualizedListPairs =\n        this.props.viewabilityConfigCallbackPairs.map(pair => ({\n          viewabilityConfig: pair.viewabilityConfig,\n          onViewableItemsChanged: this._createOnViewableItemsChanged(\n            pair.onViewableItemsChanged,\n          ),\n        }));\n    } else if (this.props.onViewableItemsChanged) {\n      this._virtualizedListPairs.push({\n        /* $FlowFixMe[incompatible-call] (>=0.63.0 site=react_native_fb) This\n         * comment suppresses an error found when Flow v0.63 was deployed. To\n         * see the error delete this comment and run Flow. */\n        viewabilityConfig: this.props.viewabilityConfig,\n        onViewableItemsChanged: this._createOnViewableItemsChanged(\n          // NOTE: we use a wrapper function to allow the actual callback to change\n          // while still keeping the function provided to native to be stable\n          (...args) => {\n            invariant(\n              this.props.onViewableItemsChanged,\n              'Changing the nullability of onViewableItemsChanged is not supported. ' +\n                'Once a function or null is supplied that cannot be changed.',\n            );\n            return this.props.onViewableItemsChanged(...args);\n          },\n        ),\n      });\n    }\n  }\n\n  // $FlowFixMe[missing-local-annot]\n  componentDidUpdate(prevProps: Props<ItemT>) {\n    invariant(\n      prevProps.numColumns === this.props.numColumns,\n      'Changing numColumns on the fly is not supported. Change the key prop on FlatList when ' +\n        'changing the number of columns to force a fresh render of the component.',\n    );\n    invariant(\n      (prevProps.onViewableItemsChanged == null) ===\n        (this.props.onViewableItemsChanged == null),\n      'Changing onViewableItemsChanged nullability on the fly is not supported',\n    );\n    invariant(\n      !deepDiffer(prevProps.viewabilityConfig, this.props.viewabilityConfig),\n      'Changing viewabilityConfig on the fly is not supported',\n    );\n    invariant(\n      prevProps.viewabilityConfigCallbackPairs ===\n        this.props.viewabilityConfigCallbackPairs,\n      'Changing viewabilityConfigCallbackPairs on the fly is not supported',\n    );\n\n    this._checkProps(this.props);\n  }\n\n  _listRef: ?React.ElementRef<typeof VirtualizedList>;\n  _virtualizedListPairs: Array<ViewabilityConfigCallbackPair> = [];\n\n  _captureRef = (ref: ?React.ElementRef<typeof VirtualizedList>) => {\n    this._listRef = ref;\n  };\n\n  // $FlowFixMe[missing-local-annot]\n  _checkProps(props: Props<ItemT>) {\n    const {\n      // $FlowFixMe[prop-missing] this prop doesn't exist, is only used for an invariant\n      getItem,\n      // $FlowFixMe[prop-missing] this prop doesn't exist, is only used for an invariant\n      getItemCount,\n      horizontal,\n      columnWrapperStyle,\n      onViewableItemsChanged,\n      viewabilityConfigCallbackPairs,\n    } = props;\n    const numColumns = numColumnsOrDefault(this.props.numColumns);\n    invariant(\n      !getItem && !getItemCount,\n      'FlatList does not support custom data formats.',\n    );\n    if (numColumns > 1) {\n      invariant(!horizontal, 'numColumns does not support horizontal.');\n    } else {\n      invariant(\n        !columnWrapperStyle,\n        'columnWrapperStyle not supported for single column lists',\n      );\n    }\n    invariant(\n      !(onViewableItemsChanged && viewabilityConfigCallbackPairs),\n      'FlatList does not support setting both onViewableItemsChanged and ' +\n        'viewabilityConfigCallbackPairs.',\n    );\n  }\n\n  _getItem = (\n    data: $ArrayLike<ItemT>,\n    index: number,\n  ): ?(ItemT | $ReadOnlyArray<ItemT>) => {\n    const numColumns = numColumnsOrDefault(this.props.numColumns);\n    if (numColumns > 1) {\n      const ret = [];\n      for (let kk = 0; kk < numColumns; kk++) {\n        const itemIndex = index * numColumns + kk;\n        if (itemIndex < data.length) {\n          const item = data[itemIndex];\n          ret.push(item);\n        }\n      }\n      return ret;\n    } else {\n      return data[index];\n    }\n  };\n\n  _getItemCount = (data: ?$ArrayLike<ItemT>): number => {\n    // Legacy behavior of FlatList was to forward \"undefined\" length if invalid\n    // data like a non-arraylike object is passed. VirtualizedList would then\n    // coerce this, and the math would work out to no-op. For compatibility, if\n    // invalid data is passed, we tell VirtualizedList there are zero items\n    // available to prevent it from trying to read from the invalid data\n    // (without propagating invalidly typed data).\n    if (data != null && isArrayLike(data)) {\n      const numColumns = numColumnsOrDefault(this.props.numColumns);\n      return numColumns > 1 ? Math.ceil(data.length / numColumns) : data.length;\n    } else {\n      return 0;\n    }\n  };\n\n  _keyExtractor = (items: ItemT | Array<ItemT>, index: number): string => {\n    const numColumns = numColumnsOrDefault(this.props.numColumns);\n    const keyExtractor = this.props.keyExtractor ?? defaultKeyExtractor;\n\n    if (numColumns > 1) {\n      invariant(\n        Array.isArray(items),\n        'FlatList: Encountered internal consistency error, expected each item to consist of an ' +\n          'array with 1-%s columns; instead, received a single item.',\n        numColumns,\n      );\n      return items\n        .map((item, kk) =>\n          keyExtractor(((item: $FlowFixMe): ItemT), index * numColumns + kk),\n        )\n        .join(':');\n    }\n\n    // $FlowFixMe[incompatible-call] Can't call keyExtractor with an array\n    return keyExtractor(items, index);\n  };\n\n  _pushMultiColumnViewable(arr: Array<ViewToken>, v: ViewToken): void {\n    const numColumns = numColumnsOrDefault(this.props.numColumns);\n    const keyExtractor = this.props.keyExtractor ?? defaultKeyExtractor;\n    v.item.forEach((item, ii) => {\n      invariant(v.index != null, 'Missing index!');\n      const index = v.index * numColumns + ii;\n      arr.push({...v, item, key: keyExtractor(item, index), index});\n    });\n  }\n\n  _createOnViewableItemsChanged(\n    onViewableItemsChanged: ?(info: {\n      viewableItems: Array<ViewToken>,\n      changed: Array<ViewToken>,\n      ...\n    }) => void,\n    // $FlowFixMe[missing-local-annot]\n  ) {\n    return (info: {\n      viewableItems: Array<ViewToken>,\n      changed: Array<ViewToken>,\n      ...\n    }) => {\n      const numColumns = numColumnsOrDefault(this.props.numColumns);\n      if (onViewableItemsChanged) {\n        if (numColumns > 1) {\n          const changed: Array<ViewToken> = [];\n          const viewableItems: Array<ViewToken> = [];\n          info.viewableItems.forEach(v =>\n            this._pushMultiColumnViewable(viewableItems, v),\n          );\n          info.changed.forEach(v => this._pushMultiColumnViewable(changed, v));\n          onViewableItemsChanged({viewableItems, changed});\n        } else {\n          onViewableItemsChanged(info);\n        }\n      }\n    };\n  }\n\n  _renderer = (\n    ListItemComponent: ?(React.ComponentType<any> | React.Element<any>),\n    renderItem: ?RenderItemType<ItemT>,\n    columnWrapperStyle: ?ViewStyleProp,\n    numColumns: ?number,\n    extraData: ?any,\n    // $FlowFixMe[missing-local-annot]\n  ) => {\n    const cols = numColumnsOrDefault(numColumns);\n\n    const render = (props: RenderItemProps<ItemT>): React.Node => {\n      if (ListItemComponent) {\n        // $FlowFixMe[not-a-component] Component isn't valid\n        // $FlowFixMe[incompatible-type-arg] Component isn't valid\n        // $FlowFixMe[incompatible-return] Component isn't valid\n        return <ListItemComponent {...props} />;\n      } else if (renderItem) {\n        // $FlowFixMe[incompatible-call]\n        return renderItem(props);\n      } else {\n        return null;\n      }\n    };\n\n    const renderProp = (info: RenderItemProps<ItemT>) => {\n      if (cols > 1) {\n        const {item, index} = info;\n        invariant(\n          Array.isArray(item),\n          'Expected array of items with numColumns > 1',\n        );\n        return (\n          <View style={StyleSheet.compose(styles.row, columnWrapperStyle)}>\n            {item.map((it, kk) => {\n              const element = render({\n                // $FlowFixMe[incompatible-call]\n                item: it,\n                index: index * cols + kk,\n                separators: info.separators,\n              });\n              return element != null ? (\n                <React.Fragment key={kk}>{element}</React.Fragment>\n              ) : null;\n            })}\n          </View>\n        );\n      } else {\n        return render(info);\n      }\n    };\n\n    return ListItemComponent\n      ? {ListItemComponent: renderProp}\n      : {renderItem: renderProp};\n  };\n\n  // $FlowFixMe[missing-local-annot]\n  _memoizedRenderer = memoizeOne(this._renderer);\n\n  render(): React.Node {\n    const {\n      numColumns,\n      columnWrapperStyle,\n      removeClippedSubviews: _removeClippedSubviews,\n      strictMode = false,\n      ...restProps\n    } = this.props;\n\n    const renderer = strictMode ? this._memoizedRenderer : this._renderer;\n\n    return (\n      // $FlowFixMe[incompatible-exact] - `restProps` (`Props`) is inexact.\n      <VirtualizedList\n        {...restProps}\n        getItem={this._getItem}\n        getItemCount={this._getItemCount}\n        keyExtractor={this._keyExtractor}\n        ref={this._captureRef}\n        viewabilityConfigCallbackPairs={this._virtualizedListPairs}\n        removeClippedSubviews={removeClippedSubviewsOrDefault(\n          _removeClippedSubviews,\n        )}\n        {...renderer(\n          this.props.ListItemComponent,\n          this.props.renderItem,\n          columnWrapperStyle,\n          numColumns,\n          this.props.extraData,\n        )}\n      />\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  row: {flexDirection: 'row'},\n});\n\nmodule.exports = FlatList;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\n'use strict';\n\nimport type {ScrollResponderType} from '../Components/ScrollView/ScrollView';\nimport type {\n  ScrollToLocationParamsType,\n  SectionBase as _SectionBase,\n  VirtualizedSectionListProps,\n} from '@react-native/virtualized-lists';\n\nimport Platform from '../Utilities/Platform';\nimport {VirtualizedSectionList} from '@react-native/virtualized-lists';\nimport * as React from 'react';\n\ntype Item = any;\n\nexport type SectionBase<SectionItemT> = _SectionBase<SectionItemT>;\n\ntype RequiredProps<SectionT: SectionBase<any>> = {|\n  /**\n   * The actual data to render, akin to the `data` prop in [`<FlatList>`](https://reactnative.dev/docs/flatlist).\n   *\n   * General shape:\n   *\n   *     sections: $ReadOnlyArray<{\n   *       data: $ReadOnlyArray<SectionItem>,\n   *       renderItem?: ({item: SectionItem, ...}) => ?React.Element<*>,\n   *       ItemSeparatorComponent?: ?ReactClass<{highlighted: boolean, ...}>,\n   *     }>\n   */\n  sections: $ReadOnlyArray<SectionT>,\n|};\n\ntype OptionalProps<SectionT: SectionBase<any>> = {|\n  /**\n   * Default renderer for every item in every section. Can be over-ridden on a per-section basis.\n   */\n  renderItem?: (info: {\n    item: Item,\n    index: number,\n    section: SectionT,\n    separators: {\n      highlight: () => void,\n      unhighlight: () => void,\n      updateProps: (select: 'leading' | 'trailing', newProps: Object) => void,\n      ...\n    },\n    ...\n  }) => null | React.Element<any>,\n  /**\n   * A marker property for telling the list to re-render (since it implements `PureComponent`). If\n   * any of your `renderItem`, Header, Footer, etc. functions depend on anything outside of the\n   * `data` prop, stick it here and treat it immutably.\n   */\n  extraData?: any,\n  /**\n   * How many items to render in the initial batch. This should be enough to fill the screen but not\n   * much more. Note these items will never be unmounted as part of the windowed rendering in order\n   * to improve perceived performance of scroll-to-top actions.\n   */\n  initialNumToRender?: ?number,\n  /**\n   * Reverses the direction of scroll. Uses scale transforms of -1.\n   */\n  inverted?: ?boolean,\n  /**\n   * Used to extract a unique key for a given item at the specified index. Key is used for caching\n   * and as the react key to track item re-ordering. The default extractor checks item.key, then\n   * falls back to using the index, like react does. Note that this sets keys for each item, but\n   * each overall section still needs its own key.\n   */\n  keyExtractor?: ?(item: Item, index: number) => string,\n  /**\n   * Called once when the scroll position gets within `onEndReachedThreshold` of the rendered\n   * content.\n   */\n  onEndReached?: ?(info: {distanceFromEnd: number, ...}) => void,\n  /**\n   * Note: may have bugs (missing content) in some circumstances - use at your own risk.\n   *\n   * This may improve scroll performance for large lists.\n   */\n  removeClippedSubviews?: boolean,\n|};\n\nexport type Props<SectionT> = {|\n  ...$Diff<\n    VirtualizedSectionListProps<SectionT>,\n    {\n      getItem: $PropertyType<VirtualizedSectionListProps<SectionT>, 'getItem'>,\n      getItemCount: $PropertyType<\n        VirtualizedSectionListProps<SectionT>,\n        'getItemCount',\n      >,\n      renderItem: $PropertyType<\n        VirtualizedSectionListProps<SectionT>,\n        'renderItem',\n      >,\n      keyExtractor: $PropertyType<\n        VirtualizedSectionListProps<SectionT>,\n        'keyExtractor',\n      >,\n      ...\n    },\n  >,\n  ...RequiredProps<SectionT>,\n  ...OptionalProps<SectionT>,\n|};\n\n/**\n * A performant interface for rendering sectioned lists, supporting the most handy features:\n *\n *  - Fully cross-platform.\n *  - Configurable viewability callbacks.\n *  - List header support.\n *  - List footer support.\n *  - Item separator support.\n *  - Section header support.\n *  - Section separator support.\n *  - Heterogeneous data and item rendering support.\n *  - Pull to Refresh.\n *  - Scroll loading.\n *\n * If you don't need section support and want a simpler interface, use\n * [`<FlatList>`](https://reactnative.dev/docs/flatlist).\n *\n * Simple Examples:\n *\n *     <SectionList\n *       renderItem={({item}) => <ListItem title={item} />}\n *       renderSectionHeader={({section}) => <Header title={section.title} />}\n *       sections={[ // homogeneous rendering between sections\n *         {data: [...], title: ...},\n *         {data: [...], title: ...},\n *         {data: [...], title: ...},\n *       ]}\n *     />\n *\n *     <SectionList\n *       sections={[ // heterogeneous rendering between sections\n *         {data: [...], renderItem: ...},\n *         {data: [...], renderItem: ...},\n *         {data: [...], renderItem: ...},\n *       ]}\n *     />\n *\n * This is a convenience wrapper around [`<VirtualizedList>`](docs/virtualizedlist),\n * and thus inherits its props (as well as those of `ScrollView`) that aren't explicitly listed\n * here, along with the following caveats:\n *\n * - Internal state is not preserved when content scrolls out of the render window. Make sure all\n *   your data is captured in the item data or external stores like Flux, Redux, or Relay.\n * - This is a `PureComponent` which means that it will not re-render if `props` remain shallow-\n *   equal. Make sure that everything your `renderItem` function depends on is passed as a prop\n *   (e.g. `extraData`) that is not `===` after updates, otherwise your UI may not update on\n *   changes. This includes the `data` prop and parent component state.\n * - In order to constrain memory and enable smooth scrolling, content is rendered asynchronously\n *   offscreen. This means it's possible to scroll faster than the fill rate and momentarily see\n *   blank content. This is a tradeoff that can be adjusted to suit the needs of each application,\n *   and we are working on improving it behind the scenes.\n * - By default, the list looks for a `key` prop on each item and uses that for the React key.\n *   Alternatively, you can provide a custom `keyExtractor` prop.\n *\n */\nexport default class SectionList<\n  SectionT: SectionBase<any>,\n> extends React.PureComponent<Props<SectionT>, void> {\n  props: Props<SectionT>;\n\n  /**\n   * Scrolls to the item at the specified `sectionIndex` and `itemIndex` (within the section)\n   * positioned in the viewable area such that `viewPosition` 0 places it at the top (and may be\n   * covered by a sticky header), 1 at the bottom, and 0.5 centered in the middle. `viewOffset` is a\n   * fixed number of pixels to offset the final target position, e.g. to compensate for sticky\n   * headers.\n   *\n   * Note: cannot scroll to locations outside the render window without specifying the\n   * `getItemLayout` prop.\n   */\n  scrollToLocation(params: ScrollToLocationParamsType) {\n    if (this._wrapperListRef != null) {\n      this._wrapperListRef.scrollToLocation(params);\n    }\n  }\n\n  /**\n   * Tells the list an interaction has occurred, which should trigger viewability calculations, e.g.\n   * if `waitForInteractions` is true and the user has not scrolled. This is typically called by\n   * taps on items or by navigation actions.\n   */\n  recordInteraction() {\n    const listRef = this._wrapperListRef && this._wrapperListRef.getListRef();\n    listRef && listRef.recordInteraction();\n  }\n\n  /**\n   * Displays the scroll indicators momentarily.\n   *\n   * @platform ios\n   */\n  flashScrollIndicators() {\n    const listRef = this._wrapperListRef && this._wrapperListRef.getListRef();\n    listRef && listRef.flashScrollIndicators();\n  }\n\n  /**\n   * Provides a handle to the underlying scroll responder.\n   */\n  getScrollResponder(): ?ScrollResponderType {\n    const listRef = this._wrapperListRef && this._wrapperListRef.getListRef();\n    if (listRef) {\n      return listRef.getScrollResponder();\n    }\n  }\n\n  getScrollableNode(): any {\n    const listRef = this._wrapperListRef && this._wrapperListRef.getListRef();\n    if (listRef) {\n      return listRef.getScrollableNode();\n    }\n  }\n\n  setNativeProps(props: Object) {\n    const listRef = this._wrapperListRef && this._wrapperListRef.getListRef();\n    if (listRef) {\n      listRef.setNativeProps(props);\n    }\n  }\n\n  render(): React.Node {\n    const {\n      stickySectionHeadersEnabled: _stickySectionHeadersEnabled,\n      ...restProps\n    } = this.props;\n    const stickySectionHeadersEnabled =\n      _stickySectionHeadersEnabled ?? Platform.OS === 'ios';\n    return (\n      /* $FlowFixMe[incompatible-type] Error revealed after improved builtin\n       * React utility types */\n      /* $FlowFixMe[incompatible-type] Error revealed after improved builtin\n       * React utility types */\n      <VirtualizedSectionList\n        {...restProps}\n        stickySectionHeadersEnabled={stickySectionHeadersEnabled}\n        ref={this._captureRef}\n        // $FlowFixMe[missing-local-annot]\n        getItemCount={items => items.length}\n        // $FlowFixMe[missing-local-annot]\n        getItem={(items, index) => items[index]}\n      />\n    );\n  }\n\n  _wrapperListRef: ?React.ElementRef<typeof VirtualizedSectionList>;\n  /* $FlowFixMe[missing-local-annot] The type annotation(s) required by Flow's\n   * LTI update could not be added via codemod */\n  _captureRef = ref => {\n    this._wrapperListRef = ref;\n  };\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nimport {typeof VirtualizedList as VirtualizedListType} from '@react-native/virtualized-lists';\n\nconst VirtualizedList: VirtualizedListType =\n  require('@react-native/virtualized-lists').VirtualizedList;\n\nexport type {\n  RenderItemProps,\n  RenderItemType,\n  Separators,\n} from '@react-native/virtualized-lists';\nmodule.exports = VirtualizedList;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nimport {typeof VirtualizedSectionList as VirtualizedSectionListType} from '@react-native/virtualized-lists';\n\nconst VirtualizedSectionList: VirtualizedSectionListType =\n  require('@react-native/virtualized-lists').VirtualizedSectionList;\n\nexport type {\n  SectionBase,\n  ScrollToLocationParamsType,\n} from '@react-native/virtualized-lists';\nmodule.exports = VirtualizedSectionList;\n"],"names":["_interopRequireDefault","require","Object","value","exports","_classCallCheck2","_createClass2","_Platform","_RCTDeviceEventEmitter","_invariant","default","NativeEventEmitter","nativeModule","Platform","OS","invariant","hasAddListener","addListener","hasRemoveListeners","removeListeners","this","_nativeModule","console","warn","key","eventType","listener","context","_this$_nativeModule","_this","subscription","RCTDeviceEventEmitter","remove","_this$_nativeModule2","_len","arguments","length","args","Array","_key","emit","apply","concat","_this$_nativeModule3","listenerCount","removeAllListeners","_Systrace","_callSuper","t","o","e","_getPrototypeOf2","_possibleConstructorReturn2","_isNativeReflectConstruct","Reflect","construct","constructor","Boolean","prototype","valueOf","call","_EventEmitter","_inherits2","_get2","beginEvent","_get3","endEvent","EventEmitter","instance","defineProperty","global","configurable","BatchedBridge","RCTEventEmitter","register","eventEmitter","RN$Bridgeless","RN$registerCallableModule","registerCallableModule","module","RCTNativeAppEventEmitter","CustomEvent","_EventPolyfill","typeArg","options","bubbles","cancelable","composed","detail","EventPolyfill","type","eventInitDict","scoped","isTrusted","timeStamp","Date","now","defaultPrevented","NONE","AT_TARGET","BUBBLING_PHASE","CAPTURING_PHASE","eventPhase","currentTarget","target","srcElement","Error","_syntheticEvent","preventDefault","stopPropagation","Event","_NativeJSCHeapCapture","HeapCapture","captureHeap","path","error","nativeCaptureHeap","log","toString","NativeJSCHeapCapture","captureComplete","r","__esModule","_getRequireWildcardCache","has","get","n","__proto__","a","getOwnPropertyDescriptor","u","hasOwnProperty","i","set","_interopRequireWildcard","WeakMap","keys","forEach","_exportNames","enumerable","PixelRatio","pickScale","_require2","getAndroidResourceFolderName","getAndroidResourceIdentifier","getBasePath","getScaledAssetPath","asset","scale","scales","scaleSuffix","name","AssetSourceResolver","serverUrl","jsbundleUrl","_this$jsbundleUrl","startsWith","isLoadedFromServer","assetServerURL","isLoadedFromFileSystem","drawableFolderInBundle","resourceIdentifierWithoutScale","scaledAssetURLNearBundle","fromSource","hash","_this$jsbundleUrl2","replace","_this$jsbundleUrl3","source","__packager_asset","width","height","uri","cacheBreaker","deviceScale","requiredDeviceScale","appendage","_PixelRatio","_RootTag","_flattenStyle","_StyleSheet","_ImageAnalyticsTagContext","_ImageInjection","_ImageSourceUtils","_ImageUtils","_ImageViewNativeComponent","_NativeImageLoaderIOS","_resolveAssetSource","React","_jsxRuntime","_excluded","_queryCache","_asyncToGenerator2","urls","NativeImageLoaderIOS","queryCache","BaseImage","forwardRef","props","forwardedRef","_props$tintColor","_props$accessibilityS","_props$accessibilityS2","_props$accessibilityS3","_props$accessibilityS4","_props$accessibilityS5","_props$ariaLabel","sources","style","getImageSourcesFromImageProps","undefined","isArray","flattenStyle","styles","base","_source$width","_source$height","resizeMode","objectFit","convertObjectFitToResizeMode","tintColor","children","ariaBusy","ariaChecked","ariaDisabled","ariaExpanded","ariaSelected","restProps","src","_objectWithoutProperties2","_accessibilityState","busy","accessibilityState","checked","disabled","expanded","selected","accessibilityLabel","actualRef","useWrapRefWithImageAttachedCallbacks","jsx","Consumer","analyticTag","assign","accessible","alt","ref","internal_analyticTag","imageComponentDecorator","unstable_getImageComponentDecorator","Image","displayName","getSize","success","failure","then","_ref","_ref2","_slicedToArray2","catch","getSizeWithHeaders","headers","sizes","prefetch","url","prefetchImage","prefetchWithMetadata","queryRootName","rootTag","prefetchImageWithMetadata","createRootTag","_x","resolveAssetSource","StyleSheet","create","overflow","Context","createContext","_View","_Image","ImageBackground","_React$Component","_viewRef","_captureRef","viewRef","setNativeProps","_this$props","imageStyle","imageRef","importantForAccessibility","flattenedStyle","jsxs","accessibilityIgnoresInvertColors","absoluteFill","Component","injectedImageComponentDecorator","callback","imageAttachedCallbacks","add","delete","pendingCleanupCallbacks","useRef","imageAttachedCallbacksRef","current","node","cb","imageAttachedCallback","maybeCleanupCallback","push","useMergeRefs","_useMergeRefs","_react","Set","imageProps","crossOrigin","referrerPolicy","srcSet","sourceList","srcSetList","split","shouldUseSrcForDefaultScale","imageSrc","_imageSrc$split","_imageSrc$split2","_imageSrc$split2$","xScale","endsWith","parseInt","isNaN","contain","cover","fill","NativeComponentRegistry","_ViewConfigIgnore","_codegenNativeCommands","codegenNativeCommands","supportedCommands","__INTERNAL_VIEW_CONFIG","uiViewClassName","bubblingEventTypes","directEventTypes","topLoadStart","registrationName","topProgress","topError","topLoad","topLoadEnd","validAttributes","blurRadius","process","borderBottomLeftRadius","borderTopLeftRadius","resizeMethod","borderRadius","shouldNotifyLoadEvents","defaultSrc","overlayColor","borderColor","progressiveRenderingEnabled","fadeDuration","borderBottomRightRadius","borderTopRightRadius","loadingIndicatorSrc","topPartialLoad","capInsets","diff","defaultSource","ConditionallyIgnoredEventHandlers","onLoadStart","onLoad","onLoadEnd","onProgress","onError","onPartialLoad","ImageViewNativeComponent","_serverURL","_scriptURL","_sourceCodeScriptURL","_NativeSourceCode","AssetRegistry","_customSourceTransformers","getSourceCodeScriptURL","SourceCode","getConstants","scriptURL","getAssetByID","resolver","sourceCodeScriptURL","match","getDevServerURL","normalizedScriptURL","substring","lastIndexOf","includes","_coerceLocalScriptURL","customSourceTransformer","transformedSource","defaultAsset","setCustomSourceTransformer","transformer","addCustomSourceTransformer","_NativeFrameRateLogger","FrameRateLogger","setGlobalOptions","debug","NativeFrameRateLogger","setContext","beginScroll","endScroll","TaskQueue","_emitter","DEBUG_DELAY","InteractionManager","Events","interactionStart","interactionComplete","runAfterInteractions","task","tasks","promise","Promise","resolve","_scheduleUpdate","run","_taskQueue","enqueueTasks","bind","cancel","cancelTasks","createInteractionHandle","handle","_inc","_addInteractionSet","clearInteractionHandle","_deleteInteractionSet","setDeadline","deadline","_deadline","_interactionSet","onMoreTasks","_nextUpdateHandle","setTimeout","_processUpdate","setImmediate","interactionCount","size","nextInteractionCount","hasTasksToProcess","processNext","getEventLoopRunningTime","clear","TouchHistoryMath","currentCentroidXOfTouchesChangedAfter","currentCentroidYOfTouchesChangedAfter","previousCentroidXOfTouchesChangedAfter","previousCentroidYOfTouchesChangedAfter","currentCentroidX","currentCentroidY","PanResponder","_initializeGestureState","gestureState","moveX","moveY","x0","y0","dx","dy","vx","vy","numberActiveTouches","_accountsForMovesUpTo","_updateGestureStateOnMove","touchHistory","movedAfter","prevX","x","prevY","y","nextDX","nextDY","dt","mostRecentTimeStamp","config","interactionState","stateID","Math","random","panHandlers","onStartShouldSetResponder","event","onStartShouldSetPanResponder","onMoveShouldSetResponder","onMoveShouldSetPanResponder","onStartShouldSetResponderCapture","nativeEvent","touches","onStartShouldSetPanResponderCapture","onMoveShouldSetResponderCapture","onMoveShouldSetPanResponderCapture","onResponderGrant","onPanResponderGrant","onShouldBlockNativeResponder","onResponderReject","onPanResponderReject","onResponderRelease","onPanResponderRelease","onResponderStart","onPanResponderStart","onResponderMove","onPanResponderMove","onResponderEnd","onPanResponderEnd","onResponderTerminate","onPanResponderTerminate","onResponderTerminationRequest","onPanResponderTerminationRequest","getInteractionHandle","_onMoreTasks","_queueStack","popable","_getCurrentQueue","enqueue","tasksToCancel","map","queue","filter","indexOf","idx","shift","gen","_genPromise","JSON","stringify","message","stackIdx","pop","_this2","stackItem","ex","centroidDimension","touchesChangedAfter","isXAxis","ofCurrent","touchBank","total","count","oneTouchData","indexOfSingleActiveTouch","touchActive","currentTimeStamp","currentPageX","currentPageY","previousPageX","previousPageY","touchTrack","noCentroid","ReactNativeFeatureFlags","_FabricUIManager","UIManager","isLayoutAnimationEnabled","configureNext","onAnimationDidEnd","onAnimationDidFail","_config$duration","isDisableAnimations","_global","_global$nativeFabricU","animationCompletionHasRun","onAnimationComplete","clearTimeout","raceWithAnimationId","duration","FabricUIManager","getFabricUIManager","configureNextLayoutAnimation","nativeFabricUIManager","property","update","Presets","easeInEaseOut","linear","spring","springDamping","LayoutAnimation","Types","freeze","easeIn","easeOut","keyboard","Properties","opacity","scaleX","scaleY","scaleXY","checkConfig","setEnabled","_NativeEventEmitter2","_NativeIntentAndroid","_NativeLinkingManager","_nullthrows","Linking","_NativeEventEmitter","nullthrows","NativeLinkingManager","_validateURL","NativeIntentAndroid","openURL","canOpenURL","openSettings","getInitialURL","action","extras","sendIntent","reject","_virtualizedLists","_memoizeOne","View","deepDiffer","numColumnsOrDefault","numColumns","FlatList","_React$PureComponent","_virtualizedListPairs","_listRef","_getItem","data","index","ret","kk","itemIndex","item","_getItemCount","isArrayLike","ceil","_keyExtractor","items","_this$props$keyExtrac","keyExtractor","defaultKeyExtractor","join","_renderer","ListItemComponent","renderItem","columnWrapperStyle","extraData","cols","render","renderProp","info","compose","row","it","element","separators","Fragment","_memoizedRenderer","memoizeOne","_checkProps","viewabilityConfigCallbackPairs","pair","viewabilityConfig","onViewableItemsChanged","_createOnViewableItemsChanged","params","scrollToEnd","scrollToIndex","scrollToItem","scrollToOffset","recordInteraction","flashScrollIndicators","getScrollResponder","getScrollRef","getScrollableNode","prevProps","getItem","getItemCount","horizontal","arr","v","_this$props$keyExtrac2","ii","changed","viewableItems","_pushMultiColumnViewable","removeClippedSubviews","_this$props2","_removeClippedSubviews","_this$props2$strictMo","strictMode","renderer","VirtualizedList","shouldUseRemoveClippedSubviewsAsDefaultOnIOS","PureComponent","flexDirection","SectionList","_wrapperListRef","scrollToLocation","listRef","getListRef","_stickySectionHeadersEnabled","stickySectionHeadersEnabled","VirtualizedSectionList"],"sourceRoot":""}