{"version":3,"file":"vendors-node_modules_reduxjs_toolkit_dist_redux-toolkit_legacy-esm_js.chunk.bundle","mappings":"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","sources":["webpack:///./node_modules/@reduxjs/toolkit/dist/redux-toolkit.legacy-esm.js","webpack:///../src/utils/common.ts","webpack:///../src/utils/env.ts","webpack:///../src/utils/errors.ts","webpack:///../src/utils/plugins.ts","webpack:///../src/core/scope.ts","webpack:///../src/core/finalize.ts","webpack:///../src/core/proxy.ts","webpack:///../src/core/immerClass.ts","webpack:///../src/core/current.ts","webpack:///../src/immer.ts","webpack:///./node_modules/redux-thunk/dist/redux-thunk.legacy-esm.js","webpack:///./node_modules/reselect/dist/reselect.legacy-esm.js"],"sourcesContent":["var __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\nvar __objRest = (source, exclude) => {\n  var target = {};\n  for (var prop in source)\n    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)\n      target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(source)) {\n      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))\n        target[prop] = source[prop];\n    }\n  return target;\n};\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\n\n// src/index.ts\nexport * from \"redux\";\nimport { produce, current as current4, freeze, original as original2, isDraft as isDraft6 } from \"immer\";\nimport { createSelector, createSelectorCreator as createSelectorCreator2, lruMemoize, weakMapMemoize as weakMapMemoize2 } from \"reselect\";\n\n// src/createDraftSafeSelector.ts\nimport { current, isDraft } from \"immer\";\nimport { createSelectorCreator, weakMapMemoize } from \"reselect\";\nvar createDraftSafeSelectorCreator = (...args) => {\n  const createSelector2 = createSelectorCreator(...args);\n  const createDraftSafeSelector2 = Object.assign((...args2) => {\n    const selector = createSelector2(...args2);\n    const wrappedSelector = (value, ...rest) => selector(isDraft(value) ? current(value) : value, ...rest);\n    Object.assign(wrappedSelector, selector);\n    return wrappedSelector;\n  }, {\n    withTypes: () => createDraftSafeSelector2\n  });\n  return createDraftSafeSelector2;\n};\nvar createDraftSafeSelector = createDraftSafeSelectorCreator(weakMapMemoize);\n\n// src/configureStore.ts\nimport { applyMiddleware, createStore, compose as compose2, combineReducers, isPlainObject as isPlainObject2 } from \"redux\";\n\n// src/devtoolsExtension.ts\nimport { compose } from \"redux\";\nvar composeWithDevTools = typeof window !== \"undefined\" && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : function() {\n  if (arguments.length === 0)\n    return void 0;\n  if (typeof arguments[0] === \"object\")\n    return compose;\n  return compose.apply(null, arguments);\n};\nvar devToolsEnhancer = typeof window !== \"undefined\" && window.__REDUX_DEVTOOLS_EXTENSION__ ? window.__REDUX_DEVTOOLS_EXTENSION__ : function() {\n  return function(noop3) {\n    return noop3;\n  };\n};\n\n// src/getDefaultMiddleware.ts\nimport { thunk as thunkMiddleware, withExtraArgument } from \"redux-thunk\";\n\n// src/createAction.ts\nimport { isAction } from \"redux\";\n\n// src/tsHelpers.ts\nvar hasMatchFunction = (v) => {\n  return v && typeof v.match === \"function\";\n};\n\n// src/createAction.ts\nfunction createAction(type, prepareAction) {\n  function actionCreator(...args) {\n    if (prepareAction) {\n      let prepared = prepareAction(...args);\n      if (!prepared) {\n        throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(0) : \"prepareAction did not return an object\");\n      }\n      return __spreadValues(__spreadValues({\n        type,\n        payload: prepared.payload\n      }, \"meta\" in prepared && {\n        meta: prepared.meta\n      }), \"error\" in prepared && {\n        error: prepared.error\n      });\n    }\n    return {\n      type,\n      payload: args[0]\n    };\n  }\n  actionCreator.toString = () => `${type}`;\n  actionCreator.type = type;\n  actionCreator.match = (action) => isAction(action) && action.type === type;\n  return actionCreator;\n}\nfunction isActionCreator(action) {\n  return typeof action === \"function\" && \"type\" in action && // hasMatchFunction only wants Matchers but I don't see the point in rewriting it\n  hasMatchFunction(action);\n}\nfunction isFSA(action) {\n  return isAction(action) && Object.keys(action).every(isValidKey);\n}\nfunction isValidKey(key) {\n  return [\"type\", \"payload\", \"error\", \"meta\"].indexOf(key) > -1;\n}\n\n// src/actionCreatorInvariantMiddleware.ts\nfunction getMessage(type) {\n  const splitType = type ? `${type}`.split(\"/\") : [];\n  const actionName = splitType[splitType.length - 1] || \"actionCreator\";\n  return `Detected an action creator with type \"${type || \"unknown\"}\" being dispatched. \nMake sure you're calling the action creator before dispatching, i.e. \\`dispatch(${actionName}())\\` instead of \\`dispatch(${actionName})\\`. This is necessary even if the action has no payload.`;\n}\nfunction createActionCreatorInvariantMiddleware(options = {}) {\n  if (process.env.NODE_ENV === \"production\") {\n    return () => (next) => (action) => next(action);\n  }\n  const {\n    isActionCreator: isActionCreator2 = isActionCreator\n  } = options;\n  return () => (next) => (action) => {\n    if (isActionCreator2(action)) {\n      console.warn(getMessage(action.type));\n    }\n    return next(action);\n  };\n}\n\n// src/utils.ts\nimport { produce as createNextState, isDraftable } from \"immer\";\nfunction getTimeMeasureUtils(maxDelay, fnName) {\n  let elapsed = 0;\n  return {\n    measureTime(fn) {\n      const started = Date.now();\n      try {\n        return fn();\n      } finally {\n        const finished = Date.now();\n        elapsed += finished - started;\n      }\n    },\n    warnIfExceeded() {\n      if (elapsed > maxDelay) {\n        console.warn(`${fnName} took ${elapsed}ms, which is more than the warning threshold of ${maxDelay}ms. \nIf your state or actions are very large, you may want to disable the middleware as it might cause too much of a slowdown in development mode. See https://redux-toolkit.js.org/api/getDefaultMiddleware for instructions.\nIt is disabled in production builds, so you don't need to worry about that.`);\n      }\n    }\n  };\n}\nfunction find(iterable, comparator) {\n  for (const entry of iterable) {\n    if (comparator(entry)) {\n      return entry;\n    }\n  }\n  return void 0;\n}\nvar Tuple = class _Tuple extends Array {\n  constructor(...items) {\n    super(...items);\n    Object.setPrototypeOf(this, _Tuple.prototype);\n  }\n  static get [Symbol.species]() {\n    return _Tuple;\n  }\n  concat(...arr) {\n    return super.concat.apply(this, arr);\n  }\n  prepend(...arr) {\n    if (arr.length === 1 && Array.isArray(arr[0])) {\n      return new _Tuple(...arr[0].concat(this));\n    }\n    return new _Tuple(...arr.concat(this));\n  }\n};\nfunction freezeDraftable(val) {\n  return isDraftable(val) ? createNextState(val, () => {\n  }) : val;\n}\nfunction emplace(map, key, handler) {\n  if (map.has(key)) {\n    let value = map.get(key);\n    if (handler.update) {\n      value = handler.update(value, key, map);\n      map.set(key, value);\n    }\n    return value;\n  }\n  if (!handler.insert)\n    throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(10) : \"No insert provided for key not already in map\");\n  const inserted = handler.insert(key, map);\n  map.set(key, inserted);\n  return inserted;\n}\n\n// src/immutableStateInvariantMiddleware.ts\nfunction isImmutableDefault(value) {\n  return typeof value !== \"object\" || value == null || Object.isFrozen(value);\n}\nfunction trackForMutations(isImmutable, ignorePaths, obj) {\n  const trackedProperties = trackProperties(isImmutable, ignorePaths, obj);\n  return {\n    detectMutations() {\n      return detectMutations(isImmutable, ignorePaths, trackedProperties, obj);\n    }\n  };\n}\nfunction trackProperties(isImmutable, ignorePaths = [], obj, path = \"\", checkedObjects = /* @__PURE__ */ new Set()) {\n  const tracked = {\n    value: obj\n  };\n  if (!isImmutable(obj) && !checkedObjects.has(obj)) {\n    checkedObjects.add(obj);\n    tracked.children = {};\n    for (const key in obj) {\n      const childPath = path ? path + \".\" + key : key;\n      if (ignorePaths.length && ignorePaths.indexOf(childPath) !== -1) {\n        continue;\n      }\n      tracked.children[key] = trackProperties(isImmutable, ignorePaths, obj[key], childPath);\n    }\n  }\n  return tracked;\n}\nfunction detectMutations(isImmutable, ignoredPaths = [], trackedProperty, obj, sameParentRef = false, path = \"\") {\n  const prevObj = trackedProperty ? trackedProperty.value : void 0;\n  const sameRef = prevObj === obj;\n  if (sameParentRef && !sameRef && !Number.isNaN(obj)) {\n    return {\n      wasMutated: true,\n      path\n    };\n  }\n  if (isImmutable(prevObj) || isImmutable(obj)) {\n    return {\n      wasMutated: false\n    };\n  }\n  const keysToDetect = {};\n  for (let key in trackedProperty.children) {\n    keysToDetect[key] = true;\n  }\n  for (let key in obj) {\n    keysToDetect[key] = true;\n  }\n  const hasIgnoredPaths = ignoredPaths.length > 0;\n  for (let key in keysToDetect) {\n    const nestedPath = path ? path + \".\" + key : key;\n    if (hasIgnoredPaths) {\n      const hasMatches = ignoredPaths.some((ignored) => {\n        if (ignored instanceof RegExp) {\n          return ignored.test(nestedPath);\n        }\n        return nestedPath === ignored;\n      });\n      if (hasMatches) {\n        continue;\n      }\n    }\n    const result = detectMutations(isImmutable, ignoredPaths, trackedProperty.children[key], obj[key], sameRef, nestedPath);\n    if (result.wasMutated) {\n      return result;\n    }\n  }\n  return {\n    wasMutated: false\n  };\n}\nfunction createImmutableStateInvariantMiddleware(options = {}) {\n  if (process.env.NODE_ENV === \"production\") {\n    return () => (next) => (action) => next(action);\n  } else {\n    let stringify2 = function(obj, serializer, indent, decycler) {\n      return JSON.stringify(obj, getSerialize2(serializer, decycler), indent);\n    }, getSerialize2 = function(serializer, decycler) {\n      let stack = [], keys = [];\n      if (!decycler)\n        decycler = function(_, value) {\n          if (stack[0] === value)\n            return \"[Circular ~]\";\n          return \"[Circular ~.\" + keys.slice(0, stack.indexOf(value)).join(\".\") + \"]\";\n        };\n      return function(key, value) {\n        if (stack.length > 0) {\n          var thisPos = stack.indexOf(this);\n          ~thisPos ? stack.splice(thisPos + 1) : stack.push(this);\n          ~thisPos ? keys.splice(thisPos, Infinity, key) : keys.push(key);\n          if (~stack.indexOf(value))\n            value = decycler.call(this, key, value);\n        } else\n          stack.push(value);\n        return serializer == null ? value : serializer.call(this, key, value);\n      };\n    };\n    var stringify = stringify2, getSerialize = getSerialize2;\n    let {\n      isImmutable = isImmutableDefault,\n      ignoredPaths,\n      warnAfter = 32\n    } = options;\n    const track = trackForMutations.bind(null, isImmutable, ignoredPaths);\n    return ({\n      getState\n    }) => {\n      let state = getState();\n      let tracker = track(state);\n      let result;\n      return (next) => (action) => {\n        const measureUtils = getTimeMeasureUtils(warnAfter, \"ImmutableStateInvariantMiddleware\");\n        measureUtils.measureTime(() => {\n          state = getState();\n          result = tracker.detectMutations();\n          tracker = track(state);\n          if (result.wasMutated) {\n            throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(19) : `A state mutation was detected between dispatches, in the path '${result.path || \"\"}'.  This may cause incorrect behavior. (https://redux.js.org/style-guide/style-guide#do-not-mutate-state)`);\n          }\n        });\n        const dispatchedAction = next(action);\n        measureUtils.measureTime(() => {\n          state = getState();\n          result = tracker.detectMutations();\n          tracker = track(state);\n          if (result.wasMutated) {\n            throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(20) : `A state mutation was detected inside a dispatch, in the path: ${result.path || \"\"}. Take a look at the reducer(s) handling the action ${stringify2(action)}. (https://redux.js.org/style-guide/style-guide#do-not-mutate-state)`);\n          }\n        });\n        measureUtils.warnIfExceeded();\n        return dispatchedAction;\n      };\n    };\n  }\n}\n\n// src/serializableStateInvariantMiddleware.ts\nimport { isAction as isAction2, isPlainObject } from \"redux\";\nfunction isPlain(val) {\n  const type = typeof val;\n  return val == null || type === \"string\" || type === \"boolean\" || type === \"number\" || Array.isArray(val) || isPlainObject(val);\n}\nfunction findNonSerializableValue(value, path = \"\", isSerializable = isPlain, getEntries, ignoredPaths = [], cache) {\n  let foundNestedSerializable;\n  if (!isSerializable(value)) {\n    return {\n      keyPath: path || \"<root>\",\n      value\n    };\n  }\n  if (typeof value !== \"object\" || value === null) {\n    return false;\n  }\n  if (cache == null ? void 0 : cache.has(value))\n    return false;\n  const entries = getEntries != null ? getEntries(value) : Object.entries(value);\n  const hasIgnoredPaths = ignoredPaths.length > 0;\n  for (const [key, nestedValue] of entries) {\n    const nestedPath = path ? path + \".\" + key : key;\n    if (hasIgnoredPaths) {\n      const hasMatches = ignoredPaths.some((ignored) => {\n        if (ignored instanceof RegExp) {\n          return ignored.test(nestedPath);\n        }\n        return nestedPath === ignored;\n      });\n      if (hasMatches) {\n        continue;\n      }\n    }\n    if (!isSerializable(nestedValue)) {\n      return {\n        keyPath: nestedPath,\n        value: nestedValue\n      };\n    }\n    if (typeof nestedValue === \"object\") {\n      foundNestedSerializable = findNonSerializableValue(nestedValue, nestedPath, isSerializable, getEntries, ignoredPaths, cache);\n      if (foundNestedSerializable) {\n        return foundNestedSerializable;\n      }\n    }\n  }\n  if (cache && isNestedFrozen(value))\n    cache.add(value);\n  return false;\n}\nfunction isNestedFrozen(value) {\n  if (!Object.isFrozen(value))\n    return false;\n  for (const nestedValue of Object.values(value)) {\n    if (typeof nestedValue !== \"object\" || nestedValue === null)\n      continue;\n    if (!isNestedFrozen(nestedValue))\n      return false;\n  }\n  return true;\n}\nfunction createSerializableStateInvariantMiddleware(options = {}) {\n  if (process.env.NODE_ENV === \"production\") {\n    return () => (next) => (action) => next(action);\n  } else {\n    const {\n      isSerializable = isPlain,\n      getEntries,\n      ignoredActions = [],\n      ignoredActionPaths = [\"meta.arg\", \"meta.baseQueryMeta\"],\n      ignoredPaths = [],\n      warnAfter = 32,\n      ignoreState = false,\n      ignoreActions = false,\n      disableCache = false\n    } = options;\n    const cache = !disableCache && WeakSet ? /* @__PURE__ */ new WeakSet() : void 0;\n    return (storeAPI) => (next) => (action) => {\n      if (!isAction2(action)) {\n        return next(action);\n      }\n      const result = next(action);\n      const measureUtils = getTimeMeasureUtils(warnAfter, \"SerializableStateInvariantMiddleware\");\n      if (!ignoreActions && !(ignoredActions.length && ignoredActions.indexOf(action.type) !== -1)) {\n        measureUtils.measureTime(() => {\n          const foundActionNonSerializableValue = findNonSerializableValue(action, \"\", isSerializable, getEntries, ignoredActionPaths, cache);\n          if (foundActionNonSerializableValue) {\n            const {\n              keyPath,\n              value\n            } = foundActionNonSerializableValue;\n            console.error(`A non-serializable value was detected in an action, in the path: \\`${keyPath}\\`. Value:`, value, \"\\nTake a look at the logic that dispatched this action: \", action, \"\\n(See https://redux.js.org/faq/actions#why-should-type-be-a-string-or-at-least-serializable-why-should-my-action-types-be-constants)\", \"\\n(To allow non-serializable values see: https://redux-toolkit.js.org/usage/usage-guide#working-with-non-serializable-data)\");\n          }\n        });\n      }\n      if (!ignoreState) {\n        measureUtils.measureTime(() => {\n          const state = storeAPI.getState();\n          const foundStateNonSerializableValue = findNonSerializableValue(state, \"\", isSerializable, getEntries, ignoredPaths, cache);\n          if (foundStateNonSerializableValue) {\n            const {\n              keyPath,\n              value\n            } = foundStateNonSerializableValue;\n            console.error(`A non-serializable value was detected in the state, in the path: \\`${keyPath}\\`. Value:`, value, `\nTake a look at the reducer(s) handling this action type: ${action.type}.\n(See https://redux.js.org/faq/organizing-state#can-i-put-functions-promises-or-other-non-serializable-items-in-my-store-state)`);\n          }\n        });\n        measureUtils.warnIfExceeded();\n      }\n      return result;\n    };\n  }\n}\n\n// src/getDefaultMiddleware.ts\nfunction isBoolean(x) {\n  return typeof x === \"boolean\";\n}\nvar buildGetDefaultMiddleware = () => function getDefaultMiddleware(options) {\n  const {\n    thunk = true,\n    immutableCheck = true,\n    serializableCheck = true,\n    actionCreatorCheck = true\n  } = options != null ? options : {};\n  let middlewareArray = new Tuple();\n  if (thunk) {\n    if (isBoolean(thunk)) {\n      middlewareArray.push(thunkMiddleware);\n    } else {\n      middlewareArray.push(withExtraArgument(thunk.extraArgument));\n    }\n  }\n  if (process.env.NODE_ENV !== \"production\") {\n    if (immutableCheck) {\n      let immutableOptions = {};\n      if (!isBoolean(immutableCheck)) {\n        immutableOptions = immutableCheck;\n      }\n      middlewareArray.unshift(createImmutableStateInvariantMiddleware(immutableOptions));\n    }\n    if (serializableCheck) {\n      let serializableOptions = {};\n      if (!isBoolean(serializableCheck)) {\n        serializableOptions = serializableCheck;\n      }\n      middlewareArray.push(createSerializableStateInvariantMiddleware(serializableOptions));\n    }\n    if (actionCreatorCheck) {\n      let actionCreatorOptions = {};\n      if (!isBoolean(actionCreatorCheck)) {\n        actionCreatorOptions = actionCreatorCheck;\n      }\n      middlewareArray.unshift(createActionCreatorInvariantMiddleware(actionCreatorOptions));\n    }\n  }\n  return middlewareArray;\n};\n\n// src/autoBatchEnhancer.ts\nvar SHOULD_AUTOBATCH = \"RTK_autoBatch\";\nvar prepareAutoBatched = () => (payload) => ({\n  payload,\n  meta: {\n    [SHOULD_AUTOBATCH]: true\n  }\n});\nvar createQueueWithTimer = (timeout) => {\n  return (notify) => {\n    setTimeout(notify, timeout);\n  };\n};\nvar rAF = typeof window !== \"undefined\" && window.requestAnimationFrame ? window.requestAnimationFrame : createQueueWithTimer(10);\nvar autoBatchEnhancer = (options = {\n  type: \"raf\"\n}) => (next) => (...args) => {\n  const store = next(...args);\n  let notifying = true;\n  let shouldNotifyAtEndOfTick = false;\n  let notificationQueued = false;\n  const listeners = /* @__PURE__ */ new Set();\n  const queueCallback = options.type === \"tick\" ? queueMicrotask : options.type === \"raf\" ? rAF : options.type === \"callback\" ? options.queueNotification : createQueueWithTimer(options.timeout);\n  const notifyListeners = () => {\n    notificationQueued = false;\n    if (shouldNotifyAtEndOfTick) {\n      shouldNotifyAtEndOfTick = false;\n      listeners.forEach((l) => l());\n    }\n  };\n  return Object.assign({}, store, {\n    // Override the base `store.subscribe` method to keep original listeners\n    // from running if we're delaying notifications\n    subscribe(listener2) {\n      const wrappedListener = () => notifying && listener2();\n      const unsubscribe = store.subscribe(wrappedListener);\n      listeners.add(listener2);\n      return () => {\n        unsubscribe();\n        listeners.delete(listener2);\n      };\n    },\n    // Override the base `store.dispatch` method so that we can check actions\n    // for the `shouldAutoBatch` flag and determine if batching is active\n    dispatch(action) {\n      var _a;\n      try {\n        notifying = !((_a = action == null ? void 0 : action.meta) == null ? void 0 : _a[SHOULD_AUTOBATCH]);\n        shouldNotifyAtEndOfTick = !notifying;\n        if (shouldNotifyAtEndOfTick) {\n          if (!notificationQueued) {\n            notificationQueued = true;\n            queueCallback(notifyListeners);\n          }\n        }\n        return store.dispatch(action);\n      } finally {\n        notifying = true;\n      }\n    }\n  });\n};\n\n// src/getDefaultEnhancers.ts\nvar buildGetDefaultEnhancers = (middlewareEnhancer) => function getDefaultEnhancers(options) {\n  const {\n    autoBatch = true\n  } = options != null ? options : {};\n  let enhancerArray = new Tuple(middlewareEnhancer);\n  if (autoBatch) {\n    enhancerArray.push(autoBatchEnhancer(typeof autoBatch === \"object\" ? autoBatch : void 0));\n  }\n  return enhancerArray;\n};\n\n// src/configureStore.ts\nvar IS_PRODUCTION = process.env.NODE_ENV === \"production\";\nfunction configureStore(options) {\n  const getDefaultMiddleware = buildGetDefaultMiddleware();\n  const {\n    reducer = void 0,\n    middleware,\n    devTools = true,\n    preloadedState = void 0,\n    enhancers = void 0\n  } = options || {};\n  let rootReducer;\n  if (typeof reducer === \"function\") {\n    rootReducer = reducer;\n  } else if (isPlainObject2(reducer)) {\n    rootReducer = combineReducers(reducer);\n  } else {\n    throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(1) : \"`reducer` is a required argument, and must be a function or an object of functions that can be passed to combineReducers\");\n  }\n  if (!IS_PRODUCTION && middleware && typeof middleware !== \"function\") {\n    throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(2) : \"`middleware` field must be a callback\");\n  }\n  let finalMiddleware;\n  if (typeof middleware === \"function\") {\n    finalMiddleware = middleware(getDefaultMiddleware);\n    if (!IS_PRODUCTION && !Array.isArray(finalMiddleware)) {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(3) : \"when using a middleware builder function, an array of middleware must be returned\");\n    }\n  } else {\n    finalMiddleware = getDefaultMiddleware();\n  }\n  if (!IS_PRODUCTION && finalMiddleware.some((item) => typeof item !== \"function\")) {\n    throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(4) : \"each middleware provided to configureStore must be a function\");\n  }\n  let finalCompose = compose2;\n  if (devTools) {\n    finalCompose = composeWithDevTools(__spreadValues({\n      // Enable capture of stack traces for dispatched Redux actions\n      trace: !IS_PRODUCTION\n    }, typeof devTools === \"object\" && devTools));\n  }\n  const middlewareEnhancer = applyMiddleware(...finalMiddleware);\n  const getDefaultEnhancers = buildGetDefaultEnhancers(middlewareEnhancer);\n  if (!IS_PRODUCTION && enhancers && typeof enhancers !== \"function\") {\n    throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(5) : \"`enhancers` field must be a callback\");\n  }\n  let storeEnhancers = typeof enhancers === \"function\" ? enhancers(getDefaultEnhancers) : getDefaultEnhancers();\n  if (!IS_PRODUCTION && !Array.isArray(storeEnhancers)) {\n    throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(6) : \"`enhancers` callback must return an array\");\n  }\n  if (!IS_PRODUCTION && storeEnhancers.some((item) => typeof item !== \"function\")) {\n    throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(7) : \"each enhancer provided to configureStore must be a function\");\n  }\n  if (!IS_PRODUCTION && finalMiddleware.length && !storeEnhancers.includes(middlewareEnhancer)) {\n    console.error(\"middlewares were provided, but middleware enhancer was not included in final enhancers - make sure to call `getDefaultEnhancers`\");\n  }\n  const composedEnhancer = finalCompose(...storeEnhancers);\n  return createStore(rootReducer, preloadedState, composedEnhancer);\n}\n\n// src/createReducer.ts\nimport { produce as createNextState2, isDraft as isDraft2, isDraftable as isDraftable2 } from \"immer\";\n\n// src/mapBuilders.ts\nfunction executeReducerBuilderCallback(builderCallback) {\n  const actionsMap = {};\n  const actionMatchers = [];\n  let defaultCaseReducer;\n  const builder = {\n    addCase(typeOrActionCreator, reducer) {\n      if (process.env.NODE_ENV !== \"production\") {\n        if (actionMatchers.length > 0) {\n          throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(26) : \"`builder.addCase` should only be called before calling `builder.addMatcher`\");\n        }\n        if (defaultCaseReducer) {\n          throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(27) : \"`builder.addCase` should only be called before calling `builder.addDefaultCase`\");\n        }\n      }\n      const type = typeof typeOrActionCreator === \"string\" ? typeOrActionCreator : typeOrActionCreator.type;\n      if (!type) {\n        throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(28) : \"`builder.addCase` cannot be called with an empty action type\");\n      }\n      if (type in actionsMap) {\n        throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(29) : `\\`builder.addCase\\` cannot be called with two reducers for the same action type '${type}'`);\n      }\n      actionsMap[type] = reducer;\n      return builder;\n    },\n    addMatcher(matcher, reducer) {\n      if (process.env.NODE_ENV !== \"production\") {\n        if (defaultCaseReducer) {\n          throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(30) : \"`builder.addMatcher` should only be called before calling `builder.addDefaultCase`\");\n        }\n      }\n      actionMatchers.push({\n        matcher,\n        reducer\n      });\n      return builder;\n    },\n    addDefaultCase(reducer) {\n      if (process.env.NODE_ENV !== \"production\") {\n        if (defaultCaseReducer) {\n          throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(31) : \"`builder.addDefaultCase` can only be called once\");\n        }\n      }\n      defaultCaseReducer = reducer;\n      return builder;\n    }\n  };\n  builderCallback(builder);\n  return [actionsMap, actionMatchers, defaultCaseReducer];\n}\n\n// src/createReducer.ts\nfunction isStateFunction(x) {\n  return typeof x === \"function\";\n}\nfunction createReducer(initialState, mapOrBuilderCallback) {\n  if (process.env.NODE_ENV !== \"production\") {\n    if (typeof mapOrBuilderCallback === \"object\") {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(8) : \"The object notation for `createReducer` has been removed. Please use the 'builder callback' notation instead: https://redux-toolkit.js.org/api/createReducer\");\n    }\n  }\n  let [actionsMap, finalActionMatchers, finalDefaultCaseReducer] = executeReducerBuilderCallback(mapOrBuilderCallback);\n  let getInitialState;\n  if (isStateFunction(initialState)) {\n    getInitialState = () => freezeDraftable(initialState());\n  } else {\n    const frozenInitialState = freezeDraftable(initialState);\n    getInitialState = () => frozenInitialState;\n  }\n  function reducer(state = getInitialState(), action) {\n    let caseReducers = [actionsMap[action.type], ...finalActionMatchers.filter(({\n      matcher\n    }) => matcher(action)).map(({\n      reducer: reducer2\n    }) => reducer2)];\n    if (caseReducers.filter((cr) => !!cr).length === 0) {\n      caseReducers = [finalDefaultCaseReducer];\n    }\n    return caseReducers.reduce((previousState, caseReducer) => {\n      if (caseReducer) {\n        if (isDraft2(previousState)) {\n          const draft = previousState;\n          const result = caseReducer(draft, action);\n          if (result === void 0) {\n            return previousState;\n          }\n          return result;\n        } else if (!isDraftable2(previousState)) {\n          const result = caseReducer(previousState, action);\n          if (result === void 0) {\n            if (previousState === null) {\n              return previousState;\n            }\n            throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(9) : \"A case reducer on a non-draftable value must not return undefined\");\n          }\n          return result;\n        } else {\n          return createNextState2(previousState, (draft) => {\n            return caseReducer(draft, action);\n          });\n        }\n      }\n      return previousState;\n    }, state);\n  }\n  reducer.getInitialState = getInitialState;\n  return reducer;\n}\n\n// src/nanoid.ts\nvar urlAlphabet = \"ModuleSymbhasOwnPr-0123456789ABCDEFGHNRVfgctiUvz_KqYTJkLxpZXIjQW\";\nvar nanoid = (size = 21) => {\n  let id = \"\";\n  let i = size;\n  while (i--) {\n    id += urlAlphabet[Math.random() * 64 | 0];\n  }\n  return id;\n};\n\n// src/matchers.ts\nvar matches = (matcher, action) => {\n  if (hasMatchFunction(matcher)) {\n    return matcher.match(action);\n  } else {\n    return matcher(action);\n  }\n};\nfunction isAnyOf(...matchers) {\n  return (action) => {\n    return matchers.some((matcher) => matches(matcher, action));\n  };\n}\nfunction isAllOf(...matchers) {\n  return (action) => {\n    return matchers.every((matcher) => matches(matcher, action));\n  };\n}\nfunction hasExpectedRequestMetadata(action, validStatus) {\n  if (!action || !action.meta)\n    return false;\n  const hasValidRequestId = typeof action.meta.requestId === \"string\";\n  const hasValidRequestStatus = validStatus.indexOf(action.meta.requestStatus) > -1;\n  return hasValidRequestId && hasValidRequestStatus;\n}\nfunction isAsyncThunkArray(a) {\n  return typeof a[0] === \"function\" && \"pending\" in a[0] && \"fulfilled\" in a[0] && \"rejected\" in a[0];\n}\nfunction isPending(...asyncThunks) {\n  if (asyncThunks.length === 0) {\n    return (action) => hasExpectedRequestMetadata(action, [\"pending\"]);\n  }\n  if (!isAsyncThunkArray(asyncThunks)) {\n    return isPending()(asyncThunks[0]);\n  }\n  return isAnyOf(...asyncThunks.map((asyncThunk) => asyncThunk.pending));\n}\nfunction isRejected(...asyncThunks) {\n  if (asyncThunks.length === 0) {\n    return (action) => hasExpectedRequestMetadata(action, [\"rejected\"]);\n  }\n  if (!isAsyncThunkArray(asyncThunks)) {\n    return isRejected()(asyncThunks[0]);\n  }\n  return isAnyOf(...asyncThunks.map((asyncThunk) => asyncThunk.rejected));\n}\nfunction isRejectedWithValue(...asyncThunks) {\n  const hasFlag = (action) => {\n    return action && action.meta && action.meta.rejectedWithValue;\n  };\n  if (asyncThunks.length === 0) {\n    return isAllOf(isRejected(...asyncThunks), hasFlag);\n  }\n  if (!isAsyncThunkArray(asyncThunks)) {\n    return isRejectedWithValue()(asyncThunks[0]);\n  }\n  return isAllOf(isRejected(...asyncThunks), hasFlag);\n}\nfunction isFulfilled(...asyncThunks) {\n  if (asyncThunks.length === 0) {\n    return (action) => hasExpectedRequestMetadata(action, [\"fulfilled\"]);\n  }\n  if (!isAsyncThunkArray(asyncThunks)) {\n    return isFulfilled()(asyncThunks[0]);\n  }\n  return isAnyOf(...asyncThunks.map((asyncThunk) => asyncThunk.fulfilled));\n}\nfunction isAsyncThunkAction(...asyncThunks) {\n  if (asyncThunks.length === 0) {\n    return (action) => hasExpectedRequestMetadata(action, [\"pending\", \"fulfilled\", \"rejected\"]);\n  }\n  if (!isAsyncThunkArray(asyncThunks)) {\n    return isAsyncThunkAction()(asyncThunks[0]);\n  }\n  return isAnyOf(...asyncThunks.flatMap((asyncThunk) => [asyncThunk.pending, asyncThunk.rejected, asyncThunk.fulfilled]));\n}\n\n// src/createAsyncThunk.ts\nvar commonProperties = [\"name\", \"message\", \"stack\", \"code\"];\nvar RejectWithValue = class {\n  constructor(payload, meta) {\n    this.payload = payload;\n    this.meta = meta;\n    /*\n    type-only property to distinguish between RejectWithValue and FulfillWithMeta\n    does not exist at runtime\n    */\n    __publicField(this, \"_type\");\n  }\n};\nvar FulfillWithMeta = class {\n  constructor(payload, meta) {\n    this.payload = payload;\n    this.meta = meta;\n    /*\n    type-only property to distinguish between RejectWithValue and FulfillWithMeta\n    does not exist at runtime\n    */\n    __publicField(this, \"_type\");\n  }\n};\nvar miniSerializeError = (value) => {\n  if (typeof value === \"object\" && value !== null) {\n    const simpleError = {};\n    for (const property of commonProperties) {\n      if (typeof value[property] === \"string\") {\n        simpleError[property] = value[property];\n      }\n    }\n    return simpleError;\n  }\n  return {\n    message: String(value)\n  };\n};\nvar createAsyncThunk = /* @__PURE__ */ (() => {\n  function createAsyncThunk2(typePrefix, payloadCreator, options) {\n    const fulfilled = createAction(typePrefix + \"/fulfilled\", (payload, requestId, arg, meta) => ({\n      payload,\n      meta: __spreadProps(__spreadValues({}, meta || {}), {\n        arg,\n        requestId,\n        requestStatus: \"fulfilled\"\n      })\n    }));\n    const pending = createAction(typePrefix + \"/pending\", (requestId, arg, meta) => ({\n      payload: void 0,\n      meta: __spreadProps(__spreadValues({}, meta || {}), {\n        arg,\n        requestId,\n        requestStatus: \"pending\"\n      })\n    }));\n    const rejected = createAction(typePrefix + \"/rejected\", (error, requestId, arg, payload, meta) => ({\n      payload,\n      error: (options && options.serializeError || miniSerializeError)(error || \"Rejected\"),\n      meta: __spreadProps(__spreadValues({}, meta || {}), {\n        arg,\n        requestId,\n        rejectedWithValue: !!payload,\n        requestStatus: \"rejected\",\n        aborted: (error == null ? void 0 : error.name) === \"AbortError\",\n        condition: (error == null ? void 0 : error.name) === \"ConditionError\"\n      })\n    }));\n    function actionCreator(arg) {\n      return (dispatch, getState, extra) => {\n        const requestId = (options == null ? void 0 : options.idGenerator) ? options.idGenerator(arg) : nanoid();\n        const abortController = new AbortController();\n        let abortHandler;\n        let abortReason;\n        function abort(reason) {\n          abortReason = reason;\n          abortController.abort();\n        }\n        const promise = async function() {\n          var _a, _b;\n          let finalAction;\n          try {\n            let conditionResult = (_a = options == null ? void 0 : options.condition) == null ? void 0 : _a.call(options, arg, {\n              getState,\n              extra\n            });\n            if (isThenable(conditionResult)) {\n              conditionResult = await conditionResult;\n            }\n            if (conditionResult === false || abortController.signal.aborted) {\n              throw {\n                name: \"ConditionError\",\n                message: \"Aborted due to condition callback returning false.\"\n              };\n            }\n            const abortedPromise = new Promise((_, reject) => {\n              abortHandler = () => {\n                reject({\n                  name: \"AbortError\",\n                  message: abortReason || \"Aborted\"\n                });\n              };\n              abortController.signal.addEventListener(\"abort\", abortHandler);\n            });\n            dispatch(pending(requestId, arg, (_b = options == null ? void 0 : options.getPendingMeta) == null ? void 0 : _b.call(options, {\n              requestId,\n              arg\n            }, {\n              getState,\n              extra\n            })));\n            finalAction = await Promise.race([abortedPromise, Promise.resolve(payloadCreator(arg, {\n              dispatch,\n              getState,\n              extra,\n              requestId,\n              signal: abortController.signal,\n              abort,\n              rejectWithValue: (value, meta) => {\n                return new RejectWithValue(value, meta);\n              },\n              fulfillWithValue: (value, meta) => {\n                return new FulfillWithMeta(value, meta);\n              }\n            })).then((result) => {\n              if (result instanceof RejectWithValue) {\n                throw result;\n              }\n              if (result instanceof FulfillWithMeta) {\n                return fulfilled(result.payload, requestId, arg, result.meta);\n              }\n              return fulfilled(result, requestId, arg);\n            })]);\n          } catch (err) {\n            finalAction = err instanceof RejectWithValue ? rejected(null, requestId, arg, err.payload, err.meta) : rejected(err, requestId, arg);\n          } finally {\n            if (abortHandler) {\n              abortController.signal.removeEventListener(\"abort\", abortHandler);\n            }\n          }\n          const skipDispatch = options && !options.dispatchConditionRejection && rejected.match(finalAction) && finalAction.meta.condition;\n          if (!skipDispatch) {\n            dispatch(finalAction);\n          }\n          return finalAction;\n        }();\n        return Object.assign(promise, {\n          abort,\n          requestId,\n          arg,\n          unwrap() {\n            return promise.then(unwrapResult);\n          }\n        });\n      };\n    }\n    return Object.assign(actionCreator, {\n      pending,\n      rejected,\n      fulfilled,\n      settled: isAnyOf(rejected, fulfilled),\n      typePrefix\n    });\n  }\n  createAsyncThunk2.withTypes = () => createAsyncThunk2;\n  return createAsyncThunk2;\n})();\nfunction unwrapResult(action) {\n  if (action.meta && action.meta.rejectedWithValue) {\n    throw action.payload;\n  }\n  if (action.error) {\n    throw action.error;\n  }\n  return action.payload;\n}\nfunction isThenable(value) {\n  return value !== null && typeof value === \"object\" && typeof value.then === \"function\";\n}\n\n// src/createSlice.ts\nvar asyncThunkSymbol = /* @__PURE__ */ Symbol.for(\"rtk-slice-createasyncthunk\");\nvar asyncThunkCreator = {\n  [asyncThunkSymbol]: createAsyncThunk\n};\nvar ReducerType = /* @__PURE__ */ ((ReducerType2) => {\n  ReducerType2[\"reducer\"] = \"reducer\";\n  ReducerType2[\"reducerWithPrepare\"] = \"reducerWithPrepare\";\n  ReducerType2[\"asyncThunk\"] = \"asyncThunk\";\n  return ReducerType2;\n})(ReducerType || {});\nfunction getType(slice, actionKey) {\n  return `${slice}/${actionKey}`;\n}\nfunction buildCreateSlice({\n  creators\n} = {}) {\n  var _a;\n  const cAT = (_a = creators == null ? void 0 : creators.asyncThunk) == null ? void 0 : _a[asyncThunkSymbol];\n  return function createSlice2(options) {\n    const {\n      name,\n      reducerPath = name\n    } = options;\n    if (!name) {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(11) : \"`name` is a required option for createSlice\");\n    }\n    if (typeof process !== \"undefined\" && process.env.NODE_ENV === \"development\") {\n      if (options.initialState === void 0) {\n        console.error(\"You must provide an `initialState` value that is not `undefined`. You may have misspelled `initialState`\");\n      }\n    }\n    const reducers = (typeof options.reducers === \"function\" ? options.reducers(buildReducerCreators()) : options.reducers) || {};\n    const reducerNames = Object.keys(reducers);\n    const context = {\n      sliceCaseReducersByName: {},\n      sliceCaseReducersByType: {},\n      actionCreators: {},\n      sliceMatchers: []\n    };\n    const contextMethods = {\n      addCase(typeOrActionCreator, reducer2) {\n        const type = typeof typeOrActionCreator === \"string\" ? typeOrActionCreator : typeOrActionCreator.type;\n        if (!type) {\n          throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(12) : \"`context.addCase` cannot be called with an empty action type\");\n        }\n        if (type in context.sliceCaseReducersByType) {\n          throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(13) : \"`context.addCase` cannot be called with two reducers for the same action type: \" + type);\n        }\n        context.sliceCaseReducersByType[type] = reducer2;\n        return contextMethods;\n      },\n      addMatcher(matcher, reducer2) {\n        context.sliceMatchers.push({\n          matcher,\n          reducer: reducer2\n        });\n        return contextMethods;\n      },\n      exposeAction(name2, actionCreator) {\n        context.actionCreators[name2] = actionCreator;\n        return contextMethods;\n      },\n      exposeCaseReducer(name2, reducer2) {\n        context.sliceCaseReducersByName[name2] = reducer2;\n        return contextMethods;\n      }\n    };\n    reducerNames.forEach((reducerName) => {\n      const reducerDefinition = reducers[reducerName];\n      const reducerDetails = {\n        reducerName,\n        type: getType(name, reducerName),\n        createNotation: typeof options.reducers === \"function\"\n      };\n      if (isAsyncThunkSliceReducerDefinition(reducerDefinition)) {\n        handleThunkCaseReducerDefinition(reducerDetails, reducerDefinition, contextMethods, cAT);\n      } else {\n        handleNormalReducerDefinition(reducerDetails, reducerDefinition, contextMethods);\n      }\n    });\n    function buildReducer() {\n      if (process.env.NODE_ENV !== \"production\") {\n        if (typeof options.extraReducers === \"object\") {\n          throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(14) : \"The object notation for `createSlice.extraReducers` has been removed. Please use the 'builder callback' notation instead: https://redux-toolkit.js.org/api/createSlice\");\n        }\n      }\n      const [extraReducers = {}, actionMatchers = [], defaultCaseReducer = void 0] = typeof options.extraReducers === \"function\" ? executeReducerBuilderCallback(options.extraReducers) : [options.extraReducers];\n      const finalCaseReducers = __spreadValues(__spreadValues({}, extraReducers), context.sliceCaseReducersByType);\n      return createReducer(options.initialState, (builder) => {\n        for (let key in finalCaseReducers) {\n          builder.addCase(key, finalCaseReducers[key]);\n        }\n        for (let sM of context.sliceMatchers) {\n          builder.addMatcher(sM.matcher, sM.reducer);\n        }\n        for (let m of actionMatchers) {\n          builder.addMatcher(m.matcher, m.reducer);\n        }\n        if (defaultCaseReducer) {\n          builder.addDefaultCase(defaultCaseReducer);\n        }\n      });\n    }\n    const selectSelf = (state) => state;\n    const injectedSelectorCache = /* @__PURE__ */ new Map();\n    let _reducer;\n    function reducer(state, action) {\n      if (!_reducer)\n        _reducer = buildReducer();\n      return _reducer(state, action);\n    }\n    function getInitialState() {\n      if (!_reducer)\n        _reducer = buildReducer();\n      return _reducer.getInitialState();\n    }\n    function makeSelectorProps(reducerPath2, injected = false) {\n      function selectSlice(state) {\n        let sliceState = state[reducerPath2];\n        if (typeof sliceState === \"undefined\") {\n          if (injected) {\n            sliceState = getInitialState();\n          } else if (process.env.NODE_ENV !== \"production\") {\n            throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(15) : \"selectSlice returned undefined for an uninjected slice reducer\");\n          }\n        }\n        return sliceState;\n      }\n      function getSelectors(selectState = selectSelf) {\n        const selectorCache = emplace(injectedSelectorCache, injected, {\n          insert: () => /* @__PURE__ */ new WeakMap()\n        });\n        return emplace(selectorCache, selectState, {\n          insert: () => {\n            var _a2;\n            const map = {};\n            for (const [name2, selector] of Object.entries((_a2 = options.selectors) != null ? _a2 : {})) {\n              map[name2] = wrapSelector(selector, selectState, getInitialState, injected);\n            }\n            return map;\n          }\n        });\n      }\n      return {\n        reducerPath: reducerPath2,\n        getSelectors,\n        get selectors() {\n          return getSelectors(selectSlice);\n        },\n        selectSlice\n      };\n    }\n    const slice = __spreadProps(__spreadValues({\n      name,\n      reducer,\n      actions: context.actionCreators,\n      caseReducers: context.sliceCaseReducersByName,\n      getInitialState\n    }, makeSelectorProps(reducerPath)), {\n      injectInto(injectable, _a2 = {}) {\n        var _b = _a2, {\n          reducerPath: pathOpt\n        } = _b, config = __objRest(_b, [\n          \"reducerPath\"\n        ]);\n        const newReducerPath = pathOpt != null ? pathOpt : reducerPath;\n        injectable.inject({\n          reducerPath: newReducerPath,\n          reducer\n        }, config);\n        return __spreadValues(__spreadValues({}, slice), makeSelectorProps(newReducerPath, true));\n      }\n    });\n    return slice;\n  };\n}\nfunction wrapSelector(selector, selectState, getInitialState, injected) {\n  function wrapper(rootState, ...args) {\n    let sliceState = selectState(rootState);\n    if (typeof sliceState === \"undefined\") {\n      if (injected) {\n        sliceState = getInitialState();\n      } else if (process.env.NODE_ENV !== \"production\") {\n        throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(16) : \"selectState returned undefined for an uninjected slice reducer\");\n      }\n    }\n    return selector(sliceState, ...args);\n  }\n  wrapper.unwrapped = selector;\n  return wrapper;\n}\nvar createSlice = /* @__PURE__ */ buildCreateSlice();\nfunction buildReducerCreators() {\n  function asyncThunk(payloadCreator, config) {\n    return __spreadValues({\n      _reducerDefinitionType: \"asyncThunk\" /* asyncThunk */,\n      payloadCreator\n    }, config);\n  }\n  asyncThunk.withTypes = () => asyncThunk;\n  return {\n    reducer(caseReducer) {\n      return Object.assign({\n        // hack so the wrapping function has the same name as the original\n        // we need to create a wrapper so the `reducerDefinitionType` is not assigned to the original\n        [caseReducer.name](...args) {\n          return caseReducer(...args);\n        }\n      }[caseReducer.name], {\n        _reducerDefinitionType: \"reducer\" /* reducer */\n      });\n    },\n    preparedReducer(prepare, reducer) {\n      return {\n        _reducerDefinitionType: \"reducerWithPrepare\" /* reducerWithPrepare */,\n        prepare,\n        reducer\n      };\n    },\n    asyncThunk\n  };\n}\nfunction handleNormalReducerDefinition({\n  type,\n  reducerName,\n  createNotation\n}, maybeReducerWithPrepare, context) {\n  let caseReducer;\n  let prepareCallback;\n  if (\"reducer\" in maybeReducerWithPrepare) {\n    if (createNotation && !isCaseReducerWithPrepareDefinition(maybeReducerWithPrepare)) {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(17) : \"Please use the `create.preparedReducer` notation for prepared action creators with the `create` notation.\");\n    }\n    caseReducer = maybeReducerWithPrepare.reducer;\n    prepareCallback = maybeReducerWithPrepare.prepare;\n  } else {\n    caseReducer = maybeReducerWithPrepare;\n  }\n  context.addCase(type, caseReducer).exposeCaseReducer(reducerName, caseReducer).exposeAction(reducerName, prepareCallback ? createAction(type, prepareCallback) : createAction(type));\n}\nfunction isAsyncThunkSliceReducerDefinition(reducerDefinition) {\n  return reducerDefinition._reducerDefinitionType === \"asyncThunk\" /* asyncThunk */;\n}\nfunction isCaseReducerWithPrepareDefinition(reducerDefinition) {\n  return reducerDefinition._reducerDefinitionType === \"reducerWithPrepare\" /* reducerWithPrepare */;\n}\nfunction handleThunkCaseReducerDefinition({\n  type,\n  reducerName\n}, reducerDefinition, context, cAT) {\n  if (!cAT) {\n    throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(18) : \"Cannot use `create.asyncThunk` in the built-in `createSlice`. Use `buildCreateSlice({ creators: { asyncThunk: asyncThunkCreator } })` to create a customised version of `createSlice`.\");\n  }\n  const {\n    payloadCreator,\n    fulfilled,\n    pending,\n    rejected,\n    settled,\n    options\n  } = reducerDefinition;\n  const thunk = cAT(type, payloadCreator, options);\n  context.exposeAction(reducerName, thunk);\n  if (fulfilled) {\n    context.addCase(thunk.fulfilled, fulfilled);\n  }\n  if (pending) {\n    context.addCase(thunk.pending, pending);\n  }\n  if (rejected) {\n    context.addCase(thunk.rejected, rejected);\n  }\n  if (settled) {\n    context.addMatcher(thunk.settled, settled);\n  }\n  context.exposeCaseReducer(reducerName, {\n    fulfilled: fulfilled || noop,\n    pending: pending || noop,\n    rejected: rejected || noop,\n    settled: settled || noop\n  });\n}\nfunction noop() {\n}\n\n// src/entities/entity_state.ts\nfunction getInitialEntityState() {\n  return {\n    ids: [],\n    entities: {}\n  };\n}\nfunction createInitialStateFactory(stateAdapter) {\n  function getInitialState(additionalState = {}, entities) {\n    const state = Object.assign(getInitialEntityState(), additionalState);\n    return entities ? stateAdapter.setAll(state, entities) : state;\n  }\n  return {\n    getInitialState\n  };\n}\n\n// src/entities/state_selectors.ts\nfunction createSelectorsFactory() {\n  function getSelectors(selectState, options = {}) {\n    const {\n      createSelector: createSelector2 = createDraftSafeSelector\n    } = options;\n    const selectIds = (state) => state.ids;\n    const selectEntities = (state) => state.entities;\n    const selectAll = createSelector2(selectIds, selectEntities, (ids, entities) => ids.map((id) => entities[id]));\n    const selectId = (_, id) => id;\n    const selectById = (entities, id) => entities[id];\n    const selectTotal = createSelector2(selectIds, (ids) => ids.length);\n    if (!selectState) {\n      return {\n        selectIds,\n        selectEntities,\n        selectAll,\n        selectTotal,\n        selectById: createSelector2(selectEntities, selectId, selectById)\n      };\n    }\n    const selectGlobalizedEntities = createSelector2(selectState, selectEntities);\n    return {\n      selectIds: createSelector2(selectState, selectIds),\n      selectEntities: selectGlobalizedEntities,\n      selectAll: createSelector2(selectState, selectAll),\n      selectTotal: createSelector2(selectState, selectTotal),\n      selectById: createSelector2(selectGlobalizedEntities, selectId, selectById)\n    };\n  }\n  return {\n    getSelectors\n  };\n}\n\n// src/entities/sorted_state_adapter.ts\nimport { current as current3 } from \"immer\";\n\n// src/entities/state_adapter.ts\nimport { produce as createNextState3, isDraft as isDraft3 } from \"immer\";\nvar isDraftTyped = isDraft3;\nfunction createSingleArgumentStateOperator(mutator) {\n  const operator = createStateOperator((_, state) => mutator(state));\n  return function operation(state) {\n    return operator(state, void 0);\n  };\n}\nfunction createStateOperator(mutator) {\n  return function operation(state, arg) {\n    function isPayloadActionArgument(arg2) {\n      return isFSA(arg2);\n    }\n    const runMutator = (draft) => {\n      if (isPayloadActionArgument(arg)) {\n        mutator(arg.payload, draft);\n      } else {\n        mutator(arg, draft);\n      }\n    };\n    if (isDraftTyped(state)) {\n      runMutator(state);\n      return state;\n    }\n    return createNextState3(state, runMutator);\n  };\n}\n\n// src/entities/utils.ts\nimport { current as current2, isDraft as isDraft4 } from \"immer\";\nfunction selectIdValue(entity, selectId) {\n  const key = selectId(entity);\n  if (process.env.NODE_ENV !== \"production\" && key === void 0) {\n    console.warn(\"The entity passed to the `selectId` implementation returned undefined.\", \"You should probably provide your own `selectId` implementation.\", \"The entity that was passed:\", entity, \"The `selectId` implementation:\", selectId.toString());\n  }\n  return key;\n}\nfunction ensureEntitiesArray(entities) {\n  if (!Array.isArray(entities)) {\n    entities = Object.values(entities);\n  }\n  return entities;\n}\nfunction getCurrent(value) {\n  return isDraft4(value) ? current2(value) : value;\n}\nfunction splitAddedUpdatedEntities(newEntities, selectId, state) {\n  newEntities = ensureEntitiesArray(newEntities);\n  const existingIdsArray = getCurrent(state.ids);\n  const existingIds = new Set(existingIdsArray);\n  const added = [];\n  const updated = [];\n  for (const entity of newEntities) {\n    const id = selectIdValue(entity, selectId);\n    if (existingIds.has(id)) {\n      updated.push({\n        id,\n        changes: entity\n      });\n    } else {\n      added.push(entity);\n    }\n  }\n  return [added, updated, existingIdsArray];\n}\n\n// src/entities/unsorted_state_adapter.ts\nfunction createUnsortedStateAdapter(selectId) {\n  function addOneMutably(entity, state) {\n    const key = selectIdValue(entity, selectId);\n    if (key in state.entities) {\n      return;\n    }\n    state.ids.push(key);\n    state.entities[key] = entity;\n  }\n  function addManyMutably(newEntities, state) {\n    newEntities = ensureEntitiesArray(newEntities);\n    for (const entity of newEntities) {\n      addOneMutably(entity, state);\n    }\n  }\n  function setOneMutably(entity, state) {\n    const key = selectIdValue(entity, selectId);\n    if (!(key in state.entities)) {\n      state.ids.push(key);\n    }\n    ;\n    state.entities[key] = entity;\n  }\n  function setManyMutably(newEntities, state) {\n    newEntities = ensureEntitiesArray(newEntities);\n    for (const entity of newEntities) {\n      setOneMutably(entity, state);\n    }\n  }\n  function setAllMutably(newEntities, state) {\n    newEntities = ensureEntitiesArray(newEntities);\n    state.ids = [];\n    state.entities = {};\n    addManyMutably(newEntities, state);\n  }\n  function removeOneMutably(key, state) {\n    return removeManyMutably([key], state);\n  }\n  function removeManyMutably(keys, state) {\n    let didMutate = false;\n    keys.forEach((key) => {\n      if (key in state.entities) {\n        delete state.entities[key];\n        didMutate = true;\n      }\n    });\n    if (didMutate) {\n      state.ids = state.ids.filter((id) => id in state.entities);\n    }\n  }\n  function removeAllMutably(state) {\n    Object.assign(state, {\n      ids: [],\n      entities: {}\n    });\n  }\n  function takeNewKey(keys, update, state) {\n    const original3 = state.entities[update.id];\n    if (original3 === void 0) {\n      return false;\n    }\n    const updated = Object.assign({}, original3, update.changes);\n    const newKey = selectIdValue(updated, selectId);\n    const hasNewKey = newKey !== update.id;\n    if (hasNewKey) {\n      keys[update.id] = newKey;\n      delete state.entities[update.id];\n    }\n    ;\n    state.entities[newKey] = updated;\n    return hasNewKey;\n  }\n  function updateOneMutably(update, state) {\n    return updateManyMutably([update], state);\n  }\n  function updateManyMutably(updates, state) {\n    const newKeys = {};\n    const updatesPerEntity = {};\n    updates.forEach((update) => {\n      if (update.id in state.entities) {\n        updatesPerEntity[update.id] = {\n          id: update.id,\n          // Spreads ignore falsy values, so this works even if there isn't\n          // an existing update already at this key\n          changes: __spreadValues(__spreadValues({}, updatesPerEntity[update.id] ? updatesPerEntity[update.id].changes : null), update.changes)\n        };\n      }\n    });\n    updates = Object.values(updatesPerEntity);\n    const didMutateEntities = updates.length > 0;\n    if (didMutateEntities) {\n      const didMutateIds = updates.filter((update) => takeNewKey(newKeys, update, state)).length > 0;\n      if (didMutateIds) {\n        state.ids = Object.values(state.entities).map((e) => selectIdValue(e, selectId));\n      }\n    }\n  }\n  function upsertOneMutably(entity, state) {\n    return upsertManyMutably([entity], state);\n  }\n  function upsertManyMutably(newEntities, state) {\n    const [added, updated] = splitAddedUpdatedEntities(newEntities, selectId, state);\n    updateManyMutably(updated, state);\n    addManyMutably(added, state);\n  }\n  return {\n    removeAll: createSingleArgumentStateOperator(removeAllMutably),\n    addOne: createStateOperator(addOneMutably),\n    addMany: createStateOperator(addManyMutably),\n    setOne: createStateOperator(setOneMutably),\n    setMany: createStateOperator(setManyMutably),\n    setAll: createStateOperator(setAllMutably),\n    updateOne: createStateOperator(updateOneMutably),\n    updateMany: createStateOperator(updateManyMutably),\n    upsertOne: createStateOperator(upsertOneMutably),\n    upsertMany: createStateOperator(upsertManyMutably),\n    removeOne: createStateOperator(removeOneMutably),\n    removeMany: createStateOperator(removeManyMutably)\n  };\n}\n\n// src/entities/sorted_state_adapter.ts\nfunction findInsertIndex(sortedItems, item, comparisonFunction) {\n  let lowIndex = 0;\n  let highIndex = sortedItems.length;\n  while (lowIndex < highIndex) {\n    let middleIndex = lowIndex + highIndex >>> 1;\n    const currentItem = sortedItems[middleIndex];\n    const res = comparisonFunction(item, currentItem);\n    if (res >= 0) {\n      lowIndex = middleIndex + 1;\n    } else {\n      highIndex = middleIndex;\n    }\n  }\n  return lowIndex;\n}\nfunction insert(sortedItems, item, comparisonFunction) {\n  const insertAtIndex = findInsertIndex(sortedItems, item, comparisonFunction);\n  sortedItems.splice(insertAtIndex, 0, item);\n  return sortedItems;\n}\nfunction createSortedStateAdapter(selectId, comparer) {\n  const {\n    removeOne,\n    removeMany,\n    removeAll\n  } = createUnsortedStateAdapter(selectId);\n  function addOneMutably(entity, state) {\n    return addManyMutably([entity], state);\n  }\n  function addManyMutably(newEntities, state, existingIds) {\n    newEntities = ensureEntitiesArray(newEntities);\n    const existingKeys = new Set(existingIds != null ? existingIds : current3(state.ids));\n    const models = newEntities.filter((model) => !existingKeys.has(selectIdValue(model, selectId)));\n    if (models.length !== 0) {\n      mergeFunction(state, models);\n    }\n  }\n  function setOneMutably(entity, state) {\n    return setManyMutably([entity], state);\n  }\n  function setManyMutably(newEntities, state) {\n    newEntities = ensureEntitiesArray(newEntities);\n    if (newEntities.length !== 0) {\n      for (const item of newEntities) {\n        delete state.entities[selectId(item)];\n      }\n      mergeFunction(state, newEntities);\n    }\n  }\n  function setAllMutably(newEntities, state) {\n    newEntities = ensureEntitiesArray(newEntities);\n    state.entities = {};\n    state.ids = [];\n    addManyMutably(newEntities, state, []);\n  }\n  function updateOneMutably(update, state) {\n    return updateManyMutably([update], state);\n  }\n  function updateManyMutably(updates, state) {\n    let appliedUpdates = false;\n    let replacedIds = false;\n    for (let update of updates) {\n      const entity = state.entities[update.id];\n      if (!entity) {\n        continue;\n      }\n      appliedUpdates = true;\n      Object.assign(entity, update.changes);\n      const newId = selectId(entity);\n      if (update.id !== newId) {\n        replacedIds = true;\n        delete state.entities[update.id];\n        const oldIndex = state.ids.indexOf(update.id);\n        state.ids[oldIndex] = newId;\n        state.entities[newId] = entity;\n      }\n    }\n    if (appliedUpdates) {\n      mergeFunction(state, [], appliedUpdates, replacedIds);\n    }\n  }\n  function upsertOneMutably(entity, state) {\n    return upsertManyMutably([entity], state);\n  }\n  function upsertManyMutably(newEntities, state) {\n    const [added, updated, existingIdsArray] = splitAddedUpdatedEntities(newEntities, selectId, state);\n    if (updated.length) {\n      updateManyMutably(updated, state);\n    }\n    if (added.length) {\n      addManyMutably(added, state, existingIdsArray);\n    }\n  }\n  function areArraysEqual(a, b) {\n    if (a.length !== b.length) {\n      return false;\n    }\n    for (let i = 0; i < a.length && i < b.length; i++) {\n      if (a[i] === b[i]) {\n        continue;\n      }\n      return false;\n    }\n    return true;\n  }\n  const mergeInsertion = (state, addedItems, appliedUpdates, replacedIds) => {\n    const currentEntities = getCurrent(state.entities);\n    const currentIds = getCurrent(state.ids);\n    const stateEntities = state.entities;\n    let ids = currentIds;\n    if (replacedIds) {\n      ids = Array.from(new Set(currentIds));\n    }\n    let sortedEntities = [];\n    for (const id of ids) {\n      const entity = currentEntities[id];\n      if (entity) {\n        sortedEntities.push(entity);\n      }\n    }\n    const wasPreviouslyEmpty = sortedEntities.length === 0;\n    for (const item of addedItems) {\n      stateEntities[selectId(item)] = item;\n      if (!wasPreviouslyEmpty) {\n        insert(sortedEntities, item, comparer);\n      }\n    }\n    if (wasPreviouslyEmpty) {\n      sortedEntities = addedItems.slice().sort(comparer);\n    } else if (appliedUpdates) {\n      sortedEntities.sort(comparer);\n    }\n    const newSortedIds = sortedEntities.map(selectId);\n    if (!areArraysEqual(currentIds, newSortedIds)) {\n      state.ids = newSortedIds;\n    }\n  };\n  const mergeFunction = mergeInsertion;\n  return {\n    removeOne,\n    removeMany,\n    removeAll,\n    addOne: createStateOperator(addOneMutably),\n    updateOne: createStateOperator(updateOneMutably),\n    upsertOne: createStateOperator(upsertOneMutably),\n    setOne: createStateOperator(setOneMutably),\n    setMany: createStateOperator(setManyMutably),\n    setAll: createStateOperator(setAllMutably),\n    addMany: createStateOperator(addManyMutably),\n    updateMany: createStateOperator(updateManyMutably),\n    upsertMany: createStateOperator(upsertManyMutably)\n  };\n}\n\n// src/entities/create_adapter.ts\nfunction createEntityAdapter(options = {}) {\n  const {\n    selectId,\n    sortComparer\n  } = __spreadValues({\n    sortComparer: false,\n    selectId: (instance) => instance.id\n  }, options);\n  const stateAdapter = sortComparer ? createSortedStateAdapter(selectId, sortComparer) : createUnsortedStateAdapter(selectId);\n  const stateFactory = createInitialStateFactory(stateAdapter);\n  const selectorsFactory = createSelectorsFactory();\n  return __spreadValues(__spreadValues(__spreadValues({\n    selectId,\n    sortComparer\n  }, stateFactory), selectorsFactory), stateAdapter);\n}\n\n// src/listenerMiddleware/index.ts\nimport { isAction as isAction3 } from \"redux\";\n\n// src/listenerMiddleware/exceptions.ts\nvar task = \"task\";\nvar listener = \"listener\";\nvar completed = \"completed\";\nvar cancelled = \"cancelled\";\nvar taskCancelled = `task-${cancelled}`;\nvar taskCompleted = `task-${completed}`;\nvar listenerCancelled = `${listener}-${cancelled}`;\nvar listenerCompleted = `${listener}-${completed}`;\nvar TaskAbortError = class {\n  constructor(code) {\n    this.code = code;\n    __publicField(this, \"name\", \"TaskAbortError\");\n    __publicField(this, \"message\");\n    this.message = `${task} ${cancelled} (reason: ${code})`;\n  }\n};\n\n// src/listenerMiddleware/utils.ts\nvar assertFunction = (func, expected) => {\n  if (typeof func !== \"function\") {\n    throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(32) : `${expected} is not a function`);\n  }\n};\nvar noop2 = () => {\n};\nvar catchRejection = (promise, onError = noop2) => {\n  promise.catch(onError);\n  return promise;\n};\nvar addAbortSignalListener = (abortSignal, callback) => {\n  abortSignal.addEventListener(\"abort\", callback, {\n    once: true\n  });\n  return () => abortSignal.removeEventListener(\"abort\", callback);\n};\nvar abortControllerWithReason = (abortController, reason) => {\n  const signal = abortController.signal;\n  if (signal.aborted) {\n    return;\n  }\n  if (!(\"reason\" in signal)) {\n    Object.defineProperty(signal, \"reason\", {\n      enumerable: true,\n      value: reason,\n      configurable: true,\n      writable: true\n    });\n  }\n  ;\n  abortController.abort(reason);\n};\n\n// src/listenerMiddleware/task.ts\nvar validateActive = (signal) => {\n  if (signal.aborted) {\n    const {\n      reason\n    } = signal;\n    throw new TaskAbortError(reason);\n  }\n};\nfunction raceWithSignal(signal, promise) {\n  let cleanup = noop2;\n  return new Promise((resolve, reject) => {\n    const notifyRejection = () => reject(new TaskAbortError(signal.reason));\n    if (signal.aborted) {\n      notifyRejection();\n      return;\n    }\n    cleanup = addAbortSignalListener(signal, notifyRejection);\n    promise.finally(() => cleanup()).then(resolve, reject);\n  }).finally(() => {\n    cleanup = noop2;\n  });\n}\nvar runTask = async (task2, cleanUp) => {\n  try {\n    await Promise.resolve();\n    const value = await task2();\n    return {\n      status: \"ok\",\n      value\n    };\n  } catch (error) {\n    return {\n      status: error instanceof TaskAbortError ? \"cancelled\" : \"rejected\",\n      error\n    };\n  } finally {\n    cleanUp == null ? void 0 : cleanUp();\n  }\n};\nvar createPause = (signal) => {\n  return (promise) => {\n    return catchRejection(raceWithSignal(signal, promise).then((output) => {\n      validateActive(signal);\n      return output;\n    }));\n  };\n};\nvar createDelay = (signal) => {\n  const pause = createPause(signal);\n  return (timeoutMs) => {\n    return pause(new Promise((resolve) => setTimeout(resolve, timeoutMs)));\n  };\n};\n\n// src/listenerMiddleware/index.ts\nvar {\n  assign\n} = Object;\nvar INTERNAL_NIL_TOKEN = {};\nvar alm = \"listenerMiddleware\";\nvar createFork = (parentAbortSignal, parentBlockingPromises) => {\n  const linkControllers = (controller) => addAbortSignalListener(parentAbortSignal, () => abortControllerWithReason(controller, parentAbortSignal.reason));\n  return (taskExecutor, opts) => {\n    assertFunction(taskExecutor, \"taskExecutor\");\n    const childAbortController = new AbortController();\n    linkControllers(childAbortController);\n    const result = runTask(async () => {\n      validateActive(parentAbortSignal);\n      validateActive(childAbortController.signal);\n      const result2 = await taskExecutor({\n        pause: createPause(childAbortController.signal),\n        delay: createDelay(childAbortController.signal),\n        signal: childAbortController.signal\n      });\n      validateActive(childAbortController.signal);\n      return result2;\n    }, () => abortControllerWithReason(childAbortController, taskCompleted));\n    if (opts == null ? void 0 : opts.autoJoin) {\n      parentBlockingPromises.push(result.catch(noop2));\n    }\n    return {\n      result: createPause(parentAbortSignal)(result),\n      cancel() {\n        abortControllerWithReason(childAbortController, taskCancelled);\n      }\n    };\n  };\n};\nvar createTakePattern = (startListening, signal) => {\n  const take = async (predicate, timeout) => {\n    validateActive(signal);\n    let unsubscribe = () => {\n    };\n    const tuplePromise = new Promise((resolve, reject) => {\n      let stopListening = startListening({\n        predicate,\n        effect: (action, listenerApi) => {\n          listenerApi.unsubscribe();\n          resolve([action, listenerApi.getState(), listenerApi.getOriginalState()]);\n        }\n      });\n      unsubscribe = () => {\n        stopListening();\n        reject();\n      };\n    });\n    const promises = [tuplePromise];\n    if (timeout != null) {\n      promises.push(new Promise((resolve) => setTimeout(resolve, timeout, null)));\n    }\n    try {\n      const output = await raceWithSignal(signal, Promise.race(promises));\n      validateActive(signal);\n      return output;\n    } finally {\n      unsubscribe();\n    }\n  };\n  return (predicate, timeout) => catchRejection(take(predicate, timeout));\n};\nvar getListenerEntryPropsFrom = (options) => {\n  let {\n    type,\n    actionCreator,\n    matcher,\n    predicate,\n    effect\n  } = options;\n  if (type) {\n    predicate = createAction(type).match;\n  } else if (actionCreator) {\n    type = actionCreator.type;\n    predicate = actionCreator.match;\n  } else if (matcher) {\n    predicate = matcher;\n  } else if (predicate) {\n  } else {\n    throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(21) : \"Creating or removing a listener requires one of the known fields for matching an action\");\n  }\n  assertFunction(effect, \"options.listener\");\n  return {\n    predicate,\n    type,\n    effect\n  };\n};\nvar createListenerEntry = Object.assign((options) => {\n  const {\n    type,\n    predicate,\n    effect\n  } = getListenerEntryPropsFrom(options);\n  const id = nanoid();\n  const entry = {\n    id,\n    effect,\n    type,\n    predicate,\n    pending: /* @__PURE__ */ new Set(),\n    unsubscribe: () => {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(22) : \"Unsubscribe not initialized\");\n    }\n  };\n  return entry;\n}, {\n  withTypes: () => createListenerEntry\n});\nvar cancelActiveListeners = (entry) => {\n  entry.pending.forEach((controller) => {\n    abortControllerWithReason(controller, listenerCancelled);\n  });\n};\nvar createClearListenerMiddleware = (listenerMap) => {\n  return () => {\n    listenerMap.forEach(cancelActiveListeners);\n    listenerMap.clear();\n  };\n};\nvar safelyNotifyError = (errorHandler, errorToNotify, errorInfo) => {\n  try {\n    errorHandler(errorToNotify, errorInfo);\n  } catch (errorHandlerError) {\n    setTimeout(() => {\n      throw errorHandlerError;\n    }, 0);\n  }\n};\nvar addListener = Object.assign(createAction(`${alm}/add`), {\n  withTypes: () => addListener\n});\nvar clearAllListeners = createAction(`${alm}/removeAll`);\nvar removeListener = Object.assign(createAction(`${alm}/remove`), {\n  withTypes: () => removeListener\n});\nvar defaultErrorHandler = (...args) => {\n  console.error(`${alm}/error`, ...args);\n};\nvar createListenerMiddleware = (middlewareOptions = {}) => {\n  const listenerMap = /* @__PURE__ */ new Map();\n  const {\n    extra,\n    onError = defaultErrorHandler\n  } = middlewareOptions;\n  assertFunction(onError, \"onError\");\n  const insertEntry = (entry) => {\n    entry.unsubscribe = () => listenerMap.delete(entry.id);\n    listenerMap.set(entry.id, entry);\n    return (cancelOptions) => {\n      entry.unsubscribe();\n      if (cancelOptions == null ? void 0 : cancelOptions.cancelActive) {\n        cancelActiveListeners(entry);\n      }\n    };\n  };\n  const startListening = (options) => {\n    let entry = find(Array.from(listenerMap.values()), (existingEntry) => existingEntry.effect === options.effect);\n    if (!entry) {\n      entry = createListenerEntry(options);\n    }\n    return insertEntry(entry);\n  };\n  Object.assign(startListening, {\n    withTypes: () => startListening\n  });\n  const stopListening = (options) => {\n    const {\n      type,\n      effect,\n      predicate\n    } = getListenerEntryPropsFrom(options);\n    const entry = find(Array.from(listenerMap.values()), (entry2) => {\n      const matchPredicateOrType = typeof type === \"string\" ? entry2.type === type : entry2.predicate === predicate;\n      return matchPredicateOrType && entry2.effect === effect;\n    });\n    if (entry) {\n      entry.unsubscribe();\n      if (options.cancelActive) {\n        cancelActiveListeners(entry);\n      }\n    }\n    return !!entry;\n  };\n  Object.assign(stopListening, {\n    withTypes: () => stopListening\n  });\n  const notifyListener = async (entry, action, api, getOriginalState) => {\n    const internalTaskController = new AbortController();\n    const take = createTakePattern(startListening, internalTaskController.signal);\n    const autoJoinPromises = [];\n    try {\n      entry.pending.add(internalTaskController);\n      await Promise.resolve(entry.effect(\n        action,\n        // Use assign() rather than ... to avoid extra helper functions added to bundle\n        assign({}, api, {\n          getOriginalState,\n          condition: (predicate, timeout) => take(predicate, timeout).then(Boolean),\n          take,\n          delay: createDelay(internalTaskController.signal),\n          pause: createPause(internalTaskController.signal),\n          extra,\n          signal: internalTaskController.signal,\n          fork: createFork(internalTaskController.signal, autoJoinPromises),\n          unsubscribe: entry.unsubscribe,\n          subscribe: () => {\n            listenerMap.set(entry.id, entry);\n          },\n          cancelActiveListeners: () => {\n            entry.pending.forEach((controller, _, set) => {\n              if (controller !== internalTaskController) {\n                abortControllerWithReason(controller, listenerCancelled);\n                set.delete(controller);\n              }\n            });\n          },\n          cancel: () => {\n            abortControllerWithReason(internalTaskController, listenerCancelled);\n            entry.pending.delete(internalTaskController);\n          },\n          throwIfCancelled: () => {\n            validateActive(internalTaskController.signal);\n          }\n        })\n      ));\n    } catch (listenerError) {\n      if (!(listenerError instanceof TaskAbortError)) {\n        safelyNotifyError(onError, listenerError, {\n          raisedBy: \"effect\"\n        });\n      }\n    } finally {\n      await Promise.all(autoJoinPromises);\n      abortControllerWithReason(internalTaskController, listenerCompleted);\n      entry.pending.delete(internalTaskController);\n    }\n  };\n  const clearListenerMiddleware = createClearListenerMiddleware(listenerMap);\n  const middleware = (api) => (next) => (action) => {\n    if (!isAction3(action)) {\n      return next(action);\n    }\n    if (addListener.match(action)) {\n      return startListening(action.payload);\n    }\n    if (clearAllListeners.match(action)) {\n      clearListenerMiddleware();\n      return;\n    }\n    if (removeListener.match(action)) {\n      return stopListening(action.payload);\n    }\n    let originalState = api.getState();\n    const getOriginalState = () => {\n      if (originalState === INTERNAL_NIL_TOKEN) {\n        throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(23) : `${alm}: getOriginalState can only be called synchronously`);\n      }\n      return originalState;\n    };\n    let result;\n    try {\n      result = next(action);\n      if (listenerMap.size > 0) {\n        const currentState = api.getState();\n        const listenerEntries = Array.from(listenerMap.values());\n        for (const entry of listenerEntries) {\n          let runListener = false;\n          try {\n            runListener = entry.predicate(action, currentState, originalState);\n          } catch (predicateError) {\n            runListener = false;\n            safelyNotifyError(onError, predicateError, {\n              raisedBy: \"predicate\"\n            });\n          }\n          if (!runListener) {\n            continue;\n          }\n          notifyListener(entry, action, api, getOriginalState);\n        }\n      }\n    } finally {\n      originalState = INTERNAL_NIL_TOKEN;\n    }\n    return result;\n  };\n  return {\n    middleware,\n    startListening,\n    stopListening,\n    clearListeners: clearListenerMiddleware\n  };\n};\n\n// src/dynamicMiddleware/index.ts\nimport { compose as compose3 } from \"redux\";\nvar createMiddlewareEntry = (middleware) => ({\n  id: nanoid(),\n  middleware,\n  applied: /* @__PURE__ */ new Map()\n});\nvar matchInstance = (instanceId) => (action) => {\n  var _a;\n  return ((_a = action == null ? void 0 : action.meta) == null ? void 0 : _a.instanceId) === instanceId;\n};\nvar createDynamicMiddleware = () => {\n  const instanceId = nanoid();\n  const middlewareMap = /* @__PURE__ */ new Map();\n  const withMiddleware = Object.assign(createAction(\"dynamicMiddleware/add\", (...middlewares) => ({\n    payload: middlewares,\n    meta: {\n      instanceId\n    }\n  })), {\n    withTypes: () => withMiddleware\n  });\n  const addMiddleware = Object.assign(function addMiddleware2(...middlewares) {\n    middlewares.forEach((middleware2) => {\n      let entry = find(Array.from(middlewareMap.values()), (entry2) => entry2.middleware === middleware2);\n      if (!entry) {\n        entry = createMiddlewareEntry(middleware2);\n      }\n      middlewareMap.set(entry.id, entry);\n    });\n  }, {\n    withTypes: () => addMiddleware\n  });\n  const getFinalMiddleware = (api) => {\n    const appliedMiddleware = Array.from(middlewareMap.values()).map((entry) => emplace(entry.applied, api, {\n      insert: () => entry.middleware(api)\n    }));\n    return compose3(...appliedMiddleware);\n  };\n  const isWithMiddleware = isAllOf(withMiddleware, matchInstance(instanceId));\n  const middleware = (api) => (next) => (action) => {\n    if (isWithMiddleware(action)) {\n      addMiddleware(...action.payload);\n      return api.dispatch;\n    }\n    return getFinalMiddleware(api)(next)(action);\n  };\n  return {\n    middleware,\n    addMiddleware,\n    withMiddleware,\n    instanceId\n  };\n};\n\n// src/combineSlices.ts\nimport { combineReducers as combineReducers2 } from \"redux\";\nvar isSliceLike = (maybeSliceLike) => \"reducerPath\" in maybeSliceLike && typeof maybeSliceLike.reducerPath === \"string\";\nvar getReducers = (slices) => slices.flatMap((sliceOrMap) => isSliceLike(sliceOrMap) ? [[sliceOrMap.reducerPath, sliceOrMap.reducer]] : Object.entries(sliceOrMap));\nvar ORIGINAL_STATE = Symbol.for(\"rtk-state-proxy-original\");\nvar isStateProxy = (value) => !!value && !!value[ORIGINAL_STATE];\nvar stateProxyMap = /* @__PURE__ */ new WeakMap();\nvar createStateProxy = (state, reducerMap) => emplace(stateProxyMap, state, {\n  insert: () => new Proxy(state, {\n    get: (target, prop, receiver) => {\n      if (prop === ORIGINAL_STATE)\n        return target;\n      const result = Reflect.get(target, prop, receiver);\n      if (typeof result === \"undefined\") {\n        const reducer = reducerMap[prop.toString()];\n        if (reducer) {\n          const reducerResult = reducer(void 0, {\n            type: nanoid()\n          });\n          if (typeof reducerResult === \"undefined\") {\n            throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(24) : `The slice reducer for key \"${prop.toString()}\" returned undefined when called for selector(). If the state passed to the reducer is undefined, you must explicitly return the initial state. The initial state may not be undefined. If you don't want to set a value for this reducer, you can use null instead of undefined.`);\n          }\n          return reducerResult;\n        }\n      }\n      return result;\n    }\n  })\n});\nvar original = (state) => {\n  if (!isStateProxy(state)) {\n    throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(25) : \"original must be used on state Proxy\");\n  }\n  return state[ORIGINAL_STATE];\n};\nvar noopReducer = (state = {}) => state;\nfunction combineSlices(...slices) {\n  const reducerMap = Object.fromEntries(getReducers(slices));\n  const getReducer = () => Object.keys(reducerMap).length ? combineReducers2(reducerMap) : noopReducer;\n  let reducer = getReducer();\n  function combinedReducer(state, action) {\n    return reducer(state, action);\n  }\n  combinedReducer.withLazyLoadedSlices = () => combinedReducer;\n  const inject = (slice, config = {}) => {\n    const {\n      reducerPath,\n      reducer: reducerToInject\n    } = slice;\n    const currentReducer = reducerMap[reducerPath];\n    if (!config.overrideExisting && currentReducer && currentReducer !== reducerToInject) {\n      if (typeof process !== \"undefined\" && process.env.NODE_ENV === \"development\") {\n        console.error(`called \\`inject\\` to override already-existing reducer ${reducerPath} without specifying \\`overrideExisting: true\\``);\n      }\n      return combinedReducer;\n    }\n    reducerMap[reducerPath] = reducerToInject;\n    reducer = getReducer();\n    return combinedReducer;\n  };\n  const selector = Object.assign(function makeSelector(selectorFn, selectState) {\n    return function selector2(state, ...args) {\n      return selectorFn(createStateProxy(selectState ? selectState(state, ...args) : state, reducerMap), ...args);\n    };\n  }, {\n    original\n  });\n  return Object.assign(combinedReducer, {\n    inject,\n    selector\n  });\n}\n\n// src/formatProdErrorMessage.ts\nfunction formatProdErrorMessage(code) {\n  return `Minified Redux Toolkit error #${code}; visit https://redux-toolkit.js.org/Errors?code=${code} for the full message or use the non-minified dev environment for full errors. `;\n}\nexport {\n  ReducerType,\n  SHOULD_AUTOBATCH,\n  TaskAbortError,\n  Tuple,\n  addListener,\n  asyncThunkCreator,\n  autoBatchEnhancer,\n  buildCreateSlice,\n  clearAllListeners,\n  combineSlices,\n  configureStore,\n  createAction,\n  createActionCreatorInvariantMiddleware,\n  createAsyncThunk,\n  createDraftSafeSelector,\n  createDraftSafeSelectorCreator,\n  createDynamicMiddleware,\n  createEntityAdapter,\n  createImmutableStateInvariantMiddleware,\n  createListenerMiddleware,\n  produce as createNextState,\n  createReducer,\n  createSelector,\n  createSelectorCreator2 as createSelectorCreator,\n  createSerializableStateInvariantMiddleware,\n  createSlice,\n  current4 as current,\n  findNonSerializableValue,\n  formatProdErrorMessage,\n  freeze,\n  isActionCreator,\n  isAllOf,\n  isAnyOf,\n  isAsyncThunkAction,\n  isDraft6 as isDraft,\n  isFSA as isFluxStandardAction,\n  isFulfilled,\n  isImmutableDefault,\n  isPending,\n  isPlain,\n  isRejected,\n  isRejectedWithValue,\n  lruMemoize,\n  miniSerializeError,\n  nanoid,\n  original2 as original,\n  prepareAutoBatched,\n  removeListener,\n  unwrapResult,\n  weakMapMemoize2 as weakMapMemoize\n};\n//# sourceMappingURL=redux-toolkit.legacy-esm.js.map","import {\n\tDRAFT_STATE,\n\tDRAFTABLE,\n\tObjectish,\n\tDrafted,\n\tAnyObject,\n\tAnyMap,\n\tAnySet,\n\tImmerState,\n\tArchType,\n\tdie,\n\tStrictMode\n} from \"../internal\"\n\nexport const getPrototypeOf = Object.getPrototypeOf\n\n/** Returns true if the given value is an Immer draft */\n/*#__PURE__*/\nexport function isDraft(value: any): boolean {\n\treturn !!value && !!value[DRAFT_STATE]\n}\n\n/** Returns true if the given value can be drafted by Immer */\n/*#__PURE__*/\nexport function isDraftable(value: any): boolean {\n\tif (!value) return false\n\treturn (\n\t\tisPlainObject(value) ||\n\t\tArray.isArray(value) ||\n\t\t!!value[DRAFTABLE] ||\n\t\t!!value.constructor?.[DRAFTABLE] ||\n\t\tisMap(value) ||\n\t\tisSet(value)\n\t)\n}\n\nconst objectCtorString = Object.prototype.constructor.toString()\n/*#__PURE__*/\nexport function isPlainObject(value: any): boolean {\n\tif (!value || typeof value !== \"object\") return false\n\tconst proto = getPrototypeOf(value)\n\tif (proto === null) {\n\t\treturn true\n\t}\n\tconst Ctor =\n\t\tObject.hasOwnProperty.call(proto, \"constructor\") && proto.constructor\n\n\tif (Ctor === Object) return true\n\n\treturn (\n\t\ttypeof Ctor == \"function\" &&\n\t\tFunction.toString.call(Ctor) === objectCtorString\n\t)\n}\n\n/** Get the underlying object that is represented by the given draft */\n/*#__PURE__*/\nexport function original<T>(value: T): T | undefined\nexport function original(value: Drafted<any>): any {\n\tif (!isDraft(value)) die(15, value)\n\treturn value[DRAFT_STATE].base_\n}\n\n/**\n * Each iterates a map, set or array.\n * Or, if any other kind of object, all of its own properties.\n * Regardless whether they are enumerable or symbols\n */\nexport function each<T extends Objectish>(\n\tobj: T,\n\titer: (key: string | number, value: any, source: T) => void\n): void\nexport function each(obj: any, iter: any) {\n\tif (getArchtype(obj) === ArchType.Object) {\n\t\tReflect.ownKeys(obj).forEach(key => {\n\t\t\titer(key, obj[key], obj)\n\t\t})\n\t} else {\n\t\tobj.forEach((entry: any, index: any) => iter(index, entry, obj))\n\t}\n}\n\n/*#__PURE__*/\nexport function getArchtype(thing: any): ArchType {\n\tconst state: undefined | ImmerState = thing[DRAFT_STATE]\n\treturn state\n\t\t? state.type_\n\t\t: Array.isArray(thing)\n\t\t? ArchType.Array\n\t\t: isMap(thing)\n\t\t? ArchType.Map\n\t\t: isSet(thing)\n\t\t? ArchType.Set\n\t\t: ArchType.Object\n}\n\n/*#__PURE__*/\nexport function has(thing: any, prop: PropertyKey): boolean {\n\treturn getArchtype(thing) === ArchType.Map\n\t\t? thing.has(prop)\n\t\t: Object.prototype.hasOwnProperty.call(thing, prop)\n}\n\n/*#__PURE__*/\nexport function get(thing: AnyMap | AnyObject, prop: PropertyKey): any {\n\t// @ts-ignore\n\treturn getArchtype(thing) === ArchType.Map ? thing.get(prop) : thing[prop]\n}\n\n/*#__PURE__*/\nexport function set(thing: any, propOrOldValue: PropertyKey, value: any) {\n\tconst t = getArchtype(thing)\n\tif (t === ArchType.Map) thing.set(propOrOldValue, value)\n\telse if (t === ArchType.Set) {\n\t\tthing.add(value)\n\t} else thing[propOrOldValue] = value\n}\n\n/*#__PURE__*/\nexport function is(x: any, y: any): boolean {\n\t// From: https://github.com/facebook/fbjs/blob/c69904a511b900266935168223063dd8772dfc40/packages/fbjs/src/core/shallowEqual.js\n\tif (x === y) {\n\t\treturn x !== 0 || 1 / x === 1 / y\n\t} else {\n\t\treturn x !== x && y !== y\n\t}\n}\n\n/*#__PURE__*/\nexport function isMap(target: any): target is AnyMap {\n\treturn target instanceof Map\n}\n\n/*#__PURE__*/\nexport function isSet(target: any): target is AnySet {\n\treturn target instanceof Set\n}\n/*#__PURE__*/\nexport function latest(state: ImmerState): any {\n\treturn state.copy_ || state.base_\n}\n\n/*#__PURE__*/\nexport function shallowCopy(base: any, strict: StrictMode) {\n\tif (isMap(base)) {\n\t\treturn new Map(base)\n\t}\n\tif (isSet(base)) {\n\t\treturn new Set(base)\n\t}\n\tif (Array.isArray(base)) return Array.prototype.slice.call(base)\n\n\tconst isPlain = isPlainObject(base)\n\n\tif (strict === true || (strict === \"class_only\" && !isPlain)) {\n\t\t// Perform a strict copy\n\t\tconst descriptors = Object.getOwnPropertyDescriptors(base)\n\t\tdelete descriptors[DRAFT_STATE as any]\n\t\tlet keys = Reflect.ownKeys(descriptors)\n\t\tfor (let i = 0; i < keys.length; i++) {\n\t\t\tconst key: any = keys[i]\n\t\t\tconst desc = descriptors[key]\n\t\t\tif (desc.writable === false) {\n\t\t\t\tdesc.writable = true\n\t\t\t\tdesc.configurable = true\n\t\t\t}\n\t\t\t// like object.assign, we will read any _own_, get/set accessors. This helps in dealing\n\t\t\t// with libraries that trap values, like mobx or vue\n\t\t\t// unlike object.assign, non-enumerables will be copied as well\n\t\t\tif (desc.get || desc.set)\n\t\t\t\tdescriptors[key] = {\n\t\t\t\t\tconfigurable: true,\n\t\t\t\t\twritable: true, // could live with !!desc.set as well here...\n\t\t\t\t\tenumerable: desc.enumerable,\n\t\t\t\t\tvalue: base[key]\n\t\t\t\t}\n\t\t}\n\t\treturn Object.create(getPrototypeOf(base), descriptors)\n\t} else {\n\t\t// perform a sloppy copy\n\t\tconst proto = getPrototypeOf(base)\n\t\tif (proto !== null && isPlain) {\n\t\t\treturn {...base} // assumption: better inner class optimization than the assign below\n\t\t}\n\t\tconst obj = Object.create(proto)\n\t\treturn Object.assign(obj, base)\n\t}\n}\n\n/**\n * Freezes draftable objects. Returns the original object.\n * By default freezes shallowly, but if the second argument is `true` it will freeze recursively.\n *\n * @param obj\n * @param deep\n */\nexport function freeze<T>(obj: T, deep?: boolean): T\nexport function freeze<T>(obj: any, deep: boolean = false): T {\n\tif (isFrozen(obj) || isDraft(obj) || !isDraftable(obj)) return obj\n\tif (getArchtype(obj) > 1 /* Map or Set */) {\n\t\tobj.set = obj.add = obj.clear = obj.delete = dontMutateFrozenCollections as any\n\t}\n\tObject.freeze(obj)\n\tif (deep)\n\t\t// See #590, don't recurse into non-enumerable / Symbol properties when freezing\n\t\t// So use Object.entries (only string-like, enumerables) instead of each()\n\t\tObject.entries(obj).forEach(([key, value]) => freeze(value, true))\n\treturn obj\n}\n\nfunction dontMutateFrozenCollections() {\n\tdie(2)\n}\n\nexport function isFrozen(obj: any): boolean {\n\treturn Object.isFrozen(obj)\n}\n","// Should be no imports here!\n\n/**\n * The sentinel value returned by producers to replace the draft with undefined.\n */\nexport const NOTHING: unique symbol = Symbol.for(\"immer-nothing\")\n\n/**\n * To let Immer treat your class instances as plain immutable objects\n * (albeit with a custom prototype), you must define either an instance property\n * or a static property on each of your custom classes.\n *\n * Otherwise, your class instance will never be drafted, which means it won't be\n * safe to mutate in a produce callback.\n */\nexport const DRAFTABLE: unique symbol = Symbol.for(\"immer-draftable\")\n\nexport const DRAFT_STATE: unique symbol = Symbol.for(\"immer-state\")\n","export const errors =\n\tprocess.env.NODE_ENV !== \"production\"\n\t\t? [\n\t\t\t\t// All error codes, starting by 0:\n\t\t\t\tfunction(plugin: string) {\n\t\t\t\t\treturn `The plugin for '${plugin}' has not been loaded into Immer. To enable the plugin, import and call \\`enable${plugin}()\\` when initializing your application.`\n\t\t\t\t},\n\t\t\t\tfunction(thing: string) {\n\t\t\t\t\treturn `produce can only be called on things that are draftable: plain objects, arrays, Map, Set or classes that are marked with '[immerable]: true'. Got '${thing}'`\n\t\t\t\t},\n\t\t\t\t\"This object has been frozen and should not be mutated\",\n\t\t\t\tfunction(data: any) {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t\"Cannot use a proxy that has been revoked. Did you pass an object from inside an immer function to an async process? \" +\n\t\t\t\t\t\tdata\n\t\t\t\t\t)\n\t\t\t\t},\n\t\t\t\t\"An immer producer returned a new value *and* modified its draft. Either return a new value *or* modify the draft.\",\n\t\t\t\t\"Immer forbids circular references\",\n\t\t\t\t\"The first or second argument to `produce` must be a function\",\n\t\t\t\t\"The third argument to `produce` must be a function or undefined\",\n\t\t\t\t\"First argument to `createDraft` must be a plain object, an array, or an immerable object\",\n\t\t\t\t\"First argument to `finishDraft` must be a draft returned by `createDraft`\",\n\t\t\t\tfunction(thing: string) {\n\t\t\t\t\treturn `'current' expects a draft, got: ${thing}`\n\t\t\t\t},\n\t\t\t\t\"Object.defineProperty() cannot be used on an Immer draft\",\n\t\t\t\t\"Object.setPrototypeOf() cannot be used on an Immer draft\",\n\t\t\t\t\"Immer only supports deleting array indices\",\n\t\t\t\t\"Immer only supports setting array indices and the 'length' property\",\n\t\t\t\tfunction(thing: string) {\n\t\t\t\t\treturn `'original' expects a draft, got: ${thing}`\n\t\t\t\t}\n\t\t\t\t// Note: if more errors are added, the errorOffset in Patches.ts should be increased\n\t\t\t\t// See Patches.ts for additional errors\n\t\t  ]\n\t\t: []\n\nexport function die(error: number, ...args: any[]): never {\n\tif (process.env.NODE_ENV !== \"production\") {\n\t\tconst e = errors[error]\n\t\tconst msg = typeof e === \"function\" ? e.apply(null, args as any) : e\n\t\tthrow new Error(`[Immer] ${msg}`)\n\t}\n\tthrow new Error(\n\t\t`[Immer] minified error nr: ${error}. Full error at: https://bit.ly/3cXEKWf`\n\t)\n}\n","import {\n\tImmerState,\n\tPatch,\n\tDrafted,\n\tImmerBaseState,\n\tAnyMap,\n\tAnySet,\n\tArchType,\n\tdie\n} from \"../internal\"\n\n/** Plugin utilities */\nconst plugins: {\n\tPatches?: {\n\t\tgeneratePatches_(\n\t\t\tstate: ImmerState,\n\t\t\tbasePath: PatchPath,\n\t\t\tpatches: Patch[],\n\t\t\tinversePatches: Patch[]\n\t\t): void\n\t\tgenerateReplacementPatches_(\n\t\t\tbase: any,\n\t\t\treplacement: any,\n\t\t\tpatches: Patch[],\n\t\t\tinversePatches: Patch[]\n\t\t): void\n\t\tapplyPatches_<T>(draft: T, patches: readonly Patch[]): T\n\t}\n\tMapSet?: {\n\t\tproxyMap_<T extends AnyMap>(target: T, parent?: ImmerState): T\n\t\tproxySet_<T extends AnySet>(target: T, parent?: ImmerState): T\n\t}\n} = {}\n\ntype Plugins = typeof plugins\n\nexport function getPlugin<K extends keyof Plugins>(\n\tpluginKey: K\n): Exclude<Plugins[K], undefined> {\n\tconst plugin = plugins[pluginKey]\n\tif (!plugin) {\n\t\tdie(0, pluginKey)\n\t}\n\t// @ts-ignore\n\treturn plugin\n}\n\nexport function loadPlugin<K extends keyof Plugins>(\n\tpluginKey: K,\n\timplementation: Plugins[K]\n): void {\n\tif (!plugins[pluginKey]) plugins[pluginKey] = implementation\n}\n/** Map / Set plugin */\n\nexport interface MapState extends ImmerBaseState {\n\ttype_: ArchType.Map\n\tcopy_: AnyMap | undefined\n\tassigned_: Map<any, boolean> | undefined\n\tbase_: AnyMap\n\trevoked_: boolean\n\tdraft_: Drafted<AnyMap, MapState>\n}\n\nexport interface SetState extends ImmerBaseState {\n\ttype_: ArchType.Set\n\tcopy_: AnySet | undefined\n\tbase_: AnySet\n\tdrafts_: Map<any, Drafted> // maps the original value to the draft value in the new set\n\trevoked_: boolean\n\tdraft_: Drafted<AnySet, SetState>\n}\n\n/** Patches plugin */\n\nexport type PatchPath = (string | number)[]\n","import {\n\tPatch,\n\tPatchListener,\n\tDrafted,\n\tImmer,\n\tDRAFT_STATE,\n\tImmerState,\n\tArchType,\n\tgetPlugin\n} from \"../internal\"\n\n/** Each scope represents a `produce` call. */\n\nexport interface ImmerScope {\n\tpatches_?: Patch[]\n\tinversePatches_?: Patch[]\n\tcanAutoFreeze_: boolean\n\tdrafts_: any[]\n\tparent_?: ImmerScope\n\tpatchListener_?: PatchListener\n\timmer_: Immer\n\tunfinalizedDrafts_: number\n}\n\nlet currentScope: ImmerScope | undefined\n\nexport function getCurrentScope() {\n\treturn currentScope!\n}\n\nfunction createScope(\n\tparent_: ImmerScope | undefined,\n\timmer_: Immer\n): ImmerScope {\n\treturn {\n\t\tdrafts_: [],\n\t\tparent_,\n\t\timmer_,\n\t\t// Whenever the modified draft contains a draft from another scope, we\n\t\t// need to prevent auto-freezing so the unowned draft can be finalized.\n\t\tcanAutoFreeze_: true,\n\t\tunfinalizedDrafts_: 0\n\t}\n}\n\nexport function usePatchesInScope(\n\tscope: ImmerScope,\n\tpatchListener?: PatchListener\n) {\n\tif (patchListener) {\n\t\tgetPlugin(\"Patches\") // assert we have the plugin\n\t\tscope.patches_ = []\n\t\tscope.inversePatches_ = []\n\t\tscope.patchListener_ = patchListener\n\t}\n}\n\nexport function revokeScope(scope: ImmerScope) {\n\tleaveScope(scope)\n\tscope.drafts_.forEach(revokeDraft)\n\t// @ts-ignore\n\tscope.drafts_ = null\n}\n\nexport function leaveScope(scope: ImmerScope) {\n\tif (scope === currentScope) {\n\t\tcurrentScope = scope.parent_\n\t}\n}\n\nexport function enterScope(immer: Immer) {\n\treturn (currentScope = createScope(currentScope, immer))\n}\n\nfunction revokeDraft(draft: Drafted) {\n\tconst state: ImmerState = draft[DRAFT_STATE]\n\tif (state.type_ === ArchType.Object || state.type_ === ArchType.Array)\n\t\tstate.revoke_()\n\telse state.revoked_ = true\n}\n","import {\n\tImmerScope,\n\tDRAFT_STATE,\n\tisDraftable,\n\tNOTHING,\n\tPatchPath,\n\teach,\n\thas,\n\tfreeze,\n\tImmerState,\n\tisDraft,\n\tSetState,\n\tset,\n\tArchType,\n\tgetPlugin,\n\tdie,\n\trevokeScope,\n\tisFrozen\n} from \"../internal\"\n\nexport function processResult(result: any, scope: ImmerScope) {\n\tscope.unfinalizedDrafts_ = scope.drafts_.length\n\tconst baseDraft = scope.drafts_![0]\n\tconst isReplaced = result !== undefined && result !== baseDraft\n\tif (isReplaced) {\n\t\tif (baseDraft[DRAFT_STATE].modified_) {\n\t\t\trevokeScope(scope)\n\t\t\tdie(4)\n\t\t}\n\t\tif (isDraftable(result)) {\n\t\t\t// Finalize the result in case it contains (or is) a subset of the draft.\n\t\t\tresult = finalize(scope, result)\n\t\t\tif (!scope.parent_) maybeFreeze(scope, result)\n\t\t}\n\t\tif (scope.patches_) {\n\t\t\tgetPlugin(\"Patches\").generateReplacementPatches_(\n\t\t\t\tbaseDraft[DRAFT_STATE].base_,\n\t\t\t\tresult,\n\t\t\t\tscope.patches_,\n\t\t\t\tscope.inversePatches_!\n\t\t\t)\n\t\t}\n\t} else {\n\t\t// Finalize the base draft.\n\t\tresult = finalize(scope, baseDraft, [])\n\t}\n\trevokeScope(scope)\n\tif (scope.patches_) {\n\t\tscope.patchListener_!(scope.patches_, scope.inversePatches_!)\n\t}\n\treturn result !== NOTHING ? result : undefined\n}\n\nfunction finalize(rootScope: ImmerScope, value: any, path?: PatchPath) {\n\t// Don't recurse in tho recursive data structures\n\tif (isFrozen(value)) return value\n\n\tconst state: ImmerState = value[DRAFT_STATE]\n\t// A plain object, might need freezing, might contain drafts\n\tif (!state) {\n\t\teach(value, (key, childValue) =>\n\t\t\tfinalizeProperty(rootScope, state, value, key, childValue, path)\n\t\t)\n\t\treturn value\n\t}\n\t// Never finalize drafts owned by another scope.\n\tif (state.scope_ !== rootScope) return value\n\t// Unmodified draft, return the (frozen) original\n\tif (!state.modified_) {\n\t\tmaybeFreeze(rootScope, state.base_, true)\n\t\treturn state.base_\n\t}\n\t// Not finalized yet, let's do that now\n\tif (!state.finalized_) {\n\t\tstate.finalized_ = true\n\t\tstate.scope_.unfinalizedDrafts_--\n\t\tconst result = state.copy_\n\t\t// Finalize all children of the copy\n\t\t// For sets we clone before iterating, otherwise we can get in endless loop due to modifying during iteration, see #628\n\t\t// To preserve insertion order in all cases we then clear the set\n\t\t// And we let finalizeProperty know it needs to re-add non-draft children back to the target\n\t\tlet resultEach = result\n\t\tlet isSet = false\n\t\tif (state.type_ === ArchType.Set) {\n\t\t\tresultEach = new Set(result)\n\t\t\tresult.clear()\n\t\t\tisSet = true\n\t\t}\n\t\teach(resultEach, (key, childValue) =>\n\t\t\tfinalizeProperty(rootScope, state, result, key, childValue, path, isSet)\n\t\t)\n\t\t// everything inside is frozen, we can freeze here\n\t\tmaybeFreeze(rootScope, result, false)\n\t\t// first time finalizing, let's create those patches\n\t\tif (path && rootScope.patches_) {\n\t\t\tgetPlugin(\"Patches\").generatePatches_(\n\t\t\t\tstate,\n\t\t\t\tpath,\n\t\t\t\trootScope.patches_,\n\t\t\t\trootScope.inversePatches_!\n\t\t\t)\n\t\t}\n\t}\n\treturn state.copy_\n}\n\nfunction finalizeProperty(\n\trootScope: ImmerScope,\n\tparentState: undefined | ImmerState,\n\ttargetObject: any,\n\tprop: string | number,\n\tchildValue: any,\n\trootPath?: PatchPath,\n\ttargetIsSet?: boolean\n) {\n\tif (process.env.NODE_ENV !== \"production\" && childValue === targetObject)\n\t\tdie(5)\n\tif (isDraft(childValue)) {\n\t\tconst path =\n\t\t\trootPath &&\n\t\t\tparentState &&\n\t\t\tparentState!.type_ !== ArchType.Set && // Set objects are atomic since they have no keys.\n\t\t\t!has((parentState as Exclude<ImmerState, SetState>).assigned_!, prop) // Skip deep patches for assigned keys.\n\t\t\t\t? rootPath!.concat(prop)\n\t\t\t\t: undefined\n\t\t// Drafts owned by `scope` are finalized here.\n\t\tconst res = finalize(rootScope, childValue, path)\n\t\tset(targetObject, prop, res)\n\t\t// Drafts from another scope must prevented to be frozen\n\t\t// if we got a draft back from finalize, we're in a nested produce and shouldn't freeze\n\t\tif (isDraft(res)) {\n\t\t\trootScope.canAutoFreeze_ = false\n\t\t} else return\n\t} else if (targetIsSet) {\n\t\ttargetObject.add(childValue)\n\t}\n\t// Search new objects for unfinalized drafts. Frozen objects should never contain drafts.\n\tif (isDraftable(childValue) && !isFrozen(childValue)) {\n\t\tif (!rootScope.immer_.autoFreeze_ && rootScope.unfinalizedDrafts_ < 1) {\n\t\t\t// optimization: if an object is not a draft, and we don't have to\n\t\t\t// deepfreeze everything, and we are sure that no drafts are left in the remaining object\n\t\t\t// cause we saw and finalized all drafts already; we can stop visiting the rest of the tree.\n\t\t\t// This benefits especially adding large data tree's without further processing.\n\t\t\t// See add-data.js perf test\n\t\t\treturn\n\t\t}\n\t\tfinalize(rootScope, childValue)\n\t\t// Immer deep freezes plain objects, so if there is no parent state, we freeze as well\n\t\t// Per #590, we never freeze symbolic properties. Just to make sure don't accidentally interfere\n\t\t// with other frameworks.\n\t\tif (\n\t\t\t(!parentState || !parentState.scope_.parent_) &&\n\t\t\ttypeof prop !== \"symbol\" &&\n\t\t\tObject.prototype.propertyIsEnumerable.call(targetObject, prop)\n\t\t)\n\t\t\tmaybeFreeze(rootScope, childValue)\n\t}\n}\n\nfunction maybeFreeze(scope: ImmerScope, value: any, deep = false) {\n\t// we never freeze for a non-root scope; as it would prevent pruning for drafts inside wrapping objects\n\tif (!scope.parent_ && scope.immer_.autoFreeze_ && scope.canAutoFreeze_) {\n\t\tfreeze(value, deep)\n\t}\n}\n","import {\n\teach,\n\thas,\n\tis,\n\tisDraftable,\n\tshallowCopy,\n\tlatest,\n\tImmerBaseState,\n\tImmerState,\n\tDrafted,\n\tAnyObject,\n\tAnyArray,\n\tObjectish,\n\tgetCurrentScope,\n\tgetPrototypeOf,\n\tDRAFT_STATE,\n\tdie,\n\tcreateProxy,\n\tArchType,\n\tImmerScope\n} from \"../internal\"\n\ninterface ProxyBaseState extends ImmerBaseState {\n\tassigned_: {\n\t\t[property: string]: boolean\n\t}\n\tparent_?: ImmerState\n\trevoke_(): void\n}\n\nexport interface ProxyObjectState extends ProxyBaseState {\n\ttype_: ArchType.Object\n\tbase_: any\n\tcopy_: any\n\tdraft_: Drafted<AnyObject, ProxyObjectState>\n}\n\nexport interface ProxyArrayState extends ProxyBaseState {\n\ttype_: ArchType.Array\n\tbase_: AnyArray\n\tcopy_: AnyArray | null\n\tdraft_: Drafted<AnyArray, ProxyArrayState>\n}\n\ntype ProxyState = ProxyObjectState | ProxyArrayState\n\n/**\n * Returns a new draft of the `base` object.\n *\n * The second argument is the parent draft-state (used internally).\n */\nexport function createProxyProxy<T extends Objectish>(\n\tbase: T,\n\tparent?: ImmerState\n): Drafted<T, ProxyState> {\n\tconst isArray = Array.isArray(base)\n\tconst state: ProxyState = {\n\t\ttype_: isArray ? ArchType.Array : (ArchType.Object as any),\n\t\t// Track which produce call this is associated with.\n\t\tscope_: parent ? parent.scope_ : getCurrentScope()!,\n\t\t// True for both shallow and deep changes.\n\t\tmodified_: false,\n\t\t// Used during finalization.\n\t\tfinalized_: false,\n\t\t// Track which properties have been assigned (true) or deleted (false).\n\t\tassigned_: {},\n\t\t// The parent draft state.\n\t\tparent_: parent,\n\t\t// The base state.\n\t\tbase_: base,\n\t\t// The base proxy.\n\t\tdraft_: null as any, // set below\n\t\t// The base copy with any updated values.\n\t\tcopy_: null,\n\t\t// Called by the `produce` function.\n\t\trevoke_: null as any,\n\t\tisManual_: false\n\t}\n\n\t// the traps must target something, a bit like the 'real' base.\n\t// but also, we need to be able to determine from the target what the relevant state is\n\t// (to avoid creating traps per instance to capture the state in closure,\n\t// and to avoid creating weird hidden properties as well)\n\t// So the trick is to use 'state' as the actual 'target'! (and make sure we intercept everything)\n\t// Note that in the case of an array, we put the state in an array to have better Reflect defaults ootb\n\tlet target: T = state as any\n\tlet traps: ProxyHandler<object | Array<any>> = objectTraps\n\tif (isArray) {\n\t\ttarget = [state] as any\n\t\ttraps = arrayTraps\n\t}\n\n\tconst {revoke, proxy} = Proxy.revocable(target, traps)\n\tstate.draft_ = proxy as any\n\tstate.revoke_ = revoke\n\treturn proxy as any\n}\n\n/**\n * Object drafts\n */\nexport const objectTraps: ProxyHandler<ProxyState> = {\n\tget(state, prop) {\n\t\tif (prop === DRAFT_STATE) return state\n\n\t\tconst source = latest(state)\n\t\tif (!has(source, prop)) {\n\t\t\t// non-existing or non-own property...\n\t\t\treturn readPropFromProto(state, source, prop)\n\t\t}\n\t\tconst value = source[prop]\n\t\tif (state.finalized_ || !isDraftable(value)) {\n\t\t\treturn value\n\t\t}\n\t\t// Check for existing draft in modified state.\n\t\t// Assigned values are never drafted. This catches any drafts we created, too.\n\t\tif (value === peek(state.base_, prop)) {\n\t\t\tprepareCopy(state)\n\t\t\treturn (state.copy_![prop as any] = createProxy(value, state))\n\t\t}\n\t\treturn value\n\t},\n\thas(state, prop) {\n\t\treturn prop in latest(state)\n\t},\n\townKeys(state) {\n\t\treturn Reflect.ownKeys(latest(state))\n\t},\n\tset(\n\t\tstate: ProxyObjectState,\n\t\tprop: string /* strictly not, but helps TS */,\n\t\tvalue\n\t) {\n\t\tconst desc = getDescriptorFromProto(latest(state), prop)\n\t\tif (desc?.set) {\n\t\t\t// special case: if this write is captured by a setter, we have\n\t\t\t// to trigger it with the correct context\n\t\t\tdesc.set.call(state.draft_, value)\n\t\t\treturn true\n\t\t}\n\t\tif (!state.modified_) {\n\t\t\t// the last check is because we need to be able to distinguish setting a non-existing to undefined (which is a change)\n\t\t\t// from setting an existing property with value undefined to undefined (which is not a change)\n\t\t\tconst current = peek(latest(state), prop)\n\t\t\t// special case, if we assigning the original value to a draft, we can ignore the assignment\n\t\t\tconst currentState: ProxyObjectState = current?.[DRAFT_STATE]\n\t\t\tif (currentState && currentState.base_ === value) {\n\t\t\t\tstate.copy_![prop] = value\n\t\t\t\tstate.assigned_[prop] = false\n\t\t\t\treturn true\n\t\t\t}\n\t\t\tif (is(value, current) && (value !== undefined || has(state.base_, prop)))\n\t\t\t\treturn true\n\t\t\tprepareCopy(state)\n\t\t\tmarkChanged(state)\n\t\t}\n\n\t\tif (\n\t\t\t(state.copy_![prop] === value &&\n\t\t\t\t// special case: handle new props with value 'undefined'\n\t\t\t\t(value !== undefined || prop in state.copy_)) ||\n\t\t\t// special case: NaN\n\t\t\t(Number.isNaN(value) && Number.isNaN(state.copy_![prop]))\n\t\t)\n\t\t\treturn true\n\n\t\t// @ts-ignore\n\t\tstate.copy_![prop] = value\n\t\tstate.assigned_[prop] = true\n\t\treturn true\n\t},\n\tdeleteProperty(state, prop: string) {\n\t\t// The `undefined` check is a fast path for pre-existing keys.\n\t\tif (peek(state.base_, prop) !== undefined || prop in state.base_) {\n\t\t\tstate.assigned_[prop] = false\n\t\t\tprepareCopy(state)\n\t\t\tmarkChanged(state)\n\t\t} else {\n\t\t\t// if an originally not assigned property was deleted\n\t\t\tdelete state.assigned_[prop]\n\t\t}\n\t\tif (state.copy_) {\n\t\t\tdelete state.copy_[prop]\n\t\t}\n\t\treturn true\n\t},\n\t// Note: We never coerce `desc.value` into an Immer draft, because we can't make\n\t// the same guarantee in ES5 mode.\n\tgetOwnPropertyDescriptor(state, prop) {\n\t\tconst owner = latest(state)\n\t\tconst desc = Reflect.getOwnPropertyDescriptor(owner, prop)\n\t\tif (!desc) return desc\n\t\treturn {\n\t\t\twritable: true,\n\t\t\tconfigurable: state.type_ !== ArchType.Array || prop !== \"length\",\n\t\t\tenumerable: desc.enumerable,\n\t\t\tvalue: owner[prop]\n\t\t}\n\t},\n\tdefineProperty() {\n\t\tdie(11)\n\t},\n\tgetPrototypeOf(state) {\n\t\treturn getPrototypeOf(state.base_)\n\t},\n\tsetPrototypeOf() {\n\t\tdie(12)\n\t}\n}\n\n/**\n * Array drafts\n */\n\nconst arrayTraps: ProxyHandler<[ProxyArrayState]> = {}\neach(objectTraps, (key, fn) => {\n\t// @ts-ignore\n\tarrayTraps[key] = function() {\n\t\targuments[0] = arguments[0][0]\n\t\treturn fn.apply(this, arguments)\n\t}\n})\narrayTraps.deleteProperty = function(state, prop) {\n\tif (process.env.NODE_ENV !== \"production\" && isNaN(parseInt(prop as any)))\n\t\tdie(13)\n\t// @ts-ignore\n\treturn arrayTraps.set!.call(this, state, prop, undefined)\n}\narrayTraps.set = function(state, prop, value) {\n\tif (\n\t\tprocess.env.NODE_ENV !== \"production\" &&\n\t\tprop !== \"length\" &&\n\t\tisNaN(parseInt(prop as any))\n\t)\n\t\tdie(14)\n\treturn objectTraps.set!.call(this, state[0], prop, value, state[0])\n}\n\n// Access a property without creating an Immer draft.\nfunction peek(draft: Drafted, prop: PropertyKey) {\n\tconst state = draft[DRAFT_STATE]\n\tconst source = state ? latest(state) : draft\n\treturn source[prop]\n}\n\nfunction readPropFromProto(state: ImmerState, source: any, prop: PropertyKey) {\n\tconst desc = getDescriptorFromProto(source, prop)\n\treturn desc\n\t\t? `value` in desc\n\t\t\t? desc.value\n\t\t\t: // This is a very special case, if the prop is a getter defined by the\n\t\t\t  // prototype, we should invoke it with the draft as context!\n\t\t\t  desc.get?.call(state.draft_)\n\t\t: undefined\n}\n\nfunction getDescriptorFromProto(\n\tsource: any,\n\tprop: PropertyKey\n): PropertyDescriptor | undefined {\n\t// 'in' checks proto!\n\tif (!(prop in source)) return undefined\n\tlet proto = getPrototypeOf(source)\n\twhile (proto) {\n\t\tconst desc = Object.getOwnPropertyDescriptor(proto, prop)\n\t\tif (desc) return desc\n\t\tproto = getPrototypeOf(proto)\n\t}\n\treturn undefined\n}\n\nexport function markChanged(state: ImmerState) {\n\tif (!state.modified_) {\n\t\tstate.modified_ = true\n\t\tif (state.parent_) {\n\t\t\tmarkChanged(state.parent_)\n\t\t}\n\t}\n}\n\nexport function prepareCopy(state: {\n\tbase_: any\n\tcopy_: any\n\tscope_: ImmerScope\n}) {\n\tif (!state.copy_) {\n\t\tstate.copy_ = shallowCopy(\n\t\t\tstate.base_,\n\t\t\tstate.scope_.immer_.useStrictShallowCopy_\n\t\t)\n\t}\n}\n","import {\n\tIProduceWithPatches,\n\tIProduce,\n\tImmerState,\n\tDrafted,\n\tisDraftable,\n\tprocessResult,\n\tPatch,\n\tObjectish,\n\tDRAFT_STATE,\n\tDraft,\n\tPatchListener,\n\tisDraft,\n\tisMap,\n\tisSet,\n\tcreateProxyProxy,\n\tgetPlugin,\n\tdie,\n\tenterScope,\n\trevokeScope,\n\tleaveScope,\n\tusePatchesInScope,\n\tgetCurrentScope,\n\tNOTHING,\n\tfreeze,\n\tcurrent\n} from \"../internal\"\n\ninterface ProducersFns {\n\tproduce: IProduce\n\tproduceWithPatches: IProduceWithPatches\n}\n\nexport type StrictMode = boolean | \"class_only\";\n\nexport class Immer implements ProducersFns {\n\tautoFreeze_: boolean = true\n\tuseStrictShallowCopy_: StrictMode = false\n\n\tconstructor(config?: {\n\t\tautoFreeze?: boolean\n\t\tuseStrictShallowCopy?: StrictMode\n\t}) {\n\t\tif (typeof config?.autoFreeze === \"boolean\")\n\t\t\tthis.setAutoFreeze(config!.autoFreeze)\n\t\tif (typeof config?.useStrictShallowCopy === \"boolean\")\n\t\t\tthis.setUseStrictShallowCopy(config!.useStrictShallowCopy)\n\t}\n\n\t/**\n\t * The `produce` function takes a value and a \"recipe function\" (whose\n\t * return value often depends on the base state). The recipe function is\n\t * free to mutate its first argument however it wants. All mutations are\n\t * only ever applied to a __copy__ of the base state.\n\t *\n\t * Pass only a function to create a \"curried producer\" which relieves you\n\t * from passing the recipe function every time.\n\t *\n\t * Only plain objects and arrays are made mutable. All other objects are\n\t * considered uncopyable.\n\t *\n\t * Note: This function is __bound__ to its `Immer` instance.\n\t *\n\t * @param {any} base - the initial state\n\t * @param {Function} recipe - function that receives a proxy of the base state as first argument and which can be freely modified\n\t * @param {Function} patchListener - optional function that will be called with all the patches produced here\n\t * @returns {any} a new state, or the initial state if nothing was modified\n\t */\n\tproduce: IProduce = (base: any, recipe?: any, patchListener?: any) => {\n\t\t// curried invocation\n\t\tif (typeof base === \"function\" && typeof recipe !== \"function\") {\n\t\t\tconst defaultBase = recipe\n\t\t\trecipe = base\n\n\t\t\tconst self = this\n\t\t\treturn function curriedProduce(\n\t\t\t\tthis: any,\n\t\t\t\tbase = defaultBase,\n\t\t\t\t...args: any[]\n\t\t\t) {\n\t\t\t\treturn self.produce(base, (draft: Drafted) => recipe.call(this, draft, ...args)) // prettier-ignore\n\t\t\t}\n\t\t}\n\n\t\tif (typeof recipe !== \"function\") die(6)\n\t\tif (patchListener !== undefined && typeof patchListener !== \"function\")\n\t\t\tdie(7)\n\n\t\tlet result\n\n\t\t// Only plain objects, arrays, and \"immerable classes\" are drafted.\n\t\tif (isDraftable(base)) {\n\t\t\tconst scope = enterScope(this)\n\t\t\tconst proxy = createProxy(base, undefined)\n\t\t\tlet hasError = true\n\t\t\ttry {\n\t\t\t\tresult = recipe(proxy)\n\t\t\t\thasError = false\n\t\t\t} finally {\n\t\t\t\t// finally instead of catch + rethrow better preserves original stack\n\t\t\t\tif (hasError) revokeScope(scope)\n\t\t\t\telse leaveScope(scope)\n\t\t\t}\n\t\t\tusePatchesInScope(scope, patchListener)\n\t\t\treturn processResult(result, scope)\n\t\t} else if (!base || typeof base !== \"object\") {\n\t\t\tresult = recipe(base)\n\t\t\tif (result === undefined) result = base\n\t\t\tif (result === NOTHING) result = undefined\n\t\t\tif (this.autoFreeze_) freeze(result, true)\n\t\t\tif (patchListener) {\n\t\t\t\tconst p: Patch[] = []\n\t\t\t\tconst ip: Patch[] = []\n\t\t\t\tgetPlugin(\"Patches\").generateReplacementPatches_(base, result, p, ip)\n\t\t\t\tpatchListener(p, ip)\n\t\t\t}\n\t\t\treturn result\n\t\t} else die(1, base)\n\t}\n\n\tproduceWithPatches: IProduceWithPatches = (base: any, recipe?: any): any => {\n\t\t// curried invocation\n\t\tif (typeof base === \"function\") {\n\t\t\treturn (state: any, ...args: any[]) =>\n\t\t\t\tthis.produceWithPatches(state, (draft: any) => base(draft, ...args))\n\t\t}\n\n\t\tlet patches: Patch[], inversePatches: Patch[]\n\t\tconst result = this.produce(base, recipe, (p: Patch[], ip: Patch[]) => {\n\t\t\tpatches = p\n\t\t\tinversePatches = ip\n\t\t})\n\t\treturn [result, patches!, inversePatches!]\n\t}\n\n\tcreateDraft<T extends Objectish>(base: T): Draft<T> {\n\t\tif (!isDraftable(base)) die(8)\n\t\tif (isDraft(base)) base = current(base)\n\t\tconst scope = enterScope(this)\n\t\tconst proxy = createProxy(base, undefined)\n\t\tproxy[DRAFT_STATE].isManual_ = true\n\t\tleaveScope(scope)\n\t\treturn proxy as any\n\t}\n\n\tfinishDraft<D extends Draft<any>>(\n\t\tdraft: D,\n\t\tpatchListener?: PatchListener\n\t): D extends Draft<infer T> ? T : never {\n\t\tconst state: ImmerState = draft && (draft as any)[DRAFT_STATE]\n\t\tif (!state || !state.isManual_) die(9)\n\t\tconst {scope_: scope} = state\n\t\tusePatchesInScope(scope, patchListener)\n\t\treturn processResult(undefined, scope)\n\t}\n\n\t/**\n\t * Pass true to automatically freeze all copies created by Immer.\n\t *\n\t * By default, auto-freezing is enabled.\n\t */\n\tsetAutoFreeze(value: boolean) {\n\t\tthis.autoFreeze_ = value\n\t}\n\n\t/**\n\t * Pass true to enable strict shallow copy.\n\t *\n\t * By default, immer does not copy the object descriptors such as getter, setter and non-enumrable properties.\n\t */\n\tsetUseStrictShallowCopy(value: StrictMode) {\n\t\tthis.useStrictShallowCopy_ = value\n\t}\n\n\tapplyPatches<T extends Objectish>(base: T, patches: readonly Patch[]): T {\n\t\t// If a patch replaces the entire state, take that replacement as base\n\t\t// before applying patches\n\t\tlet i: number\n\t\tfor (i = patches.length - 1; i >= 0; i--) {\n\t\t\tconst patch = patches[i]\n\t\t\tif (patch.path.length === 0 && patch.op === \"replace\") {\n\t\t\t\tbase = patch.value\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t\t// If there was a patch that replaced the entire state, start from the\n\t\t// patch after that.\n\t\tif (i > -1) {\n\t\t\tpatches = patches.slice(i + 1)\n\t\t}\n\n\t\tconst applyPatchesImpl = getPlugin(\"Patches\").applyPatches_\n\t\tif (isDraft(base)) {\n\t\t\t// N.B: never hits if some patch a replacement, patches are never drafts\n\t\t\treturn applyPatchesImpl(base, patches)\n\t\t}\n\t\t// Otherwise, produce a copy of the base state.\n\t\treturn this.produce(base, (draft: Drafted) =>\n\t\t\tapplyPatchesImpl(draft, patches)\n\t\t)\n\t}\n}\n\nexport function createProxy<T extends Objectish>(\n\tvalue: T,\n\tparent?: ImmerState\n): Drafted<T, ImmerState> {\n\t// precondition: createProxy should be guarded by isDraftable, so we know we can safely draft\n\tconst draft: Drafted = isMap(value)\n\t\t? getPlugin(\"MapSet\").proxyMap_(value, parent)\n\t\t: isSet(value)\n\t\t? getPlugin(\"MapSet\").proxySet_(value, parent)\n\t\t: createProxyProxy(value, parent)\n\n\tconst scope = parent ? parent.scope_ : getCurrentScope()\n\tscope.drafts_.push(draft)\n\treturn draft\n}\n","import {\n\tdie,\n\tisDraft,\n\tshallowCopy,\n\teach,\n\tDRAFT_STATE,\n\tset,\n\tImmerState,\n\tisDraftable,\n\tisFrozen\n} from \"../internal\"\n\n/** Takes a snapshot of the current state of a draft and finalizes it (but without freezing). This is a great utility to print the current state during debugging (no Proxies in the way). The output of current can also be safely leaked outside the producer. */\nexport function current<T>(value: T): T\nexport function current(value: any): any {\n\tif (!isDraft(value)) die(10, value)\n\treturn currentImpl(value)\n}\n\nfunction currentImpl(value: any): any {\n\tif (!isDraftable(value) || isFrozen(value)) return value\n\tconst state: ImmerState | undefined = value[DRAFT_STATE]\n\tlet copy: any\n\tif (state) {\n\t\tif (!state.modified_) return state.base_\n\t\t// Optimization: avoid generating new drafts during copying\n\t\tstate.finalized_ = true\n\t\tcopy = shallowCopy(value, state.scope_.immer_.useStrictShallowCopy_)\n\t} else {\n\t\tcopy = shallowCopy(value, true)\n\t}\n\t// recurse\n\teach(copy, (key, childValue) => {\n\t\tset(copy, key, currentImpl(childValue))\n\t})\n\tif (state) {\n\t\tstate.finalized_ = false\n\t}\n\treturn copy\n}\n","import {\n\tIProduce,\n\tIProduceWithPatches,\n\tImmer,\n\tDraft,\n\tImmutable\n} from \"./internal\"\n\nexport {\n\tDraft,\n\tWritableDraft,\n\tImmutable,\n\tPatch,\n\tPatchListener,\n\tProducer,\n\toriginal,\n\tcurrent,\n\tisDraft,\n\tisDraftable,\n\tNOTHING as nothing,\n\tDRAFTABLE as immerable,\n\tfreeze,\n\tObjectish,\n\tStrictMode\n} from \"./internal\"\n\nconst immer = new Immer()\n\n/**\n * The `produce` function takes a value and a \"recipe function\" (whose\n * return value often depends on the base state). The recipe function is\n * free to mutate its first argument however it wants. All mutations are\n * only ever applied to a __copy__ of the base state.\n *\n * Pass only a function to create a \"curried producer\" which relieves you\n * from passing the recipe function every time.\n *\n * Only plain objects and arrays are made mutable. All other objects are\n * considered uncopyable.\n *\n * Note: This function is __bound__ to its `Immer` instance.\n *\n * @param {any} base - the initial state\n * @param {Function} producer - function that receives a proxy of the base state as first argument and which can be freely modified\n * @param {Function} patchListener - optional function that will be called with all the patches produced here\n * @returns {any} a new state, or the initial state if nothing was modified\n */\nexport const produce: IProduce = immer.produce\n\n/**\n * Like `produce`, but `produceWithPatches` always returns a tuple\n * [nextState, patches, inversePatches] (instead of just the next state)\n */\nexport const produceWithPatches: IProduceWithPatches = immer.produceWithPatches.bind(\n\timmer\n)\n\n/**\n * Pass true to automatically freeze all copies created by Immer.\n *\n * Always freeze by default, even in production mode\n */\nexport const setAutoFreeze = immer.setAutoFreeze.bind(immer)\n\n/**\n * Pass true to enable strict shallow copy.\n *\n * By default, immer does not copy the object descriptors such as getter, setter and non-enumrable properties.\n */\nexport const setUseStrictShallowCopy = immer.setUseStrictShallowCopy.bind(immer)\n\n/**\n * Apply an array of Immer patches to the first argument.\n *\n * This function is a producer, which means copy-on-write is in effect.\n */\nexport const applyPatches = immer.applyPatches.bind(immer)\n\n/**\n * Create an Immer draft from the given base state, which may be a draft itself.\n * The draft can be modified until you finalize it with the `finishDraft` function.\n */\nexport const createDraft = immer.createDraft.bind(immer)\n\n/**\n * Finalize an Immer draft from a `createDraft` call, returning the base state\n * (if no changes were made) or a modified copy. The draft must *not* be\n * mutated afterwards.\n *\n * Pass a function as the 2nd argument to generate Immer patches based on the\n * changes that were made.\n */\nexport const finishDraft = immer.finishDraft.bind(immer)\n\n/**\n * This function is actually a no-op, but can be used to cast an immutable type\n * to an draft type and make TypeScript happy\n *\n * @param value\n */\nexport function castDraft<T>(value: T): Draft<T> {\n\treturn value as any\n}\n\n/**\n * This function is actually a no-op, but can be used to cast a mutable type\n * to an immutable type and make TypeScript happy\n * @param value\n */\nexport function castImmutable<T>(value: T): Immutable<T> {\n\treturn value as any\n}\n\nexport {Immer}\n\nexport {enablePatches} from \"./plugins/patches\"\nexport {enableMapSet} from \"./plugins/mapset\"\n","// src/index.ts\nfunction createThunkMiddleware(extraArgument) {\n  const middleware = ({ dispatch, getState }) => (next) => (action) => {\n    if (typeof action === \"function\") {\n      return action(dispatch, getState, extraArgument);\n    }\n    return next(action);\n  };\n  return middleware;\n}\nvar thunk = createThunkMiddleware();\nvar withExtraArgument = createThunkMiddleware;\nexport {\n  thunk,\n  withExtraArgument\n};\n","var __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\n\n// src/devModeChecks/identityFunctionCheck.ts\nvar runIdentityFunctionCheck = (resultFunc, inputSelectorsResults, outputSelectorResult) => {\n  if (inputSelectorsResults.length === 1 && inputSelectorsResults[0] === outputSelectorResult) {\n    let isInputSameAsOutput = false;\n    try {\n      const emptyObject = {};\n      if (resultFunc(emptyObject) === emptyObject)\n        isInputSameAsOutput = true;\n    } catch (e) {\n    }\n    if (isInputSameAsOutput) {\n      let stack = void 0;\n      try {\n        throw new Error();\n      } catch (e) {\n        ;\n        ({ stack } = e);\n      }\n      console.warn(\n        \"The result function returned its own inputs without modification. e.g\\n`createSelector([state => state.todos], todos => todos)`\\nThis could lead to inefficient memoization and unnecessary re-renders.\\nEnsure transformation logic is in the result function, and extraction logic is in the input selectors.\",\n        { stack }\n      );\n    }\n  }\n};\n\n// src/devModeChecks/inputStabilityCheck.ts\nvar runInputStabilityCheck = (inputSelectorResultsObject, options, inputSelectorArgs) => {\n  const { memoize, memoizeOptions } = options;\n  const { inputSelectorResults, inputSelectorResultsCopy } = inputSelectorResultsObject;\n  const createAnEmptyObject = memoize(() => ({}), ...memoizeOptions);\n  const areInputSelectorResultsEqual = createAnEmptyObject.apply(null, inputSelectorResults) === createAnEmptyObject.apply(null, inputSelectorResultsCopy);\n  if (!areInputSelectorResultsEqual) {\n    let stack = void 0;\n    try {\n      throw new Error();\n    } catch (e) {\n      ;\n      ({ stack } = e);\n    }\n    console.warn(\n      \"An input selector returned a different result when passed same arguments.\\nThis means your output selector will likely run more frequently than intended.\\nAvoid returning a new reference inside your input selector, e.g.\\n`createSelector([state => state.todos.map(todo => todo.id)], todoIds => todoIds.length)`\",\n      {\n        arguments: inputSelectorArgs,\n        firstInputs: inputSelectorResults,\n        secondInputs: inputSelectorResultsCopy,\n        stack\n      }\n    );\n  }\n};\n\n// src/devModeChecks/setGlobalDevModeChecks.ts\nvar globalDevModeChecks = {\n  inputStabilityCheck: \"once\",\n  identityFunctionCheck: \"once\"\n};\nvar setGlobalDevModeChecks = (devModeChecks) => {\n  Object.assign(globalDevModeChecks, devModeChecks);\n};\n\n// src/utils.ts\nvar NOT_FOUND = /* @__PURE__ */ Symbol(\"NOT_FOUND\");\nfunction assertIsFunction(func, errorMessage = `expected a function, instead received ${typeof func}`) {\n  if (typeof func !== \"function\") {\n    throw new TypeError(errorMessage);\n  }\n}\nfunction assertIsObject(object, errorMessage = `expected an object, instead received ${typeof object}`) {\n  if (typeof object !== \"object\") {\n    throw new TypeError(errorMessage);\n  }\n}\nfunction assertIsArrayOfFunctions(array, errorMessage = `expected all items to be functions, instead received the following types: `) {\n  if (!array.every((item) => typeof item === \"function\")) {\n    const itemTypes = array.map(\n      (item) => typeof item === \"function\" ? `function ${item.name || \"unnamed\"}()` : typeof item\n    ).join(\", \");\n    throw new TypeError(`${errorMessage}[${itemTypes}]`);\n  }\n}\nvar ensureIsArray = (item) => {\n  return Array.isArray(item) ? item : [item];\n};\nfunction getDependencies(createSelectorArgs) {\n  const dependencies = Array.isArray(createSelectorArgs[0]) ? createSelectorArgs[0] : createSelectorArgs;\n  assertIsArrayOfFunctions(\n    dependencies,\n    `createSelector expects all input-selectors to be functions, but received the following types: `\n  );\n  return dependencies;\n}\nfunction collectInputSelectorResults(dependencies, inputSelectorArgs) {\n  const inputSelectorResults = [];\n  const { length } = dependencies;\n  for (let i = 0; i < length; i++) {\n    inputSelectorResults.push(dependencies[i].apply(null, inputSelectorArgs));\n  }\n  return inputSelectorResults;\n}\nvar getDevModeChecksExecutionInfo = (firstRun, devModeChecks) => {\n  const { identityFunctionCheck, inputStabilityCheck } = __spreadValues(__spreadValues({}, globalDevModeChecks), devModeChecks);\n  return {\n    identityFunctionCheck: {\n      shouldRun: identityFunctionCheck === \"always\" || identityFunctionCheck === \"once\" && firstRun,\n      run: runIdentityFunctionCheck\n    },\n    inputStabilityCheck: {\n      shouldRun: inputStabilityCheck === \"always\" || inputStabilityCheck === \"once\" && firstRun,\n      run: runInputStabilityCheck\n    }\n  };\n};\n\n// src/autotrackMemoize/autotracking.ts\nvar $REVISION = 0;\nvar CURRENT_TRACKER = null;\nvar Cell = class {\n  constructor(initialValue, isEqual = tripleEq) {\n    __publicField(this, \"revision\", $REVISION);\n    __publicField(this, \"_value\");\n    __publicField(this, \"_lastValue\");\n    __publicField(this, \"_isEqual\", tripleEq);\n    this._value = this._lastValue = initialValue;\n    this._isEqual = isEqual;\n  }\n  // Whenever a storage value is read, it'll add itself to the current tracker if\n  // one exists, entangling its state with that cache.\n  get value() {\n    CURRENT_TRACKER == null ? void 0 : CURRENT_TRACKER.add(this);\n    return this._value;\n  }\n  // Whenever a storage value is updated, we bump the global revision clock,\n  // assign the revision for this storage to the new value, _and_ we schedule a\n  // rerender. This is important, and it's what makes autotracking  _pull_\n  // based. We don't actively tell the caches which depend on the storage that\n  // anything has happened. Instead, we recompute the caches when needed.\n  set value(newValue) {\n    if (this.value === newValue)\n      return;\n    this._value = newValue;\n    this.revision = ++$REVISION;\n  }\n};\nfunction tripleEq(a, b) {\n  return a === b;\n}\nvar TrackingCache = class {\n  constructor(fn) {\n    __publicField(this, \"_cachedValue\");\n    __publicField(this, \"_cachedRevision\", -1);\n    __publicField(this, \"_deps\", []);\n    __publicField(this, \"hits\", 0);\n    __publicField(this, \"fn\");\n    this.fn = fn;\n  }\n  clear() {\n    this._cachedValue = void 0;\n    this._cachedRevision = -1;\n    this._deps = [];\n    this.hits = 0;\n  }\n  get value() {\n    if (this.revision > this._cachedRevision) {\n      const { fn } = this;\n      const currentTracker = /* @__PURE__ */ new Set();\n      const prevTracker = CURRENT_TRACKER;\n      CURRENT_TRACKER = currentTracker;\n      this._cachedValue = fn();\n      CURRENT_TRACKER = prevTracker;\n      this.hits++;\n      this._deps = Array.from(currentTracker);\n      this._cachedRevision = this.revision;\n    }\n    CURRENT_TRACKER == null ? void 0 : CURRENT_TRACKER.add(this);\n    return this._cachedValue;\n  }\n  get revision() {\n    return Math.max(...this._deps.map((d) => d.revision), 0);\n  }\n};\nfunction getValue(cell) {\n  if (!(cell instanceof Cell)) {\n    console.warn(\"Not a valid cell! \", cell);\n  }\n  return cell.value;\n}\nfunction setValue(storage, value) {\n  if (!(storage instanceof Cell)) {\n    throw new TypeError(\n      \"setValue must be passed a tracked store created with `createStorage`.\"\n    );\n  }\n  storage.value = storage._lastValue = value;\n}\nfunction createCell(initialValue, isEqual = tripleEq) {\n  return new Cell(initialValue, isEqual);\n}\nfunction createCache(fn) {\n  assertIsFunction(\n    fn,\n    \"the first parameter to `createCache` must be a function\"\n  );\n  return new TrackingCache(fn);\n}\n\n// src/autotrackMemoize/tracking.ts\nvar neverEq = (a, b) => false;\nfunction createTag() {\n  return createCell(null, neverEq);\n}\nfunction dirtyTag(tag, value) {\n  setValue(tag, value);\n}\nvar consumeCollection = (node) => {\n  let tag = node.collectionTag;\n  if (tag === null) {\n    tag = node.collectionTag = createTag();\n  }\n  getValue(tag);\n};\nvar dirtyCollection = (node) => {\n  const tag = node.collectionTag;\n  if (tag !== null) {\n    dirtyTag(tag, null);\n  }\n};\n\n// src/autotrackMemoize/proxy.ts\nvar REDUX_PROXY_LABEL = Symbol();\nvar nextId = 0;\nvar proto = Object.getPrototypeOf({});\nvar ObjectTreeNode = class {\n  constructor(value) {\n    this.value = value;\n    __publicField(this, \"proxy\", new Proxy(this, objectProxyHandler));\n    __publicField(this, \"tag\", createTag());\n    __publicField(this, \"tags\", {});\n    __publicField(this, \"children\", {});\n    __publicField(this, \"collectionTag\", null);\n    __publicField(this, \"id\", nextId++);\n    this.value = value;\n    this.tag.value = value;\n  }\n};\nvar objectProxyHandler = {\n  get(node, key) {\n    function calculateResult() {\n      const { value } = node;\n      const childValue = Reflect.get(value, key);\n      if (typeof key === \"symbol\") {\n        return childValue;\n      }\n      if (key in proto) {\n        return childValue;\n      }\n      if (typeof childValue === \"object\" && childValue !== null) {\n        let childNode = node.children[key];\n        if (childNode === void 0) {\n          childNode = node.children[key] = createNode(childValue);\n        }\n        if (childNode.tag) {\n          getValue(childNode.tag);\n        }\n        return childNode.proxy;\n      } else {\n        let tag = node.tags[key];\n        if (tag === void 0) {\n          tag = node.tags[key] = createTag();\n          tag.value = childValue;\n        }\n        getValue(tag);\n        return childValue;\n      }\n    }\n    const res = calculateResult();\n    return res;\n  },\n  ownKeys(node) {\n    consumeCollection(node);\n    return Reflect.ownKeys(node.value);\n  },\n  getOwnPropertyDescriptor(node, prop) {\n    return Reflect.getOwnPropertyDescriptor(node.value, prop);\n  },\n  has(node, prop) {\n    return Reflect.has(node.value, prop);\n  }\n};\nvar ArrayTreeNode = class {\n  constructor(value) {\n    this.value = value;\n    __publicField(this, \"proxy\", new Proxy([this], arrayProxyHandler));\n    __publicField(this, \"tag\", createTag());\n    __publicField(this, \"tags\", {});\n    __publicField(this, \"children\", {});\n    __publicField(this, \"collectionTag\", null);\n    __publicField(this, \"id\", nextId++);\n    this.value = value;\n    this.tag.value = value;\n  }\n};\nvar arrayProxyHandler = {\n  get([node], key) {\n    if (key === \"length\") {\n      consumeCollection(node);\n    }\n    return objectProxyHandler.get(node, key);\n  },\n  ownKeys([node]) {\n    return objectProxyHandler.ownKeys(node);\n  },\n  getOwnPropertyDescriptor([node], prop) {\n    return objectProxyHandler.getOwnPropertyDescriptor(node, prop);\n  },\n  has([node], prop) {\n    return objectProxyHandler.has(node, prop);\n  }\n};\nfunction createNode(value) {\n  if (Array.isArray(value)) {\n    return new ArrayTreeNode(value);\n  }\n  return new ObjectTreeNode(value);\n}\nfunction updateNode(node, newValue) {\n  const { value, tags, children } = node;\n  node.value = newValue;\n  if (Array.isArray(value) && Array.isArray(newValue) && value.length !== newValue.length) {\n    dirtyCollection(node);\n  } else {\n    if (value !== newValue) {\n      let oldKeysSize = 0;\n      let newKeysSize = 0;\n      let anyKeysAdded = false;\n      for (const _key in value) {\n        oldKeysSize++;\n      }\n      for (const key in newValue) {\n        newKeysSize++;\n        if (!(key in value)) {\n          anyKeysAdded = true;\n          break;\n        }\n      }\n      const isDifferent = anyKeysAdded || oldKeysSize !== newKeysSize;\n      if (isDifferent) {\n        dirtyCollection(node);\n      }\n    }\n  }\n  for (const key in tags) {\n    const childValue = value[key];\n    const newChildValue = newValue[key];\n    if (childValue !== newChildValue) {\n      dirtyCollection(node);\n      dirtyTag(tags[key], newChildValue);\n    }\n    if (typeof newChildValue === \"object\" && newChildValue !== null) {\n      delete tags[key];\n    }\n  }\n  for (const key in children) {\n    const childNode = children[key];\n    const newChildValue = newValue[key];\n    const childValue = childNode.value;\n    if (childValue === newChildValue) {\n      continue;\n    } else if (typeof newChildValue === \"object\" && newChildValue !== null) {\n      updateNode(childNode, newChildValue);\n    } else {\n      deleteNode(childNode);\n      delete children[key];\n    }\n  }\n}\nfunction deleteNode(node) {\n  if (node.tag) {\n    dirtyTag(node.tag, null);\n  }\n  dirtyCollection(node);\n  for (const key in node.tags) {\n    dirtyTag(node.tags[key], null);\n  }\n  for (const key in node.children) {\n    deleteNode(node.children[key]);\n  }\n}\n\n// src/lruMemoize.ts\nfunction createSingletonCache(equals) {\n  let entry;\n  return {\n    get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n      return NOT_FOUND;\n    },\n    put(key, value) {\n      entry = { key, value };\n    },\n    getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear() {\n      entry = void 0;\n    }\n  };\n}\nfunction createLruCache(maxSize, equals) {\n  let entries = [];\n  function get(key) {\n    const cacheIndex = entries.findIndex((entry) => equals(key, entry.key));\n    if (cacheIndex > -1) {\n      const entry = entries[cacheIndex];\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n      return entry.value;\n    }\n    return NOT_FOUND;\n  }\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      entries.unshift({ key, value });\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n  function getEntries() {\n    return entries;\n  }\n  function clear() {\n    entries = [];\n  }\n  return { get, put, getEntries, clear };\n}\nvar referenceEqualityCheck = (a, b) => a === b;\nfunction createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    }\n    const { length } = prev;\n    for (let i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n    return true;\n  };\n}\nfunction lruMemoize(func, equalityCheckOrOptions) {\n  const providedOptions = typeof equalityCheckOrOptions === \"object\" ? equalityCheckOrOptions : { equalityCheck: equalityCheckOrOptions };\n  const {\n    equalityCheck = referenceEqualityCheck,\n    maxSize = 1,\n    resultEqualityCheck\n  } = providedOptions;\n  const comparator = createCacheKeyComparator(equalityCheck);\n  let resultsCount = 0;\n  const cache = maxSize <= 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator);\n  function memoized() {\n    let value = cache.get(arguments);\n    if (value === NOT_FOUND) {\n      value = func.apply(null, arguments);\n      resultsCount++;\n      if (resultEqualityCheck) {\n        const entries = cache.getEntries();\n        const matchingEntry = entries.find(\n          (entry) => resultEqualityCheck(entry.value, value)\n        );\n        if (matchingEntry) {\n          value = matchingEntry.value;\n          resultsCount !== 0 && resultsCount--;\n        }\n      }\n      cache.put(arguments, value);\n    }\n    return value;\n  }\n  memoized.clearCache = () => {\n    cache.clear();\n    memoized.resetResultsCount();\n  };\n  memoized.resultsCount = () => resultsCount;\n  memoized.resetResultsCount = () => {\n    resultsCount = 0;\n  };\n  return memoized;\n}\n\n// src/autotrackMemoize/autotrackMemoize.ts\nfunction autotrackMemoize(func) {\n  const node = createNode(\n    []\n  );\n  let lastArgs = null;\n  const shallowEqual = createCacheKeyComparator(referenceEqualityCheck);\n  const cache = createCache(() => {\n    const res = func.apply(null, node.proxy);\n    return res;\n  });\n  function memoized() {\n    if (!shallowEqual(lastArgs, arguments)) {\n      updateNode(node, arguments);\n      lastArgs = arguments;\n    }\n    return cache.value;\n  }\n  memoized.clearCache = () => {\n    return cache.clear();\n  };\n  return memoized;\n}\n\n// src/weakMapMemoize.ts\nvar StrongRef = class {\n  constructor(value) {\n    this.value = value;\n  }\n  deref() {\n    return this.value;\n  }\n};\nvar Ref = typeof WeakRef !== \"undefined\" ? WeakRef : StrongRef;\nvar UNTERMINATED = 0;\nvar TERMINATED = 1;\nfunction createCacheNode() {\n  return {\n    s: UNTERMINATED,\n    v: void 0,\n    o: null,\n    p: null\n  };\n}\nfunction weakMapMemoize(func, options = {}) {\n  let fnNode = createCacheNode();\n  const { resultEqualityCheck } = options;\n  let lastResult;\n  let resultsCount = 0;\n  function memoized() {\n    var _a, _b;\n    let cacheNode = fnNode;\n    const { length } = arguments;\n    for (let i = 0, l = length; i < l; i++) {\n      const arg = arguments[i];\n      if (typeof arg === \"function\" || typeof arg === \"object\" && arg !== null) {\n        let objectCache = cacheNode.o;\n        if (objectCache === null) {\n          cacheNode.o = objectCache = /* @__PURE__ */ new WeakMap();\n        }\n        const objectNode = objectCache.get(arg);\n        if (objectNode === void 0) {\n          cacheNode = createCacheNode();\n          objectCache.set(arg, cacheNode);\n        } else {\n          cacheNode = objectNode;\n        }\n      } else {\n        let primitiveCache = cacheNode.p;\n        if (primitiveCache === null) {\n          cacheNode.p = primitiveCache = /* @__PURE__ */ new Map();\n        }\n        const primitiveNode = primitiveCache.get(arg);\n        if (primitiveNode === void 0) {\n          cacheNode = createCacheNode();\n          primitiveCache.set(arg, cacheNode);\n        } else {\n          cacheNode = primitiveNode;\n        }\n      }\n    }\n    const terminatedNode = cacheNode;\n    let result;\n    if (cacheNode.s === TERMINATED) {\n      result = cacheNode.v;\n    } else {\n      result = func.apply(null, arguments);\n      resultsCount++;\n      if (resultEqualityCheck) {\n        const lastResultValue = (_b = (_a = lastResult == null ? void 0 : lastResult.deref) == null ? void 0 : _a.call(lastResult)) != null ? _b : lastResult;\n        if (lastResultValue != null && resultEqualityCheck(lastResultValue, result)) {\n          result = lastResultValue;\n          resultsCount !== 0 && resultsCount--;\n        }\n        const needsWeakRef = typeof result === \"object\" && result !== null || typeof result === \"function\";\n        lastResult = needsWeakRef ? new Ref(result) : result;\n      }\n    }\n    terminatedNode.s = TERMINATED;\n    terminatedNode.v = result;\n    return result;\n  }\n  memoized.clearCache = () => {\n    fnNode = createCacheNode();\n    memoized.resetResultsCount();\n  };\n  memoized.resultsCount = () => resultsCount;\n  memoized.resetResultsCount = () => {\n    resultsCount = 0;\n  };\n  return memoized;\n}\n\n// src/createSelectorCreator.ts\nfunction createSelectorCreator(memoizeOrOptions, ...memoizeOptionsFromArgs) {\n  const createSelectorCreatorOptions = typeof memoizeOrOptions === \"function\" ? {\n    memoize: memoizeOrOptions,\n    memoizeOptions: memoizeOptionsFromArgs\n  } : memoizeOrOptions;\n  const createSelector2 = (...createSelectorArgs) => {\n    let recomputations = 0;\n    let dependencyRecomputations = 0;\n    let lastResult;\n    let directlyPassedOptions = {};\n    let resultFunc = createSelectorArgs.pop();\n    if (typeof resultFunc === \"object\") {\n      directlyPassedOptions = resultFunc;\n      resultFunc = createSelectorArgs.pop();\n    }\n    assertIsFunction(\n      resultFunc,\n      `createSelector expects an output function after the inputs, but received: [${typeof resultFunc}]`\n    );\n    const combinedOptions = __spreadValues(__spreadValues({}, createSelectorCreatorOptions), directlyPassedOptions);\n    const {\n      memoize,\n      memoizeOptions = [],\n      argsMemoize = weakMapMemoize,\n      argsMemoizeOptions = [],\n      devModeChecks = {}\n    } = combinedOptions;\n    const finalMemoizeOptions = ensureIsArray(memoizeOptions);\n    const finalArgsMemoizeOptions = ensureIsArray(argsMemoizeOptions);\n    const dependencies = getDependencies(createSelectorArgs);\n    const memoizedResultFunc = memoize(function recomputationWrapper() {\n      recomputations++;\n      return resultFunc.apply(\n        null,\n        arguments\n      );\n    }, ...finalMemoizeOptions);\n    let firstRun = true;\n    const selector = argsMemoize(function dependenciesChecker() {\n      dependencyRecomputations++;\n      const inputSelectorResults = collectInputSelectorResults(\n        dependencies,\n        arguments\n      );\n      lastResult = memoizedResultFunc.apply(null, inputSelectorResults);\n      if (process.env.NODE_ENV !== \"production\") {\n        const { identityFunctionCheck, inputStabilityCheck } = getDevModeChecksExecutionInfo(firstRun, devModeChecks);\n        if (identityFunctionCheck.shouldRun) {\n          identityFunctionCheck.run(\n            resultFunc,\n            inputSelectorResults,\n            lastResult\n          );\n        }\n        if (inputStabilityCheck.shouldRun) {\n          const inputSelectorResultsCopy = collectInputSelectorResults(\n            dependencies,\n            arguments\n          );\n          inputStabilityCheck.run(\n            { inputSelectorResults, inputSelectorResultsCopy },\n            { memoize, memoizeOptions: finalMemoizeOptions },\n            arguments\n          );\n        }\n        if (firstRun)\n          firstRun = false;\n      }\n      return lastResult;\n    }, ...finalArgsMemoizeOptions);\n    return Object.assign(selector, {\n      resultFunc,\n      memoizedResultFunc,\n      dependencies,\n      dependencyRecomputations: () => dependencyRecomputations,\n      resetDependencyRecomputations: () => {\n        dependencyRecomputations = 0;\n      },\n      lastResult: () => lastResult,\n      recomputations: () => recomputations,\n      resetRecomputations: () => {\n        recomputations = 0;\n      },\n      memoize,\n      argsMemoize\n    });\n  };\n  Object.assign(createSelector2, {\n    withTypes: () => createSelector2\n  });\n  return createSelector2;\n}\nvar createSelector = /* @__PURE__ */ createSelectorCreator(weakMapMemoize);\n\n// src/createStructuredSelector.ts\nvar createStructuredSelector = Object.assign(\n  (inputSelectorsObject, selectorCreator = createSelector) => {\n    assertIsObject(\n      inputSelectorsObject,\n      `createStructuredSelector expects first argument to be an object where each property is a selector, instead received a ${typeof inputSelectorsObject}`\n    );\n    const inputSelectorKeys = Object.keys(inputSelectorsObject);\n    const dependencies = inputSelectorKeys.map(\n      (key) => inputSelectorsObject[key]\n    );\n    const structuredSelector = selectorCreator(\n      dependencies,\n      (...inputSelectorResults) => {\n        return inputSelectorResults.reduce((composition, value, index) => {\n          composition[inputSelectorKeys[index]] = value;\n          return composition;\n        }, {});\n      }\n    );\n    return structuredSelector;\n  },\n  { withTypes: () => createStructuredSelector }\n);\nexport {\n  createSelector,\n  createSelectorCreator,\n  createStructuredSelector,\n  lruMemoize,\n  referenceEqualityCheck,\n  setGlobalDevModeChecks,\n  autotrackMemoize as unstable_autotrackMemoize,\n  weakMapMemoize\n};\n//# sourceMappingURL=reselect.legacy-esm.js.map"],"names":["__defProp","Object","defineProperty","__defProps","defineProperties","__getOwnPropDescs","getOwnPropertyDescriptors","__getOwnPropSymbols","getOwnPropertySymbols","__hasOwnProp","prototype","hasOwnProperty","__propIsEnum","propertyIsEnumerable","__defNormalProp","obj","key","value","enumerable","configurable","writable","__spreadValues","a","b","prop","call","__spreadProps","__objRest","source","exclude","target","indexOf","__publicField","createDraftSafeSelectorCreator","args","createSelector2","createDraftSafeSelector2","assign","args2","selector","wrappedSelector","rest","withTypes","createDraftSafeSelector","composeWithDevTools","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","arguments","length","compose","apply","hasMatchFunction","__REDUX_DEVTOOLS_EXTENSION__","v","match","createAction","type","prepareAction","actionCreator","prepared","Error","formatProdErrorMessage","payload","meta","error","toString","action","isAction","isActionCreator","isFSA","keys","every","isValidKey","createActionCreatorInvariantMiddleware","options","next","find","iterable","comparator","entry","Tuple","_Tuple","Array","constructor","items","super","setPrototypeOf","this","Symbol","species","concat","arr","prepend","isArray","freezeDraftable","val","emplace","map","handler","has","get","update","set","insert","inserted","isImmutableDefault","isFrozen","createImmutableStateInvariantMiddleware","isPlain","isPlainObject","findNonSerializableValue","path","isSerializable","getEntries","ignoredPaths","cache","foundNestedSerializable","keyPath","entries","hasIgnoredPaths","nestedValue","nestedPath","some","ignored","RegExp","test","isNestedFrozen","add","values","createSerializableStateInvariantMiddleware","buildGetDefaultMiddleware","thunk","immutableCheck","serializableCheck","actionCreatorCheck","middlewareArray","push","extraArgument","SHOULD_AUTOBATCH","prepareAutoBatched","createQueueWithTimer","timeout","notify","setTimeout","rAF","requestAnimationFrame","autoBatchEnhancer","store","notifying","shouldNotifyAtEndOfTick","notificationQueued","listeners","Set","queueCallback","queueMicrotask","queueNotification","notifyListeners","forEach","l","subscribe","listener2","unsubscribe","delete","dispatch","_a","buildGetDefaultEnhancers","middlewareEnhancer","autoBatch","enhancerArray","IS_PRODUCTION","configureStore","getDefaultMiddleware","reducer","middleware","devTools","preloadedState","enhancers","rootReducer","finalMiddleware","combineReducers","item","finalCompose","trace","applyMiddleware","getDefaultEnhancers","storeEnhancers","includes","console","composedEnhancer","createStore","executeReducerBuilderCallback","builderCallback","actionsMap","actionMatchers","defaultCaseReducer","builder","addCase","typeOrActionCreator","addMatcher","matcher","addDefaultCase","createReducer","initialState","mapOrBuilderCallback","getInitialState","finalActionMatchers","finalDefaultCaseReducer","frozenInitialState","state","caseReducers","filter","reducer2","cr","reduce","previousState","caseReducer","result","draft","nanoid","size","id","i","Math","random","matches","isAnyOf","matchers","isAllOf","hasExpectedRequestMetadata","validStatus","hasValidRequestId","requestId","hasValidRequestStatus","requestStatus","isAsyncThunkArray","isPending","asyncThunks","asyncThunk","pending","isRejected","rejected","isRejectedWithValue","hasFlag","rejectedWithValue","isFulfilled","fulfilled","isAsyncThunkAction","flatMap","commonProperties","RejectWithValue","FulfillWithMeta","miniSerializeError","simpleError","property","message","String","createAsyncThunk","createAsyncThunk2","typePrefix","payloadCreator","arg","serializeError","aborted","name","condition","getState","extra","idGenerator","abortController","AbortController","abortHandler","abortReason","abort","reason","promise","async","_b","finalAction","conditionResult","then","signal","abortedPromise","Promise","_","reject","addEventListener","getPendingMeta","race","resolve","rejectWithValue","fulfillWithValue","err","removeEventListener","dispatchConditionRejection","unwrap","unwrapResult","settled","asyncThunkSymbol","for","asyncThunkCreator","ReducerType","ReducerType2","getType","slice","actionKey","buildCreateSlice","creators","cAT","reducerPath","reducers","config","_reducerDefinitionType","preparedReducer","prepare","buildReducerCreators","reducerNames","context","sliceCaseReducersByName","sliceCaseReducersByType","actionCreators","sliceMatchers","contextMethods","exposeAction","name2","exposeCaseReducer","buildReducer","extraReducers","finalCaseReducers","sM","m","reducerName","reducerDefinition","reducerDetails","createNotation","isAsyncThunkSliceReducerDefinition","maybeReducerWithPrepare","prepareCallback","isCaseReducerWithPrepareDefinition","handleNormalReducerDefinition","noop","handleThunkCaseReducerDefinition","selectSelf","injectedSelectorCache","Map","_reducer","makeSelectorProps","reducerPath2","injected","selectSlice","sliceState","getSelectors","selectState","selectorCache","WeakMap","_a2","selectors","wrapSelector","actions","injectInto","injectable","pathOpt","newReducerPath","inject","wrapper","rootState","unwrapped","createSlice","isDraftTyped","createSingleArgumentStateOperator","mutator","operator","createStateOperator","runMutator","selectIdValue","entity","selectId","ensureEntitiesArray","entities","getCurrent","splitAddedUpdatedEntities","newEntities","existingIdsArray","ids","existingIds","added","updated","changes","createUnsortedStateAdapter","addOneMutably","addManyMutably","setOneMutably","removeManyMutably","didMutate","updateManyMutably","updates","newKeys","updatesPerEntity","didMutateIds","original3","newKey","hasNewKey","takeNewKey","e","upsertManyMutably","removeAll","addOne","addMany","setOne","setMany","setAll","updateOne","updateMany","upsertOne","upsertMany","removeOne","removeMany","sortedItems","comparisonFunction","insertAtIndex","lowIndex","highIndex","middleIndex","findInsertIndex","splice","createEntityAdapter","sortComparer","instance","stateAdapter","comparer","existingKeys","models","model","mergeFunction","setManyMutably","appliedUpdates","replacedIds","newId","oldIndex","addedItems","currentEntities","currentIds","stateEntities","from","sortedEntities","wasPreviouslyEmpty","sort","newSortedIds","areArraysEqual","createSortedStateAdapter","stateFactory","additionalState","createInitialStateFactory","selectorsFactory","createSelector","selectIds","selectEntities","selectAll","selectById","selectTotal","selectGlobalizedEntities","listener","completed","cancelled","taskCancelled","taskCompleted","listenerCancelled","listenerCompleted","TaskAbortError","code","assertFunction","func","expected","noop2","catchRejection","onError","catch","addAbortSignalListener","abortSignal","callback","once","abortControllerWithReason","validateActive","raceWithSignal","cleanup","notifyRejection","finally","createPause","output","createDelay","pause","timeoutMs","INTERNAL_NIL_TOKEN","alm","createFork","parentAbortSignal","parentBlockingPromises","taskExecutor","opts","childAbortController","controller","task2","cleanUp","status","runTask","result2","delay","autoJoin","cancel","createTakePattern","startListening","predicate","promises","stopListening","effect","listenerApi","getOriginalState","take","getListenerEntryPropsFrom","createListenerEntry","cancelActiveListeners","safelyNotifyError","errorHandler","errorToNotify","errorInfo","errorHandlerError","addListener","clearAllListeners","removeListener","defaultErrorHandler","createListenerMiddleware","middlewareOptions","listenerMap","existingEntry","cancelOptions","cancelActive","insertEntry","entry2","notifyListener","api","internalTaskController","autoJoinPromises","Boolean","fork","throwIfCancelled","listenerError","raisedBy","all","clearListenerMiddleware","clear","createClearListenerMiddleware","originalState","currentState","listenerEntries","runListener","predicateError","clearListeners","createDynamicMiddleware","instanceId","middlewareMap","withMiddleware","middlewares","addMiddleware","middleware2","applied","createMiddlewareEntry","isWithMiddleware","matchInstance","appliedMiddleware","getFinalMiddleware","getReducers","slices","sliceOrMap","isSliceLike","maybeSliceLike","ORIGINAL_STATE","stateProxyMap","createStateProxy","reducerMap","Proxy","receiver","Reflect","reducerResult","original","noopReducer","combineSlices","fromEntries","getReducer","combinedReducer","withLazyLoadedSlices","selectorFn","reducerToInject","currentReducer","overrideExisting","isDraft","die","DRAFT_STATE","base_","NOTHING","DRAFTABLE","getPrototypeOf","isDraftable","isMap","isSet","objectCtorString","proto","Ctor","Function","each","iter","getArchtype","ownKeys","index","thing","type_","propOrOldValue","t","latest","copy_","shallowCopy","base","strict","descriptors","desc","create","freeze","deep","undefined","dontMutateFrozenCollections","_ref","_ref2","_slicedToArray2","default","currentScope","plugins","getPlugin","pluginKey","plugin","loadPlugin","implementation","getCurrentScope","usePatchesInScope","scope","patchListener","patches_","inversePatches_","patchListener_","revokeScope","leaveScope","drafts_","revokeDraft","parent_","enterScope","immer2","immer_","canAutoFreeze_","unfinalizedDrafts_","revoke_","revoked_","processResult","baseDraft","modified_","finalize","maybeFreeze","generateReplacementPatches_","rootScope","childValue","finalizeProperty","scope_","finalized_","resultEach","isSet2","generatePatches_","parentState","targetObject","rootPath","targetIsSet","res","assigned_","autoFreeze_","objectTraps","getDescriptorFromProto","draft_","readPropFromProto","peek","prepareCopy","createProxy","x","y","current2","markChanged","Number","isNaN","deleteProperty","getOwnPropertyDescriptor","owner","arrayTraps","useStrictShallowCopy_","fn","Immer2","_createClass2","_this","_classCallCheck2","produce","recipe","defaultBase","self","_this2","base2","_len2","_key2","_recipe","proxy","hasError","p","ip","produceWithPatches","_len3","_key3","patches","inversePatches","autoFreeze","setAutoFreeze","useStrictShallowCopy","setUseStrictShallowCopy","current","isManual_","patch","op","applyPatchesImpl","applyPatches_","parent","proxyMap_","proxySet_","traps","_Proxy$revocable","revocable","revoke","createProxyProxy","currentImpl","copy","immer","exports","bind","applyPatches","createDraft","finishDraft","createThunkMiddleware","withExtraArgument","NOT_FOUND","assertIsFunction","errorMessage","TypeError","ensureIsArray","getDependencies","createSelectorArgs","dependencies","array","itemTypes","join","assertIsArrayOfFunctions","referenceEqualityCheck","createCacheKeyComparator","equalityCheck","prev","lruMemoize","equalityCheckOrOptions","providedOptions","maxSize","resultEqualityCheck","resultsCount","equals","put","createSingletonCache","cacheIndex","findIndex","unshift","pop","createLruCache","memoized","matchingEntry","clearCache","resetResultsCount","Ref","WeakRef","deref","UNTERMINATED","TERMINATED","createCacheNode","s","o","weakMapMemoize","fnNode","lastResult","cacheNode","objectCache","objectNode","primitiveCache","primitiveNode","terminatedNode","lastResultValue","createSelectorCreator","memoizeOrOptions","memoizeOptionsFromArgs","createSelectorCreatorOptions","memoize","memoizeOptions","recomputations","dependencyRecomputations","directlyPassedOptions","resultFunc","combinedOptions","argsMemoize","argsMemoizeOptions","devModeChecks","finalMemoizeOptions","finalArgsMemoizeOptions","memoizedResultFunc","inputSelectorResults","inputSelectorArgs","collectInputSelectorResults","resetDependencyRecomputations","resetRecomputations","createStructuredSelector","inputSelectorsObject","selectorCreator","object","assertIsObject","inputSelectorKeys","composition"],"sourceRoot":""}