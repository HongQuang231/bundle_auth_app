{"version":3,"file":"node_modules_redux_dist_redux_legacy-esm_js.chunk.bundle","mappings":"gUA2Ce,WAA4E,IAAD,IAAAA,EAAAC,UAAAC,OAA/CC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GACzC,OAAO,SAAAC,GAAA,OAAe,SAACC,EAASC,GAC9B,IAAMC,EAAQH,EAAYC,EAASC,GAC/BE,EAAqB,WACvB,MAAM,IAAIC,MAA8CC,EAAwB,IAClF,EACMC,EAA+B,CACnCC,SAAUL,EAAMK,SAChBJ,SAAU,SAACK,GAAA,QAAAC,EAAAf,UAAAC,OAAWe,EAAA,IAAAb,MAAAY,EAAA,EAAAA,EAAA,KAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAAD,EAAAC,EAAA,GAAAjB,UAAAiB,GAAA,OAASR,EAAAS,WAAA,GAASJ,GAAAK,OAAWH,GAAI,GAEnDI,EAAQlB,EAAYmB,KAAI,SAAAC,GAAA,OAAcA,EAAWV,EAAc,IAErE,OADAH,EAAWc,EAAAL,WAAA,KAAAM,EAAAC,SAA4BL,GAA5BG,CAAmCf,EAAMC,UACpDiB,OAAAC,OAAA,GACKnB,EAAA,CACHC,SAAAA,GAEJ,CAAE,CACJ,E,qBCzBe,SAA4BmB,EAA8DnB,GACvG,GAA8B,mBAAnBmB,EACT,OAAOC,EAAkBD,EAAgBnB,GAE3C,GAA8B,iBAAnBmB,GAAkD,OAAnBA,EACxC,MAAM,IAAIlB,MAA8CC,EAAwB,KAElF,IAAMmB,EAA+C,CAAC,EACtD,QAAWC,KAAOH,EAAgB,CAChC,IAAMI,EAAgBJ,EAAeG,GACR,mBAAlBC,IACTF,EAAoBC,GAAOF,EAAkBG,EAAevB,GAEhE,CACA,OAAOqB,CACT,E,kBCmBe,SAAyBG,GAOtC,IAJA,IAAMC,EAAcR,OAAOS,KAAKF,GAC1BG,EAEF,CAAC,EACIC,EAAI,EAAGA,EAAIH,EAAYjC,OAAQoC,IAAK,CAC3C,IAAMN,EAAMG,EAAYG,GACpBC,EAKyB,mBAAlBL,EAASF,KAClBK,EAAcL,GAAOE,EAASF,GAElC,CACA,IAUIQ,EAVEC,EAAmBd,OAAOS,KAAKC,GAOjCE,EAIJ,KAnEF,SAA4BL,GAG1BP,OAAOS,KAAKF,GAAUQ,SAAQ,SAAAV,GAC5B,IAAMzB,EAAU2B,EAASF,GAIzB,QAA4B,IAHPzB,OAAQ,EAAW,CACtCoC,KAAMC,EAAYC,OAGlB,MAAM,IAAIlC,MAA8CC,EAAwB,KAElF,QAEO,IAFIL,OAAQ,EAAW,CAC5BoC,KAAMC,EAAYE,yBAElB,MAAM,IAAInC,MAA8CC,EAAyB,IAErF,GACF,CAmDImC,CAAmBV,EACrB,CAAC,MAAQW,GACPR,EAAsBQ,CACxB,CACA,OAAO,WAA+F,IAA1EC,EAAAhD,UAAAC,OAAA,QAAAgD,IAAAjD,UAAA,GAAAA,UAAA,GAAqD,CAAC,EAAGc,EAAAd,UAAAC,OAAA,EAAAD,UAAA,QAAAiD,EACnF,GAAIV,EACF,MAAMA,EAUR,IAFA,IAAIW,GAAa,EACXC,EAAyD,CAAC,EACvDd,EAAI,EAAGA,EAAIG,EAAiBvC,OAAQoC,IAAK,CAChD,IAAMN,EAAMS,EAAiBH,GACvB/B,EAAU8B,EAAcL,GACxBqB,EAAsBJ,EAAMjB,GAC5BsB,EAAkB/C,EAAQ8C,EAAqBtC,GACrD,QAA+B,IAApBuC,EAAiC,CACvBvC,GAAUA,EAAO4B,KACpC,MAAM,IAAIhC,MAA8CC,EAAyB,IACnF,CACAwC,EAAUpB,GAAOsB,EACjBH,EAAaA,GAAcG,IAAoBD,CACjD,CAEA,OADAF,EAAaA,GAAcV,EAAiBvC,SAAWyB,OAAOS,KAAKa,GAAO/C,QACtDkD,EAAYH,CAClC,CACF,E,uCChIe,SAAkBlC,GAC/B,OAAOwC,EAAcxC,IAAW,SAAUA,GAA8D,iBAA5CA,EAAmC4B,IACjG,E,uCCyWO,SAAoHpC,EAAwBC,EAA4EgD,GAC7N,OAAOC,EAAYlD,EAAUC,EAAwBgD,EACvD,E,gCCxWO,SAAS5C,EAAuB8C,GACrC,MAAO,yBAAyBA,6CAAgDA,kFAClF,CCJA,IACOC,EADsD,mBAAXC,QAAyBA,OAAOC,YAAc,eCE1FC,EAAe,WAAf,OAAqBC,KAAKC,SAASC,SAAS,IAAIC,UAAU,GAAGC,MAAM,IAAIC,KAAK,IAAK,EACjFC,EAAc,CAClBxB,KAAM,eAA8BiB,MACpCQ,QAAS,kBAAiCR,MAC1ChB,qBAAsB,iBAAM,+BAA+BgB,KAAc,GAEpElB,EAAA2B,EAAAA,0BAAQF,ECTA,SAARd,EAA+BiB,GACpC,GAAmB,iBAARA,GAA4B,OAARA,EAAc,OAAO,EAEpD,IADA,IAAIC,EAAQD,EAC4B,OAAjC7C,OAAO+C,eAAeD,IAC3BA,EAAQ9C,OAAO+C,eAAeD,GAEhC,OAAO9C,OAAO+C,eAAeF,KAASC,GAAwC,OAA/B9C,OAAO+C,eAAeF,EACvE,CJ8DO,SAASf,EAAoGlD,EAAwCC,EAA4EgD,GACtO,GAAuB,mBAAZjD,EACT,MAAM,IAAII,MAA8CC,EAAwB,IAElF,GAA8B,mBAAnBJ,GAAqD,mBAAbgD,GAA+C,mBAAbA,GAAmD,mBAAjBvD,UAAU,GAC/H,MAAM,IAAIU,MAA8CC,EAAyB,IAMnF,GAJ8B,mBAAnBJ,QAAqD,IAAbgD,IACjDA,EAAYhD,EACZA,OAAiB,QAEK,IAAbgD,EAA0B,CACnC,GAAwB,mBAAbA,EACT,MAAM,IAAI7C,MAA8CC,EAAyB,IAEnF,OAAO4C,EAASC,EAATD,CAAsBjD,EAAUC,EACzC,CACA,IAAImE,EAAiBpE,EACjBqE,EAAgDpE,EAChDqE,EAAyD,IAAIC,IAC7DC,EAAgBF,EAChBG,EAAoB,EACpBC,GAAgB,EASpB,SAASC,IACHH,IAAkBF,IACpBE,EAAgB,IAAID,IACpBD,EAAiBnC,SAAQ,SAACyC,EAAUnD,GAClC+C,EAAcK,IAAIpD,EAAKmD,EACzB,IAEJ,CAOA,SAASrE,IACP,GAAImE,EACF,MAAM,IAAItE,MAA8CC,EAAyB,IAEnF,OAAQgE,CACV,CAyBA,SAASS,EAAUF,GACjB,GAAwB,mBAAbA,EACT,MAAM,IAAIxE,MAA8CC,EAAyB,IAEnF,GAAIqE,EACF,MAAM,IAAItE,MAA8CC,EAAyB,IAEnF,IAAI0E,GAAe,EACnBJ,IACA,IAAMK,EAAaP,IAEnB,OADAD,EAAcK,IAAIG,EAAYJ,GACvB,WACL,GAAKG,EAAL,CAGA,GAAIL,EACF,MAAM,IAAItE,MAA8CC,EAAyB,IAEnF0E,GAAe,EACfJ,IACAH,EAAcS,OAAOD,GACrBV,EAAmB,IAPnB,CAQF,CACF,CA2BA,SAASnE,EAASK,GAChB,IAAKwC,EAAcxC,GACjB,MAAM,IAAIJ,MAA8CC,EAAyB,IAEnF,QAA2B,IAAhBG,EAAO4B,KAChB,MAAM,IAAIhC,MAA8CC,EAAyB,IAEnF,GAA2B,iBAAhBG,EAAO4B,KAChB,MAAM,IAAIhC,MAA8CC,EAA0B,KAEpF,GAAIqE,EACF,MAAM,IAAItE,MAA8CC,EAA0B,IAEpF,IACEqE,GAAgB,EAChBL,EAAeD,EAAeC,EAAc7D,EAC9C,CAAC,QACCkE,GAAgB,CAClB,CAKA,OAJkBJ,EAAmBE,GAC3BrC,SAAQ,SAAAyC,GAChBA,GACF,IACOpE,CACT,CA8EA,OAVAL,EAAU,CACRiC,KAAMC,EAAYC,QAEd,EAAA4C,EAAA/D,SAAA,CACJhB,SAAAA,EACA2E,UAAAA,EACAvE,SAAAA,EACA4E,eAhEF,SAAwBC,GACtB,GAA2B,mBAAhBA,EACT,MAAM,IAAIhF,MAA8CC,EAA0B,KAEpF+D,EAAmBgB,EAMnBjF,EAAU,CACRiC,KAAMC,EAAY0B,SAEtB,GAoDGX,GA5CH,WACE,IAAMiC,EAAiBP,EACvB,OAAM,EAANI,EAAA/D,SAAA,CASE2D,UAAA,SAAUQ,GACR,GAAwB,iBAAbA,GAAsC,OAAbA,EAClC,MAAM,IAAIlF,MAA8CC,EAA0B,KAEpF,SAASkF,IACP,IAAMC,EAAsBF,EACxBE,EAAmBC,MACrBD,EAAmBC,KAAKlF,IAE5B,CAGA,OAFAgF,IAEO,CACLG,YAFkBL,EAAeE,GAIrC,GACCnC,GAAY,WACX,OAAOuC,IACT,GAEJ,GAgBF,CHzSA,SAASpE,EAAoCG,EAAiCvB,GAC5E,OAAO,WAAsC,IAAD,IAAAyF,EAAAlG,UAAAC,OAAbe,EAAA,IAAAb,MAAA+F,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAAnF,EAAAmF,GAAAnG,UAAAmG,GAC7B,OAAO1F,EAASuB,EAAcd,MAAM+E,KAAMjF,GAC5C,CACF,CQmBe,SAARO,IAAgD,IAAD,IAAA6E,EAAApG,UAAAC,OAAnBoG,EAAA,IAAAlG,MAAAiG,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAAD,EAAAC,GAAAtG,UAAAsG,GACjC,OAAqB,IAAjBD,EAAMpG,OAED,SAAKsG,GAAA,OAAWA,CAAA,EAEJ,IAAjBF,EAAMpG,OACDoG,EAAM,GAERA,EAAMG,QAAO,SAACC,EAAGC,GAAA,OAAM,kBAAkBD,EAAEC,EAAAxF,WAAA,EAAAlB,WAAW,IAC/D,C,oBC/BA2G,EAAOrC,QALP,SAA2BsC,EAAGH,IAC3B,MAAQA,GAAKA,EAAIG,EAAE3G,UAAYwG,EAAIG,EAAE3G,QACtC,IAAK,IAAI8C,EAAI,EAAG8D,EAAI1G,MAAMsG,GAAI1D,EAAI0D,EAAG1D,IAAK8D,EAAE9D,GAAK6D,EAAE7D,GACnD,OAAO8D,CACT,EACoCF,EAAOrC,QAAQwC,YAAa,EAAMH,EAAOrC,QAAiB,QAAIqC,EAAOrC,O,uBCLzG,IAAIyC,EAAmB,EAAQ,OAI/BJ,EAAOrC,QAHP,SAA4BsC,GAC1B,GAAIzG,MAAM6G,QAAQJ,GAAI,OAAOG,EAAiBH,EAChD,EACqCD,EAAOrC,QAAQwC,YAAa,EAAMH,EAAOrC,QAAiB,QAAIqC,EAAOrC,O,wBCJ1G,IAAI2C,EAAgB,EAAQ,OAS5BN,EAAOrC,QARP,SAAyBvB,EAAG6D,EAAGM,GAC7B,OAAQN,EAAIK,EAAcL,MAAO7D,EAAIrB,OAAOyF,eAAepE,EAAG6D,EAAG,CAC/DQ,MAAOF,EACPG,YAAY,EACZC,cAAc,EACdC,UAAU,IACPxE,EAAE6D,GAAKM,EAAGnE,CACjB,EACkC4D,EAAOrC,QAAQwC,YAAa,EAAMH,EAAOrC,QAAiB,QAAIqC,EAAOrC,O,oBCJvGqC,EAAOrC,QALP,SAAgCvB,GAC9B,OAAOA,GAAKA,EAAE+D,WAAa/D,EAAI,CAC7B,QAAWA,EAEf,EACyC4D,EAAOrC,QAAQwC,YAAa,EAAMH,EAAOrC,QAAiB,QAAIqC,EAAOrC,O,oBCF9GqC,EAAOrC,QAHP,SAA0BsC,GACxB,GAAI,oBAAsBjD,QAAU,MAAQiD,EAAEjD,OAAO6D,WAAa,MAAQZ,EAAE,cAAe,OAAOzG,MAAMsH,KAAKb,EAC/G,EACmCD,EAAOrC,QAAQwC,YAAa,EAAMH,EAAOrC,QAAiB,QAAIqC,EAAOrC,O,oBCAxGqC,EAAOrC,QAHP,WACE,MAAM,IAAIoD,UAAU,uIACtB,EACqCf,EAAOrC,QAAQwC,YAAa,EAAMH,EAAOrC,QAAiB,QAAIqC,EAAOrC,O,wBCH1G,IAAIqD,EAAoB,EAAQ,MAC5BC,EAAkB,EAAQ,OAC1BC,EAA6B,EAAQ,OACrCC,EAAoB,EAAQ,OAIhCnB,EAAOrC,QAHP,SAA4BsC,GAC1B,OAAOe,EAAkBf,IAAMgB,EAAgBhB,IAAMiB,EAA2BjB,IAAMkB,GACxF,EACqCnB,EAAOrC,QAAQwC,YAAa,EAAMH,EAAOrC,QAAiB,QAAIqC,EAAOrC,O,wBCP1G,IAAIyD,EAAU,iBAWdpB,EAAOrC,QAVP,SAAqB4C,EAAGN,GACtB,GAAI,UAAYmB,EAAQb,KAAOA,EAAG,OAAOA,EACzC,IAAInE,EAAImE,EAAEvD,OAAOqE,aACjB,QAAI,IAAWjF,EAAG,CAChB,IAAIV,EAAIU,EAAEkF,KAAKf,EAAGN,GAAK,WACvB,GAAI,UAAYmB,EAAQ1F,GAAI,OAAOA,EACnC,MAAM,IAAIqF,UAAU,+CACtB,CACA,OAAQ,WAAad,EAAIsB,OAASC,QAAQjB,EAC5C,EAC8BP,EAAOrC,QAAQwC,YAAa,EAAMH,EAAOrC,QAAiB,QAAIqC,EAAOrC,O,wBCXnG,IAAIyD,EAAU,iBACVC,EAAc,EAAQ,OAK1BrB,EAAOrC,QAJP,SAAuB4C,GACrB,IAAI7E,EAAI2F,EAAYd,EAAG,UACvB,MAAO,UAAYa,EAAQ1F,GAAKA,EAAIA,EAAI,EAC1C,EACgCsE,EAAOrC,QAAQwC,YAAa,EAAMH,EAAOrC,QAAiB,QAAIqC,EAAOrC,O,oBCNrG,SAASyD,EAAQK,GAGf,OAAQzB,EAAOrC,QAAUyD,EAAU,mBAAqBpE,QAAU,iBAAmBA,OAAO6D,SAAW,SAAUY,GAC/G,cAAcA,CAChB,EAAI,SAAUA,GACZ,OAAOA,GAAK,mBAAqBzE,QAAUyE,EAAEC,cAAgB1E,QAAUyE,IAAMzE,OAAO2E,UAAY,gBAAkBF,CACpH,EAAGzB,EAAOrC,QAAQwC,YAAa,EAAMH,EAAOrC,QAAiB,QAAIqC,EAAOrC,QAAUyD,EAAQK,EAC5F,CACAzB,EAAOrC,QAAUyD,EAASpB,EAAOrC,QAAQwC,YAAa,EAAMH,EAAOrC,QAAiB,QAAIqC,EAAOrC,O,wBCT/F,IAAIyC,EAAmB,EAAQ,OAQ/BJ,EAAOrC,QAPP,SAAqCsC,EAAGH,GACtC,GAAIG,EAAG,CACL,GAAI,iBAAmBA,EAAG,OAAOG,EAAiBH,EAAGH,GACrD,IAAIS,EAAI,CAAC,EAAElD,SAASiE,KAAKrB,GAAG2B,MAAM,GAAI,GACtC,MAAO,WAAarB,GAAKN,EAAEyB,cAAgBnB,EAAIN,EAAEyB,YAAYG,MAAO,QAAUtB,GAAK,QAAUA,EAAI/G,MAAMsH,KAAKb,GAAK,cAAgBM,GAAK,2CAA2CuB,KAAKvB,GAAKH,EAAiBH,EAAGH,QAAK,CACtN,CACF,EAC8CE,EAAOrC,QAAQwC,YAAa,EAAMH,EAAOrC,QAAiB,QAAIqC,EAAOrC,O","sources":["webpack:///../src/applyMiddleware.ts","webpack:///../src/bindActionCreators.ts","webpack:///../src/combineReducers.ts","webpack:///../src/utils/isAction.ts","webpack:///../src/createStore.ts","webpack:///../src/utils/formatProdErrorMessage.ts","webpack:///../src/utils/symbol-observable.ts","webpack:///../src/utils/actionTypes.ts","webpack:///../src/utils/isPlainObject.ts","webpack:///../src/compose.ts","webpack:///./node_modules/@babel/runtime/helpers/arrayLikeToArray.js","webpack:///./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack:///./node_modules/@babel/runtime/helpers/defineProperty.js","webpack:///./node_modules/@babel/runtime/helpers/interopRequireDefault.js","webpack:///./node_modules/@babel/runtime/helpers/iterableToArray.js","webpack:///./node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack:///./node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack:///./node_modules/@babel/runtime/helpers/toPrimitive.js","webpack:///./node_modules/@babel/runtime/helpers/toPropertyKey.js","webpack:///./node_modules/@babel/runtime/helpers/typeof.js","webpack:///./node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js"],"sourcesContent":["import { formatProdErrorMessage as _formatProdErrorMessage } from \"src/utils/formatProdErrorMessage\";\nimport compose from './compose';\nimport { Middleware, MiddlewareAPI } from './types/middleware';\nimport { StoreEnhancer, Dispatch } from './types/store';\n\n/**\n * Creates a store enhancer that applies middleware to the dispatch method\n * of the Redux store. This is handy for a variety of tasks, such as expressing\n * asynchronous actions in a concise manner, or logging every action payload.\n *\n * See `redux-thunk` package as an example of the Redux middleware.\n *\n * Because middleware is potentially asynchronous, this should be the first\n * store enhancer in the composition chain.\n *\n * Note that each middleware will be given the `dispatch` and `getState` functions\n * as named arguments.\n *\n * @param middlewares The middleware chain to be applied.\n * @returns A store enhancer applying the middleware.\n *\n * @template Ext Dispatch signature added by a middleware.\n * @template S The type of the state supported by a middleware.\n */\nexport default function applyMiddleware(): StoreEnhancer;\nexport default function applyMiddleware<Ext1, S>(middleware1: Middleware<Ext1, S, any>): StoreEnhancer<{\n  dispatch: Ext1;\n}>;\nexport default function applyMiddleware<Ext1, Ext2, S>(middleware1: Middleware<Ext1, S, any>, middleware2: Middleware<Ext2, S, any>): StoreEnhancer<{\n  dispatch: Ext1 & Ext2;\n}>;\nexport default function applyMiddleware<Ext1, Ext2, Ext3, S>(middleware1: Middleware<Ext1, S, any>, middleware2: Middleware<Ext2, S, any>, middleware3: Middleware<Ext3, S, any>): StoreEnhancer<{\n  dispatch: Ext1 & Ext2 & Ext3;\n}>;\nexport default function applyMiddleware<Ext1, Ext2, Ext3, Ext4, S>(middleware1: Middleware<Ext1, S, any>, middleware2: Middleware<Ext2, S, any>, middleware3: Middleware<Ext3, S, any>, middleware4: Middleware<Ext4, S, any>): StoreEnhancer<{\n  dispatch: Ext1 & Ext2 & Ext3 & Ext4;\n}>;\nexport default function applyMiddleware<Ext1, Ext2, Ext3, Ext4, Ext5, S>(middleware1: Middleware<Ext1, S, any>, middleware2: Middleware<Ext2, S, any>, middleware3: Middleware<Ext3, S, any>, middleware4: Middleware<Ext4, S, any>, middleware5: Middleware<Ext5, S, any>): StoreEnhancer<{\n  dispatch: Ext1 & Ext2 & Ext3 & Ext4 & Ext5;\n}>;\nexport default function applyMiddleware<Ext, S = any>(...middlewares: Middleware<any, S, any>[]): StoreEnhancer<{\n  dispatch: Ext;\n}>;\nexport default function applyMiddleware(...middlewares: Middleware[]): StoreEnhancer<any> {\n  return createStore => (reducer, preloadedState) => {\n    const store = createStore(reducer, preloadedState);\n    let dispatch: Dispatch = () => {\n      throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage(15) : 'Dispatching while constructing your middleware is not allowed. ' + 'Other middleware would not be applied to this dispatch.');\n    };\n    const middlewareAPI: MiddlewareAPI = {\n      getState: store.getState,\n      dispatch: (action, ...args) => dispatch(action, ...args)\n    };\n    const chain = middlewares.map(middleware => middleware(middlewareAPI));\n    dispatch = compose<typeof dispatch>(...chain)(store.dispatch);\n    return {\n      ...store,\n      dispatch\n    };\n  };\n}","import { formatProdErrorMessage as _formatProdErrorMessage } from \"src/utils/formatProdErrorMessage\";\nimport { Dispatch } from './types/store';\nimport { ActionCreator, ActionCreatorsMapObject, Action } from './types/actions';\nimport { kindOf } from './utils/kindOf';\nfunction bindActionCreator<A extends Action>(actionCreator: ActionCreator<A>, dispatch: Dispatch<A>) {\n  return function (this: any, ...args: any[]) {\n    return dispatch(actionCreator.apply(this, args));\n  };\n}\n\n/**\n * Turns an object whose values are action creators, into an object with the\n * same keys, but with every function wrapped into a `dispatch` call so they\n * may be invoked directly. This is just a convenience method, as you can call\n * `store.dispatch(MyActionCreators.doSomething())` yourself just fine.\n *\n * For convenience, you can also pass an action creator as the first argument,\n * and get a dispatch wrapped function in return.\n *\n * @param actionCreators An object whose values are action\n * creator functions. One handy way to obtain it is to use `import * as`\n * syntax. You may also pass a single function.\n *\n * @param dispatch The `dispatch` function available on your Redux\n * store.\n *\n * @returns The object mimicking the original object, but with\n * every action creator wrapped into the `dispatch` call. If you passed a\n * function as `actionCreators`, the return value will also be a single\n * function.\n */\nexport default function bindActionCreators<A, C extends ActionCreator<A>>(actionCreator: C, dispatch: Dispatch): C;\nexport default function bindActionCreators<A extends ActionCreator<any>, B extends ActionCreator<any>>(actionCreator: A, dispatch: Dispatch): B;\nexport default function bindActionCreators<A, M extends ActionCreatorsMapObject<A>>(actionCreators: M, dispatch: Dispatch): M;\nexport default function bindActionCreators<M extends ActionCreatorsMapObject, N extends ActionCreatorsMapObject>(actionCreators: M, dispatch: Dispatch): N;\nexport default function bindActionCreators(actionCreators: ActionCreator<any> | ActionCreatorsMapObject, dispatch: Dispatch) {\n  if (typeof actionCreators === 'function') {\n    return bindActionCreator(actionCreators, dispatch);\n  }\n  if (typeof actionCreators !== 'object' || actionCreators === null) {\n    throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage(16) : `bindActionCreators expected an object or a function, but instead received: '${kindOf(actionCreators)}'. ` + `Did you write \"import ActionCreators from\" instead of \"import * as ActionCreators from\"?`);\n  }\n  const boundActionCreators: ActionCreatorsMapObject = {};\n  for (const key in actionCreators) {\n    const actionCreator = actionCreators[key];\n    if (typeof actionCreator === 'function') {\n      boundActionCreators[key] = bindActionCreator(actionCreator, dispatch);\n    }\n  }\n  return boundActionCreators;\n}","import { formatProdErrorMessage as _formatProdErrorMessage3 } from \"src/utils/formatProdErrorMessage\";\nimport { formatProdErrorMessage as _formatProdErrorMessage2 } from \"src/utils/formatProdErrorMessage\";\nimport { formatProdErrorMessage as _formatProdErrorMessage } from \"src/utils/formatProdErrorMessage\";\nimport { Action } from './types/actions';\nimport { ActionFromReducersMapObject, PreloadedStateShapeFromReducersMapObject, Reducer, StateFromReducersMapObject } from './types/reducers';\nimport ActionTypes from './utils/actionTypes';\nimport isPlainObject from './utils/isPlainObject';\nimport warning from './utils/warning';\nimport { kindOf } from './utils/kindOf';\nfunction getUnexpectedStateShapeWarningMessage(inputState: object, reducers: {\n  [key: string]: Reducer<any, any, any>;\n}, action: Action, unexpectedKeyCache: {\n  [key: string]: true;\n}) {\n  const reducerKeys = Object.keys(reducers);\n  const argumentName = action && action.type === ActionTypes.INIT ? 'preloadedState argument passed to createStore' : 'previous state received by the reducer';\n  if (reducerKeys.length === 0) {\n    return 'Store does not have a valid reducer. Make sure the argument passed ' + 'to combineReducers is an object whose values are reducers.';\n  }\n  if (!isPlainObject(inputState)) {\n    return `The ${argumentName} has unexpected type of \"${kindOf(inputState)}\". Expected argument to be an object with the following ` + `keys: \"${reducerKeys.join('\", \"')}\"`;\n  }\n  const unexpectedKeys = Object.keys(inputState).filter(key => !reducers.hasOwnProperty(key) && !unexpectedKeyCache[key]);\n  unexpectedKeys.forEach(key => {\n    unexpectedKeyCache[key] = true;\n  });\n  if (action && action.type === ActionTypes.REPLACE) return;\n  if (unexpectedKeys.length > 0) {\n    return `Unexpected ${unexpectedKeys.length > 1 ? 'keys' : 'key'} ` + `\"${unexpectedKeys.join('\", \"')}\" found in ${argumentName}. ` + `Expected to find one of the known reducer keys instead: ` + `\"${reducerKeys.join('\", \"')}\". Unexpected keys will be ignored.`;\n  }\n}\nfunction assertReducerShape(reducers: {\n  [key: string]: Reducer<any, any, any>;\n}) {\n  Object.keys(reducers).forEach(key => {\n    const reducer = reducers[key];\n    const initialState = reducer(undefined, {\n      type: ActionTypes.INIT\n    });\n    if (typeof initialState === 'undefined') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage(12) : `The slice reducer for key \"${key}\" returned undefined during initialization. ` + `If the state passed to the reducer is undefined, you must ` + `explicitly return the initial state. The initial state may ` + `not be undefined. If you don't want to set a value for this reducer, ` + `you can use null instead of undefined.`);\n    }\n    if (typeof reducer(undefined, {\n      type: ActionTypes.PROBE_UNKNOWN_ACTION()\n    }) === 'undefined') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage2(13) : `The slice reducer for key \"${key}\" returned undefined when probed with a random type. ` + `Don't try to handle '${ActionTypes.INIT}' or other actions in \"redux/*\" ` + `namespace. They are considered private. Instead, you must return the ` + `current state for any unknown actions, unless it is undefined, ` + `in which case you must return the initial state, regardless of the ` + `action type. The initial state may not be undefined, but can be null.`);\n    }\n  });\n}\n\n/**\n * Turns an object whose values are different reducer functions, into a single\n * reducer function. It will call every child reducer, and gather their results\n * into a single state object, whose keys correspond to the keys of the passed\n * reducer functions.\n *\n * @template S Combined state object type.\n *\n * @param reducers An object whose values correspond to different reducer\n *   functions that need to be combined into one. One handy way to obtain it\n *   is to use `import * as reducers` syntax. The reducers may never\n *   return undefined for any action. Instead, they should return their\n *   initial state if the state passed to them was undefined, and the current\n *   state for any unrecognized action.\n *\n * @returns A reducer function that invokes every reducer inside the passed\n *   object, and builds a state object with the same shape.\n */\nexport default function combineReducers<M>(reducers: M): M[keyof M] extends Reducer<any, any, any> | undefined ? Reducer<StateFromReducersMapObject<M>, ActionFromReducersMapObject<M>, Partial<PreloadedStateShapeFromReducersMapObject<M>>> : never;\nexport default function combineReducers(reducers: {\n  [key: string]: Reducer<any, any, any>;\n}) {\n  const reducerKeys = Object.keys(reducers);\n  const finalReducers: {\n    [key: string]: Reducer<any, any, any>;\n  } = {};\n  for (let i = 0; i < reducerKeys.length; i++) {\n    const key = reducerKeys[i];\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof reducers[key] === 'undefined') {\n        warning(`No reducer provided for key \"${key}\"`);\n      }\n    }\n    if (typeof reducers[key] === 'function') {\n      finalReducers[key] = reducers[key];\n    }\n  }\n  const finalReducerKeys = Object.keys(finalReducers);\n\n  // This is used to make sure we don't warn about the same\n  // keys multiple times.\n  let unexpectedKeyCache: {\n    [key: string]: true;\n  };\n  if (process.env.NODE_ENV !== 'production') {\n    unexpectedKeyCache = {};\n  }\n  let shapeAssertionError: unknown;\n  try {\n    assertReducerShape(finalReducers);\n  } catch (e) {\n    shapeAssertionError = e;\n  }\n  return function combination(state: StateFromReducersMapObject<typeof reducers> = {}, action: Action) {\n    if (shapeAssertionError) {\n      throw shapeAssertionError;\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      const warningMessage = getUnexpectedStateShapeWarningMessage(state, finalReducers, action, unexpectedKeyCache);\n      if (warningMessage) {\n        warning(warningMessage);\n      }\n    }\n    let hasChanged = false;\n    const nextState: StateFromReducersMapObject<typeof reducers> = {};\n    for (let i = 0; i < finalReducerKeys.length; i++) {\n      const key = finalReducerKeys[i];\n      const reducer = finalReducers[key];\n      const previousStateForKey = state[key];\n      const nextStateForKey = reducer(previousStateForKey, action);\n      if (typeof nextStateForKey === 'undefined') {\n        const actionType = action && action.type;\n        throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage3(14) : `When called with an action of type ${actionType ? `\"${String(actionType)}\"` : '(unknown type)'}, the slice reducer for key \"${key}\" returned undefined. ` + `To ignore an action, you must explicitly return the previous state. ` + `If you want this reducer to hold no value, you can return null instead of undefined.`);\n      }\n      nextState[key] = nextStateForKey;\n      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;\n    }\n    hasChanged = hasChanged || finalReducerKeys.length !== Object.keys(state).length;\n    return hasChanged ? nextState : state;\n  };\n}","import { Action } from '../types/actions';\nimport isPlainObject from './isPlainObject';\nexport default function isAction(action: unknown): action is Action<string> {\n  return isPlainObject(action) && 'type' in action && typeof (action as Record<'type', unknown>).type === 'string';\n}","import { formatProdErrorMessage as _formatProdErrorMessage13 } from \"src/utils/formatProdErrorMessage\";\nimport { formatProdErrorMessage as _formatProdErrorMessage12 } from \"src/utils/formatProdErrorMessage\";\nimport { formatProdErrorMessage as _formatProdErrorMessage11 } from \"src/utils/formatProdErrorMessage\";\nimport { formatProdErrorMessage as _formatProdErrorMessage10 } from \"src/utils/formatProdErrorMessage\";\nimport { formatProdErrorMessage as _formatProdErrorMessage9 } from \"src/utils/formatProdErrorMessage\";\nimport { formatProdErrorMessage as _formatProdErrorMessage8 } from \"src/utils/formatProdErrorMessage\";\nimport { formatProdErrorMessage as _formatProdErrorMessage7 } from \"src/utils/formatProdErrorMessage\";\nimport { formatProdErrorMessage as _formatProdErrorMessage6 } from \"src/utils/formatProdErrorMessage\";\nimport { formatProdErrorMessage as _formatProdErrorMessage5 } from \"src/utils/formatProdErrorMessage\";\nimport { formatProdErrorMessage as _formatProdErrorMessage4 } from \"src/utils/formatProdErrorMessage\";\nimport { formatProdErrorMessage as _formatProdErrorMessage3 } from \"src/utils/formatProdErrorMessage\";\nimport { formatProdErrorMessage as _formatProdErrorMessage2 } from \"src/utils/formatProdErrorMessage\";\nimport { formatProdErrorMessage as _formatProdErrorMessage } from \"src/utils/formatProdErrorMessage\";\nimport $$observable from './utils/symbol-observable';\nimport { Store, StoreEnhancer, Dispatch, Observer, ListenerCallback, UnknownIfNonSpecific } from './types/store';\nimport { Action } from './types/actions';\nimport { Reducer } from './types/reducers';\nimport ActionTypes from './utils/actionTypes';\nimport isPlainObject from './utils/isPlainObject';\nimport { kindOf } from './utils/kindOf';\n\n/**\n * @deprecated\n *\n * **We recommend using the `configureStore` method\n * of the `@reduxjs/toolkit` package**, which replaces `createStore`.\n *\n * Redux Toolkit is our recommended approach for writing Redux logic today,\n * including store setup, reducers, data fetching, and more.\n *\n * **For more details, please read this Redux docs page:**\n * **https://redux.js.org/introduction/why-rtk-is-redux-today**\n *\n * `configureStore` from Redux Toolkit is an improved version of `createStore` that\n * simplifies setup and helps avoid common bugs.\n *\n * You should not be using the `redux` core package by itself today, except for learning purposes.\n * The `createStore` method from the core `redux` package will not be removed, but we encourage\n * all users to migrate to using Redux Toolkit for all Redux code.\n *\n * If you want to use `createStore` without this visual deprecation warning, use\n * the `legacy_createStore` import instead:\n *\n * `import { legacy_createStore as createStore} from 'redux'`\n *\n */\nexport function createStore<S, A extends Action, Ext extends {} = {}, StateExt extends {} = {}>(reducer: Reducer<S, A>, enhancer?: StoreEnhancer<Ext, StateExt>): Store<S, A, UnknownIfNonSpecific<StateExt>> & Ext;\n/**\n * @deprecated\n *\n * **We recommend using the `configureStore` method\n * of the `@reduxjs/toolkit` package**, which replaces `createStore`.\n *\n * Redux Toolkit is our recommended approach for writing Redux logic today,\n * including store setup, reducers, data fetching, and more.\n *\n * **For more details, please read this Redux docs page:**\n * **https://redux.js.org/introduction/why-rtk-is-redux-today**\n *\n * `configureStore` from Redux Toolkit is an improved version of `createStore` that\n * simplifies setup and helps avoid common bugs.\n *\n * You should not be using the `redux` core package by itself today, except for learning purposes.\n * The `createStore` method from the core `redux` package will not be removed, but we encourage\n * all users to migrate to using Redux Toolkit for all Redux code.\n *\n * If you want to use `createStore` without this visual deprecation warning, use\n * the `legacy_createStore` import instead:\n *\n * `import { legacy_createStore as createStore} from 'redux'`\n *\n */\nexport function createStore<S, A extends Action, Ext extends {} = {}, StateExt extends {} = {}, PreloadedState = S>(reducer: Reducer<S, A, PreloadedState>, preloadedState?: PreloadedState | undefined, enhancer?: StoreEnhancer<Ext, StateExt>): Store<S, A, UnknownIfNonSpecific<StateExt>> & Ext;\nexport function createStore<S, A extends Action, Ext extends {} = {}, StateExt extends {} = {}, PreloadedState = S>(reducer: Reducer<S, A, PreloadedState>, preloadedState?: PreloadedState | StoreEnhancer<Ext, StateExt> | undefined, enhancer?: StoreEnhancer<Ext, StateExt>): Store<S, A, UnknownIfNonSpecific<StateExt>> & Ext {\n  if (typeof reducer !== 'function') {\n    throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage(2) : `Expected the root reducer to be a function. Instead, received: '${kindOf(reducer)}'`);\n  }\n  if (typeof preloadedState === 'function' && typeof enhancer === 'function' || typeof enhancer === 'function' && typeof arguments[3] === 'function') {\n    throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage2(0) : 'It looks like you are passing several store enhancers to ' + 'createStore(). This is not supported. Instead, compose them ' + 'together to a single function. See https://redux.js.org/tutorials/fundamentals/part-4-store#creating-a-store-with-enhancers for an example.');\n  }\n  if (typeof preloadedState === 'function' && typeof enhancer === 'undefined') {\n    enhancer = (preloadedState as StoreEnhancer<Ext, StateExt>);\n    preloadedState = undefined;\n  }\n  if (typeof enhancer !== 'undefined') {\n    if (typeof enhancer !== 'function') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage3(1) : `Expected the enhancer to be a function. Instead, received: '${kindOf(enhancer)}'`);\n    }\n    return enhancer(createStore)(reducer, (preloadedState as PreloadedState | undefined));\n  }\n  let currentReducer = reducer;\n  let currentState: S | PreloadedState | undefined = (preloadedState as PreloadedState | undefined);\n  let currentListeners: Map<number, ListenerCallback> | null = new Map();\n  let nextListeners = currentListeners;\n  let listenerIdCounter = 0;\n  let isDispatching = false;\n\n  /**\n   * This makes a shallow copy of currentListeners so we can use\n   * nextListeners as a temporary list while dispatching.\n   *\n   * This prevents any bugs around consumers calling\n   * subscribe/unsubscribe in the middle of a dispatch.\n   */\n  function ensureCanMutateNextListeners() {\n    if (nextListeners === currentListeners) {\n      nextListeners = new Map();\n      currentListeners.forEach((listener, key) => {\n        nextListeners.set(key, listener);\n      });\n    }\n  }\n\n  /**\n   * Reads the state tree managed by the store.\n   *\n   * @returns The current state tree of your application.\n   */\n  function getState(): S {\n    if (isDispatching) {\n      throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage4(3) : 'You may not call store.getState() while the reducer is executing. ' + 'The reducer has already received the state as an argument. ' + 'Pass it down from the top reducer instead of reading it from the store.');\n    }\n    return (currentState as S);\n  }\n\n  /**\n   * Adds a change listener. It will be called any time an action is dispatched,\n   * and some part of the state tree may potentially have changed. You may then\n   * call `getState()` to read the current state tree inside the callback.\n   *\n   * You may call `dispatch()` from a change listener, with the following\n   * caveats:\n   *\n   * 1. The subscriptions are snapshotted just before every `dispatch()` call.\n   * If you subscribe or unsubscribe while the listeners are being invoked, this\n   * will not have any effect on the `dispatch()` that is currently in progress.\n   * However, the next `dispatch()` call, whether nested or not, will use a more\n   * recent snapshot of the subscription list.\n   *\n   * 2. The listener should not expect to see all state changes, as the state\n   * might have been updated multiple times during a nested `dispatch()` before\n   * the listener is called. It is, however, guaranteed that all subscribers\n   * registered before the `dispatch()` started will be called with the latest\n   * state by the time it exits.\n   *\n   * @param listener A callback to be invoked on every dispatch.\n   * @returns A function to remove this change listener.\n   */\n  function subscribe(listener: () => void) {\n    if (typeof listener !== 'function') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage5(4) : `Expected the listener to be a function. Instead, received: '${kindOf(listener)}'`);\n    }\n    if (isDispatching) {\n      throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage6(5) : 'You may not call store.subscribe() while the reducer is executing. ' + 'If you would like to be notified after the store has been updated, subscribe from a ' + 'component and invoke store.getState() in the callback to access the latest state. ' + 'See https://redux.js.org/api/store#subscribelistener for more details.');\n    }\n    let isSubscribed = true;\n    ensureCanMutateNextListeners();\n    const listenerId = listenerIdCounter++;\n    nextListeners.set(listenerId, listener);\n    return function unsubscribe() {\n      if (!isSubscribed) {\n        return;\n      }\n      if (isDispatching) {\n        throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage7(6) : 'You may not unsubscribe from a store listener while the reducer is executing. ' + 'See https://redux.js.org/api/store#subscribelistener for more details.');\n      }\n      isSubscribed = false;\n      ensureCanMutateNextListeners();\n      nextListeners.delete(listenerId);\n      currentListeners = null;\n    };\n  }\n\n  /**\n   * Dispatches an action. It is the only way to trigger a state change.\n   *\n   * The `reducer` function, used to create the store, will be called with the\n   * current state tree and the given `action`. Its return value will\n   * be considered the **next** state of the tree, and the change listeners\n   * will be notified.\n   *\n   * The base implementation only supports plain object actions. If you want to\n   * dispatch a Promise, an Observable, a thunk, or something else, you need to\n   * wrap your store creating function into the corresponding middleware. For\n   * example, see the documentation for the `redux-thunk` package. Even the\n   * middleware will eventually dispatch plain object actions using this method.\n   *\n   * @param action A plain object representing “what changed”. It is\n   * a good idea to keep actions serializable so you can record and replay user\n   * sessions, or use the time travelling `redux-devtools`. An action must have\n   * a `type` property which may not be `undefined`. It is a good idea to use\n   * string constants for action types.\n   *\n   * @returns For convenience, the same action object you dispatched.\n   *\n   * Note that, if you use a custom middleware, it may wrap `dispatch()` to\n   * return something else (for example, a Promise you can await).\n   */\n  function dispatch(action: A) {\n    if (!isPlainObject(action)) {\n      throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage8(7) : `Actions must be plain objects. Instead, the actual type was: '${kindOf(action)}'. You may need to add middleware to your store setup to handle dispatching other values, such as 'redux-thunk' to handle dispatching functions. See https://redux.js.org/tutorials/fundamentals/part-4-store#middleware and https://redux.js.org/tutorials/fundamentals/part-6-async-logic#using-the-redux-thunk-middleware for examples.`);\n    }\n    if (typeof action.type === 'undefined') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage9(8) : 'Actions may not have an undefined \"type\" property. You may have misspelled an action type string constant.');\n    }\n    if (typeof action.type !== 'string') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage10(17) : `Action \"type\" property must be a string. Instead, the actual type was: '${kindOf(action.type)}'. Value was: '${action.type}' (stringified)`);\n    }\n    if (isDispatching) {\n      throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage11(9) : 'Reducers may not dispatch actions.');\n    }\n    try {\n      isDispatching = true;\n      currentState = currentReducer(currentState, action);\n    } finally {\n      isDispatching = false;\n    }\n    const listeners = currentListeners = nextListeners;\n    listeners.forEach(listener => {\n      listener();\n    });\n    return action;\n  }\n\n  /**\n   * Replaces the reducer currently used by the store to calculate the state.\n   *\n   * You might need this if your app implements code splitting and you want to\n   * load some of the reducers dynamically. You might also need this if you\n   * implement a hot reloading mechanism for Redux.\n   *\n   * @param nextReducer The reducer for the store to use instead.\n   */\n  function replaceReducer(nextReducer: Reducer<S, A>): void {\n    if (typeof nextReducer !== 'function') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage12(10) : `Expected the nextReducer to be a function. Instead, received: '${kindOf(nextReducer)}`);\n    }\n    currentReducer = ((nextReducer as unknown) as Reducer<S, A, PreloadedState>);\n\n    // This action has a similar effect to ActionTypes.INIT.\n    // Any reducers that existed in both the new and old rootReducer\n    // will receive the previous state. This effectively populates\n    // the new state tree with any relevant data from the old one.\n    dispatch(({\n      type: ActionTypes.REPLACE\n    } as A));\n  }\n\n  /**\n   * Interoperability point for observable/reactive libraries.\n   * @returns A minimal observable of state changes.\n   * For more information, see the observable proposal:\n   * https://github.com/tc39/proposal-observable\n   */\n  function observable() {\n    const outerSubscribe = subscribe;\n    return {\n      /**\n       * The minimal observable subscription method.\n       * @param observer Any object that can be used as an observer.\n       * The observer object should have a `next` method.\n       * @returns An object with an `unsubscribe` method that can\n       * be used to unsubscribe the observable from the store, and prevent further\n       * emission of values from the observable.\n       */\n      subscribe(observer: unknown) {\n        if (typeof observer !== 'object' || observer === null) {\n          throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage13(11) : `Expected the observer to be an object. Instead, received: '${kindOf(observer)}'`);\n        }\n        function observeState() {\n          const observerAsObserver = (observer as Observer<S>);\n          if (observerAsObserver.next) {\n            observerAsObserver.next(getState());\n          }\n        }\n        observeState();\n        const unsubscribe = outerSubscribe(observeState);\n        return {\n          unsubscribe\n        };\n      },\n      [$$observable]() {\n        return this;\n      }\n    };\n  }\n\n  // When a store is created, an \"INIT\" action is dispatched so that every\n  // reducer returns their initial state. This effectively populates\n  // the initial state tree.\n  dispatch(({\n    type: ActionTypes.INIT\n  } as A));\n  const store = (({\n    dispatch: (dispatch as Dispatch<A>),\n    subscribe,\n    getState,\n    replaceReducer,\n    [$$observable]: observable\n  } as unknown) as Store<S, A, StateExt> & Ext);\n  return store;\n}\n\n/**\n * Creates a Redux store that holds the state tree.\n *\n * **We recommend using `configureStore` from the\n * `@reduxjs/toolkit` package**, which replaces `createStore`:\n * **https://redux.js.org/introduction/why-rtk-is-redux-today**\n *\n * The only way to change the data in the store is to call `dispatch()` on it.\n *\n * There should only be a single store in your app. To specify how different\n * parts of the state tree respond to actions, you may combine several reducers\n * into a single reducer function by using `combineReducers`.\n *\n * @param {Function} reducer A function that returns the next state tree, given\n * the current state tree and the action to handle.\n *\n * @param {any} [preloadedState] The initial state. You may optionally specify it\n * to hydrate the state from the server in universal apps, or to restore a\n * previously serialized user session.\n * If you use `combineReducers` to produce the root reducer function, this must be\n * an object with the same shape as `combineReducers` keys.\n *\n * @param {Function} [enhancer] The store enhancer. You may optionally specify it\n * to enhance the store with third-party capabilities such as middleware,\n * time travel, persistence, etc. The only store enhancer that ships with Redux\n * is `applyMiddleware()`.\n *\n * @returns {Store} A Redux store that lets you read the state, dispatch actions\n * and subscribe to changes.\n */\nexport function legacy_createStore<S, A extends Action, Ext extends {} = {}, StateExt extends {} = {}>(reducer: Reducer<S, A>, enhancer?: StoreEnhancer<Ext, StateExt>): Store<S, A, UnknownIfNonSpecific<StateExt>> & Ext;\n/**\n * Creates a Redux store that holds the state tree.\n *\n * **We recommend using `configureStore` from the\n * `@reduxjs/toolkit` package**, which replaces `createStore`:\n * **https://redux.js.org/introduction/why-rtk-is-redux-today**\n *\n * The only way to change the data in the store is to call `dispatch()` on it.\n *\n * There should only be a single store in your app. To specify how different\n * parts of the state tree respond to actions, you may combine several reducers\n * into a single reducer function by using `combineReducers`.\n *\n * @param {Function} reducer A function that returns the next state tree, given\n * the current state tree and the action to handle.\n *\n * @param {any} [preloadedState] The initial state. You may optionally specify it\n * to hydrate the state from the server in universal apps, or to restore a\n * previously serialized user session.\n * If you use `combineReducers` to produce the root reducer function, this must be\n * an object with the same shape as `combineReducers` keys.\n *\n * @param {Function} [enhancer] The store enhancer. You may optionally specify it\n * to enhance the store with third-party capabilities such as middleware,\n * time travel, persistence, etc. The only store enhancer that ships with Redux\n * is `applyMiddleware()`.\n *\n * @returns {Store} A Redux store that lets you read the state, dispatch actions\n * and subscribe to changes.\n */\nexport function legacy_createStore<S, A extends Action, Ext extends {} = {}, StateExt extends {} = {}, PreloadedState = S>(reducer: Reducer<S, A, PreloadedState>, preloadedState?: PreloadedState | undefined, enhancer?: StoreEnhancer<Ext, StateExt>): Store<S, A, UnknownIfNonSpecific<StateExt>> & Ext;\nexport function legacy_createStore<S, A extends Action, Ext extends {} = {}, StateExt extends {} = {}, PreloadedState = S>(reducer: Reducer<S, A>, preloadedState?: PreloadedState | StoreEnhancer<Ext, StateExt> | undefined, enhancer?: StoreEnhancer<Ext, StateExt>): Store<S, A, UnknownIfNonSpecific<StateExt>> & Ext {\n  return createStore(reducer, (preloadedState as any), enhancer);\n}","/**\n * Adapted from React: https://github.com/facebook/react/blob/master/packages/shared/formatProdErrorMessage.js\n *\n * Do not require this module directly! Use normal throw error calls. These messages will be replaced with error codes\n * during build.\n * @param {number} code\n */\nexport function formatProdErrorMessage(code: number) {\n  return `Minified Redux error #${code}; visit https://redux.js.org/Errors?code=${code} for the full message or ` + 'use the non-minified dev environment for full errors. ';\n}","declare global {\n  interface SymbolConstructor {\n    readonly observable: symbol;\n  }\n}\nconst $$observable = /* #__PURE__ */(() => typeof Symbol === 'function' && Symbol.observable || '@@observable')();\nexport default $$observable;","/**\n * These are private action types reserved by Redux.\n * For any unknown actions, you must return the current state.\n * If the current state is undefined, you must return the initial state.\n * Do not reference these action types directly in your code.\n */\n\nconst randomString = () => Math.random().toString(36).substring(7).split('').join('.');\nconst ActionTypes = {\n  INIT: `@@redux/INIT${/* #__PURE__ */randomString()}`,\n  REPLACE: `@@redux/REPLACE${/* #__PURE__ */randomString()}`,\n  PROBE_UNKNOWN_ACTION: () => `@@redux/PROBE_UNKNOWN_ACTION${randomString()}`\n};\nexport default ActionTypes;","/**\n * @param obj The object to inspect.\n * @returns True if the argument appears to be a plain object.\n */\nexport default function isPlainObject(obj: any): obj is object {\n  if (typeof obj !== 'object' || obj === null) return false;\n  let proto = obj;\n  while (Object.getPrototypeOf(proto) !== null) {\n    proto = Object.getPrototypeOf(proto);\n  }\n  return Object.getPrototypeOf(obj) === proto || Object.getPrototypeOf(obj) === null;\n}","type Func<T extends any[], R> = (...a: T) => R;\n\n/**\n * Composes single-argument functions from right to left. The rightmost\n * function can take multiple arguments as it provides the signature for the\n * resulting composite function.\n *\n * @param funcs The functions to compose.\n * @returns A function obtained by composing the argument functions from right\n *   to left. For example, `compose(f, g, h)` is identical to doing\n *   `(...args) => f(g(h(...args)))`.\n */\nexport default function compose(): <R>(a: R) => R;\nexport default function compose<F extends Function>(f: F): F;\n\n/* two functions */\nexport default function compose<A, T extends any[], R>(f1: (a: A) => R, f2: Func<T, A>): Func<T, R>;\n\n/* three functions */\nexport default function compose<A, B, T extends any[], R>(f1: (b: B) => R, f2: (a: A) => B, f3: Func<T, A>): Func<T, R>;\n\n/* four functions */\nexport default function compose<A, B, C, T extends any[], R>(f1: (c: C) => R, f2: (b: B) => C, f3: (a: A) => B, f4: Func<T, A>): Func<T, R>;\n\n/* rest */\nexport default function compose<R>(f1: (a: any) => R, ...funcs: Function[]): (...args: any[]) => R;\nexport default function compose<R>(...funcs: Function[]): (...args: any[]) => R;\nexport default function compose(...funcs: Function[]) {\n  if (funcs.length === 0) {\n    // infer the argument type so it is usable in inference down the line\n    return <T,>(arg: T) => arg;\n  }\n  if (funcs.length === 1) {\n    return funcs[0];\n  }\n  return funcs.reduce((a, b) => (...args: any) => a(b(...args)));\n}","function _arrayLikeToArray(r, a) {\n  (null == a || a > r.length) && (a = r.length);\n  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];\n  return n;\n}\nmodule.exports = _arrayLikeToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\nfunction _arrayWithoutHoles(r) {\n  if (Array.isArray(r)) return arrayLikeToArray(r);\n}\nmodule.exports = _arrayWithoutHoles, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var toPropertyKey = require(\"./toPropertyKey.js\");\nfunction _defineProperty(e, r, t) {\n  return (r = toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nmodule.exports = _defineProperty, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _interopRequireDefault(e) {\n  return e && e.__esModule ? e : {\n    \"default\": e\n  };\n}\nmodule.exports = _interopRequireDefault, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _iterableToArray(r) {\n  if (\"undefined\" != typeof Symbol && null != r[Symbol.iterator] || null != r[\"@@iterator\"]) return Array.from(r);\n}\nmodule.exports = _iterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nmodule.exports = _nonIterableSpread, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayWithoutHoles = require(\"./arrayWithoutHoles.js\");\nvar iterableToArray = require(\"./iterableToArray.js\");\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\nvar nonIterableSpread = require(\"./nonIterableSpread.js\");\nfunction _toConsumableArray(r) {\n  return arrayWithoutHoles(r) || iterableToArray(r) || unsupportedIterableToArray(r) || nonIterableSpread();\n}\nmodule.exports = _toConsumableArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nmodule.exports = toPrimitive, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nvar toPrimitive = require(\"./toPrimitive.js\");\nfunction toPropertyKey(t) {\n  var i = toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nmodule.exports = toPropertyKey, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return (module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports), _typeof(o);\n}\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\nfunction _unsupportedIterableToArray(r, a) {\n  if (r) {\n    if (\"string\" == typeof r) return arrayLikeToArray(r, a);\n    var t = {}.toString.call(r).slice(8, -1);\n    return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? arrayLikeToArray(r, a) : void 0;\n  }\n}\nmodule.exports = _unsupportedIterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;"],"names":["_len3","arguments","length","middlewares","Array","_key4","createStore2","reducer","preloadedState","store","dispatch","Error","formatProdErrorMessage","middlewareAPI","getState","action","_len4","args","_key5","apply","concat","chain","map","middleware","compose","_toConsumableArray2","default","Object","assign","actionCreators","bindActionCreator","boundActionCreators","key","actionCreator","reducers","reducerKeys","keys","finalReducers","i","process","shapeAssertionError","finalReducerKeys","forEach","type","actionTypes_default","INIT","PROBE_UNKNOWN_ACTION","assertReducerShape","e","state","undefined","hasChanged","nextState","previousStateForKey","nextStateForKey","isPlainObject","enhancer","createStore","code","symbol_observable_default","Symbol","observable","randomString","Math","random","toString","substring","split","join","ActionTypes","REPLACE","exports","obj","proto","getPrototypeOf","currentReducer","currentState","currentListeners","Map","nextListeners","listenerIdCounter","isDispatching","ensureCanMutateNextListeners","listener","set","subscribe","isSubscribed","listenerId","delete","_defineProperty2","replaceReducer","nextReducer","outerSubscribe","observer","observeState","observerAsObserver","next","unsubscribe","this","_len","_key2","_len2","funcs","_key3","arg","reduce","a","b","module","r","n","__esModule","arrayLikeToArray","isArray","toPropertyKey","t","defineProperty","value","enumerable","configurable","writable","iterator","from","TypeError","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","_typeof","toPrimitive","call","String","Number","o","constructor","prototype","slice","name","test"],"sourceRoot":""}