{"version":3,"file":"node_modules_react-native_Libraries_Components_View_ReactNativeStyleAttributes_js-node_module-59761c1.chunk.bundle","mappings":"+SAYAA,EAAAC,EAAAC,EAAA,QACAC,EAAAF,EAAAC,EAAA,QACAE,EAAAH,EAAAC,EAAA,OACAG,EAAAJ,EAAAC,EAAA,QACAI,EAAAL,EAAAC,EAAA,QACAK,EAAAN,EAAAC,EAAA,QAEMM,EAAkB,CAACC,QAASC,EAAAA,SAE5BC,EAAgE,CAIpEC,cAAc,EACdC,YAAY,EACZC,WAAW,EACXC,YAAa,CAACN,QAASO,EAAAA,SACvBC,mBAAmB,EACnBC,gBAAgB,EAChBC,iBAAiB,EACjBC,kBAAkB,EAClBC,kBAAkB,EAClBC,gBAAgB,EAChBC,WAAW,EACXC,aAAa,EACbC,QAAQ,EACRC,WAAW,EACXC,SAAS,EACTC,KAAK,EACLC,MAAM,EACNC,WAAW,EACXC,eAAe,EACfC,UAAU,EACVC,YAAY,EACZC,UAAU,EACVC,KAAK,EACLC,QAAQ,EACRC,OAAO,EACPC,YAAY,EACZC,eAAe,EACfC,iBAAiB,EACjBC,aAAa,EACbC,gBAAgB,EAChBC,kBAAkB,EAClBC,gBAAgB,EAChBC,MAAM,EACNC,QAAQ,EACRC,aAAa,EACbC,gBAAgB,EAChBC,kBAAkB,EAClBC,cAAc,EACdC,WAAW,EACXC,kBAAkB,EAClBC,cAAc,EACdC,iBAAiB,EACjBC,mBAAmB,EACnBC,YAAY,EACZC,aAAa,EACbC,aAAa,EACbC,WAAW,EACXC,gBAAgB,EAChBC,WAAW,EACXC,UAAU,EACVC,WAAW,EACXC,UAAU,EACVC,UAAU,EACVC,SAAS,EACTC,cAAc,EACdC,iBAAiB,EACjBC,mBAAmB,EACnBC,eAAe,EACfC,YAAY,EACZC,mBAAmB,EACnBC,eAAe,EACfC,kBAAkB,EAClBC,oBAAoB,EACpBC,aAAa,EACbC,cAAc,EACdC,cAAc,EACdC,YAAY,EACZC,iBAAiB,EACjBC,UAAU,EACVC,OAAO,EACPC,QAAQ,EACRC,OAAO,EACPC,KAAK,EACLC,OAAO,EACPC,QAAQ,EAKRC,WAAW,EACXC,YAAajF,EACbkF,aAAc,CAACC,KAAMC,EAAAA,SACrBC,eAAe,EACfC,cAAc,EAKdC,UAAW,CAACtF,QAASuF,EAAAA,SACrBC,gBAAiB,CAACxF,QAASyF,EAAAA,SAK3BC,oBAAoB,EACpBC,gBAAiB5F,EACjB6F,iBAAkB7F,EAClB8F,oBAAqB9F,EACrB+F,sBAAuB/F,EACvBgG,kBAAmBhG,EACnBiG,uBAAuB,EACvBC,wBAAwB,EACxBC,yBAAyB,EACzBC,yBAAyB,EACzBC,YAAarG,EACbsG,aAAa,EACbC,eAAgBvG,EAChBwG,oBAAoB,EACpBC,sBAAsB,EACtBC,gBAAiB1G,EACjB2G,cAAc,EACdC,iBAAkB5G,EAClB6G,iBAAkB7G,EAClB8G,sBAAsB,EACtBC,wBAAwB,EACxBC,aAAa,EACbC,eAAgBjH,EAChBkH,oBAAoB,EACpBC,qBAAqB,EACrBC,sBAAsB,EACtBC,sBAAsB,EACtBC,SAAS,EACTC,eAAe,EAKfC,MAAOxH,EACPyH,YAAY,EACZC,UAAU,EACVC,WAAW,EACXC,YAAa,CAAC3H,QAAS4H,EAAAA,SACvBC,YAAY,EACZC,oBAAoB,EACpBC,eAAe,EACfC,YAAY,EACZC,WAAW,EACXC,mBAAmB,EACnBC,oBAAqBpI,EACrBqI,oBAAoB,EACpBC,qBAAqB,EACrBC,gBAAiBvI,EACjBwI,kBAAkB,EAClBC,kBAAkB,EAClBC,eAAe,EACfC,YAAY,EACZC,eAAe,EACfC,kBAAkB,EAKlBC,aAAc9I,EACd+I,YAAY,EACZC,UAAWhJ,EACXiJ,WAAW,GAGbC,EAAOC,QAAUhJ,C,qKC/JSgJ,EAAAA,cAAG,WAA0C,IAAD,IAAAC,EAAAC,UAAAC,OAArCC,EAAK,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAALF,EAAKE,GAAAJ,UAAAI,GAEpC,MAAQ,CAACC,SAAUH,EACrB,EASmCJ,EAAAA,uBAAG,SACpCQ,GAEA,MAAQ,CACNC,QAAS,CACPC,MAAOF,EAAME,MACbC,KAAMH,EAAMG,KACZC,kBAAmBJ,EAAMI,kBACzBC,iBAAkBL,EAAMK,kBAK9B,EAkCyBb,EAAAA,qBAhCK,SAC5B3B,GAEA,GAAI,aAAcA,EAEhB,OAAOA,EACF,GAAI,YAAaA,QAA2ByC,IAAlBzC,EAAMoC,QAAuB,CAC5D,IAAMM,EAAiBxK,EAAQ,OAGzBkK,EAAUpC,EAAMoC,QAatB,MAZ4C,CAC1CA,QAAS,CAEPC,MAAOK,EAAeN,EAAQC,OAE9BC,KAAMI,EAAeN,EAAQE,MAE7BC,kBAAmBG,EAAeN,EAAQG,mBAE1CC,iBAAkBE,EAAeN,EAAQI,mBAI/C,CACA,OAAO,IACT,EAmCsBb,EAAAA,mBA3BM,SAC1B3B,GAEA,GAAI,YAAaA,GAA0B,MAAjBA,EAAMoC,QAAiB,CAC/C,IAAM1J,EAAeR,EAAAA,OAAAA,QACfkK,EAAUpC,EAAMoC,QAatB,MAZ4C,CAC1CA,QAAS,CAEPC,MAAO3J,EAAa0J,EAAQC,OAE5BC,KAAM5J,EAAa0J,EAAQE,MAE3BC,kBAAmB7J,EAAa0J,EAAQG,mBAExCC,iBAAkB9J,EAAa0J,EAAQI,mBAI7C,CACA,OAAOxC,CACT,C,4BC3FA2C,E,QAAA1K,CAAAC,EAAA,QAkBAwJ,EAAOC,QAhBP,SACE3B,GAEA,GAAqB,iBAAVA,GAA+B,MAATA,EAAe,CAC9C,IACM4C,GAAkBC,EADO3K,EAAQ,OAAhC2K,sBACsC7C,GAC7C,GAAuB,MAAnB4C,EACF,OAAOA,CAEX,CAEA,GAAqB,iBAAV5C,GAAuC,iBAAVA,EACtC,OAAO,EAAA8C,EAAAA,SAAgB9C,EAE3B,C,qCCnBkB9H,EAAQ,OAkD1BwJ,EAAOC,QAhDP,SAA4B5I,GAC1B,GAA2B,iBAAhBA,EACT,OAAOA,EAET,GAA2B,iBAAhBA,EAAX,CAWA,IAAMgK,EAAUhK,EAAYiK,MAAM,KAAKC,KAAI,SAAAC,GAAC,OAAIA,EAAEC,MAAM,IAExD,IAAIJ,EAAQK,SAAS,QAoBrB,IAT4BL,EAAQM,MAAK,SAAAC,GAAC,OAAIC,OAAOC,MAAMD,OAAOD,GAAG,IAarE,OAAuB,IAAnBP,EAAQjB,OACHyB,OAAOR,EAAQ,IAAMQ,OAAOR,EAAQ,IAGtCQ,OAAOR,EAAQ,GAhCtB,CAiCF,C,qCClDaU,OAAAA,eAAAA,EAAAA,aAAAA,CAAAC,OAAA,IAAA/B,EAAAA,aAAA,EAIb,IAAMgC,EAAWzL,EAAQ,OACnBwK,EAAiBxK,EAAQ,OAyC9ByJ,EAAAA,QApCD,SAAsB3B,GACpB,GAAIA,QACF,OAAOA,EAGT,IAAI4C,EAAkBF,EAAe1C,GACrC,GAAI4C,QAAJ,CAIA,GAA+B,iBAApBA,EAA8B,CACvC,IAGMgB,GAAoBC,EAFxB3L,EAAAA,OAAAA,oBAE2C0K,GAE7C,GAAyB,MAArBgB,EACF,OAAOA,CAEX,CAEA,MAA+B,iBAApBhB,EACF,MAITA,GAAoBA,GAAmB,GAAOA,IAAoB,KAAQ,EAEtD,YAAhBe,EAASG,KAKXlB,GAAoC,GAE/BA,EA3BP,CA4BF,C,gCC3BAlB,EAAOC,QAfP,SACEvB,GAEA,OAAI4B,MAAM+B,QAAQ3D,GACTA,EAIqCA,EAC3C4C,MAAM,KACNgB,OAAOC,QAGZ,C,qCCjBa,IAAAC,EAAAhM,EAAA,MAAAD,CAAAC,EAAA,QAESA,EAAAA,OAAAA,GACJA,EAAQ,OAsC1B,IAAMiM,EAmBmD,SAACC,EAAKC,GAAU,IAADC,EAChEC,EAAqB,IAAIC,OAAO,mCAEtC,OAAQJ,GACN,IAAK,SACH,MAAO,CAACA,IAAAA,EAAKV,MAAsC,OAAjCY,EAAED,EAAKI,MAAM,2BAAoB,EAA/BH,EAAiCrB,IAAIM,SAC3D,IAAK,YACL,IAAK,cAKH,IAJA,IAGIR,EAHE2B,EAAa,GAIX3B,EAAUwB,EAAmBI,KAAKN,IAAQ,CAChD,IAAMX,EAAQH,OAAOR,EAAQ,IACvB6B,EAAoB7B,EAAQ,GAEpB,IAAVW,GAAgBkB,IACS,EAG7BF,EAAWG,KAAKnB,EAClB,CA8BA,OAJ2B,KAAb,MAAVgB,OAAU,EAAVA,EAAY5C,SACd4C,EAAWG,KAAK,GAGX,CAACT,IAAK,YAAaV,MAAOgB,GACnC,IAAK,aACL,IAAK,aACL,IAAK,cACH,IAAMI,EAAaP,EAAmBI,KAAKN,GAE3C,GAAe,MAAVS,IAAAA,EAAYhD,OACf,MAAO,CAACsC,IAAAA,EAAKV,WAAOjB,GAGtB,IAAMiB,EAAQH,OAAOuB,EAAW,IACNA,EAAW,GAUrC,MAAO,CAACV,IAAAA,EAAKV,MAAAA,GAEf,QACE,MAAO,CAACU,IAAAA,EAAKV,MAAQF,MAAMa,GAAuBA,EAAfd,OAAOc,IAEhD,EAmIA3C,EAAOC,QA/PP,SACE5D,GAEA,GAAyB,iBAAdA,EAAwB,CAKjC,IAJA,IAEIgF,EAFEgC,EAAQ,IAAIP,OAAO,qBACrBQ,EAAgC,GAG5BjC,EAAUgC,EAAMJ,KAAK5G,IAAa,CACxC,IAAAkH,EAAqBd,EACnBpB,EAAQ,GACRA,EAAQ,IAFHqB,EAAGa,EAAHb,IAAKV,EAAKuB,EAALvB,WAKEjB,IAAViB,GACFsB,EAAeH,MAAK,EAADX,EAAAgB,SAAA,GAAGd,EAAMV,GAEhC,CACA3F,EAAYiH,CACd,CAMA,OAAOjH,CACT,C,kGChCe,SACbE,GAEA,GAA+B,iBAApBA,EAA8B,CACvC,IAKI8E,EALEoC,EAAwBlH,EACxB8G,EAAQ,iDACRK,EAA+C,CAAC,MAAO,MAAO,GAEhEC,EAAQC,EAEZC,EAAO,KAAQxC,EAAUgC,EAAMJ,KAAKQ,IAAyB,CAC3D,IAAIK,EAAYH,EAAQ,EAElB3B,EAAQX,EAAQ,GAChB0C,EAAa/B,EAAMgC,cAEzB,OAAQD,GACN,IAAK,OACL,IAAK,SACH,EAAAE,EAAAA,SACEN,IAAUC,EACV,sDACA5B,GAEF0B,EAAqBE,GAA0B,SAAfG,EAAwB,EAAI,OAC5D,MAEF,IAAK,MACL,IAAK,SASH,IARA,EAAAE,EAAAA,SACEN,IAAUO,EACV,sDACAlC,GAEF0B,EAAqBS,GAA0B,QAAfJ,EAAuB,EAAI,OAGvDJ,IAAUC,EAAS,CACrB,IAAMQ,EAAaf,EAAMJ,KAAKQ,GAC9B,GAAkB,MAAdW,EACF,MAAMP,EAGR,OAAQO,EAAW,GAAGJ,eACpB,IAAK,OACHN,EAAqBE,GAAW,EAChC,MACF,IAAK,QACHF,EAAqBE,GAAW,OAChC,MACF,IAAK,SACHF,EAAqBE,GAAW,MAChC,MACF,SACE,EAAAK,EAAAA,UACE,EACA,uCACAR,GAGNK,EAAYI,CACd,CAEA,MAEF,IAAK,UACH,EAAAD,EAAAA,SACEN,IAAUO,EACV,0DACAlC,GAEF0B,EAAqBC,GAAS,MAC9B,MAEF,QACM3B,EAAMqC,SAAS,KACjBX,EAAqBC,GAAS3B,EAE9B0B,EAAqBC,GAASW,WAAWtC,GAM/C2B,EAAQG,CACV,CAEAvH,EAAkBmH,CACpB,CAEIa,EAIJ,OAAOhI,CACT,E,gBAtGAiI,EAAAjO,EAAAC,EAAA,QAEMoN,EAAU,EACVO,EAAU,EACVD,EAAU,C,0FCFhB,IAAAO,EAA0E,SAAAC,EAAAC,GAAA,IAAAA,GAAAD,GAAAA,EAAAE,WAAA,OAAAF,EAAA,UAAAA,GAAA,iBAAAA,GAAA,mBAAAA,EAAA,OAAAlB,QAAAkB,GAAA,IAAAG,EAAAC,EAAAH,GAAA,GAAAE,GAAAA,EAAAE,IAAAL,GAAA,OAAAG,EAAAG,IAAAN,GAAA,IAAA9C,EAAA,CAAAqD,UAAA,MAAAC,EAAAnD,OAAAoD,gBAAApD,OAAAqD,yBAAA,QAAAC,KAAAX,EAAA,eAAAW,GAAAtD,OAAAuD,UAAAC,eAAAC,KAAAd,EAAAW,GAAA,KAAAI,EAAAP,EAAAnD,OAAAqD,yBAAAV,EAAAW,GAAA,KAAAI,IAAAA,EAAAT,KAAAS,EAAAC,KAAA3D,OAAAoD,eAAAvD,EAAAyD,EAAAI,GAAA7D,EAAAyD,GAAAX,EAAAW,EAAA,QAAAzD,EAAA4B,QAAAkB,EAAAG,GAAAA,EAAAa,IAAAhB,EAAA9C,GAAAA,CAAA,CAA1E+D,CAAAnP,EAAA,QAA0E,SAAAsO,EAAAJ,GAAA,sBAAAkB,QAAA,gBAAAjB,EAAA,IAAAiB,QAAAf,EAAA,IAAAe,QAAA,OAAAd,EAAA,SAAAJ,GAAA,OAAAA,EAAAG,EAAAF,CAAA,GAAAD,EAAA,CAAAzE,EAAAA,QAqB1DwE,EAAoBoB,aAClC,oB,4BCnBFC,E,QAAAvP,CAAAC,EAAA,QAEMyL,EAAyB,CAC7B8D,YAAa,KACb3D,GAAI,MAEJ,WAAI4D,GAEF,OAAOC,KAAKC,UAAUC,SACxB,EAEA,aAAID,GAoBF,OALwB,MAApBD,KAAKF,cAEPE,KAAKF,YAAcK,EAAAA,QAA2BC,gBAGzCJ,KAAKF,WACd,EAEA,SAAIO,GAEF,MAAyC,QAAlCL,KAAKC,UAAUK,cACxB,EAEA,QAAIC,GAEF,MAAyC,OAAlCP,KAAKC,UAAUK,cACxB,EAEA,aAAIE,GAKF,OAAO,CACT,EAEA,uBAAIC,GAAgC,IAADC,EAEjC,OAAyC,OAAzCA,EAAOV,KAAKC,UAAUQ,qBAAmBC,EAAIV,KAAKQ,SACpD,EACAG,OAAQ,SAAIC,GAA2B,MAErC,QAASA,EAAOA,EAAKC,IAAM,WAAYD,EAAOA,EAAKE,OAASF,EAAKrD,OAAO,GAG5ExD,EAAOC,QAAUgC,C,iCChEjB,IAAM+E,EAAY,CAACpL,WAAOmF,EAAWrI,YAAQqI,GAa7Cf,EAAOC,QAVa,SAAUgH,EAAWC,GACvC,IAAMC,EAAeF,GAAOD,EACtBI,EAAeF,GAAOF,EAC5B,OACEG,IAAiBC,IAChBD,EAAavL,QAAUwL,EAAaxL,OACnCuL,EAAazO,SAAW0O,EAAa1O,OAE3C,C,iCCyBAsH,EAAOC,QA5BS,SAASoH,EAAWC,EAAQpC,EAAGqC,EAAGC,EAAGC,EAAG/C,EAAGgD,GAOzD,IAAKL,EAAW,CACd,IAAIM,EACJ,QAAe5G,IAAXuG,EACFK,EAAQ,IAAIC,MACV,qIAGG,CACL,IAAIjF,EAAO,CAACuC,EAAGqC,EAAGC,EAAGC,EAAG/C,EAAGgD,GACvBG,EAAW,GACfF,EAAQ,IAAIC,MACVN,EAAOQ,QAAQ,OAAO,WAAa,OAAOnF,EAAKkF,IAAa,MAExDE,KAAO,qBACf,CAGA,MADAJ,EAAMK,YAAc,EACdL,CACR,CACF,C,uBC9CA,IAAIM,EAAmB,EAAQ,OAI/BjI,EAAOC,QAHP,SAA4BiI,GAC1B,GAAI5H,MAAM+B,QAAQ6F,GAAM,OAAOD,EAAiBC,EAClD,EACqClI,EAAOC,QAAQ2E,YAAa,EAAM5E,EAAOC,QAAiB,QAAID,EAAOC,O,oBCC1GD,EAAOC,QALP,SAAyBkI,EAAUC,GACjC,KAAMD,aAAoBC,GACxB,MAAM,IAAIC,UAAU,oCAExB,EACkCrI,EAAOC,QAAQ2E,YAAa,EAAM5E,EAAOC,QAAiB,QAAID,EAAOC,O,wBCLvG,IAAIqI,EAAgB,EAAQ,OAC5B,SAASC,EAAkBC,EAAQC,GACjC,IAAK,IAAIhD,EAAI,EAAGA,EAAIgD,EAAMrI,OAAQqF,IAAK,CACrC,IAAIiD,EAAaD,EAAMhD,GACvBiD,EAAWC,WAAaD,EAAWC,aAAc,EACjDD,EAAWE,cAAe,EACtB,UAAWF,IAAYA,EAAWG,UAAW,GACjD9G,OAAOoD,eAAeqD,EAAQF,EAAcI,EAAWhG,KAAMgG,EAC/D,CACF,CASA1I,EAAOC,QARP,SAAsBmI,EAAaU,EAAYC,GAM7C,OALID,GAAYP,EAAkBH,EAAY9C,UAAWwD,GACrDC,GAAaR,EAAkBH,EAAaW,GAChDhH,OAAOoD,eAAeiD,EAAa,YAAa,CAC9CS,UAAU,IAELT,CACT,EAC+BpI,EAAOC,QAAQ2E,YAAa,EAAM5E,EAAOC,QAAiB,QAAID,EAAOC,O,wBClBpG,IAAIqI,EAAgB,EAAQ,OAe5BtI,EAAOC,QAdP,SAAyB+I,EAAKtG,EAAKV,GAYjC,OAXAU,EAAM4F,EAAc5F,MACTsG,EACTjH,OAAOoD,eAAe6D,EAAKtG,EAAK,CAC9BV,MAAOA,EACP2G,YAAY,EACZC,cAAc,EACdC,UAAU,IAGZG,EAAItG,GAAOV,EAENgH,CACT,EACkChJ,EAAOC,QAAQ2E,YAAa,EAAM5E,EAAOC,QAAiB,QAAID,EAAOC,O,oBCZvGD,EAAOC,QAHP,SAA0BgJ,GACxB,GAAsB,oBAAXC,QAAmD,MAAzBD,EAAKC,OAAOC,WAA2C,MAAtBF,EAAK,cAAuB,OAAO3I,MAAM8I,KAAKH,EACtH,EACmCjJ,EAAOC,QAAQ2E,YAAa,EAAM5E,EAAOC,QAAiB,QAAID,EAAOC,O,oBCAxGD,EAAOC,QAHP,WACE,MAAM,IAAIoI,UAAU,uIACtB,EACqCrI,EAAOC,QAAQ2E,YAAa,EAAM5E,EAAOC,QAAiB,QAAID,EAAOC,O,wBCH1G,IAAIoJ,EAAoB,EAAQ,MAC5BC,EAAkB,EAAQ,OAC1BC,EAA6B,EAAQ,OACrCC,EAAoB,EAAQ,OAIhCxJ,EAAOC,QAHP,SAA4BiI,GAC1B,OAAOmB,EAAkBnB,IAAQoB,EAAgBpB,IAAQqB,EAA2BrB,IAAQsB,GAC9F,EACqCxJ,EAAOC,QAAQ2E,YAAa,EAAM5E,EAAOC,QAAiB,QAAID,EAAOC,O,wBCP1G,IAAIwJ,EAAU,iBAWdzJ,EAAOC,QAVP,SAAqB4E,EAAGF,GACtB,GAAI,UAAY8E,EAAQ5E,KAAOA,EAAG,OAAOA,EACzC,IAAIH,EAAIG,EAAEqE,OAAOQ,aACjB,QAAI,IAAWhF,EAAG,CAChB,IAAIe,EAAIf,EAAEc,KAAKX,EAAGF,GAAK,WACvB,GAAI,UAAY8E,EAAQhE,GAAI,OAAOA,EACnC,MAAM,IAAI4C,UAAU,+CACtB,CACA,OAAQ,WAAa1D,EAAIgF,OAAS9H,QAAQgD,EAC5C,EAC8B7E,EAAOC,QAAQ2E,YAAa,EAAM5E,EAAOC,QAAiB,QAAID,EAAOC,O,wBCXnG,IAAIwJ,EAAU,iBACVC,EAAc,EAAQ,OAK1B1J,EAAOC,QAJP,SAAuB4E,GACrB,IAAIY,EAAIiE,EAAY7E,EAAG,UACvB,MAAO,UAAY4E,EAAQhE,GAAKA,EAAIkE,OAAOlE,EAC7C,EACgCzF,EAAOC,QAAQ2E,YAAa,EAAM5E,EAAOC,QAAiB,QAAID,EAAOC,O,oBCNrG,SAASwJ,EAAQG,GAGf,OAAQ5J,EAAOC,QAAUwJ,EAAU,mBAAqBP,QAAU,iBAAmBA,OAAOC,SAAW,SAAUS,GAC/G,cAAcA,CAChB,EAAI,SAAUA,GACZ,OAAOA,GAAK,mBAAqBV,QAAUU,EAAEC,cAAgBX,QAAUU,IAAMV,OAAO5D,UAAY,gBAAkBsE,CACpH,EAAG5J,EAAOC,QAAQ2E,YAAa,EAAM5E,EAAOC,QAAiB,QAAID,EAAOC,QAAUwJ,EAAQG,EAC5F,CACA5J,EAAOC,QAAUwJ,EAASzJ,EAAOC,QAAQ2E,YAAa,EAAM5E,EAAOC,QAAiB,QAAID,EAAOC,O","sources":["webpack:///./node_modules/react-native/Libraries/Components/View/ReactNativeStyleAttributes.js","webpack:///./node_modules/react-native/Libraries/StyleSheet/PlatformColorValueTypes.ios.js","webpack:///./node_modules/react-native/Libraries/StyleSheet/normalizeColor.js","webpack:///./node_modules/react-native/Libraries/StyleSheet/processAspectRatio.js","webpack:///./node_modules/react-native/Libraries/StyleSheet/processColor.js","webpack:///./node_modules/react-native/Libraries/StyleSheet/processFontVariant.js","webpack:///./node_modules/react-native/Libraries/StyleSheet/processTransform.js","webpack:///./node_modules/react-native/Libraries/StyleSheet/processTransformOrigin.js","webpack:///./node_modules/react-native/Libraries/Utilities/NativePlatformConstantsIOS.js","webpack:///./node_modules/react-native/Libraries/Utilities/Platform.ios.js","webpack:///./node_modules/react-native/Libraries/Utilities/differ/sizesDiffer.js","webpack:///./node_modules/invariant/browser.js","webpack:///./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack:///./node_modules/@babel/runtime/helpers/classCallCheck.js","webpack:///./node_modules/@babel/runtime/helpers/createClass.js","webpack:///./node_modules/@babel/runtime/helpers/defineProperty.js","webpack:///./node_modules/@babel/runtime/helpers/iterableToArray.js","webpack:///./node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack:///./node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack:///./node_modules/@babel/runtime/helpers/toPrimitive.js","webpack:///./node_modules/@babel/runtime/helpers/toPropertyKey.js","webpack:///./node_modules/@babel/runtime/helpers/typeof.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format strict-local\n * @flow\n */\n\nimport type {AnyAttributeType} from '../../Renderer/shims/ReactNativeTypes';\n\nimport processAspectRatio from '../../StyleSheet/processAspectRatio';\nimport processColor from '../../StyleSheet/processColor';\nimport processFontVariant from '../../StyleSheet/processFontVariant';\nimport processTransform from '../../StyleSheet/processTransform';\nimport processTransformOrigin from '../../StyleSheet/processTransformOrigin';\nimport sizesDiffer from '../../Utilities/differ/sizesDiffer';\n\nconst colorAttributes = {process: processColor};\n\nconst ReactNativeStyleAttributes: {[string]: AnyAttributeType, ...} = {\n  /**\n   * Layout\n   */\n  alignContent: true,\n  alignItems: true,\n  alignSelf: true,\n  aspectRatio: {process: processAspectRatio},\n  borderBottomWidth: true,\n  borderEndWidth: true,\n  borderLeftWidth: true,\n  borderRightWidth: true,\n  borderStartWidth: true,\n  borderTopWidth: true,\n  columnGap: true,\n  borderWidth: true,\n  bottom: true,\n  direction: true,\n  display: true,\n  end: true,\n  flex: true,\n  flexBasis: true,\n  flexDirection: true,\n  flexGrow: true,\n  flexShrink: true,\n  flexWrap: true,\n  gap: true,\n  height: true,\n  inset: true,\n  insetBlock: true,\n  insetBlockEnd: true,\n  insetBlockStart: true,\n  insetInline: true,\n  insetInlineEnd: true,\n  insetInlineStart: true,\n  justifyContent: true,\n  left: true,\n  margin: true,\n  marginBlock: true,\n  marginBlockEnd: true,\n  marginBlockStart: true,\n  marginBottom: true,\n  marginEnd: true,\n  marginHorizontal: true,\n  marginInline: true,\n  marginInlineEnd: true,\n  marginInlineStart: true,\n  marginLeft: true,\n  marginRight: true,\n  marginStart: true,\n  marginTop: true,\n  marginVertical: true,\n  maxHeight: true,\n  maxWidth: true,\n  minHeight: true,\n  minWidth: true,\n  overflow: true,\n  padding: true,\n  paddingBlock: true,\n  paddingBlockEnd: true,\n  paddingBlockStart: true,\n  paddingBottom: true,\n  paddingEnd: true,\n  paddingHorizontal: true,\n  paddingInline: true,\n  paddingInlineEnd: true,\n  paddingInlineStart: true,\n  paddingLeft: true,\n  paddingRight: true,\n  paddingStart: true,\n  paddingTop: true,\n  paddingVertical: true,\n  position: true,\n  right: true,\n  rowGap: true,\n  start: true,\n  top: true,\n  width: true,\n  zIndex: true,\n\n  /**\n   * Shadow\n   */\n  elevation: true,\n  shadowColor: colorAttributes,\n  shadowOffset: {diff: sizesDiffer},\n  shadowOpacity: true,\n  shadowRadius: true,\n\n  /**\n   * Transform\n   */\n  transform: {process: processTransform},\n  transformOrigin: {process: processTransformOrigin},\n\n  /**\n   * View\n   */\n  backfaceVisibility: true,\n  backgroundColor: colorAttributes,\n  borderBlockColor: colorAttributes,\n  borderBlockEndColor: colorAttributes,\n  borderBlockStartColor: colorAttributes,\n  borderBottomColor: colorAttributes,\n  borderBottomEndRadius: true,\n  borderBottomLeftRadius: true,\n  borderBottomRightRadius: true,\n  borderBottomStartRadius: true,\n  borderColor: colorAttributes,\n  borderCurve: true,\n  borderEndColor: colorAttributes,\n  borderEndEndRadius: true,\n  borderEndStartRadius: true,\n  borderLeftColor: colorAttributes,\n  borderRadius: true,\n  borderRightColor: colorAttributes,\n  borderStartColor: colorAttributes,\n  borderStartEndRadius: true,\n  borderStartStartRadius: true,\n  borderStyle: true,\n  borderTopColor: colorAttributes,\n  borderTopEndRadius: true,\n  borderTopLeftRadius: true,\n  borderTopRightRadius: true,\n  borderTopStartRadius: true,\n  opacity: true,\n  pointerEvents: true,\n\n  /**\n   * Text\n   */\n  color: colorAttributes,\n  fontFamily: true,\n  fontSize: true,\n  fontStyle: true,\n  fontVariant: {process: processFontVariant},\n  fontWeight: true,\n  includeFontPadding: true,\n  letterSpacing: true,\n  lineHeight: true,\n  textAlign: true,\n  textAlignVertical: true,\n  textDecorationColor: colorAttributes,\n  textDecorationLine: true,\n  textDecorationStyle: true,\n  textShadowColor: colorAttributes,\n  textShadowOffset: true,\n  textShadowRadius: true,\n  textTransform: true,\n  userSelect: true,\n  verticalAlign: true,\n  writingDirection: true,\n\n  /**\n   * Image\n   */\n  overlayColor: colorAttributes,\n  resizeMode: true,\n  tintColor: colorAttributes,\n  objectFit: true,\n};\n\nmodule.exports = ReactNativeStyleAttributes;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\nimport type {ProcessedColorValue} from './processColor';\nimport type {ColorValue, NativeColorValue} from './StyleSheet';\n\n/** The actual type of the opaque NativeColorValue on iOS platform */\ntype LocalNativeColorValue = {\n  semantic?: Array<string>,\n  dynamic?: {\n    light: ?(ColorValue | ProcessedColorValue),\n    dark: ?(ColorValue | ProcessedColorValue),\n    highContrastLight?: ?(ColorValue | ProcessedColorValue),\n    highContrastDark?: ?(ColorValue | ProcessedColorValue),\n  },\n};\n\nexport const PlatformColor = (...names: Array<string>): ColorValue => {\n  // $FlowExpectedError[incompatible-return] LocalNativeColorValue is the iOS LocalNativeColorValue type\n  return ({semantic: names}: LocalNativeColorValue);\n};\n\nexport type DynamicColorIOSTuplePrivate = {\n  light: ColorValue,\n  dark: ColorValue,\n  highContrastLight?: ColorValue,\n  highContrastDark?: ColorValue,\n};\n\nexport const DynamicColorIOSPrivate = (\n  tuple: DynamicColorIOSTuplePrivate,\n): ColorValue => {\n  return ({\n    dynamic: {\n      light: tuple.light,\n      dark: tuple.dark,\n      highContrastLight: tuple.highContrastLight,\n      highContrastDark: tuple.highContrastDark,\n    },\n    /* $FlowExpectedError[incompatible-return]\n     * LocalNativeColorValue is the actual type of the opaque NativeColorValue on iOS platform */\n  }: LocalNativeColorValue);\n};\n\nconst _normalizeColorObject = (\n  color: LocalNativeColorValue,\n): ?LocalNativeColorValue => {\n  if ('semantic' in color) {\n    // an ios semantic color\n    return color;\n  } else if ('dynamic' in color && color.dynamic !== undefined) {\n    const normalizeColor = require('./normalizeColor');\n\n    // a dynamic, appearance aware color\n    const dynamic = color.dynamic;\n    const dynamicColor: LocalNativeColorValue = {\n      dynamic: {\n        // $FlowFixMe[incompatible-use]\n        light: normalizeColor(dynamic.light),\n        // $FlowFixMe[incompatible-use]\n        dark: normalizeColor(dynamic.dark),\n        // $FlowFixMe[incompatible-use]\n        highContrastLight: normalizeColor(dynamic.highContrastLight),\n        // $FlowFixMe[incompatible-use]\n        highContrastDark: normalizeColor(dynamic.highContrastDark),\n      },\n    };\n    return dynamicColor;\n  }\n  return null;\n};\n\nexport const normalizeColorObject: (\n  color: NativeColorValue,\n  /* $FlowExpectedError[incompatible-type]\n   * LocalNativeColorValue is the actual type of the opaque NativeColorValue on iOS platform */\n) => ?ProcessedColorValue = _normalizeColorObject;\n\nconst _processColorObject = (\n  color: LocalNativeColorValue,\n): ?LocalNativeColorValue => {\n  if ('dynamic' in color && color.dynamic != null) {\n    const processColor = require('./processColor').default;\n    const dynamic = color.dynamic;\n    const dynamicColor: LocalNativeColorValue = {\n      dynamic: {\n        // $FlowFixMe[incompatible-use]\n        light: processColor(dynamic.light),\n        // $FlowFixMe[incompatible-use]\n        dark: processColor(dynamic.dark),\n        // $FlowFixMe[incompatible-use]\n        highContrastLight: processColor(dynamic.highContrastLight),\n        // $FlowFixMe[incompatible-use]\n        highContrastDark: processColor(dynamic.highContrastDark),\n      },\n    };\n    return dynamicColor;\n  }\n  return color;\n};\n\nexport const processColorObject: (\n  color: NativeColorValue,\n  /* $FlowExpectedError[incompatible-type]\n   * LocalNativeColorValue is the actual type of the opaque NativeColorValue on iOS platform */\n) => ?NativeColorValue = _processColorObject;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n/* eslint no-bitwise: 0 */\n\nimport type {ProcessedColorValue} from './processColor';\nimport type {ColorValue} from './StyleSheet';\n\nimport _normalizeColor from '@react-native/normalize-colors';\n\nfunction normalizeColor(\n  color: ?(ColorValue | ProcessedColorValue),\n): ?ProcessedColorValue {\n  if (typeof color === 'object' && color != null) {\n    const {normalizeColorObject} = require('./PlatformColorValueTypes');\n    const normalizedColor = normalizeColorObject(color);\n    if (normalizedColor != null) {\n      return normalizedColor;\n    }\n  }\n\n  if (typeof color === 'string' || typeof color === 'number') {\n    return _normalizeColor(color);\n  }\n}\n\nmodule.exports = normalizeColor;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\nconst invariant = require('invariant');\n\nfunction processAspectRatio(aspectRatio?: number | string): ?number {\n  if (typeof aspectRatio === 'number') {\n    return aspectRatio;\n  }\n  if (typeof aspectRatio !== 'string') {\n    if (__DEV__) {\n      invariant(\n        !aspectRatio,\n        'aspectRatio must either be a number, a ratio string or `auto`. You passed: %s',\n        aspectRatio,\n      );\n    }\n    return;\n  }\n\n  const matches = aspectRatio.split('/').map(s => s.trim());\n\n  if (matches.includes('auto')) {\n    if (__DEV__) {\n      invariant(\n        matches.length,\n        'aspectRatio does not support `auto <ratio>`. You passed: %s',\n        aspectRatio,\n      );\n    }\n    return;\n  }\n\n  const hasNonNumericValues = matches.some(n => Number.isNaN(Number(n)));\n  if (__DEV__) {\n    invariant(\n      !hasNonNumericValues && (matches.length === 1 || matches.length === 2),\n      'aspectRatio must either be a number, a ratio string or `auto`. You passed: %s',\n      aspectRatio,\n    );\n  }\n\n  if (hasNonNumericValues) {\n    return;\n  }\n\n  if (matches.length === 2) {\n    return Number(matches[0]) / Number(matches[1]);\n  }\n\n  return Number(matches[0]);\n}\n\nmodule.exports = processAspectRatio;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\n'use strict';\n\nimport type {ColorValue, NativeColorValue} from './StyleSheet';\n\nconst Platform = require('../Utilities/Platform');\nconst normalizeColor = require('./normalizeColor');\n\nexport type ProcessedColorValue = number | NativeColorValue;\n\n/* eslint no-bitwise: 0 */\nfunction processColor(color?: ?(number | ColorValue)): ?ProcessedColorValue {\n  if (color === undefined || color === null) {\n    return color;\n  }\n\n  let normalizedColor = normalizeColor(color);\n  if (normalizedColor === null || normalizedColor === undefined) {\n    return undefined;\n  }\n\n  if (typeof normalizedColor === 'object') {\n    const processColorObject =\n      require('./PlatformColorValueTypes').processColorObject;\n\n    const processedColorObj = processColorObject(normalizedColor);\n\n    if (processedColorObj != null) {\n      return processedColorObj;\n    }\n  }\n\n  if (typeof normalizedColor !== 'number') {\n    return null;\n  }\n\n  // Converts 0xrrggbbaa into 0xaarrggbb\n  normalizedColor = ((normalizedColor << 24) | (normalizedColor >>> 8)) >>> 0;\n\n  if (Platform.OS === 'android') {\n    // Android use 32 bit *signed* integer to represent the color\n    // We utilize the fact that bitwise operations in JS also operates on\n    // signed 32 bit integers, so that we can use those to convert from\n    // *unsigned* to *signed* 32bit int that way.\n    normalizedColor = normalizedColor | 0x0;\n  }\n  return normalizedColor;\n}\n\nexport default processColor;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\nimport type {____FontVariantArray_Internal} from './StyleSheetTypes';\n\nfunction processFontVariant(\n  fontVariant: ____FontVariantArray_Internal | string,\n): ?____FontVariantArray_Internal {\n  if (Array.isArray(fontVariant)) {\n    return fontVariant;\n  }\n\n  // $FlowFixMe[incompatible-type]\n  const match: ?____FontVariantArray_Internal = fontVariant\n    .split(' ')\n    .filter(Boolean);\n\n  return match;\n}\n\nmodule.exports = processFontVariant;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\nconst stringifySafe = require('../Utilities/stringifySafe').default;\nconst invariant = require('invariant');\n\n/**\n * Generate a transform matrix based on the provided transforms, and use that\n * within the style object instead.\n *\n * This allows us to provide an API that is similar to CSS, where transforms may\n * be applied in an arbitrary order, and yet have a universal, singular\n * interface to native code.\n */\nfunction processTransform(\n  transform: Array<Object> | string,\n): Array<Object> | Array<number> {\n  if (typeof transform === 'string') {\n    const regex = new RegExp(/(\\w+)\\(([^)]+)\\)/g);\n    let transformArray: Array<Object> = [];\n    let matches;\n\n    while ((matches = regex.exec(transform))) {\n      const {key, value} = _getKeyAndValueFromCSSTransform(\n        matches[1],\n        matches[2],\n      );\n\n      if (value !== undefined) {\n        transformArray.push({[key]: value});\n      }\n    }\n    transform = transformArray;\n  }\n\n  if (__DEV__) {\n    _validateTransforms(transform);\n  }\n\n  return transform;\n}\n\nconst _getKeyAndValueFromCSSTransform: (\n  key:\n    | string\n    | $TEMPORARY$string<'matrix'>\n    | $TEMPORARY$string<'perspective'>\n    | $TEMPORARY$string<'rotate'>\n    | $TEMPORARY$string<'rotateX'>\n    | $TEMPORARY$string<'rotateY'>\n    | $TEMPORARY$string<'rotateZ'>\n    | $TEMPORARY$string<'scale'>\n    | $TEMPORARY$string<'scaleX'>\n    | $TEMPORARY$string<'scaleY'>\n    | $TEMPORARY$string<'skewX'>\n    | $TEMPORARY$string<'skewY'>\n    | $TEMPORARY$string<'translate'>\n    | $TEMPORARY$string<'translate3d'>\n    | $TEMPORARY$string<'translateX'>\n    | $TEMPORARY$string<'translateY'>,\n  args: string,\n) => {key: string, value?: number[] | number | string} = (key, args) => {\n  const argsWithUnitsRegex = new RegExp(/([+-]?\\d+(\\.\\d+)?)([a-zA-Z]+)?/g);\n\n  switch (key) {\n    case 'matrix':\n      return {key, value: args.match(/[+-]?\\d+(\\.\\d+)?/g)?.map(Number)};\n    case 'translate':\n    case 'translate3d':\n      const parsedArgs = [];\n      let missingUnitOfMeasurement = false;\n\n      let matches;\n      while ((matches = argsWithUnitsRegex.exec(args))) {\n        const value = Number(matches[1]);\n        const unitOfMeasurement = matches[3];\n\n        if (value !== 0 && !unitOfMeasurement) {\n          missingUnitOfMeasurement = true;\n        }\n\n        parsedArgs.push(value);\n      }\n\n      if (__DEV__) {\n        invariant(\n          !missingUnitOfMeasurement,\n          `Transform with key ${key} must have units unless the provided value is 0, found %s`,\n          `${key}(${args})`,\n        );\n\n        if (key === 'translate') {\n          invariant(\n            parsedArgs?.length === 1 || parsedArgs?.length === 2,\n            'Transform with key translate must be an string with 1 or 2 parameters, found %s: %s',\n            parsedArgs?.length,\n            `${key}(${args})`,\n          );\n        } else {\n          invariant(\n            parsedArgs?.length === 3,\n            'Transform with key translate3d must be an string with 3 parameters, found %s: %s',\n            parsedArgs?.length,\n            `${key}(${args})`,\n          );\n        }\n      }\n\n      if (parsedArgs?.length === 1) {\n        parsedArgs.push(0);\n      }\n\n      return {key: 'translate', value: parsedArgs};\n    case 'translateX':\n    case 'translateY':\n    case 'perspective':\n      const argMatches = argsWithUnitsRegex.exec(args);\n\n      if (!argMatches?.length) {\n        return {key, value: undefined};\n      }\n\n      const value = Number(argMatches[1]);\n      const unitOfMeasurement = argMatches[3];\n\n      if (__DEV__) {\n        invariant(\n          value === 0 || unitOfMeasurement,\n          `Transform with key ${key} must have units unless the provided value is 0, found %s`,\n          `${key}(${args})`,\n        );\n      }\n\n      return {key, value};\n\n    default:\n      return {key, value: !isNaN(args) ? Number(args) : args};\n  }\n};\n\nfunction _validateTransforms(transform: Array<Object>): void {\n  transform.forEach(transformation => {\n    const keys = Object.keys(transformation);\n    invariant(\n      keys.length === 1,\n      'You must specify exactly one property per transform object. Passed properties: %s',\n      stringifySafe(transformation),\n    );\n    const key = keys[0];\n    const value = transformation[key];\n    _validateTransform(key, value, transformation);\n  });\n}\n\nfunction _validateTransform(\n  key:\n    | string\n    | $TEMPORARY$string<'matrix'>\n    | $TEMPORARY$string<'perspective'>\n    | $TEMPORARY$string<'rotate'>\n    | $TEMPORARY$string<'rotateX'>\n    | $TEMPORARY$string<'rotateY'>\n    | $TEMPORARY$string<'rotateZ'>\n    | $TEMPORARY$string<'scale'>\n    | $TEMPORARY$string<'scaleX'>\n    | $TEMPORARY$string<'scaleY'>\n    | $TEMPORARY$string<'skewX'>\n    | $TEMPORARY$string<'skewY'>\n    | $TEMPORARY$string<'translate'>\n    | $TEMPORARY$string<'translateX'>\n    | $TEMPORARY$string<'translateY'>,\n  value: any | number | string,\n  transformation: any,\n) {\n  invariant(\n    !value.getValue,\n    'You passed an Animated.Value to a normal component. ' +\n      'You need to wrap that component in an Animated. For example, ' +\n      'replace <View /> by <Animated.View />.',\n  );\n\n  const multivalueTransforms = ['matrix', 'translate'];\n  if (multivalueTransforms.indexOf(key) !== -1) {\n    invariant(\n      Array.isArray(value),\n      'Transform with key of %s must have an array as the value: %s',\n      key,\n      stringifySafe(transformation),\n    );\n  }\n  switch (key) {\n    case 'matrix':\n      invariant(\n        value.length === 9 || value.length === 16,\n        'Matrix transform must have a length of 9 (2d) or 16 (3d). ' +\n          'Provided matrix has a length of %s: %s',\n        /* $FlowFixMe[prop-missing] (>=0.84.0 site=react_native_fb) This\n         * comment suppresses an error found when Flow v0.84 was deployed. To\n         * see the error, delete this comment and run Flow. */\n        value.length,\n        stringifySafe(transformation),\n      );\n      break;\n    case 'translate':\n      invariant(\n        value.length === 2 || value.length === 3,\n        'Transform with key translate must be an array of length 2 or 3, found %s: %s',\n        /* $FlowFixMe[prop-missing] (>=0.84.0 site=react_native_fb) This\n         * comment suppresses an error found when Flow v0.84 was deployed. To\n         * see the error, delete this comment and run Flow. */\n        value.length,\n        stringifySafe(transformation),\n      );\n      break;\n    case 'rotateX':\n    case 'rotateY':\n    case 'rotateZ':\n    case 'rotate':\n    case 'skewX':\n    case 'skewY':\n      invariant(\n        typeof value === 'string',\n        'Transform with key of \"%s\" must be a string: %s',\n        key,\n        stringifySafe(transformation),\n      );\n      invariant(\n        value.indexOf('deg') > -1 || value.indexOf('rad') > -1,\n        'Rotate transform must be expressed in degrees (deg) or radians ' +\n          '(rad): %s',\n        stringifySafe(transformation),\n      );\n      break;\n    case 'perspective':\n      invariant(\n        typeof value === 'number',\n        'Transform with key of \"%s\" must be a number: %s',\n        key,\n        stringifySafe(transformation),\n      );\n      invariant(\n        value !== 0,\n        'Transform with key of \"%s\" cannot be zero: %s',\n        key,\n        stringifySafe(transformation),\n      );\n      break;\n    case 'translateX':\n    case 'translateY':\n    case 'scale':\n    case 'scaleX':\n    case 'scaleY':\n      invariant(\n        typeof value === 'number',\n        'Transform with key of \"%s\" must be a number: %s',\n        key,\n        stringifySafe(transformation),\n      );\n      break;\n    default:\n      invariant(\n        false,\n        'Invalid transform %s: %s',\n        key,\n        stringifySafe(transformation),\n      );\n  }\n}\n\nmodule.exports = processTransform;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\nimport invariant from 'invariant';\n\nconst INDEX_X = 0;\nconst INDEX_Y = 1;\nconst INDEX_Z = 2;\n\n/* eslint-disable no-labels */\nexport default function processTransformOrigin(\n  transformOrigin: Array<string | number> | string,\n): Array<string | number> {\n  if (typeof transformOrigin === 'string') {\n    const transformOriginString = transformOrigin;\n    const regex = /(top|bottom|left|right|center|\\d+(?:%|px)|0)/gi;\n    const transformOriginArray: Array<string | number> = ['50%', '50%', 0];\n\n    let index = INDEX_X;\n    let matches;\n    outer: while ((matches = regex.exec(transformOriginString))) {\n      let nextIndex = index + 1;\n\n      const value = matches[0];\n      const valueLower = value.toLowerCase();\n\n      switch (valueLower) {\n        case 'left':\n        case 'right': {\n          invariant(\n            index === INDEX_X,\n            'Transform-origin %s can only be used for x-position',\n            value,\n          );\n          transformOriginArray[INDEX_X] = valueLower === 'left' ? 0 : '100%';\n          break;\n        }\n        case 'top':\n        case 'bottom': {\n          invariant(\n            index !== INDEX_Z,\n            'Transform-origin %s can only be used for y-position',\n            value,\n          );\n          transformOriginArray[INDEX_Y] = valueLower === 'top' ? 0 : '100%';\n\n          // Handle [[ center | left | right ] && [ center | top | bottom ]] <length>?\n          if (index === INDEX_X) {\n            const horizontal = regex.exec(transformOriginString);\n            if (horizontal == null) {\n              break outer;\n            }\n\n            switch (horizontal[0].toLowerCase()) {\n              case 'left':\n                transformOriginArray[INDEX_X] = 0;\n                break;\n              case 'right':\n                transformOriginArray[INDEX_X] = '100%';\n                break;\n              case 'center':\n                transformOriginArray[INDEX_X] = '50%';\n                break;\n              default:\n                invariant(\n                  false,\n                  'Could not parse transform-origin: %s',\n                  transformOriginString,\n                );\n            }\n            nextIndex = INDEX_Z;\n          }\n\n          break;\n        }\n        case 'center': {\n          invariant(\n            index !== INDEX_Z,\n            'Transform-origin value %s cannot be used for z-position',\n            value,\n          );\n          transformOriginArray[index] = '50%';\n          break;\n        }\n        default: {\n          if (value.endsWith('%')) {\n            transformOriginArray[index] = value;\n          } else {\n            transformOriginArray[index] = parseFloat(value); // Remove `px`\n          }\n          break;\n        }\n      }\n\n      index = nextIndex;\n    }\n\n    transformOrigin = transformOriginArray;\n  }\n\n  if (__DEV__) {\n    _validateTransformOrigin(transformOrigin);\n  }\n\n  return transformOrigin;\n}\n\nfunction _validateTransformOrigin(transformOrigin: Array<string | number>) {\n  invariant(\n    transformOrigin.length === 3,\n    'Transform origin must have exactly 3 values.',\n  );\n  const [x, y, z] = transformOrigin;\n  invariant(\n    typeof x === 'number' || (typeof x === 'string' && x.endsWith('%')),\n    'Transform origin x-position must be a number. Passed value: %s.',\n    x,\n  );\n  invariant(\n    typeof y === 'number' || (typeof y === 'string' && y.endsWith('%')),\n    'Transform origin y-position must be a number. Passed value: %s.',\n    y,\n  );\n  invariant(\n    typeof z === 'number',\n    'Transform origin z-position must be a number. Passed value: %s.',\n    z,\n  );\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nimport type {TurboModule} from '../TurboModule/RCTExport';\n\nimport * as TurboModuleRegistry from '../TurboModule/TurboModuleRegistry';\n\nexport type PlatformConstantsIOS = {|\n  isTesting: boolean,\n  isDisableAnimations?: boolean,\n  reactNativeVersion: {|\n    major: number,\n    minor: number,\n    patch: number,\n    prerelease: ?number,\n  |},\n  forceTouchAvailable: boolean,\n  osVersion: string,\n  systemName: string,\n  interfaceIdiom: string,\n|};\n\nexport interface Spec extends TurboModule {\n  +getConstants: () => PlatformConstantsIOS;\n}\n\nexport default (TurboModuleRegistry.getEnforcing<Spec>(\n  'PlatformConstants',\n): Spec);\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict\n */\n\nimport type {\n  Platform as PlatformType,\n  PlatformSelectSpec,\n} from './Platform.flow';\n\nimport NativePlatformConstantsIOS from './NativePlatformConstantsIOS';\n\nconst Platform: PlatformType = {\n  __constants: null,\n  OS: 'ios',\n  // $FlowFixMe[unsafe-getters-setters]\n  get Version(): string {\n    // $FlowFixMe[object-this-reference]\n    return this.constants.osVersion;\n  },\n  // $FlowFixMe[unsafe-getters-setters]\n  get constants(): {|\n    forceTouchAvailable: boolean,\n    interfaceIdiom: string,\n    isTesting: boolean,\n    isDisableAnimations?: boolean,\n    osVersion: string,\n    reactNativeVersion: {|\n      major: number,\n      minor: number,\n      patch: number,\n      prerelease: ?number,\n    |},\n    systemName: string,\n  |} {\n    // $FlowFixMe[object-this-reference]\n    if (this.__constants == null) {\n      // $FlowFixMe[object-this-reference]\n      this.__constants = NativePlatformConstantsIOS.getConstants();\n    }\n    // $FlowFixMe[object-this-reference]\n    return this.__constants;\n  },\n  // $FlowFixMe[unsafe-getters-setters]\n  get isPad(): boolean {\n    // $FlowFixMe[object-this-reference]\n    return this.constants.interfaceIdiom === 'pad';\n  },\n  // $FlowFixMe[unsafe-getters-setters]\n  get isTV(): boolean {\n    // $FlowFixMe[object-this-reference]\n    return this.constants.interfaceIdiom === 'tv';\n  },\n  // $FlowFixMe[unsafe-getters-setters]\n  get isTesting(): boolean {\n    if (__DEV__) {\n      // $FlowFixMe[object-this-reference]\n      return this.constants.isTesting;\n    }\n    return false;\n  },\n  // $FlowFixMe[unsafe-getters-setters]\n  get isDisableAnimations(): boolean {\n    // $FlowFixMe[object-this-reference]\n    return this.constants.isDisableAnimations ?? this.isTesting;\n  },\n  select: <T>(spec: PlatformSelectSpec<T>): T =>\n    // $FlowFixMe[incompatible-return]\n    'ios' in spec ? spec.ios : 'native' in spec ? spec.native : spec.default,\n};\n\nmodule.exports = Platform;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\n'use strict';\n\nconst dummySize = {width: undefined, height: undefined};\ntype Size = {width: ?number, height: ?number};\n\nconst sizesDiffer = function (one: Size, two: Size): boolean {\n  const defaultedOne = one || dummySize;\n  const defaultedTwo = two || dummySize;\n  return (\n    defaultedOne !== defaultedTwo &&\n    (defaultedOne.width !== defaultedTwo.width ||\n      defaultedOne.height !== defaultedTwo.height)\n  );\n};\n\nmodule.exports = sizesDiffer;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar invariant = function(condition, format, a, b, c, d, e, f) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  }\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error(\n        'Minified exception occurred; use the non-minified dev environment ' +\n        'for the full error message and additional helpful warnings.'\n      );\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(\n        format.replace(/%s/g, function() { return args[argIndex++]; })\n      );\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n};\n\nmodule.exports = invariant;\n","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\nmodule.exports = _arrayWithoutHoles, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nmodule.exports = _classCallCheck, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var toPropertyKey = require(\"./toPropertyKey.js\");\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\nmodule.exports = _createClass, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var toPropertyKey = require(\"./toPropertyKey.js\");\nfunction _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nmodule.exports = _defineProperty, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nmodule.exports = _iterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nmodule.exports = _nonIterableSpread, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayWithoutHoles = require(\"./arrayWithoutHoles.js\");\nvar iterableToArray = require(\"./iterableToArray.js\");\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\nvar nonIterableSpread = require(\"./nonIterableSpread.js\");\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\nmodule.exports = _toConsumableArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nmodule.exports = toPrimitive, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nvar toPrimitive = require(\"./toPrimitive.js\");\nfunction toPropertyKey(t) {\n  var i = toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : String(i);\n}\nmodule.exports = toPropertyKey, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return (module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports), _typeof(o);\n}\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;"],"names":["_processAspectRatio","_interopRequireDefault","require","_processColor","_processFontVariant","_processTransform","_processTransformOrigin","_sizesDiffer","colorAttributes","process","processColor","ReactNativeStyleAttributes","alignContent","alignItems","alignSelf","aspectRatio","processAspectRatio","borderBottomWidth","borderEndWidth","borderLeftWidth","borderRightWidth","borderStartWidth","borderTopWidth","columnGap","borderWidth","bottom","direction","display","end","flex","flexBasis","flexDirection","flexGrow","flexShrink","flexWrap","gap","height","inset","insetBlock","insetBlockEnd","insetBlockStart","insetInline","insetInlineEnd","insetInlineStart","justifyContent","left","margin","marginBlock","marginBlockEnd","marginBlockStart","marginBottom","marginEnd","marginHorizontal","marginInline","marginInlineEnd","marginInlineStart","marginLeft","marginRight","marginStart","marginTop","marginVertical","maxHeight","maxWidth","minHeight","minWidth","overflow","padding","paddingBlock","paddingBlockEnd","paddingBlockStart","paddingBottom","paddingEnd","paddingHorizontal","paddingInline","paddingInlineEnd","paddingInlineStart","paddingLeft","paddingRight","paddingStart","paddingTop","paddingVertical","position","right","rowGap","start","top","width","zIndex","elevation","shadowColor","shadowOffset","diff","sizesDiffer","shadowOpacity","shadowRadius","transform","processTransform","transformOrigin","processTransformOrigin","backfaceVisibility","backgroundColor","borderBlockColor","borderBlockEndColor","borderBlockStartColor","borderBottomColor","borderBottomEndRadius","borderBottomLeftRadius","borderBottomRightRadius","borderBottomStartRadius","borderColor","borderCurve","borderEndColor","borderEndEndRadius","borderEndStartRadius","borderLeftColor","borderRadius","borderRightColor","borderStartColor","borderStartEndRadius","borderStartStartRadius","borderStyle","borderTopColor","borderTopEndRadius","borderTopLeftRadius","borderTopRightRadius","borderTopStartRadius","opacity","pointerEvents","color","fontFamily","fontSize","fontStyle","fontVariant","processFontVariant","fontWeight","includeFontPadding","letterSpacing","lineHeight","textAlign","textAlignVertical","textDecorationColor","textDecorationLine","textDecorationStyle","textShadowColor","textShadowOffset","textShadowRadius","textTransform","userSelect","verticalAlign","writingDirection","overlayColor","resizeMode","tintColor","objectFit","module","exports","_len","arguments","length","names","Array","_key","semantic","tuple","dynamic","light","dark","highContrastLight","highContrastDark","undefined","normalizeColor","_normalizeColors","normalizedColor","normalizeColorObject","_normalizeColor","matches","split","map","s","trim","includes","some","n","Number","isNaN","Object","value","Platform","processedColorObj","processColorObject","OS","isArray","filter","Boolean","_defineProperty2","_getKeyAndValueFromCSSTransform","key","args","_args$match","argsWithUnitsRegex","RegExp","match","parsedArgs","exec","unitOfMeasurement","push","argMatches","regex","transformArray","_getKeyAndValueFromCS","default","transformOriginString","transformOriginArray","index","INDEX_X","outer","nextIndex","valueLower","toLowerCase","invariant","INDEX_Z","INDEX_Y","horizontal","endsWith","parseFloat","__DEV__","_invariant","TurboModuleRegistry","e","r","__esModule","t","_getRequireWildcardCache","has","get","__proto__","a","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","_interopRequireWildcard","WeakMap","getEnforcing","_NativePlatformConstantsIOS","__constants","Version","this","constants","osVersion","NativePlatformConstantsIOS","getConstants","isPad","interfaceIdiom","isTV","isTesting","isDisableAnimations","_this$constants$isDis","select","spec","ios","native","dummySize","one","two","defaultedOne","defaultedTwo","condition","format","b","c","d","f","error","Error","argIndex","replace","name","framesToPop","arrayLikeToArray","arr","instance","Constructor","TypeError","toPropertyKey","_defineProperties","target","props","descriptor","enumerable","configurable","writable","protoProps","staticProps","obj","iter","Symbol","iterator","from","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","_typeof","toPrimitive","String","o","constructor"],"sourceRoot":""}