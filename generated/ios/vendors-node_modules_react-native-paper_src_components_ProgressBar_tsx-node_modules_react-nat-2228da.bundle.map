{"version":3,"file":"vendors-node_modules_react-native-paper_src_components_ProgressBar_tsx-node_modules_react-nat-2228da.bundle","mappings":"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","sources":["webpack:///./node_modules/react-native-paper/src/components/Portal/Portal.tsx","webpack:///./node_modules/react-native-paper/src/components/Portal/PortalConsumer.tsx","webpack:///./node_modules/react-native-paper/src/components/Portal/PortalHost.tsx","webpack:///./node_modules/react-native-paper/src/components/Portal/PortalManager.tsx","webpack:///./node_modules/react-native-paper/src/components/ProgressBar.tsx","webpack:///./node_modules/react-native-paper/src/components/RadioButton/RadioButton.tsx","webpack:///./node_modules/react-native-paper/src/components/RadioButton/RadioButtonAndroid.tsx","webpack:///./node_modules/react-native-paper/src/components/RadioButton/RadioButtonGroup.tsx","webpack:///./node_modules/react-native-paper/src/components/RadioButton/RadioButtonIOS.tsx","webpack:///./node_modules/react-native-paper/src/components/RadioButton/RadioButtonItem.tsx","webpack:///./node_modules/react-native-paper/src/components/RadioButton/index.ts","webpack:///./node_modules/react-native-paper/src/components/RadioButton/utils.ts","webpack:///./node_modules/react-native-paper/src/components/Searchbar.tsx","webpack:///./node_modules/react-native-paper/src/components/SegmentedButtons/SegmentedButtonItem.tsx","webpack:///./node_modules/react-native-paper/src/components/SegmentedButtons/SegmentedButtons.tsx","webpack:///./node_modules/react-native-paper/src/components/SegmentedButtons/utils.ts","webpack:///./node_modules/react-native-paper/src/components/Snackbar.tsx","webpack:///./node_modules/react-native-paper/src/components/Surface.tsx","webpack:///./node_modules/react-native-paper/src/components/Switch/Switch.tsx","webpack:///./node_modules/react-native-paper/src/components/Switch/utils.ts","webpack:///./node_modules/react-native-paper/src/components/TextInput/Addons/Outline.tsx","webpack:///./node_modules/react-native-paper/src/components/TextInput/Addons/Underline.tsx","webpack:///./node_modules/react-native-paper/src/components/TextInput/Adornment/TextInputAdornment.tsx","webpack:///./node_modules/react-native-paper/src/components/TextInput/Adornment/TextInputAffix.tsx","webpack:///./node_modules/react-native-paper/src/components/TextInput/Adornment/TextInputIcon.tsx","webpack:///./node_modules/react-native-paper/src/components/TextInput/Adornment/enums.tsx","webpack:///./node_modules/react-native-paper/src/components/TextInput/Adornment/utils.ts","webpack:///./node_modules/react-native-paper/src/components/TextInput/Label/InputLabel.tsx","webpack:///./node_modules/react-native-paper/src/components/TextInput/Label/LabelBackground.tsx","webpack:///./node_modules/react-native-paper/src/components/TextInput/TextInput.tsx","webpack:///./node_modules/react-native-paper/src/components/TextInput/TextInputFlat.tsx","webpack:///./node_modules/react-native-paper/src/components/TextInput/TextInputOutlined.tsx","webpack:///./node_modules/react-native-paper/src/components/TextInput/constants.tsx","webpack:///./node_modules/react-native-paper/src/components/TextInput/helpers.tsx","webpack:///./node_modules/react-native-paper/src/components/ToggleButton/ToggleButton.tsx","webpack:///./node_modules/react-native-paper/src/components/ToggleButton/ToggleButtonGroup.tsx","webpack:///./node_modules/react-native-paper/src/components/ToggleButton/ToggleButtonRow.tsx","webpack:///./node_modules/react-native-paper/src/components/ToggleButton/index.ts","webpack:///./node_modules/react-native-paper/src/components/ToggleButton/utils.ts","webpack:///./node_modules/react-native-paper/src/components/Tooltip/Tooltip.tsx","webpack:///./node_modules/react-native-paper/src/components/Tooltip/utils.ts","webpack:///./node_modules/react-native-paper/src/components/TouchableRipple/Pressable.tsx","webpack:///./node_modules/react-native-paper/src/components/TouchableRipple/TouchableRipple.native.tsx","webpack:///./node_modules/react-native-paper/src/components/TouchableRipple/utils.ts","webpack:///./node_modules/react-native-paper/src/components/Typography/AnimatedText.tsx","webpack:///./node_modules/react-native-paper/src/components/Typography/Text.tsx","webpack:///./node_modules/react-native-paper/src/components/Typography/v2/Caption.tsx","webpack:///./node_modules/react-native-paper/src/components/Typography/v2/Headline.tsx","webpack:///./node_modules/react-native-paper/src/components/Typography/v2/Paragraph.tsx","webpack:///./node_modules/react-native-paper/src/components/Typography/v2/StyledText.tsx","webpack:///./node_modules/react-native-paper/src/components/Typography/v2/Subheading.tsx","webpack:///./node_modules/react-native-paper/src/components/Typography/v2/Text.tsx","webpack:///./node_modules/react-native-paper/src/components/Typography/v2/Title.tsx","webpack:///./node_modules/react-native-paper/src/components/Typography/v2/index.ts","webpack:///./node_modules/react-native-paper/src/constants.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport type { InternalTheme } from 'src/types';\n\nimport PortalConsumer from './PortalConsumer';\nimport PortalHost, { PortalContext, PortalMethods } from './PortalHost';\nimport {\n  Consumer as SettingsConsumer,\n  Provider as SettingsProvider,\n} from '../../core/settings';\nimport { ThemeProvider, withInternalTheme } from '../../core/theming';\n\nexport type Props = {\n  /**\n   * Content of the `Portal`.\n   */\n  children: React.ReactNode;\n  /**\n   * @optional\n   */\n  theme: InternalTheme;\n};\n\n/**\n * Portal allows rendering a component at a different place in the parent tree.\n * You can use it to render content which should appear above other elements, similar to `Modal`.\n * It requires a [`Portal.Host`](PortalHost) component to be rendered somewhere in the parent tree.\n * Note that if you're using the `Provider` component, this already includes a `Portal.Host`.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Portal, Text } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <Portal>\n *     <Text>This is rendered at a different place</Text>\n *   </Portal>\n * );\n *\n * export default MyComponent;\n * ```\n */\nclass Portal extends React.Component<Props> {\n  // @component ./PortalHost.tsx\n  static Host = PortalHost;\n\n  render() {\n    const { children, theme } = this.props;\n\n    return (\n      <SettingsConsumer>\n        {(settings) => (\n          <PortalContext.Consumer>\n            {(manager) => (\n              <PortalConsumer manager={manager as PortalMethods}>\n                <SettingsProvider value={settings}>\n                  <ThemeProvider theme={theme}>{children}</ThemeProvider>\n                </SettingsProvider>\n              </PortalConsumer>\n            )}\n          </PortalContext.Consumer>\n        )}\n      </SettingsConsumer>\n    );\n  }\n}\n\nexport default withInternalTheme(Portal);\n","import * as React from 'react';\n\nimport type { PortalMethods } from './PortalHost';\n\ntype Props = {\n  manager: PortalMethods;\n  children: React.ReactNode;\n};\n\nexport default class PortalConsumer extends React.Component<Props> {\n  componentDidMount() {\n    this.checkManager();\n\n    this.key = this.props.manager.mount(this.props.children);\n  }\n\n  componentDidUpdate() {\n    this.checkManager();\n\n    this.props.manager.update(this.key, this.props.children);\n  }\n\n  componentWillUnmount() {\n    this.checkManager();\n\n    this.props.manager.unmount(this.key);\n  }\n\n  private key: any;\n\n  private checkManager() {\n    if (!this.props.manager) {\n      throw new Error(\n        'Looks like you forgot to wrap your root component with `Provider` component from `react-native-paper`.\\n\\n' +\n          \"Please read our getting-started guide and make sure you've followed all the required steps.\\n\\n\" +\n          'https://callstack.github.io/react-native-paper/docs/guides/getting-started'\n      );\n    }\n  }\n\n  render() {\n    return null;\n  }\n}\n","import * as React from 'react';\nimport { View, StyleSheet } from 'react-native';\n\nimport PortalManager from './PortalManager';\n\nexport type Props = {\n  children: React.ReactNode;\n};\n\ntype Operation =\n  | { type: 'mount'; key: number; children: React.ReactNode }\n  | { type: 'update'; key: number; children: React.ReactNode }\n  | { type: 'unmount'; key: number };\n\nexport type PortalMethods = {\n  mount: (children: React.ReactNode) => number;\n  update: (key: number, children: React.ReactNode) => void;\n  unmount: (key: number) => void;\n};\n\nexport const PortalContext = React.createContext<PortalMethods>(null as any);\n\n/**\n * Portal host renders all of its children `Portal` elements.\n * For example, you can wrap a screen in `Portal.Host` to render items above the screen.\n * If you're using the `Provider` component, it already includes `Portal.Host`.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Text } from 'react-native';\n * import { Portal } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <Portal.Host>\n *     <Text>Content of the app</Text>\n *   </Portal.Host>\n * );\n *\n * export default MyComponent;\n * ```\n *\n * Here any `Portal` elements under `<App />` are rendered alongside `<App />` and will appear above `<App />` like a `Modal`.\n */\nexport default class PortalHost extends React.Component<Props> {\n  static displayName = 'Portal.Host';\n\n  componentDidMount() {\n    const manager = this.manager;\n    const queue = this.queue;\n\n    while (queue.length && manager) {\n      const action = queue.pop();\n      if (action) {\n        // eslint-disable-next-line default-case\n        switch (action.type) {\n          case 'mount':\n            manager.mount(action.key, action.children);\n            break;\n          case 'update':\n            manager.update(action.key, action.children);\n            break;\n          case 'unmount':\n            manager.unmount(action.key);\n            break;\n        }\n      }\n    }\n  }\n\n  private setManager = (manager: PortalManager | undefined | null) => {\n    this.manager = manager;\n  };\n\n  private mount = (children: React.ReactNode) => {\n    const key = this.nextKey++;\n\n    if (this.manager) {\n      this.manager.mount(key, children);\n    } else {\n      this.queue.push({ type: 'mount', key, children });\n    }\n\n    return key;\n  };\n\n  private update = (key: number, children: React.ReactNode) => {\n    if (this.manager) {\n      this.manager.update(key, children);\n    } else {\n      const op: Operation = { type: 'mount', key, children };\n      const index = this.queue.findIndex(\n        (o) => o.type === 'mount' || (o.type === 'update' && o.key === key)\n      );\n\n      if (index > -1) {\n        this.queue[index] = op;\n      } else {\n        this.queue.push(op as Operation);\n      }\n    }\n  };\n\n  private unmount = (key: number) => {\n    if (this.manager) {\n      this.manager.unmount(key);\n    } else {\n      this.queue.push({ type: 'unmount', key });\n    }\n  };\n\n  private nextKey = 0;\n  private queue: Operation[] = [];\n  private manager: PortalManager | null | undefined;\n\n  render() {\n    return (\n      <PortalContext.Provider\n        value={{\n          mount: this.mount,\n          update: this.update,\n          unmount: this.unmount,\n        }}\n      >\n        {/* Need collapsable=false here to clip the elevations, otherwise they appear above Portal components */}\n        <View\n          style={styles.container}\n          collapsable={false}\n          pointerEvents=\"box-none\"\n        >\n          {this.props.children}\n        </View>\n        <PortalManager ref={this.setManager} />\n      </PortalContext.Provider>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n});\n","import * as React from 'react';\nimport { View, StyleSheet } from 'react-native';\n\ntype State = {\n  portals: Array<{\n    key: number;\n    children: React.ReactNode;\n  }>;\n};\n\n/**\n * Portal host is the component which actually renders all Portals.\n */\nexport default class PortalManager extends React.PureComponent<{}, State> {\n  state: State = {\n    portals: [],\n  };\n\n  mount = (key: number, children: React.ReactNode) => {\n    this.setState((state) => ({\n      portals: [...state.portals, { key, children }],\n    }));\n  };\n\n  update = (key: number, children: React.ReactNode) =>\n    this.setState((state) => ({\n      portals: state.portals.map((item) => {\n        if (item.key === key) {\n          return { ...item, children };\n        }\n        return item;\n      }),\n    }));\n\n  unmount = (key: number) =>\n    this.setState((state) => ({\n      portals: state.portals.filter((item) => item.key !== key),\n    }));\n\n  render() {\n    return this.state.portals.map(({ key, children }) => (\n      <View\n        key={key}\n        collapsable={\n          false /* Need collapsable=false here to clip the elevations, otherwise they appear above sibling components */\n        }\n        pointerEvents=\"box-none\"\n        style={StyleSheet.absoluteFill}\n      >\n        {children}\n      </View>\n    ));\n  }\n}\n","import * as React from 'react';\nimport {\n  Animated,\n  I18nManager,\n  LayoutChangeEvent,\n  Platform,\n  StyleProp,\n  StyleSheet,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport setColor from 'color';\n\nimport { useInternalTheme } from '../core/theming';\nimport type { ThemeProp } from '../types';\n\nexport type Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * Animated value (between 0 and 1). This tells the progress bar to rely on this value to animate it.\n   * Note: It should not be used in parallel with the `progress` prop.\n   */\n  animatedValue?: number;\n  /**\n   * Progress value (between 0 and 1).\n   * Note: It should not be used in parallel with the `animatedValue` prop.\n   */\n  progress?: number;\n  /**\n   * Color of the progress bar. The background color will be calculated based on this but you can change it by passing `backgroundColor` to `style` prop.\n   */\n  color?: string;\n  /**\n   * If the progress bar will show indeterminate progress.\n   */\n  indeterminate?: boolean;\n  /**\n   * Whether to show the ProgressBar (true, the default) or hide it (false).\n   */\n  visible?: boolean;\n  /**\n   * Style of filled part of the ProgresBar.\n   */\n  fillStyle?: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n  /**\n   * testID to be used on tests.\n   */\n  testID?: string;\n};\n\nconst INDETERMINATE_DURATION = 2000;\nconst INDETERMINATE_MAX_WIDTH = 0.6;\nconst { isRTL } = I18nManager;\n\n/**\n * Progress bar is an indicator used to present progress of some activity in the app.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { ProgressBar, MD3Colors } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <ProgressBar progress={0.5} color={MD3Colors.error50} />\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst ProgressBar = ({\n  color,\n  indeterminate,\n  progress = 0,\n  visible = true,\n  theme: themeOverrides,\n  animatedValue,\n  style,\n  fillStyle,\n  testID = 'progress-bar',\n  ...rest\n}: Props) => {\n  const isWeb = Platform.OS === 'web';\n  const theme = useInternalTheme(themeOverrides);\n  const { current: timer } = React.useRef<Animated.Value>(\n    new Animated.Value(0)\n  );\n  const { current: fade } = React.useRef<Animated.Value>(new Animated.Value(0));\n  const passedAnimatedValue =\n    React.useRef<Props['animatedValue']>(animatedValue);\n  const [width, setWidth] = React.useState<number>(0);\n  const [prevWidth, setPrevWidth] = React.useState<number>(0);\n\n  const indeterminateAnimation =\n    React.useRef<Animated.CompositeAnimation | null>(null);\n\n  const { scale } = theme.animation;\n\n  React.useEffect(() => {\n    passedAnimatedValue.current = animatedValue;\n  });\n\n  const startAnimation = React.useCallback(() => {\n    // Show progress bar\n    Animated.timing(fade, {\n      duration: 200 * scale,\n      toValue: 1,\n      useNativeDriver: true,\n      isInteraction: false,\n    }).start();\n\n    /**\n     * We shouldn't add @param animatedValue to the\n     * deps array, to avoid the unnecessary loop.\n     * We can only check if the prop is passed initially,\n     * and we do early return.\n     */\n    const externalAnimation =\n      typeof passedAnimatedValue.current !== 'undefined' &&\n      passedAnimatedValue.current >= 0;\n\n    if (externalAnimation) {\n      return;\n    }\n\n    // Animate progress bar\n    if (indeterminate) {\n      if (!indeterminateAnimation.current) {\n        indeterminateAnimation.current = Animated.timing(timer, {\n          duration: INDETERMINATE_DURATION,\n          toValue: 1,\n          // Animated.loop does not work if useNativeDriver is true on web\n          useNativeDriver: !isWeb,\n          isInteraction: false,\n        });\n      }\n\n      // Reset timer to the beginning\n      timer.setValue(0);\n\n      Animated.loop(indeterminateAnimation.current).start();\n    } else {\n      Animated.timing(timer, {\n        duration: 200 * scale,\n        toValue: progress ? progress : 0,\n        useNativeDriver: true,\n        isInteraction: false,\n      }).start();\n    }\n  }, [fade, scale, indeterminate, timer, progress, isWeb]);\n\n  const stopAnimation = React.useCallback(() => {\n    // Stop indeterminate animation\n    if (indeterminateAnimation.current) {\n      indeterminateAnimation.current.stop();\n    }\n\n    Animated.timing(fade, {\n      duration: 200 * scale,\n      toValue: 0,\n      useNativeDriver: true,\n      isInteraction: false,\n    }).start();\n  }, [fade, scale]);\n\n  React.useEffect(() => {\n    if (visible) startAnimation();\n    else stopAnimation();\n  }, [visible, startAnimation, stopAnimation]);\n\n  React.useEffect(() => {\n    if (animatedValue && animatedValue >= 0) {\n      timer.setValue(animatedValue);\n    }\n  }, [animatedValue, timer]);\n\n  React.useEffect(() => {\n    // Start animation the very first time when previously the width was unclear\n    if (visible && prevWidth === 0) {\n      startAnimation();\n    }\n  }, [prevWidth, startAnimation, visible]);\n\n  const onLayout = (event: LayoutChangeEvent) => {\n    setPrevWidth(width);\n    setWidth(event.nativeEvent.layout.width);\n  };\n\n  const tintColor = color || theme.colors?.primary;\n  const trackTintColor = theme.isV3\n    ? theme.colors.surfaceVariant\n    : setColor(tintColor).alpha(0.38).rgb().string();\n\n  return (\n    <View\n      onLayout={onLayout}\n      {...rest}\n      accessible\n      accessibilityRole=\"progressbar\"\n      accessibilityState={{ busy: visible }}\n      accessibilityValue={\n        indeterminate ? {} : { min: 0, max: 100, now: progress * 100 }\n      }\n      style={isWeb && styles.webContainer}\n      testID={testID}\n    >\n      <Animated.View\n        style={[\n          styles.container,\n          { backgroundColor: trackTintColor, opacity: fade },\n          style,\n        ]}\n      >\n        {width ? (\n          <Animated.View\n            testID={`${testID}-fill`}\n            style={[\n              styles.progressBar,\n              {\n                width,\n                backgroundColor: tintColor,\n                transform: [\n                  {\n                    translateX: timer.interpolate(\n                      indeterminate\n                        ? {\n                            inputRange: [0, 0.5, 1],\n                            outputRange: [\n                              (isRTL ? 1 : -1) * 0.5 * width,\n                              (isRTL ? 1 : -1) *\n                                0.5 *\n                                INDETERMINATE_MAX_WIDTH *\n                                width,\n                              (isRTL ? -1 : 1) * 0.7 * width,\n                            ],\n                          }\n                        : {\n                            inputRange: [0, 1],\n                            outputRange: [(isRTL ? 1 : -1) * 0.5 * width, 0],\n                          }\n                    ),\n                  },\n                  {\n                    // Workaround for workaround for https://github.com/facebook/react-native/issues/6278\n                    scaleX: timer.interpolate(\n                      indeterminate\n                        ? {\n                            inputRange: [0, 0.5, 1],\n                            outputRange: [\n                              0.0001,\n                              INDETERMINATE_MAX_WIDTH,\n                              0.0001,\n                            ],\n                          }\n                        : {\n                            inputRange: [0, 1],\n                            outputRange: [0.0001, 1],\n                          }\n                    ),\n                  },\n                ],\n              },\n              fillStyle,\n            ]}\n          />\n        ) : null}\n      </Animated.View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    height: 4,\n    overflow: 'hidden',\n  },\n  webContainer: {\n    width: '100%',\n    height: '100%',\n  },\n  progressBar: {\n    flex: 1,\n  },\n});\n\nexport default ProgressBar;\n","import * as React from 'react';\nimport { GestureResponderEvent, Platform } from 'react-native';\n\nimport RadioButtonAndroid from './RadioButtonAndroid';\nimport RadioButtonIOS from './RadioButtonIOS';\nimport { useInternalTheme } from '../../core/theming';\nimport type { ThemeProp } from '../../types';\n\nexport type Props = {\n  /**\n   * Value of the radio button\n   */\n  value: string;\n  /**\n   * Status of radio button.\n   */\n  status?: 'checked' | 'unchecked';\n  /**\n   * Whether radio is disabled.\n   */\n  disabled?: boolean;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: (e: GestureResponderEvent) => void;\n  /**\n   * Custom color for unchecked radio.\n   */\n  uncheckedColor?: string;\n  /**\n   * Custom color for radio.\n   */\n  color?: string;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n  /**\n   * testID to be used on tests.\n   */\n  testID?: string;\n};\n\n/**\n * Radio buttons allow the selection a single option from a set.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { View } from 'react-native';\n * import { RadioButton } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [checked, setChecked] = React.useState('first');\n *\n *   return (\n *     <View>\n *       <RadioButton\n *         value=\"first\"\n *         status={ checked === 'first' ? 'checked' : 'unchecked' }\n *         onPress={() => setChecked('first')}\n *       />\n *       <RadioButton\n *         value=\"second\"\n *         status={ checked === 'second' ? 'checked' : 'unchecked' }\n *         onPress={() => setChecked('second')}\n *       />\n *     </View>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nconst RadioButton = ({ theme: themeOverrides, ...props }: Props) => {\n  const theme = useInternalTheme(themeOverrides);\n\n  const Button = Platform.select({\n    default: RadioButtonAndroid,\n    ios: RadioButtonIOS,\n  });\n\n  return <Button {...props} theme={theme} />;\n};\n\nexport default RadioButton;\n","import * as React from 'react';\nimport { Animated, StyleSheet, View } from 'react-native';\n\nimport { RadioButtonContext, RadioButtonContextType } from './RadioButtonGroup';\nimport { handlePress, isChecked } from './utils';\nimport { useInternalTheme } from '../../core/theming';\nimport type { $RemoveChildren, ThemeProp } from '../../types';\nimport { getAndroidSelectionControlColor } from '../Checkbox/utils';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\n\nexport type Props = $RemoveChildren<typeof TouchableRipple> & {\n  /**\n   * Value of the radio button\n   */\n  value: string;\n  /**\n   * Status of radio button.\n   */\n  status?: 'checked' | 'unchecked';\n  /**\n   * Whether radio is disabled.\n   */\n  disabled?: boolean;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: (param?: any) => void;\n  /**\n   * Custom color for unchecked radio.\n   */\n  uncheckedColor?: string;\n  /**\n   * Custom color for radio.\n   */\n  color?: string;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n  /**\n   * testID to be used on tests.\n   */\n  testID?: string;\n};\n\nconst BORDER_WIDTH = 2;\n\n/**\n * Radio buttons allow the selection a single option from a set.\n * This component follows platform guidelines for Android, but can be used\n * on any platform.\n *\n * @extends TouchableRipple props https://callstack.github.io/react-native-paper/docs/components/TouchableRipple\n */\nconst RadioButtonAndroid = ({\n  disabled,\n  onPress,\n  theme: themeOverrides,\n  value,\n  status,\n  testID,\n  ...rest\n}: Props) => {\n  const theme = useInternalTheme(themeOverrides);\n  const { current: borderAnim } = React.useRef<Animated.Value>(\n    new Animated.Value(BORDER_WIDTH)\n  );\n\n  const { current: radioAnim } = React.useRef<Animated.Value>(\n    new Animated.Value(1)\n  );\n\n  const isFirstRendering = React.useRef<boolean>(true);\n\n  const { scale } = theme.animation;\n\n  React.useEffect(() => {\n    // Do not run animation on very first rendering\n    if (isFirstRendering.current) {\n      isFirstRendering.current = false;\n      return;\n    }\n\n    if (status === 'checked') {\n      radioAnim.setValue(1.2);\n\n      Animated.timing(radioAnim, {\n        toValue: 1,\n        duration: 150 * scale,\n        useNativeDriver: true,\n      }).start();\n    } else {\n      borderAnim.setValue(10);\n\n      Animated.timing(borderAnim, {\n        toValue: BORDER_WIDTH,\n        duration: 150 * scale,\n        useNativeDriver: false,\n      }).start();\n    }\n  }, [status, borderAnim, radioAnim, scale]);\n\n  return (\n    <RadioButtonContext.Consumer>\n      {(context?: RadioButtonContextType) => {\n        const checked =\n          isChecked({\n            contextValue: context?.value,\n            status,\n            value,\n          }) === 'checked';\n\n        const { rippleColor, selectionControlColor } =\n          getAndroidSelectionControlColor({\n            theme,\n            disabled,\n            checked,\n            customColor: rest.color,\n            customUncheckedColor: rest.uncheckedColor,\n          });\n\n        return (\n          <TouchableRipple\n            {...rest}\n            borderless\n            rippleColor={rippleColor}\n            onPress={\n              disabled\n                ? undefined\n                : (event) => {\n                    handlePress({\n                      onPress,\n                      onValueChange: context?.onValueChange,\n                      value,\n                      event,\n                    });\n                  }\n            }\n            accessibilityRole=\"radio\"\n            accessibilityState={{ disabled, checked }}\n            accessibilityLiveRegion=\"polite\"\n            style={styles.container}\n            testID={testID}\n            theme={theme}\n          >\n            <Animated.View\n              style={[\n                styles.radio,\n                {\n                  borderColor: selectionControlColor,\n                  borderWidth: borderAnim,\n                },\n              ]}\n            >\n              {checked ? (\n                <View style={[StyleSheet.absoluteFill, styles.radioContainer]}>\n                  <Animated.View\n                    style={[\n                      styles.dot,\n                      {\n                        backgroundColor: selectionControlColor,\n                        transform: [{ scale: radioAnim }],\n                      },\n                    ]}\n                  />\n                </View>\n              ) : null}\n            </Animated.View>\n          </TouchableRipple>\n        );\n      }}\n    </RadioButtonContext.Consumer>\n  );\n};\n\nRadioButtonAndroid.displayName = 'RadioButton.Android';\n\nconst styles = StyleSheet.create({\n  container: {\n    borderRadius: 18,\n  },\n  radioContainer: {\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  radio: {\n    height: 20,\n    width: 20,\n    borderRadius: 10,\n    margin: 8,\n  },\n  dot: {\n    height: 10,\n    width: 10,\n    borderRadius: 5,\n  },\n});\n\nexport default RadioButtonAndroid;\n\n// @component-docs ignore-next-line\nexport { RadioButtonAndroid };\n","import * as React from 'react';\nimport { View } from 'react-native';\n\nexport type Props = {\n  /**\n   * Function to execute on selection change.\n   */\n  onValueChange: (value: string) => void;\n  /**\n   * Value of the currently selected radio button.\n   */\n  value: string;\n  /**\n   * React elements containing radio buttons.\n   */\n  children: React.ReactNode;\n};\n\nexport type RadioButtonContextType = {\n  value: string;\n  onValueChange: (item: string) => void;\n};\n\nexport const RadioButtonContext = React.createContext<RadioButtonContextType>(\n  null as any\n);\n\n/**\n * Radio button group allows to control a group of radio buttons.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { View } from 'react-native';\n * import { RadioButton, Text } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [value, setValue] = React.useState('first');\n *\n *   return (\n *     <RadioButton.Group onValueChange={newValue => setValue(newValue)} value={value}>\n *       <View>\n *         <Text>First</Text>\n *         <RadioButton value=\"first\" />\n *       </View>\n *       <View>\n *         <Text>Second</Text>\n *         <RadioButton value=\"second\" />\n *       </View>\n *     </RadioButton.Group>\n *   );\n * };\n *\n * export default MyComponent;\n *```\n */\nconst RadioButtonGroup = ({ value, onValueChange, children }: Props) => (\n  <RadioButtonContext.Provider value={{ value, onValueChange }}>\n    <View accessibilityRole=\"radiogroup\">{children}</View>\n  </RadioButtonContext.Provider>\n);\n\nRadioButtonGroup.displayName = 'RadioButton.Group';\nexport default RadioButtonGroup;\n\n// @component-docs ignore-next-line\nexport { RadioButtonGroup };\n","import * as React from 'react';\nimport { GestureResponderEvent, StyleSheet, View } from 'react-native';\n\nimport { RadioButtonContext, RadioButtonContextType } from './RadioButtonGroup';\nimport { handlePress, isChecked } from './utils';\nimport { useInternalTheme } from '../../core/theming';\nimport type { $RemoveChildren, ThemeProp } from '../../types';\nimport { getSelectionControlIOSColor } from '../Checkbox/utils';\nimport MaterialCommunityIcon from '../MaterialCommunityIcon';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\n\nexport type Props = $RemoveChildren<typeof TouchableRipple> & {\n  /**\n   * Value of the radio button\n   */\n  value: string;\n  /**\n   * Status of radio button.\n   */\n  status?: 'checked' | 'unchecked';\n  /**\n   * Whether radio is disabled.\n   */\n  disabled?: boolean;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: (e: GestureResponderEvent) => void;\n  /**\n   * Custom color for radio.\n   */\n  color?: string;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n  /**\n   * testID to be used on tests.\n   */\n  testID?: string;\n};\n\n/**\n * Radio buttons allow the selection a single option from a set.\n * This component follows platform guidelines for iOS, but can be used\n * on any platform.\n *\n * @extends TouchableRipple props https://callstack.github.io/react-native-paper/docs/components/TouchableRipple\n */\nconst RadioButtonIOS = ({\n  disabled,\n  onPress,\n  theme: themeOverrides,\n  status,\n  value,\n  testID,\n  ...rest\n}: Props) => {\n  const theme = useInternalTheme(themeOverrides);\n\n  return (\n    <RadioButtonContext.Consumer>\n      {(context?: RadioButtonContextType) => {\n        const checked =\n          isChecked({\n            contextValue: context?.value,\n            status,\n            value,\n          }) === 'checked';\n\n        const { checkedColor, rippleColor } = getSelectionControlIOSColor({\n          theme,\n          disabled,\n          customColor: rest.color,\n        });\n        const opacity = checked ? 1 : 0;\n\n        return (\n          <TouchableRipple\n            {...rest}\n            borderless\n            rippleColor={rippleColor}\n            onPress={\n              disabled\n                ? undefined\n                : (event) => {\n                    handlePress({\n                      onPress,\n                      value,\n                      onValueChange: context?.onValueChange,\n                      event,\n                    });\n                  }\n            }\n            accessibilityRole=\"radio\"\n            accessibilityState={{ disabled, checked }}\n            accessibilityLiveRegion=\"polite\"\n            style={styles.container}\n            testID={testID}\n            theme={theme}\n          >\n            <View style={{ opacity }}>\n              <MaterialCommunityIcon\n                allowFontScaling={false}\n                name=\"check\"\n                size={24}\n                color={checkedColor}\n                direction=\"ltr\"\n              />\n            </View>\n          </TouchableRipple>\n        );\n      }}\n    </RadioButtonContext.Consumer>\n  );\n};\n\nRadioButtonIOS.displayName = 'RadioButton.IOS';\n\nconst styles = StyleSheet.create({\n  container: {\n    borderRadius: 18,\n    padding: 6,\n  },\n});\n\nexport default RadioButtonIOS;\n\n// @component-docs ignore-next-line\nexport { RadioButtonIOS };\n","import * as React from 'react';\nimport {\n  ColorValue,\n  GestureResponderEvent,\n  PressableAndroidRippleConfig,\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport RadioButton from './RadioButton';\nimport RadioButtonAndroid from './RadioButtonAndroid';\nimport { RadioButtonContext, RadioButtonContextType } from './RadioButtonGroup';\nimport RadioButtonIOS from './RadioButtonIOS';\nimport { handlePress, isChecked } from './utils';\nimport { useInternalTheme } from '../../core/theming';\nimport type { ThemeProp, MD3TypescaleKey } from '../../types';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport Text from '../Typography/Text';\n\nexport type Props = {\n  /**\n   * Value of the radio button.\n   */\n  value: string;\n  /**\n   * Label to be displayed on the item.\n   */\n  label: string;\n  /**\n   * Whether radio is disabled.\n   */\n  disabled?: boolean;\n  /**\n   * Type of background drawabale to display the feedback (Android).\n   * https://reactnative.dev/docs/pressable#rippleconfig\n   */\n  background?: PressableAndroidRippleConfig;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: (e: GestureResponderEvent) => void;\n  /**\n   * Function to execute on long press.\n   */\n  onLongPress?: (e: GestureResponderEvent) => void;\n  /**\n   * Accessibility label for the touchable. This is read by the screen reader when the user taps the touchable.\n   */\n  accessibilityLabel?: string;\n  /**\n   * Custom color for unchecked radio.\n   */\n  uncheckedColor?: string;\n  /**\n   * Custom color for radio.\n   */\n  color?: string;\n  /**\n   * Color of the ripple effect.\n   */\n  rippleColor?: ColorValue;\n  /**\n   * Status of radio button.\n   */\n  status?: 'checked' | 'unchecked';\n  /**\n   * Additional styles for container View.\n   */\n  style?: StyleProp<ViewStyle>;\n  /**\n   * Style that is passed to Label element.\n   */\n  labelStyle?: StyleProp<TextStyle>;\n  /**\n   * @supported Available in v5.x with theme version 3\n   *\n   * Label text variant defines appropriate text styles for type role and its size.\n   * Available variants:\n   *\n   *  Display: `displayLarge`, `displayMedium`, `displaySmall`\n   *\n   *  Headline: `headlineLarge`, `headlineMedium`, `headlineSmall`\n   *\n   *  Title: `titleLarge`, `titleMedium`, `titleSmall`\n   *\n   *  Label:  `labelLarge`, `labelMedium`, `labelSmall`\n   *\n   *  Body: `bodyLarge`, `bodyMedium`, `bodySmall`\n   */\n  labelVariant?: keyof typeof MD3TypescaleKey;\n  /**\n   * Specifies the largest possible scale a label font can reach.\n   */\n  labelMaxFontSizeMultiplier?: number;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n  /**\n   * testID to be used on tests.\n   */\n  testID?: string;\n  /**\n   * Whether `<RadioButton.Android />` or `<RadioButton.IOS />` should be used.\n   * Left undefined `<RadioButton />` will be used.\n   */\n  mode?: 'android' | 'ios';\n  /**\n   * Radio button control position.\n   */\n  position?: 'leading' | 'trailing';\n};\n\n/**\n * RadioButton.Item allows you to press the whole row (item) instead of only the RadioButton.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { RadioButton } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [value, setValue] = React.useState('first');\n *\n *   return (\n *     <RadioButton.Group onValueChange={value => setValue(value)} value={value}>\n *       <RadioButton.Item label=\"First item\" value=\"first\" />\n *       <RadioButton.Item label=\"Second item\" value=\"second\" />\n *     </RadioButton.Group>\n *   );\n * };\n *\n * export default MyComponent;\n *```\n */\nconst RadioButtonItem = ({\n  value,\n  label,\n  style,\n  labelStyle,\n  onPress,\n  onLongPress,\n  disabled,\n  color,\n  uncheckedColor,\n  rippleColor,\n  status,\n  theme: themeOverrides,\n  background,\n  accessibilityLabel = label,\n  testID,\n  mode,\n  position = 'trailing',\n  labelVariant = 'bodyLarge',\n  labelMaxFontSizeMultiplier,\n}: Props) => {\n  const theme = useInternalTheme(themeOverrides);\n  const radioButtonProps = {\n    value,\n    disabled,\n    status,\n    color,\n    theme,\n    uncheckedColor,\n  };\n  const isLeading = position === 'leading';\n  let radioButton: any;\n\n  if (mode === 'android') {\n    radioButton = <RadioButtonAndroid {...radioButtonProps} />;\n  } else if (mode === 'ios') {\n    radioButton = <RadioButtonIOS {...radioButtonProps} />;\n  } else {\n    radioButton = <RadioButton {...radioButtonProps} />;\n  }\n\n  const textColor = theme.isV3 ? theme.colors.onSurface : theme.colors.text;\n  const disabledTextColor = theme.isV3\n    ? theme.colors.onSurfaceDisabled\n    : theme.colors.disabled;\n  const textAlign = isLeading ? 'right' : 'left';\n\n  const computedStyle = {\n    color: disabled ? disabledTextColor : textColor,\n    textAlign,\n  } as TextStyle;\n\n  return (\n    <RadioButtonContext.Consumer>\n      {(context?: RadioButtonContextType) => {\n        const checked =\n          isChecked({\n            contextValue: context?.value,\n            status,\n            value,\n          }) === 'checked';\n        return (\n          <TouchableRipple\n            onPress={(event) =>\n              handlePress({\n                onPress: onPress,\n                onValueChange: context?.onValueChange,\n                value,\n                event,\n              })\n            }\n            onLongPress={onLongPress}\n            accessibilityLabel={accessibilityLabel}\n            accessibilityRole=\"radio\"\n            accessibilityState={{\n              checked,\n              disabled,\n            }}\n            testID={testID}\n            disabled={disabled}\n            background={background}\n            theme={theme}\n            rippleColor={rippleColor}\n          >\n            <View style={[styles.container, style]} pointerEvents=\"none\">\n              {isLeading && radioButton}\n              <Text\n                variant={labelVariant}\n                style={[\n                  styles.label,\n                  !theme.isV3 && styles.font,\n                  computedStyle,\n                  labelStyle,\n                ]}\n                maxFontSizeMultiplier={labelMaxFontSizeMultiplier}\n              >\n                {label}\n              </Text>\n              {!isLeading && radioButton}\n            </View>\n          </TouchableRipple>\n        );\n      }}\n    </RadioButtonContext.Consumer>\n  );\n};\n\nRadioButtonItem.displayName = 'RadioButton.Item';\n\nexport default RadioButtonItem;\n\n// @component-docs ignore-next-line\nexport { RadioButtonItem };\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    paddingVertical: 8,\n    paddingHorizontal: 16,\n  },\n  label: {\n    flexShrink: 1,\n    flexGrow: 1,\n  },\n  font: {\n    fontSize: 16,\n  },\n});\n","import RadioButtonComponent from './RadioButton';\nimport RadioButtonAndroid from './RadioButtonAndroid';\nimport RadioButtonGroup from './RadioButtonGroup';\nimport RadioButtonIOS from './RadioButtonIOS';\nimport RadioButtonItem from './RadioButtonItem';\n\nconst RadioButton = Object.assign(\n  // @component ./RadioButton.tsx\n  RadioButtonComponent,\n  {\n    // @component ./RadioButtonGroup.tsx\n    Group: RadioButtonGroup,\n    // @component ./RadioButtonAndroid.tsx\n    Android: RadioButtonAndroid,\n    // @component ./RadioButtonIOS.tsx\n    IOS: RadioButtonIOS,\n    // @component ./RadioButtonItem.tsx\n    Item: RadioButtonItem,\n  }\n);\n\nexport default RadioButton;\n","import type { GestureResponderEvent } from 'react-native';\n\nexport const handlePress = ({\n  onPress,\n  value,\n  onValueChange,\n  event,\n}: {\n  onPress?: (e: GestureResponderEvent) => void;\n  value: string;\n  onValueChange?: (value: string) => void;\n  event: GestureResponderEvent;\n}) => {\n  if (onPress && onValueChange) {\n    console.warn(\n      `onPress in the scope of RadioButtonGroup will not be executed, use onValueChange instead`\n    );\n  }\n\n  onValueChange ? onValueChange(value) : onPress?.(event);\n};\n\nexport const isChecked = ({\n  value,\n  status,\n  contextValue,\n}: {\n  value: string;\n  status?: 'checked' | 'unchecked';\n  contextValue?: string;\n}) => {\n  if (contextValue !== undefined && contextValue !== null) {\n    return contextValue === value ? 'checked' : 'unchecked';\n  } else {\n    return status;\n  }\n};\n","import * as React from 'react';\nimport {\n  Animated,\n  ColorValue,\n  GestureResponderEvent,\n  I18nManager,\n  Platform,\n  StyleProp,\n  StyleSheet,\n  TextInput,\n  TextInputProps,\n  TextStyle,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport color from 'color';\n\nimport ActivityIndicator from './ActivityIndicator';\nimport Divider from './Divider';\nimport type { IconSource } from './Icon';\nimport IconButton from './IconButton/IconButton';\nimport MaterialCommunityIcon from './MaterialCommunityIcon';\nimport Surface from './Surface';\nimport { useInternalTheme } from '../core/theming';\nimport type { ThemeProp } from '../types';\nimport { forwardRef } from '../utils/forwardRef';\n\ninterface Style {\n  marginRight: number;\n}\n\nexport type Props = React.ComponentPropsWithRef<typeof TextInput> & {\n  /**\n   * Hint text shown when the input is empty.\n   */\n  placeholder?: string;\n  /**\n   * The value of the text input.\n   */\n  value: string;\n  /**\n   * Callback that is called when the text input's text changes.\n   */\n  onChangeText?: (query: string) => void;\n  /**\n   * @supported Available in v5.x with theme version 3\n   * Search layout mode, the default value is \"bar\".\n   */\n  mode?: 'bar' | 'view';\n  /**\n   * Icon name for the left icon button (see `onIconPress`).\n   */\n  icon?: IconSource;\n  /**\n   * Custom color for icon, default will be derived from theme\n   */\n  iconColor?: string;\n  /**\n   * Color of the ripple effect.\n   */\n  rippleColor?: ColorValue;\n  /**\n   * Callback to execute if we want the left icon to act as button.\n   */\n  onIconPress?: (e: GestureResponderEvent) => void;\n\n  /**\n   * Callback to execute if we want to add custom behaviour to close icon button.\n   */\n  onClearIconPress?: (e: GestureResponderEvent) => void;\n  /**\n   * Accessibility label for the button. This is read by the screen reader when the user taps the button.\n   */\n  searchAccessibilityLabel?: string;\n  /**\n   * Custom icon for clear button, default will be icon close. It's visible when `loading` is set to `false`.\n   * In v5.x with theme version 3, `clearIcon` is visible only `right` prop is not defined.\n   */\n  clearIcon?: IconSource;\n  /**\n   * Accessibility label for the button. This is read by the screen reader when the user taps the button.\n   */\n  clearAccessibilityLabel?: string;\n  /**\n   * @supported Available in v5.x with theme version 3\n   * Icon name for the right trailering icon button.\n   * Works only when `mode` is set to \"bar\". It won't be displayed if `loading` is set to `true`.\n   */\n  traileringIcon?: IconSource;\n  /**\n   * @supported Available in v5.x with theme version 3\n   * Custom color for the right trailering icon, default will be derived from theme\n   */\n  traileringIconColor?: string;\n  /**\n   * @supported Available in v5.x with theme version 3\n   * Color of the trailering icon ripple effect.\n   */\n  traileringRippleColor?: ColorValue;\n  /**\n   * @supported Available in v5.x with theme version 3\n   * Callback to execute on the right trailering icon button press.\n   */\n  onTraileringIconPress?: (e: GestureResponderEvent) => void;\n  /**\n   * Accessibility label for the right trailering icon button. This is read by the screen reader when the user taps the button.\n   */\n  traileringIconAccessibilityLabel?: string;\n  /**\n   * @supported Available in v5.x with theme version 3\n   * Callback which returns a React element to display on the right side.\n   * Works only when `mode` is set to \"bar\".\n   */\n  right?: (props: {\n    color: string;\n    style: Style;\n    testID: string;\n  }) => React.ReactNode;\n  /**\n   * @supported Available in v5.x with theme version 3\n   * Whether to show `Divider` at the bottom of the search.\n   * Works only when `mode` is set to \"view\". True by default.\n   */\n  showDivider?: boolean;\n  /**\n   * @supported Available in v5.x with theme version 3\n   * Changes Searchbar shadow and background on iOS and Android.\n   */\n  elevation?: 0 | 1 | 2 | 3 | 4 | 5 | Animated.Value;\n  /**\n   * Set style of the TextInput component inside the searchbar\n   */\n  inputStyle?: StyleProp<TextStyle>;\n  style?: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\n  /**\n   * Custom flag for replacing clear button with activity indicator.\n   */\n  loading?: Boolean;\n  /**\n   * TestID used for testing purposes\n   */\n  testID?: string;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n};\n\ntype TextInputHandles = Pick<\n  TextInput,\n  'setNativeProps' | 'isFocused' | 'clear' | 'blur' | 'focus'\n>;\n\n/**\n * Searchbar is a simple input box where users can type search queries.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Searchbar } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [searchQuery, setSearchQuery] = React.useState('');\n *\n *   return (\n *     <Searchbar\n *       placeholder=\"Search\"\n *       onChangeText={setSearchQuery}\n *       value={searchQuery}\n *     />\n *   );\n * };\n *\n * export default MyComponent;\n\n * ```\n */\nconst Searchbar = forwardRef<TextInputHandles, Props>(\n  (\n    {\n      icon,\n      iconColor: customIconColor,\n      rippleColor: customRippleColor,\n      onIconPress,\n      searchAccessibilityLabel = 'search',\n      clearIcon,\n      clearAccessibilityLabel = 'clear',\n      onClearIconPress,\n      traileringIcon,\n      traileringIconColor,\n      traileringIconAccessibilityLabel,\n      traileringRippleColor: customTraileringRippleColor,\n      onTraileringIconPress,\n      right,\n      mode = 'bar',\n      showDivider = true,\n      inputStyle,\n      placeholder,\n      elevation = 0,\n      style,\n      theme: themeOverrides,\n      value,\n      loading = false,\n      testID = 'search-bar',\n      ...rest\n    }: Props,\n    ref\n  ) => {\n    const theme = useInternalTheme(themeOverrides);\n    const root = React.useRef<TextInput>(null);\n\n    React.useImperativeHandle(ref, () => {\n      const input = root.current;\n\n      if (input) {\n        return {\n          focus: () => input.focus(),\n          clear: () => input.clear(),\n          setNativeProps: (args: TextInputProps) => input.setNativeProps(args),\n          isFocused: () => input.isFocused(),\n          blur: () => input.blur(),\n        };\n      }\n\n      const noop = () => {\n        throw new Error('TextInput is not available');\n      };\n\n      return {\n        focus: noop,\n        clear: noop,\n        setNativeProps: noop,\n        isFocused: noop,\n        blur: noop,\n      };\n    });\n\n    const handleClearPress = (e: any) => {\n      root.current?.clear();\n      rest.onChangeText?.('');\n      onClearIconPress?.(e);\n    };\n\n    const { roundness, dark, isV3, fonts } = theme;\n\n    const placeholderTextColor = isV3\n      ? theme.colors.onSurface\n      : theme.colors?.placeholder;\n    const textColor = isV3 ? theme.colors.onSurfaceVariant : theme.colors.text;\n    const md2IconColor = dark\n      ? textColor\n      : color(textColor).alpha(0.54).rgb().string();\n    const iconColor =\n      customIconColor || (isV3 ? theme.colors.onSurfaceVariant : md2IconColor);\n    const rippleColor =\n      customRippleColor || color(textColor).alpha(0.32).rgb().string();\n    const traileringRippleColor =\n      customTraileringRippleColor ||\n      color(textColor).alpha(0.32).rgb().string();\n\n    const font = isV3\n      ? {\n          ...fonts.bodyLarge,\n          lineHeight: Platform.select({\n            ios: 0,\n            default: fonts.bodyLarge.lineHeight,\n          }),\n        }\n      : theme.fonts.regular;\n\n    const isBarMode = isV3 && mode === 'bar';\n    const shouldRenderTraileringIcon =\n      isBarMode &&\n      traileringIcon &&\n      !loading &&\n      (!value || right !== undefined);\n\n    return (\n      <Surface\n        style={[\n          { borderRadius: roundness },\n          !isV3 && styles.elevation,\n          isV3 && {\n            backgroundColor: theme.colors.elevation.level3,\n            borderRadius: roundness * (isBarMode ? 7 : 0),\n          },\n          styles.container,\n          style,\n        ]}\n        testID={`${testID}-container`}\n        {...(theme.isV3 && { elevation })}\n        theme={theme}\n      >\n        <IconButton\n          accessibilityRole=\"button\"\n          borderless\n          rippleColor={rippleColor}\n          onPress={onIconPress}\n          iconColor={iconColor}\n          icon={\n            icon ||\n            (({ size, color }) => (\n              <MaterialCommunityIcon\n                name=\"magnify\"\n                color={color}\n                size={size}\n                direction={I18nManager.getConstants().isRTL ? 'rtl' : 'ltr'}\n              />\n            ))\n          }\n          theme={theme}\n          accessibilityLabel={searchAccessibilityLabel}\n          testID={`${testID}-icon`}\n        />\n        <TextInput\n          style={[\n            styles.input,\n            {\n              color: textColor,\n              ...font,\n              ...Platform.select({ web: { outline: 'none' } }),\n            },\n            isV3 && (isBarMode ? styles.barModeInput : styles.viewModeInput),\n            inputStyle,\n          ]}\n          placeholder={placeholder || ''}\n          placeholderTextColor={placeholderTextColor}\n          selectionColor={theme.colors?.primary}\n          underlineColorAndroid=\"transparent\"\n          returnKeyType=\"search\"\n          keyboardAppearance={dark ? 'dark' : 'light'}\n          accessibilityRole=\"search\"\n          ref={root}\n          value={value}\n          testID={testID}\n          {...rest}\n        />\n        {loading ? (\n          <ActivityIndicator\n            testID=\"activity-indicator\"\n            style={isV3 ? styles.v3Loader : styles.loader}\n          />\n        ) : (\n          // Clear icon should be always rendered within Searchbar – it's transparent,\n          // without touch events, when there is no value. It's done to avoid issues\n          // with the abruptly stopping ripple effect and changing bar width on web,\n          // when clearing the value.\n          <View\n            pointerEvents={value ? 'auto' : 'none'}\n            testID={`${testID}-icon-wrapper`}\n            style={[\n              isV3 && !value && styles.v3ClearIcon,\n              isV3 && right !== undefined && styles.v3ClearIconHidden,\n            ]}\n          >\n            <IconButton\n              borderless\n              accessibilityLabel={clearAccessibilityLabel}\n              iconColor={value ? iconColor : 'rgba(255, 255, 255, 0)'}\n              rippleColor={rippleColor}\n              onPress={handleClearPress}\n              icon={\n                clearIcon ||\n                (({ size, color }) => (\n                  <MaterialCommunityIcon\n                    name={isV3 ? 'close' : 'close-circle-outline'}\n                    color={color}\n                    size={size}\n                    direction={I18nManager.getConstants().isRTL ? 'rtl' : 'ltr'}\n                  />\n                ))\n              }\n              testID={`${testID}-clear-icon`}\n              accessibilityRole=\"button\"\n              theme={theme}\n            />\n          </View>\n        )}\n        {shouldRenderTraileringIcon ? (\n          <IconButton\n            accessibilityRole=\"button\"\n            borderless\n            onPress={onTraileringIconPress}\n            iconColor={traileringIconColor || theme.colors.onSurfaceVariant}\n            rippleColor={traileringRippleColor}\n            icon={traileringIcon}\n            accessibilityLabel={traileringIconAccessibilityLabel}\n            testID={`${testID}-trailering-icon`}\n          />\n        ) : null}\n        {isBarMode &&\n          right?.({ color: textColor, style: styles.rightStyle, testID })}\n        {isV3 && !isBarMode && showDivider && (\n          <Divider\n            bold\n            style={[\n              styles.divider,\n              {\n                backgroundColor: theme.colors.outline,\n              },\n            ]}\n            testID={`${testID}-divider`}\n          />\n        )}\n      </Surface>\n    );\n  }\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  input: {\n    flex: 1,\n    fontSize: 18,\n    paddingLeft: 8,\n    alignSelf: 'stretch',\n    textAlign: I18nManager.getConstants().isRTL ? 'right' : 'left',\n    minWidth: 0,\n  },\n  barModeInput: {\n    paddingLeft: 0,\n    minHeight: 56,\n  },\n  viewModeInput: {\n    paddingLeft: 0,\n    minHeight: 72,\n  },\n  elevation: {\n    elevation: 4,\n  },\n  loader: {\n    margin: 10,\n  },\n  v3Loader: {\n    marginHorizontal: 16,\n  },\n  rightStyle: {\n    marginRight: 16,\n  },\n  v3ClearIcon: {\n    position: 'absolute',\n    right: 0,\n    marginLeft: 16,\n  },\n  v3ClearIconHidden: {\n    display: 'none',\n  },\n  divider: {\n    position: 'absolute',\n    bottom: 0,\n    width: '100%',\n  },\n});\n\nexport default Searchbar;\n","import * as React from 'react';\nimport {\n  Animated,\n  ColorValue,\n  GestureResponderEvent,\n  PressableAndroidRippleConfig,\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport color from 'color';\nimport type { ThemeProp } from 'src/types';\n\nimport {\n  getSegmentedButtonBorderRadius,\n  getSegmentedButtonColors,\n  getSegmentedButtonDensityPadding,\n} from './utils';\nimport { useInternalTheme } from '../../core/theming';\nimport type { IconSource } from '../Icon';\nimport Icon from '../Icon';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport Text from '../Typography/Text';\n\nexport type Props = {\n  /**\n   * Whether the segmented button is checked\n   */\n  checked: boolean;\n  /**\n   * Icon to display for the `SegmentedButtonItem`.\n   */\n  icon?: IconSource;\n  /**\n   * @supported Available in v5.x with theme version 3\n   * Custom color for unchecked Text and Icon.\n   */\n  uncheckedColor?: string;\n  /**\n   * @supported Available in v5.x with theme version 3\n   * Custom color for checked Text and Icon.\n   */\n  checkedColor?: string;\n  /**\n   * Color of the ripple effect.\n   */\n  rippleColor?: ColorValue;\n  /**\n   * Whether the button is disabled.\n   */\n  disabled?: boolean;\n  /**\n   * Type of background drawabale to display the feedback (Android).\n   * https://reactnative.dev/docs/pressable#rippleconfig\n   */\n  background?: PressableAndroidRippleConfig;\n  /**\n   * Accessibility label for the `SegmentedButtonItem`. This is read by the screen reader when the user taps the button.\n   */\n  accessibilityLabel?: string;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: (event: GestureResponderEvent) => void;\n  /**\n   * Value of button.\n   */\n  value: string;\n  /**\n   * Label text of the button.\n   */\n  label?: string;\n  /**\n   * Button segment.\n   */\n  segment?: 'first' | 'last';\n  /**\n   * Show optional check icon to indicate selected state\n   */\n  showSelectedCheck?: boolean;\n  /**\n   * Density is applied to the height, to allow usage in denser UIs.\n   */\n  density?: 'regular' | 'small' | 'medium' | 'high';\n  /**\n   * Specifies the largest possible scale a label font can reach.\n   */\n  labelMaxFontSizeMultiplier?: number;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * Style for the button label.\n   */\n  labelStyle?: StyleProp<TextStyle>;\n  /**\n   * testID to be used on tests.\n   */\n  testID?: string;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n};\n\nconst SegmentedButtonItem = ({\n  checked,\n  accessibilityLabel,\n  disabled,\n  style,\n  labelStyle,\n  showSelectedCheck,\n  checkedColor,\n  uncheckedColor,\n  rippleColor: customRippleColor,\n  background,\n  icon,\n  testID,\n  label,\n  onPress,\n  segment,\n  density = 'regular',\n  theme: themeOverrides,\n  labelMaxFontSizeMultiplier,\n}: Props) => {\n  const theme = useInternalTheme(themeOverrides);\n\n  const checkScale = React.useRef(new Animated.Value(0)).current;\n\n  React.useEffect(() => {\n    if (!showSelectedCheck) {\n      return;\n    }\n    if (checked) {\n      Animated.spring(checkScale, {\n        toValue: 1,\n        useNativeDriver: true,\n      }).start();\n    } else {\n      Animated.spring(checkScale, {\n        toValue: 0,\n        useNativeDriver: true,\n      }).start();\n    }\n  }, [checked, checkScale, showSelectedCheck]);\n\n  const { roundness, isV3 } = theme;\n  const { borderColor, textColor, borderWidth, backgroundColor } =\n    getSegmentedButtonColors({\n      checked,\n      theme,\n      disabled,\n      checkedColor,\n      uncheckedColor,\n    });\n\n  const borderRadius = (isV3 ? 5 : 1) * roundness;\n  const segmentBorderRadius = getSegmentedButtonBorderRadius({\n    theme,\n    segment,\n  });\n  const rippleColor =\n    customRippleColor || color(textColor).alpha(0.12).rgb().string();\n\n  const showIcon = !icon ? false : label && checked ? !showSelectedCheck : true;\n  const showCheckedIcon = checked && showSelectedCheck;\n\n  const iconSize = isV3 ? 18 : 16;\n  const iconStyle = {\n    marginRight: label ? 5 : showCheckedIcon ? 3 : 0,\n    ...(label && {\n      transform: [\n        {\n          scale: checkScale.interpolate({\n            inputRange: [0, 1],\n            outputRange: [1, 0],\n          }),\n        },\n      ],\n    }),\n  };\n\n  const buttonStyle: ViewStyle = {\n    backgroundColor,\n    borderColor,\n    borderWidth,\n    borderRadius,\n    ...segmentBorderRadius,\n  };\n  const paddingVertical = getSegmentedButtonDensityPadding({ density });\n  const rippleStyle: ViewStyle = {\n    borderRadius,\n    ...segmentBorderRadius,\n  };\n  const labelTextStyle: TextStyle = {\n    ...(!isV3\n      ? {\n          textTransform: 'uppercase',\n          fontWeight: '500',\n        }\n      : theme.fonts.labelLarge),\n    color: textColor,\n  };\n\n  return (\n    <View style={[buttonStyle, styles.button, style]}>\n      <TouchableRipple\n        borderless\n        onPress={onPress}\n        accessibilityLabel={accessibilityLabel}\n        accessibilityState={{ disabled, checked }}\n        accessibilityRole=\"button\"\n        disabled={disabled}\n        rippleColor={rippleColor}\n        testID={testID}\n        style={rippleStyle}\n        background={background}\n        theme={theme}\n      >\n        <View style={[styles.content, { paddingVertical }]}>\n          {showCheckedIcon ? (\n            <Animated.View\n              testID={`${testID}-check-icon`}\n              style={[iconStyle, { transform: [{ scale: checkScale }] }]}\n            >\n              <Icon source={'check'} size={iconSize} color={textColor} />\n            </Animated.View>\n          ) : null}\n          {showIcon ? (\n            <Animated.View testID={`${testID}-icon`} style={iconStyle}>\n              <Icon source={icon} size={iconSize} color={textColor} />\n            </Animated.View>\n          ) : null}\n          <Text\n            variant=\"labelLarge\"\n            style={[styles.label, labelTextStyle, labelStyle]}\n            selectable={false}\n            numberOfLines={1}\n            maxFontSizeMultiplier={labelMaxFontSizeMultiplier}\n            testID={`${testID}-label`}\n          >\n            {label}\n          </Text>\n        </View>\n      </TouchableRipple>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  button: {\n    flex: 1,\n    minWidth: 76,\n    borderStyle: 'solid',\n  },\n  label: {\n    textAlign: 'center',\n  },\n  content: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingVertical: 9,\n    paddingHorizontal: 16,\n  },\n});\n\nexport default SegmentedButtonItem;\n\nexport { SegmentedButtonItem as SegmentedButton };\n","import * as React from 'react';\nimport {\n  GestureResponderEvent,\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport type { ThemeProp } from 'src/types';\n\nimport SegmentedButtonItem from './SegmentedButtonItem';\nimport { getDisabledSegmentedButtonStyle } from './utils';\nimport { useInternalTheme } from '../../core/theming';\nimport type { IconSource } from '../Icon';\n\ntype ConditionalValue =\n  | {\n      /**\n       * Array of the currently selected segmented button values.\n       */\n      value: string[];\n      /**\n       * Support multiple selected options.\n       */\n      multiSelect: true;\n      /**\n       * Function to execute on selection change\n       */\n      onValueChange: (value: string[]) => void;\n    }\n  | {\n      /**\n       * Value of the currently selected segmented button.\n       */\n      value: string;\n      /**\n       * Support multiple selected options.\n       */\n      multiSelect?: false;\n      /**\n       * Function to execute on selection change\n       */\n      onValueChange: (value: string) => void;\n    };\n\nexport type Props = {\n  /**\n   * Buttons to display as options in toggle button.\n   * Button should contain the following properties:\n   * - `value`: value of button (required)\n   * - `icon`: icon to display for the item\n   * - `disabled`: whether the button is disabled\n   * - `accessibilityLabel`: acccessibility label for the button. This is read by the screen reader when the user taps the button.\n   * - `checkedColor`: custom color for checked Text and Icon\n   * - `uncheckedColor`: custom color for unchecked Text and Icon\n   * - `onPress`: callback that is called when button is pressed\n   * - `label`: label text of the button\n   * - `showSelectedCheck`: show optional check icon to indicate selected state\n   * - `style`: pass additional styles for the button\n   * - `testID`: testID to be used on tests\n   */\n  buttons: {\n    value: string;\n    icon?: IconSource;\n    disabled?: boolean;\n    accessibilityLabel?: string;\n    checkedColor?: string;\n    uncheckedColor?: string;\n    onPress?: (event: GestureResponderEvent) => void;\n    label?: string;\n    showSelectedCheck?: boolean;\n    style?: StyleProp<ViewStyle>;\n    labelStyle?: StyleProp<TextStyle>;\n    testID?: string;\n  }[];\n  /**\n   * Density is applied to the height, to allow usage in denser UIs\n   */\n  density?: 'regular' | 'small' | 'medium' | 'high';\n  style?: StyleProp<ViewStyle>;\n  theme?: ThemeProp;\n} & ConditionalValue;\n\n/**\n * Segmented buttons can be used to select options, switch views or sort elements.</br>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { SafeAreaView, StyleSheet } from 'react-native';\n * import { SegmentedButtons } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [value, setValue] = React.useState('');\n *\n *   return (\n *     <SafeAreaView style={styles.container}>\n *       <SegmentedButtons\n *         value={value}\n *         onValueChange={setValue}\n *         buttons={[\n *           {\n *             value: 'walk',\n *             label: 'Walking',\n *           },\n *           {\n *             value: 'train',\n *             label: 'Transit',\n *           },\n *           { value: 'drive', label: 'Driving' },\n *         ]}\n *       />\n *     </SafeAreaView>\n *   );\n * };\n *\n * const styles = StyleSheet.create({\n *   container: {\n *     flex: 1,\n *     alignItems: 'center',\n *   },\n * });\n *\n * export default MyComponent;\n *```\n */\nconst SegmentedButtons = ({\n  value,\n  onValueChange,\n  buttons,\n  multiSelect,\n  density,\n  style,\n  theme: themeOverrides,\n}: Props) => {\n  const theme = useInternalTheme(themeOverrides);\n\n  return (\n    <View style={[styles.row, style]}>\n      {buttons.map((item, i) => {\n        const disabledChildStyle = getDisabledSegmentedButtonStyle({\n          theme,\n          buttons,\n          index: i,\n        });\n        const segment =\n          i === 0 ? 'first' : i === buttons.length - 1 ? 'last' : undefined;\n\n        const checked =\n          multiSelect && Array.isArray(value)\n            ? value.includes(item.value)\n            : value === item.value;\n\n        const onPress = (e: GestureResponderEvent) => {\n          item.onPress?.(e);\n\n          const nextValue =\n            multiSelect && Array.isArray(value)\n              ? checked\n                ? value.filter((val) => item.value !== val)\n                : [...value, item.value]\n              : item.value;\n\n          // @ts-expect-error: TS doesn't preserve types after destructuring, so the type isn't inferred correctly\n          onValueChange(nextValue);\n        };\n\n        return (\n          <SegmentedButtonItem\n            {...item}\n            key={i}\n            checked={checked}\n            segment={segment}\n            density={density}\n            onPress={onPress}\n            style={[item.style, disabledChildStyle]}\n            labelStyle={item.labelStyle}\n            theme={theme}\n          />\n        );\n      })}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  row: {\n    flexDirection: 'row',\n  },\n});\n\nexport default SegmentedButtons;\n\n// @component-docs ignore-next-line\nexport { SegmentedButtons as SegmentedButtons };\n","import { StyleSheet, ViewStyle } from 'react-native';\n\nimport color from 'color';\n\nimport { black, white } from '../../styles/themes/v2/colors';\nimport type { InternalTheme } from '../../types';\n\ntype BaseProps = {\n  theme: InternalTheme;\n  disabled?: boolean;\n  checked: boolean;\n};\n\ntype SegmentedButtonProps = {\n  checkedColor?: string;\n  uncheckedColor?: string;\n} & BaseProps;\n\nconst DEFAULT_PADDING = 9;\n\nexport const getSegmentedButtonDensityPadding = ({\n  density,\n}: {\n  density?: 'regular' | 'small' | 'medium' | 'high';\n}) => {\n  let padding = DEFAULT_PADDING;\n\n  switch (density) {\n    case 'small':\n      return padding - 2;\n    case 'medium':\n      return padding - 4;\n    case 'high':\n      return padding - 8;\n    default:\n      return padding;\n  }\n};\n\nexport const getDisabledSegmentedButtonStyle = ({\n  theme,\n  index,\n  buttons,\n}: {\n  theme: InternalTheme;\n  buttons: { disabled?: boolean }[];\n  index: number;\n}): ViewStyle => {\n  const width = getSegmentedButtonBorderWidth({ theme });\n  const isDisabled = buttons[index]?.disabled;\n  const isNextDisabled = buttons[index + 1]?.disabled;\n\n  if (!isDisabled && isNextDisabled) {\n    return {\n      borderRightWidth: width,\n    };\n  }\n  return {};\n};\n\nexport const getSegmentedButtonBorderRadius = ({\n  segment,\n  theme,\n}: {\n  theme: InternalTheme;\n  segment?: 'first' | 'last';\n}): ViewStyle => {\n  if (segment === 'first') {\n    return {\n      borderTopRightRadius: 0,\n      borderBottomRightRadius: 0,\n      ...(theme.isV3 && { borderRightWidth: 0 }),\n    };\n  } else if (segment === 'last') {\n    return {\n      borderTopLeftRadius: 0,\n      borderBottomLeftRadius: 0,\n    };\n  } else {\n    return {\n      borderRadius: 0,\n      ...(theme.isV3 && { borderRightWidth: 0 }),\n    };\n  }\n};\n\nconst getSegmentedButtonBackgroundColor = ({ checked, theme }: BaseProps) => {\n  if (checked) {\n    if (theme.isV3) {\n      return theme.colors.secondaryContainer;\n    } else {\n      return color(theme.colors.primary).alpha(0.12).rgb().string();\n    }\n  }\n  return 'transparent';\n};\n\nconst getSegmentedButtonBorderColor = ({\n  theme,\n  disabled,\n  checked,\n}: BaseProps) => {\n  if (theme.isV3) {\n    if (disabled) {\n      return theme.colors.surfaceDisabled;\n    }\n    return theme.colors.outline;\n  }\n  if (checked) {\n    return theme.colors.primary;\n  }\n\n  return color(theme.dark ? white : black)\n    .alpha(0.29)\n    .rgb()\n    .string();\n};\n\nconst getSegmentedButtonBorderWidth = ({\n  theme,\n}: Omit<BaseProps, 'disabled' | 'checked'>) => {\n  if (theme.isV3) {\n    return 1;\n  }\n\n  return StyleSheet.hairlineWidth;\n};\n\nconst getSegmentedButtonTextColor = ({\n  theme,\n  disabled,\n  checked,\n  checkedColor,\n  uncheckedColor,\n}: SegmentedButtonProps) => {\n  if (theme.isV3) {\n    if (disabled) {\n      return theme.colors.onSurfaceDisabled;\n    }\n    if (checked) {\n      return checkedColor ?? theme.colors.onSecondaryContainer;\n    }\n    return uncheckedColor ?? theme.colors.onSurface;\n  }\n\n  if (disabled) {\n    return theme.colors.disabled;\n  }\n  // Primary color is used for checked state too.\n  return theme.colors.primary;\n};\n\nexport const getSegmentedButtonColors = ({\n  theme,\n  disabled,\n  checked,\n  checkedColor,\n  uncheckedColor,\n}: SegmentedButtonProps) => {\n  const backgroundColor = getSegmentedButtonBackgroundColor({\n    theme,\n    checked,\n  });\n  const borderColor = getSegmentedButtonBorderColor({\n    theme,\n    disabled,\n    checked,\n  });\n  const textColor = getSegmentedButtonTextColor({\n    theme,\n    disabled,\n    checked,\n    checkedColor,\n    uncheckedColor,\n  });\n  const borderWidth = getSegmentedButtonBorderWidth({ theme });\n\n  return { backgroundColor, borderColor, textColor, borderWidth };\n};\n","import * as React from 'react';\nimport {\n  Animated,\n  ColorValue,\n  Easing,\n  I18nManager,\n  StyleProp,\n  StyleSheet,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\nimport useLatestCallback from 'use-latest-callback';\n\nimport Button from './Button/Button';\nimport type { IconSource } from './Icon';\nimport IconButton from './IconButton/IconButton';\nimport MaterialCommunityIcon from './MaterialCommunityIcon';\nimport Surface from './Surface';\nimport Text from './Typography/Text';\nimport { useInternalTheme } from '../core/theming';\nimport type { $Omit, $RemoveChildren, ThemeProp } from '../types';\n\nexport type Props = $Omit<React.ComponentProps<typeof Surface>, 'mode'> & {\n  /**\n   * Whether the Snackbar is currently visible.\n   */\n  visible: boolean;\n  /**\n   * Label and press callback for the action button. It should contain the following properties:\n   * - `label` - Label of the action button\n   * - `onPress` - Callback that is called when action button is pressed.\n   */\n  action?: $RemoveChildren<typeof Button> & {\n    label: string;\n  };\n  /**\n   * @supported Available in v5.x with theme version 3\n   * Icon to display when `onIconPress` is defined. Default will be `close` icon.\n   */\n  icon?: IconSource;\n  /**\n   * @supported Available in v5.x with theme version 3\n   * Color of the ripple effect.\n   */\n  rippleColor?: ColorValue;\n  /**\n   * @supported Available in v5.x with theme version 3\n   * Function to execute on icon button press. The icon button appears only when this prop is specified.\n   */\n  onIconPress?: () => void;\n  /**\n   * @supported Available in v5.x with theme version 3\n   * Accessibility label for the icon button. This is read by the screen reader when the user taps the button.\n   */\n  iconAccessibilityLabel?: string;\n  /**\n   * The duration for which the Snackbar is shown.\n   */\n  duration?: number;\n  /**\n   * Callback called when Snackbar is dismissed. The `visible` prop needs to be updated when this is called.\n   */\n  onDismiss: () => void;\n  /**\n   * Text content of the Snackbar.\n   */\n  children: React.ReactNode;\n  /**\n   * @supported Available in v5.x with theme version 3\n   * Changes Snackbar shadow and background on iOS and Android.\n   */\n  elevation?: 0 | 1 | 2 | 3 | 4 | 5 | Animated.Value;\n  /**\n   * Specifies the largest possible scale a text font can reach.\n   */\n  maxFontSizeMultiplier?: number;\n  /**\n   * Style for the wrapper of the snackbar\n   */\n  wrapperStyle?: StyleProp<ViewStyle>;\n  style?: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\n  ref?: React.RefObject<View>;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n  /**\n   * TestID used for testing purposes\n   */\n  testID?: string;\n};\n\nconst DURATION_SHORT = 4000;\nconst DURATION_MEDIUM = 7000;\nconst DURATION_LONG = 10000;\n\n/**\n * Snackbars provide brief feedback about an operation through a message rendered at the bottom of the container in which it's wrapped.\n *\n * Note: To display it as a popup, regardless of the parent's position, wrap it with a `Portal` component – refer to the example in the \"More Examples` section.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { View, StyleSheet } from 'react-native';\n * import { Button, Snackbar } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [visible, setVisible] = React.useState(false);\n *\n *   const onToggleSnackBar = () => setVisible(!visible);\n *\n *   const onDismissSnackBar = () => setVisible(false);\n *\n *   return (\n *     <View style={styles.container}>\n *       <Button onPress={onToggleSnackBar}>{visible ? 'Hide' : 'Show'}</Button>\n *       <Snackbar\n *         visible={visible}\n *         onDismiss={onDismissSnackBar}\n *         action={{\n *           label: 'Undo',\n *           onPress: () => {\n *             // Do something\n *           },\n *         }}>\n *         Hey there! I'm a Snackbar.\n *       </Snackbar>\n *     </View>\n *   );\n * };\n *\n * const styles = StyleSheet.create({\n *   container: {\n *     flex: 1,\n *     justifyContent: 'space-between',\n *   },\n * });\n *\n * export default MyComponent;\n * ```\n */\nconst Snackbar = ({\n  visible,\n  action,\n  icon,\n  onIconPress,\n  iconAccessibilityLabel = 'Close icon',\n  duration = DURATION_MEDIUM,\n  onDismiss,\n  children,\n  elevation = 2,\n  wrapperStyle,\n  style,\n  theme: themeOverrides,\n  maxFontSizeMultiplier,\n  rippleColor,\n  testID,\n  ...rest\n}: Props) => {\n  const theme = useInternalTheme(themeOverrides);\n  const { bottom, right, left } = useSafeAreaInsets();\n\n  const { current: opacity } = React.useRef<Animated.Value>(\n    new Animated.Value(0.0)\n  );\n  const hideTimeout = React.useRef<NodeJS.Timeout | undefined>(undefined);\n\n  const [hidden, setHidden] = React.useState(!visible);\n\n  const { scale } = theme.animation;\n\n  const animateShow = useLatestCallback(() => {\n    if (hideTimeout.current) clearTimeout(hideTimeout.current);\n\n    Animated.timing(opacity, {\n      toValue: 1,\n      duration: 200 * scale,\n      easing: Easing.out(Easing.ease),\n      useNativeDriver: true,\n    }).start(({ finished }) => {\n      if (finished) {\n        const isInfinity =\n          duration === Number.POSITIVE_INFINITY ||\n          duration === Number.NEGATIVE_INFINITY;\n\n        if (!isInfinity) {\n          hideTimeout.current = setTimeout(\n            onDismiss,\n            duration\n          ) as unknown as NodeJS.Timeout;\n        }\n      }\n    });\n  });\n\n  const handleOnVisible = useLatestCallback(() => {\n    // show\n    setHidden(false);\n  });\n\n  const handleOnHidden = useLatestCallback(() => {\n    // hide\n    if (hideTimeout.current) {\n      clearTimeout(hideTimeout.current);\n    }\n\n    Animated.timing(opacity, {\n      toValue: 0,\n      duration: 100 * scale,\n      useNativeDriver: true,\n    }).start(({ finished }) => {\n      if (finished) {\n        setHidden(true);\n      }\n    });\n  });\n\n  React.useEffect(() => {\n    if (!hidden) {\n      animateShow();\n    }\n  }, [animateShow, hidden]);\n\n  React.useEffect(() => {\n    return () => {\n      if (hideTimeout.current) clearTimeout(hideTimeout.current);\n    };\n  }, []);\n\n  React.useLayoutEffect(() => {\n    if (visible) {\n      handleOnVisible();\n    } else {\n      handleOnHidden();\n    }\n  }, [visible, handleOnVisible, handleOnHidden]);\n\n  const { colors, roundness, isV3 } = theme;\n\n  if (hidden) {\n    return null;\n  }\n\n  const {\n    style: actionStyle,\n    label: actionLabel,\n    onPress: onPressAction,\n    rippleColor: actionRippleColor,\n    ...actionProps\n  } = action || {};\n\n  const buttonTextColor = isV3 ? colors.inversePrimary : colors.accent;\n  const textColor = isV3 ? colors.inverseOnSurface : colors?.surface;\n  const backgroundColor = isV3 ? colors.inverseSurface : colors?.onSurface;\n\n  const isIconButton = isV3 && onIconPress;\n\n  const marginLeft = action ? -12 : -16;\n\n  const wrapperPaddings = {\n    paddingBottom: bottom,\n    paddingHorizontal: Math.max(left, right),\n  };\n\n  const renderChildrenWithWrapper = () => {\n    if (typeof children === 'string') {\n      return (\n        <Text\n          variant=\"bodyMedium\"\n          style={[styles.content, { color: textColor }]}\n          maxFontSizeMultiplier={maxFontSizeMultiplier}\n        >\n          {children}\n        </Text>\n      );\n    }\n\n    return (\n      <View style={styles.content}>\n        {/* View is added to allow multiple lines support for Text component as children */}\n        <View>{children}</View>\n      </View>\n    );\n  };\n\n  return (\n    <View\n      pointerEvents=\"box-none\"\n      style={[styles.wrapper, wrapperPaddings, wrapperStyle]}\n    >\n      <Surface\n        pointerEvents=\"box-none\"\n        accessibilityLiveRegion=\"polite\"\n        theme={theme}\n        style={[\n          !isV3 && styles.elevation,\n          styles.container,\n          {\n            backgroundColor,\n            borderRadius: roundness,\n            opacity: opacity,\n            transform: [\n              {\n                scale: visible\n                  ? opacity.interpolate({\n                      inputRange: [0, 1],\n                      outputRange: [0.9, 1],\n                    })\n                  : 1,\n              },\n            ],\n          },\n          style,\n        ]}\n        testID={testID}\n        {...(isV3 && { elevation })}\n        {...rest}\n      >\n        {renderChildrenWithWrapper()}\n        {(action || isIconButton) && (\n          <View style={[styles.actionsContainer, { marginLeft }]}>\n            {action ? (\n              <Button\n                onPress={(event) => {\n                  onPressAction?.(event);\n                  onDismiss();\n                }}\n                style={[styles.button, actionStyle]}\n                textColor={buttonTextColor}\n                compact={!isV3}\n                mode=\"text\"\n                theme={theme}\n                rippleColor={actionRippleColor}\n                {...actionProps}\n              >\n                {actionLabel}\n              </Button>\n            ) : null}\n            {isIconButton ? (\n              <IconButton\n                accessibilityRole=\"button\"\n                borderless\n                onPress={onIconPress}\n                iconColor={theme.colors.inverseOnSurface}\n                rippleColor={rippleColor}\n                theme={theme}\n                icon={\n                  icon ||\n                  (({ size, color }) => {\n                    return (\n                      <MaterialCommunityIcon\n                        name=\"close\"\n                        color={color}\n                        size={size}\n                        direction={\n                          I18nManager.getConstants().isRTL ? 'rtl' : 'ltr'\n                        }\n                      />\n                    );\n                  })\n                }\n                accessibilityLabel={iconAccessibilityLabel}\n                style={styles.icon}\n                testID={`${testID}-icon`}\n              />\n            ) : null}\n          </View>\n        )}\n      </Surface>\n    </View>\n  );\n};\n\n/**\n * Show the Snackbar for a short duration.\n */\nSnackbar.DURATION_SHORT = DURATION_SHORT;\n\n/**\n * Show the Snackbar for a medium duration.\n */\nSnackbar.DURATION_MEDIUM = DURATION_MEDIUM;\n\n/**\n * Show the Snackbar for a long duration.\n */\nSnackbar.DURATION_LONG = DURATION_LONG;\n\nconst styles = StyleSheet.create({\n  wrapper: {\n    position: 'absolute',\n    bottom: 0,\n    width: '100%',\n  },\n  container: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    margin: 8,\n    borderRadius: 4,\n    minHeight: 48,\n  },\n  content: {\n    marginHorizontal: 16,\n    marginVertical: 14,\n    flex: 1,\n  },\n  actionsContainer: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    alignItems: 'center',\n    minHeight: 48,\n  },\n  button: {\n    marginRight: 8,\n    marginLeft: 4,\n  },\n  elevation: {\n    elevation: 6,\n  },\n  icon: {\n    width: 40,\n    height: 40,\n    margin: 0,\n  },\n});\n\nexport default Snackbar;\n","import * as React from 'react';\nimport {\n  Animated,\n  Platform,\n  ShadowStyleIOS,\n  StyleProp,\n  StyleSheet,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport { useInternalTheme } from '../core/theming';\nimport overlay, { isAnimatedValue } from '../styles/overlay';\nimport shadow from '../styles/shadow';\nimport type { ThemeProp, MD3Elevation } from '../types';\nimport { forwardRef } from '../utils/forwardRef';\nimport { splitStyles } from '../utils/splitStyles';\n\ntype Elevation = 0 | 1 | 2 | 3 | 4 | 5 | Animated.Value;\n\nexport type Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * Content of the `Surface`.\n   */\n  children: React.ReactNode;\n  style?: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\n  /**\n   * @supported Available in v5.x with theme version 3\n   * Changes shadows and background on iOS and Android.\n   * Used to create UI hierarchy between components.\n   *\n   * Note: If `mode` is set to `flat`, Surface doesn't have a shadow.\n   *\n   * Note: In version 2 the `elevation` prop was accepted via `style` prop i.e. `style={{ elevation: 4 }}`.\n   * It's no longer supported with theme version 3 and you should use `elevation` property instead.\n   */\n  elevation?: Elevation;\n  /**\n   * @supported Available in v5.x with theme version 3\n   * Mode of the Surface.\n   * - `elevated` - Surface with a shadow and background color corresponding to set `elevation` value.\n   * - `flat` - Surface without a shadow, with the background color corresponding to set `elevation` value.\n   */\n  mode?: 'flat' | 'elevated';\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n  /**\n   * TestID used for testing purposes\n   */\n  testID?: string;\n  ref?: React.RefObject<View>;\n};\n\nconst MD2Surface = forwardRef<View, Props>(\n  ({ style, theme: overrideTheme, ...rest }: Omit<Props, 'elevation'>, ref) => {\n    const { elevation = 4 } = (StyleSheet.flatten(style) || {}) as ViewStyle;\n    const { dark: isDarkTheme, mode, colors } = useInternalTheme(overrideTheme);\n\n    return (\n      <Animated.View\n        ref={ref}\n        {...rest}\n        style={[\n          {\n            backgroundColor:\n              isDarkTheme && mode === 'adaptive'\n                ? overlay(elevation, colors?.surface)\n                : colors?.surface,\n          },\n          elevation ? shadow(elevation) : null,\n          style,\n        ]}\n      />\n    );\n  }\n);\n\nconst outerLayerStyleProperties: (keyof ViewStyle)[] = [\n  'position',\n  'alignSelf',\n  'top',\n  'right',\n  'bottom',\n  'left',\n  'start',\n  'end',\n  'flex',\n  'flexShrink',\n  'flexGrow',\n  'width',\n  'height',\n  'transform',\n  'opacity',\n];\n\nconst shadowColor = '#000';\nconst iOSShadowOutputRanges = [\n  {\n    shadowOpacity: 0.15,\n    height: [0, 1, 2, 4, 6, 8],\n    shadowRadius: [0, 3, 6, 8, 10, 12],\n  },\n  {\n    shadowOpacity: 0.3,\n    height: [0, 1, 1, 1, 2, 4],\n    shadowRadius: [0, 1, 2, 3, 3, 4],\n  },\n];\nconst inputRange = [0, 1, 2, 3, 4, 5];\nfunction getStyleForShadowLayer(\n  elevation: Elevation,\n  layer: 0 | 1\n): Animated.WithAnimatedValue<ShadowStyleIOS> {\n  if (isAnimatedValue(elevation)) {\n    return {\n      shadowColor,\n      shadowOpacity: elevation.interpolate({\n        inputRange: [0, 1],\n        outputRange: [0, iOSShadowOutputRanges[layer].shadowOpacity],\n        extrapolate: 'clamp',\n      }),\n      shadowOffset: {\n        width: 0,\n        height: elevation.interpolate({\n          inputRange,\n          outputRange: iOSShadowOutputRanges[layer].height,\n        }),\n      },\n      shadowRadius: elevation.interpolate({\n        inputRange,\n        outputRange: iOSShadowOutputRanges[layer].shadowRadius,\n      }),\n    };\n  }\n\n  return {\n    shadowColor,\n    shadowOpacity: elevation ? iOSShadowOutputRanges[layer].shadowOpacity : 0,\n    shadowOffset: {\n      width: 0,\n      height: iOSShadowOutputRanges[layer].height[elevation],\n    },\n    shadowRadius: iOSShadowOutputRanges[layer].shadowRadius[elevation],\n  };\n}\n\nconst SurfaceIOS = forwardRef<\n  View,\n  Omit<Props, 'elevation'> & {\n    elevation: Elevation;\n    backgroundColor?: string | Animated.AnimatedInterpolation<string | number>;\n  }\n>(\n  (\n    {\n      elevation,\n      style,\n      backgroundColor,\n      testID,\n      children,\n      mode = 'elevated',\n      ...props\n    },\n    ref\n  ) => {\n    const [outerLayerViewStyles, innerLayerViewStyles] = React.useMemo(() => {\n      const flattenedStyles = (StyleSheet.flatten(style) || {}) as ViewStyle;\n\n      const [filteredStyles, outerLayerStyles, borderRadiusStyles] =\n        splitStyles(\n          flattenedStyles,\n          (style) =>\n            outerLayerStyleProperties.includes(style) ||\n            style.startsWith('margin'),\n          (style) => style.startsWith('border') && style.endsWith('Radius')\n        );\n\n      if (\n        process.env.NODE_ENV !== 'production' &&\n        filteredStyles.overflow === 'hidden' &&\n        elevation !== 0\n      ) {\n        console.warn(\n          'When setting overflow to hidden on Surface the shadow will not be displayed correctly. Wrap the content of your component in a separate View with the overflow style.'\n        );\n      }\n\n      const bgColor = flattenedStyles.backgroundColor || backgroundColor;\n\n      const isElevated = mode === 'elevated';\n\n      const outerLayerViewStyles = {\n        ...(isElevated && getStyleForShadowLayer(elevation, 0)),\n        ...outerLayerStyles,\n        ...borderRadiusStyles,\n        backgroundColor: bgColor,\n      };\n\n      const innerLayerViewStyles = {\n        ...(isElevated && getStyleForShadowLayer(elevation, 1)),\n        ...filteredStyles,\n        ...borderRadiusStyles,\n        flex: flattenedStyles.height ? 1 : undefined,\n        backgroundColor: bgColor,\n      };\n\n      return [outerLayerViewStyles, innerLayerViewStyles];\n    }, [style, elevation, backgroundColor, mode]);\n\n    return (\n      <Animated.View\n        ref={ref}\n        style={outerLayerViewStyles}\n        testID={`${testID}-outer-layer`}\n      >\n        <Animated.View {...props} style={innerLayerViewStyles} testID={testID}>\n          {children}\n        </Animated.View>\n      </Animated.View>\n    );\n  }\n);\n\n/**\n * Surface is a basic container that can give depth to an element with elevation shadow.\n * On dark theme with `adaptive` mode, surface is constructed by also placing a semi-transparent white overlay over a component surface.\n * See [Dark Theme](https://callstack.github.io/react-native-paper/docs/guides/theming#dark-theme) for more information.\n * Overlay and shadow can be applied by specifying the `elevation` property both on Android and iOS.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Surface, Text } from 'react-native-paper';\n * import { StyleSheet } from 'react-native';\n *\n * const MyComponent = () => (\n *   <Surface style={styles.surface} elevation={4}>\n *      <Text>Surface</Text>\n *   </Surface>\n * );\n *\n * export default MyComponent;\n *\n * const styles = StyleSheet.create({\n *   surface: {\n *     padding: 8,\n *     height: 80,\n *     width: 80,\n *     alignItems: 'center',\n *     justifyContent: 'center',\n *   },\n * });\n * ```\n */\nconst Surface = forwardRef<View, Props>(\n  (\n    {\n      elevation = 1,\n      children,\n      theme: overridenTheme,\n      style,\n      testID = 'surface',\n      mode = 'elevated',\n      ...props\n    }: Props,\n    ref\n  ) => {\n    const theme = useInternalTheme(overridenTheme);\n\n    if (!theme.isV3)\n      return (\n        <MD2Surface {...props} theme={theme} style={style} ref={ref}>\n          {children}\n        </MD2Surface>\n      );\n\n    const { colors } = theme;\n\n    const inputRange = [0, 1, 2, 3, 4, 5];\n\n    const backgroundColor = (() => {\n      if (isAnimatedValue(elevation)) {\n        return elevation.interpolate({\n          inputRange,\n          outputRange: inputRange.map((elevation) => {\n            return colors.elevation?.[`level${elevation as MD3Elevation}`];\n          }),\n        });\n      }\n\n      return colors.elevation?.[`level${elevation}`];\n    })();\n\n    const isElevated = mode === 'elevated';\n\n    if (Platform.OS === 'web') {\n      const { pointerEvents = 'auto' } = props;\n      return (\n        <Animated.View\n          {...props}\n          pointerEvents={pointerEvents}\n          ref={ref}\n          testID={testID}\n          style={[\n            { backgroundColor },\n            elevation && isElevated ? shadow(elevation, theme.isV3) : null,\n            style,\n          ]}\n        >\n          {children}\n        </Animated.View>\n      );\n    }\n\n    if (Platform.OS === 'android') {\n      const elevationLevel = [0, 3, 6, 9, 12, 15];\n\n      const getElevationAndroid = () => {\n        if (isAnimatedValue(elevation)) {\n          return elevation.interpolate({\n            inputRange,\n            outputRange: elevationLevel,\n          });\n        }\n\n        return elevationLevel[elevation];\n      };\n\n      const { margin, padding, transform, borderRadius } = (StyleSheet.flatten(\n        style\n      ) || {}) as ViewStyle;\n\n      const outerLayerStyles = { margin, padding, transform, borderRadius };\n      const sharedStyle = [{ backgroundColor }, style];\n\n      return (\n        <Animated.View\n          {...props}\n          testID={testID}\n          ref={ref}\n          style={[\n            {\n              backgroundColor,\n              transform,\n            },\n            outerLayerStyles,\n            sharedStyle,\n            isElevated && {\n              elevation: getElevationAndroid(),\n            },\n          ]}\n        >\n          {children}\n        </Animated.View>\n      );\n    }\n\n    return (\n      <SurfaceIOS\n        {...props}\n        ref={ref}\n        elevation={elevation}\n        backgroundColor={backgroundColor}\n        style={style}\n        testID={testID}\n        mode={mode}\n      >\n        {children}\n      </SurfaceIOS>\n    );\n  }\n);\n\nexport default Surface;\n","import * as React from 'react';\nimport {\n  NativeModules,\n  Platform,\n  StyleProp,\n  Switch as NativeSwitch,\n  ViewStyle,\n} from 'react-native';\n\nimport { getSwitchColor } from './utils';\nimport { useInternalTheme } from '../../core/theming';\nimport type { ThemeProp } from '../../types';\n\nconst version = NativeModules.PlatformConstants\n  ? NativeModules.PlatformConstants.reactNativeVersion\n  : undefined;\n\nexport type Props = React.ComponentPropsWithRef<typeof NativeSwitch> & {\n  /**\n   * Disable toggling the switch.\n   */\n  disabled?: boolean;\n  /**\n   * Value of the switch, true means 'on', false means 'off'.\n   */\n  value?: boolean;\n  /**\n   * Custom color for switch.\n   */\n  color?: string;\n  /**\n   * Callback called with the new value when it changes.\n   */\n  onValueChange?: Function;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n};\n\n/**\n * Switch is a visual toggle between two mutually exclusive states — on and off.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Switch } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [isSwitchOn, setIsSwitchOn] = React.useState(false);\n *\n *   const onToggleSwitch = () => setIsSwitchOn(!isSwitchOn);\n *\n *   return <Switch value={isSwitchOn} onValueChange={onToggleSwitch} />;\n * };\n *\n * export default MyComponent;\n * ```\n */\nconst Switch = ({\n  value,\n  disabled,\n  onValueChange,\n  color,\n  theme: themeOverrides,\n  ...rest\n}: Props) => {\n  const theme = useInternalTheme(themeOverrides);\n  const { checkedColor, onTintColor, thumbTintColor } = getSwitchColor({\n    theme,\n    disabled,\n    value,\n    color,\n  });\n\n  const props =\n    version && version.major === 0 && version.minor <= 56\n      ? {\n          onTintColor,\n          thumbTintColor,\n        }\n      : Platform.OS === 'web'\n      ? {\n          activeTrackColor: onTintColor,\n          thumbColor: thumbTintColor,\n          activeThumbColor: checkedColor,\n        }\n      : {\n          thumbColor: thumbTintColor,\n          trackColor: {\n            true: onTintColor,\n            false: onTintColor,\n          },\n        };\n\n  return (\n    <NativeSwitch\n      value={value}\n      disabled={disabled}\n      onValueChange={disabled ? undefined : onValueChange}\n      {...props}\n      {...rest}\n    />\n  );\n};\n\nexport default Switch;\n","import { Platform } from 'react-native';\n\nimport setColor from 'color';\n\nimport {\n  grey400,\n  grey800,\n  grey50,\n  grey700,\n  white,\n  black,\n} from '../../styles/themes/v2/colors';\nimport type { InternalTheme } from '../../types';\n\ntype BaseProps = {\n  theme: InternalTheme;\n  disabled?: boolean;\n  value?: boolean;\n};\n\nconst getCheckedColor = ({\n  theme,\n  color,\n}: {\n  theme: InternalTheme;\n  color?: string;\n}) => {\n  if (color) {\n    return color;\n  }\n\n  if (theme.isV3) {\n    return theme.colors.primary;\n  }\n\n  return theme.colors.accent;\n};\n\nconst getThumbTintColor = ({\n  theme,\n  disabled,\n  value,\n  checkedColor,\n}: BaseProps & { checkedColor: string }) => {\n  const isIOS = Platform.OS === 'ios';\n\n  if (isIOS) {\n    return undefined;\n  }\n\n  if (disabled) {\n    if (theme.dark) {\n      return grey800;\n    }\n    return grey400;\n  }\n\n  if (value) {\n    return checkedColor;\n  }\n\n  if (theme.dark) {\n    return grey400;\n  }\n  return grey50;\n};\n\nconst getOnTintColor = ({\n  theme,\n  disabled,\n  value,\n  checkedColor,\n}: BaseProps & { checkedColor: string }) => {\n  const isIOS = Platform.OS === 'ios';\n\n  if (isIOS) {\n    return checkedColor;\n  }\n\n  if (disabled) {\n    if (theme.dark) {\n      if (theme.isV3) {\n        return setColor(white).alpha(0.06).rgb().string();\n      }\n      return setColor(white).alpha(0.1).rgb().string();\n    }\n    return setColor(black).alpha(0.12).rgb().string();\n  }\n\n  if (value) {\n    return setColor(checkedColor).alpha(0.5).rgb().string();\n  }\n\n  if (theme.dark) {\n    return grey700;\n  }\n  return 'rgb(178, 175, 177)';\n};\n\nexport const getSwitchColor = ({\n  theme,\n  disabled,\n  value,\n  color,\n}: BaseProps & { color?: string }) => {\n  const checkedColor = getCheckedColor({ theme, color });\n\n  return {\n    onTintColor: getOnTintColor({ theme, disabled, value, checkedColor }),\n    thumbTintColor: getThumbTintColor({ theme, disabled, value, checkedColor }),\n    checkedColor,\n  };\n};\n","import * as React from 'react';\nimport {\n  StyleSheet,\n  ColorValue,\n  StyleProp,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport { TextInputLabelProp } from '../types';\n\ntype OutlineProps = {\n  isV3: boolean;\n  activeColor: string;\n  backgroundColor: ColorValue;\n  hasActiveOutline?: boolean;\n  focused?: boolean;\n  outlineColor?: string;\n  roundness?: number;\n  label?: TextInputLabelProp;\n  style?: StyleProp<ViewStyle>;\n};\n\nexport const Outline = ({\n  isV3,\n  label,\n  activeColor,\n  backgroundColor,\n  hasActiveOutline,\n  focused,\n  outlineColor,\n  roundness,\n  style,\n}: OutlineProps) => (\n  <View\n    testID=\"text-input-outline\"\n    pointerEvents=\"none\"\n    style={[\n      styles.outline,\n      !label && styles.noLabelOutline,\n      // eslint-disable-next-line react-native/no-inline-styles\n      {\n        backgroundColor,\n        borderRadius: roundness,\n        borderWidth: (isV3 ? hasActiveOutline : focused) ? 2 : 1,\n        borderColor: hasActiveOutline ? activeColor : outlineColor,\n      },\n      style,\n    ]}\n  />\n);\n\nconst styles = StyleSheet.create({\n  outline: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 6,\n    bottom: 0,\n  },\n  noLabelOutline: {\n    top: 0,\n  },\n});\n","import * as React from 'react';\nimport { Animated, StyleSheet, StyleProp, ViewStyle } from 'react-native';\n\nimport type { ThemeProp } from 'src/types';\n\nimport { useInternalTheme } from '../../../core/theming';\n\ntype UnderlineProps = {\n  parentState: {\n    focused: boolean;\n  };\n  error?: boolean;\n  colors?: {\n    error?: string;\n  };\n  activeColor: string;\n  underlineColorCustom?: string;\n  hasActiveOutline?: boolean;\n  style?: StyleProp<ViewStyle>;\n  theme?: ThemeProp;\n};\n\nexport const Underline = ({\n  parentState,\n  error,\n  colors,\n  activeColor,\n  underlineColorCustom,\n  hasActiveOutline,\n  style,\n  theme: themeOverrides,\n}: UnderlineProps) => {\n  const { isV3 } = useInternalTheme(themeOverrides);\n\n  let backgroundColor = parentState.focused\n    ? activeColor\n    : underlineColorCustom;\n\n  if (error) backgroundColor = colors?.error;\n\n  const activeScale = isV3 ? 2 : 1;\n\n  return (\n    <Animated.View\n      testID=\"text-input-underline\"\n      style={[\n        styles.underline,\n        isV3 && styles.md3Underline,\n        {\n          backgroundColor,\n          // Underlines is thinner when input is not focused\n          transform: [\n            {\n              scaleY: (isV3 ? hasActiveOutline : parentState.focused)\n                ? activeScale\n                : 0.5,\n            },\n          ],\n        },\n        style,\n      ]}\n    />\n  );\n};\n\nconst styles = StyleSheet.create({\n  underline: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    bottom: 0,\n    height: 2,\n    zIndex: 1,\n  },\n  md3Underline: {\n    height: 1,\n  },\n});\n","import React from 'react';\nimport type {\n  LayoutChangeEvent,\n  TextStyle,\n  StyleProp,\n  Animated,\n} from 'react-native';\n\nimport type { ThemeProp } from 'src/types';\n\nimport { AdornmentSide, AdornmentType, InputMode } from './enums';\nimport TextInputAffix, { AffixAdornment } from './TextInputAffix';\nimport TextInputIcon, { IconAdornment } from './TextInputIcon';\nimport type {\n  AdornmentConfig,\n  AdornmentStyleAdjustmentForNativeInput,\n} from './types';\nimport { getConstants } from '../helpers';\n\nexport function getAdornmentConfig({\n  left,\n  right,\n}: {\n  left?: React.ReactNode;\n  right?: React.ReactNode;\n}): Array<AdornmentConfig> {\n  let adornmentConfig: any[] = [];\n  if (left || right) {\n    [\n      { side: AdornmentSide.Left, adornment: left },\n      { side: AdornmentSide.Right, adornment: right },\n    ].forEach(({ side, adornment }) => {\n      if (adornment && React.isValidElement(adornment)) {\n        let type;\n        if (adornment.type === TextInputAffix) {\n          type = AdornmentType.Affix;\n        } else if (adornment.type === TextInputIcon) {\n          type = AdornmentType.Icon;\n        }\n        adornmentConfig.push({\n          side,\n          type,\n        });\n      }\n    });\n  }\n\n  return adornmentConfig;\n}\n\nexport function getAdornmentStyleAdjustmentForNativeInput({\n  adornmentConfig,\n  leftAffixWidth,\n  rightAffixWidth,\n  paddingHorizontal,\n  inputOffset = 0,\n  mode,\n  isV3,\n}: {\n  inputOffset?: number;\n  adornmentConfig: AdornmentConfig[];\n  leftAffixWidth: number;\n  rightAffixWidth: number;\n  mode?: 'outlined' | 'flat';\n  paddingHorizontal?: number | string;\n  isV3?: boolean;\n}): AdornmentStyleAdjustmentForNativeInput | {} {\n  const { OUTLINED_INPUT_OFFSET, ADORNMENT_OFFSET } = getConstants(isV3);\n\n  if (adornmentConfig.length) {\n    const adornmentStyleAdjustmentForNativeInput = adornmentConfig.map(\n      ({ type, side }: AdornmentConfig) => {\n        const isLeftSide = side === AdornmentSide.Left;\n        const inputModeAdornemntOffset =\n          mode === InputMode.Outlined\n            ? ADORNMENT_OFFSET + OUTLINED_INPUT_OFFSET\n            : ADORNMENT_OFFSET;\n        const paddingKey = `padding${captalize(side)}`;\n        const affixWidth = isLeftSide ? leftAffixWidth : rightAffixWidth;\n        const padding =\n          typeof paddingHorizontal === 'number'\n            ? paddingHorizontal\n            : inputModeAdornemntOffset;\n        const offset = affixWidth + padding;\n\n        const isAffix = type === AdornmentType.Affix;\n        const marginKey = `margin${captalize(side)}`;\n\n        return {\n          [marginKey]: isAffix ? 0 : offset,\n          [paddingKey]: isAffix ? offset : inputOffset,\n        };\n      }\n    );\n    const allStyleAdjustmentsMerged =\n      adornmentStyleAdjustmentForNativeInput.reduce(\n        (mergedStyles, currentStyle) => {\n          return {\n            ...mergedStyles,\n            ...currentStyle,\n          };\n        },\n        {}\n      );\n    return allStyleAdjustmentsMerged;\n  } else {\n    return [{}];\n  }\n}\n\nconst captalize = (text: string) =>\n  text.charAt(0).toUpperCase() + text.slice(1);\n\nexport interface TextInputAdornmentProps {\n  forceFocus: () => void;\n  adornmentConfig: AdornmentConfig[];\n  topPosition: {\n    [AdornmentType.Affix]: {\n      [AdornmentSide.Left]: number | null;\n      [AdornmentSide.Right]: number | null;\n    };\n    [AdornmentType.Icon]: number;\n  };\n  onAffixChange: {\n    [AdornmentSide.Left]: (event: LayoutChangeEvent) => void;\n    [AdornmentSide.Right]: (event: LayoutChangeEvent) => void;\n  };\n  left?: React.ReactNode;\n  right?: React.ReactNode;\n  textStyle?: StyleProp<TextStyle>;\n  visible?: Animated.Value;\n  isTextInputFocused: boolean;\n  paddingHorizontal?: number | string;\n  maxFontSizeMultiplier?: number | undefined | null;\n  theme?: ThemeProp;\n  disabled?: boolean;\n}\n\nconst TextInputAdornment: React.FunctionComponent<TextInputAdornmentProps> = ({\n  adornmentConfig,\n  left,\n  right,\n  onAffixChange,\n  textStyle,\n  visible,\n  topPosition,\n  isTextInputFocused,\n  forceFocus,\n  paddingHorizontal,\n  maxFontSizeMultiplier,\n  theme,\n  disabled,\n}) => {\n  if (adornmentConfig.length) {\n    return (\n      <>\n        {adornmentConfig.map(({ type, side }: AdornmentConfig) => {\n          let inputAdornmentComponent;\n          if (side === AdornmentSide.Left) {\n            inputAdornmentComponent = left;\n          } else if (side === AdornmentSide.Right) {\n            inputAdornmentComponent = right;\n          }\n\n          const commonProps = {\n            side: side,\n            testID: `${side}-${type}-adornment`,\n            isTextInputFocused,\n            paddingHorizontal,\n            disabled,\n          };\n          if (type === AdornmentType.Icon) {\n            return (\n              <IconAdornment\n                {...commonProps}\n                theme={theme}\n                key={side}\n                icon={inputAdornmentComponent}\n                topPosition={topPosition[AdornmentType.Icon]}\n                forceFocus={forceFocus}\n              />\n            );\n          } else if (type === AdornmentType.Affix) {\n            return (\n              <AffixAdornment\n                {...commonProps}\n                key={side}\n                topPosition={topPosition[AdornmentType.Affix][side]}\n                affix={inputAdornmentComponent}\n                textStyle={textStyle}\n                onLayout={onAffixChange[side]}\n                visible={visible}\n                maxFontSizeMultiplier={maxFontSizeMultiplier}\n              />\n            );\n          } else {\n            return null;\n          }\n        })}\n      </>\n    );\n  } else {\n    return null;\n  }\n};\n\nexport default TextInputAdornment;\n","import React from 'react';\nimport {\n  Animated,\n  GestureResponderEvent,\n  LayoutChangeEvent,\n  Pressable,\n  StyleProp,\n  StyleSheet,\n  Text,\n  TextStyle,\n  ViewStyle,\n} from 'react-native';\n\nimport { AdornmentSide } from './enums';\nimport { getTextColor } from './utils';\nimport { useInternalTheme } from '../../../core/theming';\nimport type { ThemeProp } from '../../../types';\nimport { getConstants } from '../helpers';\n\nexport type Props = {\n  /**\n   * Text to show.\n   */\n  text: string;\n  onLayout?: (event: LayoutChangeEvent) => void;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: (e: GestureResponderEvent) => void;\n  /**\n   * Accessibility label for the affix. This is read by the screen reader when the user taps the affix.\n   */\n  accessibilityLabel?: string;\n  /**\n   * Style that is passed to the Text element.\n   */\n  textStyle?: StyleProp<TextStyle>;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n};\n\ntype ContextState = {\n  topPosition: number | null;\n  onLayout?: (event: LayoutChangeEvent) => void;\n  visible?: Animated.Value;\n  textStyle?: StyleProp<TextStyle>;\n  side: AdornmentSide;\n  paddingHorizontal?: number | string;\n  maxFontSizeMultiplier?: number | undefined | null;\n  testID?: string;\n  disabled?: boolean;\n};\n\nconst AffixContext = React.createContext<ContextState>({\n  textStyle: { fontFamily: '', color: '' },\n  topPosition: null,\n  side: AdornmentSide.Left,\n});\n\nconst AffixAdornment: React.FunctionComponent<\n  {\n    affix: React.ReactNode;\n    testID: string;\n  } & ContextState\n> = ({\n  affix,\n  side,\n  textStyle,\n  topPosition,\n  onLayout,\n  visible,\n  paddingHorizontal,\n  maxFontSizeMultiplier,\n  testID,\n  disabled,\n}) => {\n  return (\n    <AffixContext.Provider\n      value={{\n        side,\n        textStyle,\n        topPosition,\n        onLayout,\n        visible,\n        paddingHorizontal,\n        maxFontSizeMultiplier,\n        testID,\n        disabled,\n      }}\n    >\n      {affix}\n    </AffixContext.Provider>\n  );\n};\n\n/**\n * A component to render a leading / trailing text in the TextInput\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { TextInput } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [text, setText] = React.useState('');\n *\n *   return (\n *     <TextInput\n *       mode=\"outlined\"\n *       label=\"Outlined input\"\n *       placeholder=\"Type something\"\n *       right={<TextInput.Affix text=\"/100\" />}\n *     />\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\n\nconst TextInputAffix = ({\n  text,\n  textStyle: labelStyle,\n  theme: themeOverrides,\n  onLayout: onTextLayout,\n  onPress,\n  accessibilityLabel = text,\n}: Props) => {\n  const theme = useInternalTheme(themeOverrides);\n  const { AFFIX_OFFSET } = getConstants(theme.isV3);\n\n  const {\n    textStyle,\n    onLayout,\n    topPosition,\n    side,\n    visible,\n    paddingHorizontal,\n    maxFontSizeMultiplier,\n    testID,\n    disabled,\n  } = React.useContext(AffixContext);\n\n  const offset =\n    typeof paddingHorizontal === 'number' ? paddingHorizontal : AFFIX_OFFSET;\n\n  const style = {\n    top: topPosition,\n    [side]: offset,\n  } as ViewStyle;\n\n  const textColor = getTextColor({ theme, disabled });\n\n  const content = (\n    <Text\n      maxFontSizeMultiplier={maxFontSizeMultiplier}\n      style={[{ color: textColor }, textStyle, labelStyle]}\n      onLayout={onTextLayout}\n      testID={`${testID}-text`}\n    >\n      {text}\n    </Text>\n  );\n\n  return (\n    <Animated.View\n      style={[\n        styles.container,\n        style,\n        {\n          opacity:\n            visible?.interpolate({\n              inputRange: [0, 1],\n              outputRange: [1, 0],\n            }) || 1,\n        },\n      ]}\n      onLayout={onLayout}\n      testID={testID}\n    >\n      {onPress ? (\n        <Pressable\n          onPress={onPress}\n          accessibilityRole=\"button\"\n          accessibilityLabel={accessibilityLabel}\n        >\n          {content}\n        </Pressable>\n      ) : (\n        content\n      )}\n    </Animated.View>\n  );\n};\n\nTextInputAffix.displayName = 'TextInput.Affix';\n\nconst styles = StyleSheet.create({\n  container: {\n    position: 'absolute',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n\nexport default TextInputAffix;\n\n// @component-docs ignore-next-line\nexport { TextInputAffix, AffixAdornment };\n","import React from 'react';\nimport {\n  ColorValue,\n  GestureResponderEvent,\n  StyleProp,\n  StyleSheet,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport { getIconColor } from './utils';\nimport { useInternalTheme } from '../../../core/theming';\nimport type { $Omit, ThemeProp } from '../../../types';\nimport type { IconSource } from '../../Icon';\nimport IconButton from '../../IconButton/IconButton';\nimport { ICON_SIZE } from '../constants';\nimport { getConstants } from '../helpers';\n\nexport type Props = $Omit<\n  React.ComponentProps<typeof IconButton>,\n  'icon' | 'theme' | 'color' | 'iconColor'\n> & {\n  /**\n   * @renamed Renamed from 'name' to 'icon` in v5.x\n   * Icon to show.\n   */\n  icon: IconSource;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: (e: GestureResponderEvent) => void;\n  /**\n   * Whether the TextInput will focus after onPress.\n   */\n  forceTextInputFocus?: boolean;\n  /**\n   * Color of the icon or a function receiving a boolean indicating whether the TextInput is focused and returning the color.\n   */\n  color?: ((isTextInputFocused: boolean) => string | undefined) | string;\n  /**\n   * Color of the ripple effect.\n   */\n  rippleColor?: ColorValue;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n};\n\ntype StyleContextType = {\n  style: StyleProp<ViewStyle>;\n  isTextInputFocused: boolean;\n  forceFocus: () => void;\n  testID: string;\n  disabled?: boolean;\n};\n\nconst StyleContext = React.createContext<StyleContextType>({\n  style: {},\n  isTextInputFocused: false,\n  forceFocus: () => {},\n  testID: '',\n});\n\nconst IconAdornment: React.FunctionComponent<\n  {\n    testID: string;\n    icon: React.ReactNode;\n    topPosition: number;\n    side: 'left' | 'right';\n    theme?: ThemeProp;\n    disabled?: boolean;\n  } & Omit<StyleContextType, 'style'>\n> = ({\n  icon,\n  topPosition,\n  side,\n  isTextInputFocused,\n  forceFocus,\n  testID,\n  theme: themeOverrides,\n  disabled,\n}) => {\n  const { isV3 } = useInternalTheme(themeOverrides);\n  const { ICON_OFFSET } = getConstants(isV3);\n\n  const style = {\n    top: topPosition,\n    [side]: ICON_OFFSET,\n  };\n  const contextState = {\n    style,\n    isTextInputFocused,\n    forceFocus,\n    testID,\n    disabled,\n  };\n\n  return (\n    <StyleContext.Provider value={contextState}>{icon}</StyleContext.Provider>\n  );\n};\n\n/**\n * A component to render a leading / trailing icon in the TextInput\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { TextInput } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [text, setText] = React.useState('');\n *\n *   return (\n *     <TextInput\n *       label=\"Password\"\n *       secureTextEntry\n *       right={<TextInput.Icon icon=\"eye\" />}\n *     />\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\n\nconst TextInputIcon = ({\n  icon,\n  onPress,\n  forceTextInputFocus = true,\n  color: customColor,\n  theme: themeOverrides,\n  rippleColor,\n  ...rest\n}: Props) => {\n  const { style, isTextInputFocused, forceFocus, testID, disabled } =\n    React.useContext(StyleContext);\n\n  const onPressWithFocusControl = React.useCallback(\n    (e: GestureResponderEvent) => {\n      if (forceTextInputFocus && !isTextInputFocused) {\n        forceFocus();\n      }\n\n      onPress?.(e);\n    },\n    [forceTextInputFocus, forceFocus, isTextInputFocused, onPress]\n  );\n\n  const theme = useInternalTheme(themeOverrides);\n\n  const iconColor = getIconColor({\n    theme,\n    disabled,\n    isTextInputFocused,\n    customColor,\n  });\n\n  return (\n    <View style={[styles.container, style]}>\n      <IconButton\n        icon={icon}\n        style={styles.iconButton}\n        size={ICON_SIZE}\n        onPress={onPressWithFocusControl}\n        iconColor={iconColor}\n        testID={testID}\n        theme={themeOverrides}\n        rippleColor={rippleColor}\n        {...rest}\n      />\n    </View>\n  );\n};\nTextInputIcon.displayName = 'TextInput.Icon';\n\nconst styles = StyleSheet.create({\n  container: {\n    position: 'absolute',\n    width: ICON_SIZE,\n    height: ICON_SIZE,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  iconButton: {\n    margin: 0,\n  },\n});\n\nexport default TextInputIcon;\n\n// @component-docs ignore-next-line\nexport { IconAdornment };\n","export enum AdornmentType {\n  Icon = 'icon',\n  Affix = 'affix',\n}\nexport enum AdornmentSide {\n  Right = 'right',\n  Left = 'left',\n}\nexport enum InputMode {\n  Outlined = 'outlined',\n  Flat = 'flat',\n}\n","import color from 'color';\n\nimport type { InternalTheme } from '../../../types';\n\ntype BaseProps = {\n  theme: InternalTheme;\n  disabled?: boolean;\n};\n\nexport function getTextColor({ theme, disabled }: BaseProps) {\n  if (theme.isV3) {\n    if (disabled) {\n      return theme.colors.onSurfaceDisabled;\n    }\n    return theme.colors.onSurfaceVariant;\n  }\n  return color(theme.colors?.text)\n    .alpha(theme.dark ? 0.7 : 0.54)\n    .rgb()\n    .string();\n}\n\nexport function getIconColor({\n  theme,\n  isTextInputFocused,\n  disabled,\n  customColor,\n}: BaseProps & {\n  isTextInputFocused: boolean;\n  customColor?: ((isTextInputFocused: boolean) => string | undefined) | string;\n}) {\n  if (typeof customColor === 'function') {\n    return customColor(isTextInputFocused);\n  }\n  if (customColor) {\n    return customColor;\n  }\n\n  if (!theme.isV3) {\n    return theme.colors.text;\n  }\n\n  if (disabled) {\n    return theme.colors.onSurfaceDisabled;\n  }\n\n  return theme.colors.onSurfaceVariant;\n}\n","import React from 'react';\nimport {\n  Animated,\n  ColorValue,\n  Platform,\n  StyleSheet,\n  useWindowDimensions,\n  View,\n} from 'react-native';\n\nimport AnimatedText from '../../Typography/AnimatedText';\nimport { getConstants } from '../helpers';\nimport type { InputLabelProps } from '../types';\n\nconst InputLabel = (props: InputLabelProps) => {\n  const {\n    labeled,\n    wiggle,\n    error,\n    focused,\n    opacity,\n    labelLayoutWidth,\n    labelLayoutHeight,\n    labelBackground,\n    label,\n    labelError,\n    onLayoutAnimatedText,\n    onLabelTextLayout,\n    hasActiveOutline,\n    activeColor,\n    placeholderStyle,\n    baseLabelTranslateX,\n    baseLabelTranslateY,\n    font,\n    fontSize,\n    lineHeight,\n    fontWeight,\n    placeholderOpacity,\n    wiggleOffsetX,\n    labelScale,\n    topPosition,\n    paddingLeft,\n    paddingRight,\n    backgroundColor,\n    roundness,\n    placeholderColor,\n    errorColor,\n    labelTranslationXOffset,\n    maxFontSizeMultiplier,\n    testID,\n    isV3,\n    inputContainerLayout,\n    scaledLabel,\n  } = props;\n\n  const { INPUT_PADDING_HORIZONTAL } = getConstants(isV3);\n  const { width } = useWindowDimensions();\n\n  const paddingOffset =\n    paddingLeft && paddingRight ? { paddingLeft, paddingRight } : {};\n\n  const labelTranslationX = {\n    transform: [\n      {\n        // Offset label scale since RN doesn't support transform origin\n        translateX: labeled.interpolate({\n          inputRange: [0, 1],\n          outputRange: [baseLabelTranslateX, labelTranslationXOffset || 0],\n        }),\n      },\n    ],\n  };\n\n  const labelStyle = {\n    ...font,\n    fontSize,\n    lineHeight,\n    fontWeight,\n    opacity: labeled.interpolate({\n      inputRange: [0, 1],\n      outputRange: [hasActiveOutline ? 1 : 0, 0],\n    }),\n    transform: [\n      {\n        // Wiggle the label when there's an error\n        translateX: wiggle\n          ? error.interpolate({\n              inputRange: [0, 0.5, 1],\n              outputRange: [0, wiggleOffsetX, 0],\n            })\n          : 0,\n      },\n      {\n        // Move label to top\n        translateY:\n          baseLabelTranslateY !== 0\n            ? labeled.interpolate({\n                inputRange: [0, 1],\n                outputRange: [baseLabelTranslateY, 0],\n              })\n            : 0,\n      },\n      {\n        // Make label smaller\n        scale:\n          labelScale !== 0\n            ? labeled.interpolate({\n                inputRange: [0, 1],\n                outputRange: [labelScale, 1],\n              })\n            : labeled,\n      },\n    ],\n  };\n\n  const labelWidth =\n    (inputContainerLayout.width + INPUT_PADDING_HORIZONTAL / 2) /\n    (scaledLabel ? labelScale : 1);\n\n  const commonStyles = [\n    placeholderStyle,\n    {\n      top: topPosition,\n    },\n    {\n      maxWidth: labelWidth,\n    },\n    labelStyle,\n    paddingOffset || {},\n  ];\n\n  const textColor = (\n    labelError && errorColor ? errorColor : placeholderColor\n  ) as ColorValue;\n\n  return (\n    // Position colored placeholder and gray placeholder on top of each other and crossfade them\n    // This gives the effect of animating the color, but allows us to use native driver\n    <View\n      pointerEvents=\"none\"\n      style={[StyleSheet.absoluteFill, styles.overflow]}\n    >\n      <Animated.View\n        pointerEvents=\"none\"\n        style={[\n          StyleSheet.absoluteFill,\n          styles.labelContainer,\n          Platform.OS !== 'web' && { width },\n          { opacity },\n          labelTranslationX,\n        ]}\n      >\n        <View\n          style={{\n            width: labelWidth,\n          }}\n        >\n          {labelBackground?.({\n            labeled,\n            labelLayoutWidth,\n            labelLayoutHeight,\n            labelStyle,\n            placeholderStyle,\n            baseLabelTranslateX,\n            topPosition,\n            label,\n            backgroundColor,\n            roundness,\n            maxFontSizeMultiplier: maxFontSizeMultiplier,\n            testID,\n          })}\n          <AnimatedText\n            variant=\"bodySmall\"\n            onLayout={onLayoutAnimatedText}\n            onTextLayout={onLabelTextLayout}\n            style={[\n              commonStyles,\n              {\n                color: activeColor,\n              },\n            ]}\n            numberOfLines={1}\n            maxFontSizeMultiplier={maxFontSizeMultiplier}\n            testID={`${testID}-label-active`}\n          >\n            {label}\n          </AnimatedText>\n          <AnimatedText\n            variant={focused ? 'bodyLarge' : 'bodySmall'}\n            style={[\n              commonStyles,\n              {\n                color: textColor,\n                opacity: placeholderOpacity,\n              },\n            ]}\n            numberOfLines={1}\n            maxFontSizeMultiplier={maxFontSizeMultiplier}\n            testID={`${testID}-label-inactive`}\n          >\n            {label}\n          </AnimatedText>\n        </View>\n      </Animated.View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  overflow: {\n    overflow: 'hidden',\n  },\n  labelContainer: {\n    zIndex: 3,\n  },\n});\n\nexport default React.memo(InputLabel);\n","import * as React from 'react';\nimport { Animated, StyleSheet } from 'react-native';\n\nimport AnimatedText from '../../Typography/AnimatedText';\nimport type { LabelBackgroundProps } from '../types';\n\nconst LabelBackground = ({\n  labeled,\n  labelLayoutWidth,\n  labelLayoutHeight,\n  placeholderStyle,\n  baseLabelTranslateX,\n  topPosition,\n  backgroundColor,\n  roundness,\n  labelStyle,\n  maxFontSizeMultiplier,\n  testID,\n}: LabelBackgroundProps) => {\n  const opacity = labeled.interpolate({\n    inputRange: [0, 0.6],\n    outputRange: [1, 0],\n  });\n\n  const labelTranslationX = {\n    translateX: labeled.interpolate({\n      inputRange: [0, 1],\n      outputRange: [-baseLabelTranslateX, 0],\n    }),\n  };\n\n  const labelTextScaleY = {\n    scaleY: labeled.interpolate({\n      inputRange: [0, 1],\n      outputRange: [0.2, 1],\n    }),\n  };\n\n  const labelTextTransform = [...labelStyle.transform, labelTextScaleY];\n\n  const isRounded = roundness > 6;\n  const roundedEdgeCover = isRounded ? (\n    <Animated.View\n      key=\"labelBackground-view\"\n      pointerEvents=\"none\"\n      style={[\n        StyleSheet.absoluteFill,\n        styles.view,\n        {\n          backgroundColor,\n          maxHeight: Math.max(roundness / 3, 2),\n          bottom: Math.max(roundness, 2),\n          transform: [labelTranslationX],\n          opacity,\n        },\n      ]}\n    />\n  ) : null;\n\n  return [\n    roundedEdgeCover,\n    <AnimatedText\n      key=\"labelBackground-text\"\n      testID={`${testID}-label-background`}\n      style={[\n        placeholderStyle,\n        labelStyle,\n        styles.outlinedLabel,\n        {\n          top: topPosition + 1,\n          width: labelLayoutWidth - placeholderStyle.paddingHorizontal,\n          height: labelLayoutHeight,\n          backgroundColor,\n          opacity,\n          transform: labelTextTransform,\n        },\n      ]}\n      numberOfLines={1}\n      maxFontSizeMultiplier={maxFontSizeMultiplier}\n    />,\n  ];\n};\n\nexport default LabelBackground;\n\nconst styles = StyleSheet.create({\n  view: {\n    position: 'absolute',\n    top: 6,\n    left: 10,\n    width: 12,\n  },\n  // eslint-disable-next-line react-native/no-color-literals\n  outlinedLabel: {\n    position: 'absolute',\n    left: 8,\n    paddingHorizontal: 0,\n    color: 'transparent',\n  },\n});\n","import * as React from 'react';\nimport {\n  Animated,\n  LayoutChangeEvent,\n  StyleProp,\n  TextInput as NativeTextInput,\n  TextStyle,\n  ViewStyle,\n  NativeSyntheticEvent,\n  TextLayoutEventData,\n} from 'react-native';\n\nimport TextInputAffix, {\n  Props as TextInputAffixProps,\n} from './Adornment/TextInputAffix';\nimport TextInputIcon, {\n  Props as TextInputIconProps,\n} from './Adornment/TextInputIcon';\nimport TextInputFlat from './TextInputFlat';\nimport TextInputOutlined from './TextInputOutlined';\nimport type { RenderProps, TextInputLabelProp } from './types';\nimport { useInternalTheme } from '../../core/theming';\nimport type { ThemeProp } from '../../types';\nimport { forwardRef } from '../../utils/forwardRef';\nimport { roundLayoutSize } from '../../utils/roundLayoutSize';\n\nconst BLUR_ANIMATION_DURATION = 180;\nconst FOCUS_ANIMATION_DURATION = 150;\n\nexport type Props = React.ComponentPropsWithRef<typeof NativeTextInput> & {\n  /**\n   * Mode of the TextInput.\n   * - `flat` - flat input with an underline.\n   * - `outlined` - input with an outline.\n   *\n   * In `outlined` mode, the background color of the label is derived from `colors?.background` in theme or the `backgroundColor` style.\n   * This component render TextInputOutlined or TextInputFlat based on that props\n   */\n  mode?: 'flat' | 'outlined';\n  left?: React.ReactNode;\n  right?: React.ReactNode;\n  /**\n   * If true, user won't be able to interact with the component.\n   */\n  disabled?: boolean;\n  /**\n   * The text or component to use for the floating label.\n   */\n  label?: TextInputLabelProp;\n  /**\n   * Placeholder for the input.\n   */\n  placeholder?: string;\n  /**\n   * Whether to style the TextInput with error style.\n   */\n  error?: boolean;\n  /**\n   * Callback that is called when the text input's text changes. Changed text is passed as an argument to the callback handler.\n   */\n  onChangeText?: Function;\n  /**\n   * Selection color of the input. On iOS, it sets both the selection color and cursor color.\n   * On Android, it sets only the selection color.\n   */\n  selectionColor?: string;\n  /**\n   * @platform Android only\n   * Cursor (or \"caret\") color of the input on Android.\n   * This property has no effect on iOS.\n   */\n  cursorColor?: string;\n  /**\n   * Inactive underline color of the input.\n   */\n  underlineColor?: string;\n  /**\n   * Active underline color of the input.\n   */\n  activeUnderlineColor?: string;\n  /**\n   * Inactive outline color of the input.\n   */\n  outlineColor?: string;\n  /**\n   * Active outline color of the input.\n   */\n  activeOutlineColor?: string;\n  /**\n   * Color of the text in the input.\n   */\n  textColor?: string;\n  /**\n   * Sets min height with densed layout. For `TextInput` in `flat` mode\n   * height is `64dp` or in dense layout - `52dp` with label or `40dp` without label.\n   * For `TextInput` in `outlined` mode\n   * height is `56dp` or in dense layout - `40dp` regardless of label.\n   * When you apply `height` prop in style the `dense` prop affects only `paddingVertical` inside `TextInput`\n   */\n  dense?: boolean;\n  /**\n   * Whether the input can have multiple lines.\n   */\n  multiline?: boolean;\n  /**\n   * @platform Android only\n   * The number of lines to show in the input (Android only).\n   */\n  numberOfLines?: number;\n  /**\n   * Callback that is called when the text input is focused.\n   */\n  onFocus?: (args: any) => void;\n  /**\n   * Callback that is called when the text input is blurred.\n   */\n  onBlur?: (args: any) => void;\n  /**\n   *\n   * Callback to render a custom input component such as `react-native-text-input-mask`\n   * instead of the default `TextInput` component from `react-native`.\n   *\n   * Example:\n   * ```js\n   * <TextInput\n   *   label=\"Phone number\"\n   *   render={props =>\n   *     <TextInputMask\n   *       {...props}\n   *       mask=\"+[00] [000] [000] [000]\"\n   *     />\n   *   }\n   * />\n   * ```\n   */\n  render?: (props: RenderProps) => React.ReactNode;\n  /**\n   * Value of the text input.\n   */\n  value?: string;\n  /**\n   * Pass `fontSize` prop to modify the font size inside `TextInput`.\n   * Pass `height` prop to set `TextInput` height. When `height` is passed,\n   * `dense` prop will affect only input's `paddingVertical`.\n   * Pass `paddingHorizontal` to modify horizontal padding.\n   * This can be used to get MD Guidelines v1 TextInput look.\n   */\n  style?: StyleProp<TextStyle>;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n  /**\n   * testID to be used on tests.\n   */\n  testID?: string;\n  /**\n   * Pass custom style directly to the input itself.\n   * Overrides input style\n   * Example: `paddingLeft`, `backgroundColor`\n   */\n  contentStyle?: StyleProp<TextStyle>;\n  /**\n   * Pass style to override the default style of outlined wrapper.\n   * Overrides style when mode is set to `outlined`\n   * Example: `borderRadius`, `borderColor`\n   */\n  outlineStyle?: StyleProp<ViewStyle>;\n  /**\n   * Pass style to override the default style of underlined wrapper.\n   * Overrides style when mode is set to `flat`\n   * Example: `borderRadius`, `borderColor`\n   */\n  underlineStyle?: StyleProp<ViewStyle>;\n};\n\ninterface CompoundedComponent\n  extends React.ForwardRefExoticComponent<\n    Props & React.RefAttributes<TextInputHandles>\n  > {\n  Icon: React.FunctionComponent<TextInputIconProps>;\n  Affix: React.FunctionComponent<Partial<TextInputAffixProps>>;\n}\n\ntype TextInputHandles = Pick<\n  NativeTextInput,\n  'focus' | 'clear' | 'blur' | 'isFocused' | 'setNativeProps'\n>;\n\nconst DefaultRenderer = (props: RenderProps) => <NativeTextInput {...props} />;\n\n/**\n * A component to allow users to input text.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { TextInput } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [text, setText] = React.useState(\"\");\n *\n *   return (\n *     <TextInput\n *       label=\"Email\"\n *       value={text}\n *       onChangeText={text => setText(text)}\n *     />\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n *\n * @extends TextInput props https://reactnative.dev/docs/textinput#props\n */\nconst TextInput = forwardRef<TextInputHandles, Props>(\n  (\n    {\n      mode = 'flat',\n      dense = false,\n      disabled = false,\n      error: errorProp = false,\n      multiline = false,\n      editable = true,\n      contentStyle,\n      render = DefaultRenderer,\n      theme: themeOverrides,\n      ...rest\n    }: Props,\n    ref\n  ) => {\n    const theme = useInternalTheme(themeOverrides);\n    const isControlled = rest.value !== undefined;\n    const validInputValue = isControlled ? rest.value : rest.defaultValue;\n\n    const { current: labeled } = React.useRef<Animated.Value>(\n      new Animated.Value(validInputValue ? 0 : 1)\n    );\n    const { current: error } = React.useRef<Animated.Value>(\n      new Animated.Value(errorProp ? 1 : 0)\n    );\n    const [focused, setFocused] = React.useState<boolean>(false);\n    const [placeholder, setPlaceholder] = React.useState<string | undefined>(\n      ' '\n    );\n    const [uncontrolledValue, setUncontrolledValue] = React.useState<\n      string | undefined\n    >(validInputValue);\n    // Use value from props instead of local state when input is controlled\n    const value = isControlled ? rest.value : uncontrolledValue;\n\n    const [labelTextLayout, setLabelTextLayout] = React.useState({\n      width: 33,\n    });\n\n    const [inputContainerLayout, setInputContainerLayout] = React.useState({\n      width: 65,\n    });\n\n    const [labelLayout, setLabelLayout] = React.useState<{\n      measured: boolean;\n      width: number;\n      height: number;\n    }>({\n      measured: false,\n      width: 0,\n      height: 0,\n    });\n    const [leftLayout, setLeftLayout] = React.useState<{\n      height: number | null;\n      width: number | null;\n    }>({\n      width: null,\n      height: null,\n    });\n    const [rightLayout, setRightLayout] = React.useState<{\n      height: number | null;\n      width: number | null;\n    }>({\n      width: null,\n      height: null,\n    });\n\n    const timer = React.useRef<NodeJS.Timeout | undefined>();\n\n    const root = React.useRef<NativeTextInput | undefined | null>();\n\n    const { scale } = theme.animation;\n\n    React.useImperativeHandle(ref, () => ({\n      focus: () => root.current?.focus(),\n      clear: () => root.current?.clear(),\n      setNativeProps: (args: Object) => root.current?.setNativeProps(args),\n      isFocused: () => root.current?.isFocused() || false,\n      blur: () => root.current?.blur(),\n      forceFocus: () => root.current?.focus(),\n    }));\n\n    React.useEffect(() => {\n      // When the input has an error, we wiggle the label and apply error styles\n      if (errorProp) {\n        // show error\n        Animated.timing(error, {\n          toValue: 1,\n          duration: FOCUS_ANIMATION_DURATION * scale,\n          // To prevent this - https://github.com/callstack/react-native-paper/issues/941\n          useNativeDriver: true,\n        }).start();\n      } else {\n        // hide error\n        {\n          Animated.timing(error, {\n            toValue: 0,\n            duration: BLUR_ANIMATION_DURATION * scale,\n            // To prevent this - https://github.com/callstack/react-native-paper/issues/941\n            useNativeDriver: true,\n          }).start();\n        }\n      }\n    }, [errorProp, scale, error]);\n\n    React.useEffect(() => {\n      // Show placeholder text only if the input is focused, or there's no label\n      // We don't show placeholder if there's a label because the label acts as placeholder\n      // When focused, the label moves up, so we can show a placeholder\n      if (focused || !rest.label) {\n        // If the user wants to use the contextMenu, when changing the placeholder, the contextMenu is closed\n        // This is a workaround to mitigate this behavior in scenarios where the placeholder is not specified.\n        if (rest.placeholder) {\n          // Set the placeholder in a delay to offset the label animation\n          // If we show it immediately, they'll overlap and look ugly\n          timer.current = setTimeout(\n            () => setPlaceholder(rest.placeholder),\n            50\n          ) as unknown as NodeJS.Timeout;\n        }\n      } else {\n        // hidePlaceholder\n\n        // Issue: https://github.com/callstack/react-native-paper/issues/3138\n        // Description:   Changing the placeholder text value dynamically,\n        //                within multiline input on iOS, doesn't work properly –\n        //                the placeholder is not displayed initially.\n        // Root cause:    Placeholder initial value, which has length 0.\n        // More context:  The issue was also reproduced in react-native, using its own TextInput.\n        // Workaround:    Set an empty space character in the default value.\n        setPlaceholder(' ');\n      }\n\n      return () => {\n        if (timer.current) {\n          clearTimeout(timer.current);\n        }\n      };\n    }, [focused, rest.label, rest.placeholder]);\n\n    React.useEffect(() => {\n      labeled.stopAnimation();\n      // The label should be minimized if the text input is focused, or has text\n      // In minimized mode, the label moves up and becomes small\n      // workaround for animated regression for react native > 0.61\n      // https://github.com/callstack/react-native-paper/pull/1440\n      if (value || focused) {\n        // minimize label\n        Animated.timing(labeled, {\n          toValue: 0,\n          duration: BLUR_ANIMATION_DURATION * scale,\n          // To prevent this - https://github.com/callstack/react-native-paper/issues/941\n          useNativeDriver: true,\n        }).start();\n      } else {\n        // restore label\n        Animated.timing(labeled, {\n          toValue: 1,\n          duration: FOCUS_ANIMATION_DURATION * scale,\n          // To prevent this - https://github.com/callstack/react-native-paper/issues/941\n          useNativeDriver: true,\n        }).start();\n      }\n    }, [focused, value, labeled, scale]);\n\n    const onLeftAffixLayoutChange = React.useCallback(\n      (event: LayoutChangeEvent) => {\n        const height = roundLayoutSize(event.nativeEvent.layout.height);\n        const width = roundLayoutSize(event.nativeEvent.layout.width);\n\n        if (width !== leftLayout.width || height !== leftLayout.height) {\n          setLeftLayout({\n            width,\n            height,\n          });\n        }\n      },\n      [leftLayout.height, leftLayout.width]\n    );\n\n    const onRightAffixLayoutChange = React.useCallback(\n      (event: LayoutChangeEvent) => {\n        const width = roundLayoutSize(event.nativeEvent.layout.width);\n        const height = roundLayoutSize(event.nativeEvent.layout.height);\n\n        if (width !== rightLayout.width || height !== rightLayout.height) {\n          setRightLayout({\n            width,\n            height,\n          });\n        }\n      },\n      [rightLayout.height, rightLayout.width]\n    );\n\n    const handleFocus = (args: any) => {\n      if (disabled || !editable) {\n        return;\n      }\n\n      setFocused(true);\n\n      rest.onFocus?.(args);\n    };\n\n    const handleBlur = (args: Object) => {\n      if (!editable) {\n        return;\n      }\n\n      setFocused(false);\n      rest.onBlur?.(args);\n    };\n\n    const handleChangeText = (value: string) => {\n      if (!editable || disabled) {\n        return;\n      }\n\n      if (!isControlled) {\n        // Keep track of value in local state when input is not controlled\n        setUncontrolledValue(value);\n      }\n      rest.onChangeText?.(value);\n    };\n\n    const handleLayoutAnimatedText = React.useCallback(\n      (e: LayoutChangeEvent) => {\n        const width = roundLayoutSize(e.nativeEvent.layout.width);\n        const height = roundLayoutSize(e.nativeEvent.layout.height);\n\n        if (width !== labelLayout.width || height !== labelLayout.height) {\n          setLabelLayout({\n            width,\n            height,\n            measured: true,\n          });\n        }\n      },\n      [labelLayout.height, labelLayout.width]\n    );\n\n    const handleLabelTextLayout = React.useCallback(\n      ({ nativeEvent }: NativeSyntheticEvent<TextLayoutEventData>) => {\n        setLabelTextLayout({\n          width: nativeEvent.lines.reduce(\n            (acc, line) => acc + Math.ceil(line.width),\n            0\n          ),\n        });\n      },\n      []\n    );\n\n    const handleInputContainerLayout = React.useCallback(\n      ({ nativeEvent: { layout } }: LayoutChangeEvent) => {\n        setInputContainerLayout({\n          width: layout.width,\n        });\n      },\n      []\n    );\n\n    const forceFocus = React.useCallback(() => root.current?.focus(), []);\n\n    const { maxFontSizeMultiplier = 1.5 } = rest;\n\n    const scaledLabel = !!(value || focused);\n\n    if (mode === 'outlined') {\n      return (\n        <TextInputOutlined\n          dense={dense}\n          disabled={disabled}\n          error={errorProp}\n          multiline={multiline}\n          editable={editable}\n          render={render}\n          {...rest}\n          theme={theme}\n          value={value}\n          parentState={{\n            labeled,\n            error,\n            focused,\n            placeholder,\n            value,\n            labelTextLayout,\n            labelLayout,\n            leftLayout,\n            rightLayout,\n            inputContainerLayout,\n          }}\n          innerRef={(ref) => {\n            root.current = ref;\n          }}\n          onFocus={handleFocus}\n          forceFocus={forceFocus}\n          onBlur={handleBlur}\n          onChangeText={handleChangeText}\n          onLayoutAnimatedText={handleLayoutAnimatedText}\n          onInputLayout={handleInputContainerLayout}\n          onLabelTextLayout={handleLabelTextLayout}\n          onLeftAffixLayoutChange={onLeftAffixLayoutChange}\n          onRightAffixLayoutChange={onRightAffixLayoutChange}\n          maxFontSizeMultiplier={maxFontSizeMultiplier}\n          contentStyle={contentStyle}\n          scaledLabel={scaledLabel}\n        />\n      );\n    }\n\n    return (\n      <TextInputFlat\n        dense={dense}\n        disabled={disabled}\n        error={errorProp}\n        multiline={multiline}\n        editable={editable}\n        render={render}\n        {...rest}\n        theme={theme}\n        value={value}\n        parentState={{\n          labeled,\n          error,\n          focused,\n          placeholder,\n          value,\n          labelTextLayout,\n          labelLayout,\n          leftLayout,\n          rightLayout,\n          inputContainerLayout,\n        }}\n        innerRef={(ref) => {\n          root.current = ref;\n        }}\n        onFocus={handleFocus}\n        forceFocus={forceFocus}\n        onBlur={handleBlur}\n        onInputLayout={handleInputContainerLayout}\n        onChangeText={handleChangeText}\n        onLayoutAnimatedText={handleLayoutAnimatedText}\n        onLabelTextLayout={handleLabelTextLayout}\n        onLeftAffixLayoutChange={onLeftAffixLayoutChange}\n        onRightAffixLayoutChange={onRightAffixLayoutChange}\n        maxFontSizeMultiplier={maxFontSizeMultiplier}\n        contentStyle={contentStyle}\n        scaledLabel={scaledLabel}\n      />\n    );\n  }\n) as CompoundedComponent;\n// @component ./Adornment/TextInputIcon.tsx\nTextInput.Icon = TextInputIcon;\n\n// @component ./Adornment/TextInputAffix.tsx\n// @ts-ignore Types of property 'theme' are incompatible.\nTextInput.Affix = TextInputAffix;\n\nexport default TextInput;\n","import * as React from 'react';\nimport {\n  I18nManager,\n  Platform,\n  StyleSheet,\n  TextInput as NativeTextInput,\n  TextStyle,\n  View,\n  Animated,\n} from 'react-native';\n\nimport { Underline } from './Addons/Underline';\nimport { AdornmentSide, AdornmentType, InputMode } from './Adornment/enums';\nimport TextInputAdornment, {\n  TextInputAdornmentProps,\n} from './Adornment/TextInputAdornment';\nimport {\n  getAdornmentConfig,\n  getAdornmentStyleAdjustmentForNativeInput,\n} from './Adornment/TextInputAdornment';\nimport {\n  ADORNMENT_SIZE,\n  LABEL_PADDING_TOP_DENSE,\n  LABEL_WIGGLE_X_OFFSET,\n  MAXIMIZED_LABEL_FONT_SIZE,\n  MINIMIZED_LABEL_FONT_SIZE,\n  MINIMIZED_LABEL_Y_OFFSET,\n  MIN_DENSE_HEIGHT,\n  MIN_DENSE_HEIGHT_WL,\n} from './constants';\nimport {\n  adjustPaddingFlat,\n  calculateFlatAffixTopPosition,\n  calculateFlatInputHorizontalPadding,\n  calculateInputHeight,\n  calculateLabelTopPosition,\n  calculatePadding,\n  getConstants,\n  getFlatInputColors,\n  Padding,\n} from './helpers';\nimport InputLabel from './Label/InputLabel';\nimport type { ChildTextInputProps, RenderProps } from './types';\n\nconst TextInputFlat = ({\n  disabled = false,\n  editable = true,\n  label,\n  error = false,\n  selectionColor: customSelectionColor,\n  cursorColor,\n  underlineColor,\n  underlineStyle,\n  activeUnderlineColor,\n  textColor,\n  dense,\n  style,\n  theme,\n  render = (props: RenderProps) => <NativeTextInput {...props} />,\n  multiline = false,\n  parentState,\n  innerRef,\n  onFocus,\n  forceFocus,\n  onBlur,\n  onChangeText,\n  onLayoutAnimatedText,\n  onLabelTextLayout,\n  onLeftAffixLayoutChange,\n  onRightAffixLayoutChange,\n  onInputLayout,\n  left,\n  right,\n  placeholderTextColor,\n  testID = 'text-input-flat',\n  contentStyle,\n  scaledLabel,\n  ...rest\n}: ChildTextInputProps) => {\n  const isAndroid = Platform.OS === 'android';\n  const { colors, isV3, roundness } = theme;\n  const font = isV3 ? theme.fonts.bodyLarge : theme.fonts.regular;\n  const hasActiveOutline = parentState.focused || error;\n\n  const { LABEL_PADDING_TOP, FLAT_INPUT_OFFSET, MIN_HEIGHT, MIN_WIDTH } =\n    getConstants(isV3);\n\n  const {\n    fontSize: fontSizeStyle,\n    lineHeight: lineHeightStyle,\n    fontWeight,\n    height,\n    paddingHorizontal,\n    textAlign,\n    ...viewStyle\n  } = (StyleSheet.flatten(style) || {}) as TextStyle;\n  const fontSize = fontSizeStyle || MAXIMIZED_LABEL_FONT_SIZE;\n  const lineHeight =\n    lineHeightStyle || (Platform.OS === 'web' ? fontSize * 1.2 : undefined);\n\n  const isPaddingHorizontalPassed =\n    paddingHorizontal !== undefined && typeof paddingHorizontal === 'number';\n\n  const adornmentConfig = getAdornmentConfig({\n    left,\n    right,\n  });\n\n  let { paddingLeft, paddingRight } = calculateFlatInputHorizontalPadding({\n    adornmentConfig,\n    isV3,\n  });\n\n  if (isPaddingHorizontalPassed) {\n    paddingLeft = paddingHorizontal as number;\n    paddingRight = paddingHorizontal as number;\n  }\n\n  const { leftLayout, rightLayout } = parentState;\n\n  const rightAffixWidth = right\n    ? rightLayout.width || ADORNMENT_SIZE\n    : ADORNMENT_SIZE;\n\n  const leftAffixWidth = left\n    ? leftLayout.width || ADORNMENT_SIZE\n    : ADORNMENT_SIZE;\n\n  const adornmentStyleAdjustmentForNativeInput =\n    getAdornmentStyleAdjustmentForNativeInput({\n      adornmentConfig,\n      rightAffixWidth,\n      leftAffixWidth,\n      paddingHorizontal,\n      inputOffset: FLAT_INPUT_OFFSET,\n      mode: InputMode.Flat,\n      isV3,\n    });\n\n  const {\n    inputTextColor,\n    activeColor,\n    underlineColorCustom,\n    placeholderColor,\n    errorColor,\n    backgroundColor,\n    selectionColor,\n  } = getFlatInputColors({\n    underlineColor,\n    activeUnderlineColor,\n    customSelectionColor,\n    textColor,\n    disabled,\n    error,\n    theme,\n  });\n\n  const containerStyle = {\n    backgroundColor,\n    borderTopLeftRadius: theme.roundness,\n    borderTopRightRadius: theme.roundness,\n  };\n\n  const labelScale = MINIMIZED_LABEL_FONT_SIZE / fontSize;\n  const fontScale = MAXIMIZED_LABEL_FONT_SIZE / fontSize;\n\n  const labelWidth = parentState.labelLayout.width;\n  const labelHeight = parentState.labelLayout.height;\n  const labelHalfWidth = labelWidth / 2;\n  const labelHalfHeight = labelHeight / 2;\n\n  const baseLabelTranslateX =\n    (I18nManager.getConstants().isRTL ? 1 : -1) *\n      (labelHalfWidth - (labelScale * labelWidth) / 2) +\n    (1 - labelScale) *\n      (I18nManager.getConstants().isRTL ? -1 : 1) *\n      paddingLeft;\n\n  const minInputHeight = dense\n    ? (label ? MIN_DENSE_HEIGHT_WL : MIN_DENSE_HEIGHT) - LABEL_PADDING_TOP_DENSE\n    : MIN_HEIGHT - LABEL_PADDING_TOP;\n\n  const inputHeight = calculateInputHeight(labelHeight, height, minInputHeight);\n\n  const topPosition = calculateLabelTopPosition(\n    labelHeight,\n    inputHeight,\n    multiline && height ? 0 : !height ? minInputHeight / 2 : 0\n  );\n\n  if (height && typeof height !== 'number') {\n    // eslint-disable-next-line\n    console.warn('Currently we support only numbers in height prop');\n  }\n\n  const paddingSettings = {\n    height: height ? +height : null,\n    labelHalfHeight,\n    offset: FLAT_INPUT_OFFSET,\n    multiline: multiline ? multiline : null,\n    dense: dense ? dense : null,\n    topPosition,\n    fontSize,\n    lineHeight,\n    label,\n    scale: fontScale,\n    isAndroid,\n    styles: StyleSheet.flatten(\n      dense ? styles.inputFlatDense : styles.inputFlat\n    ) as Padding,\n  };\n\n  const pad = calculatePadding(paddingSettings);\n\n  const paddingFlat = adjustPaddingFlat({\n    ...paddingSettings,\n    pad,\n  });\n\n  const baseLabelTranslateY =\n    -labelHalfHeight - (topPosition + MINIMIZED_LABEL_Y_OFFSET);\n\n  const { current: placeholderOpacityAnims } = React.useRef([\n    new Animated.Value(0),\n    new Animated.Value(1),\n  ]);\n\n  const placeholderOpacity = hasActiveOutline\n    ? parentState.labeled\n    : placeholderOpacityAnims[parentState.labelLayout.measured ? 1 : 0];\n\n  const minHeight =\n    height ||\n    (dense ? (label ? MIN_DENSE_HEIGHT_WL : MIN_DENSE_HEIGHT) : MIN_HEIGHT);\n\n  const flatHeight =\n    inputHeight +\n    (!height ? (dense ? LABEL_PADDING_TOP_DENSE : LABEL_PADDING_TOP) : 0);\n\n  const iconTopPosition = (flatHeight - ADORNMENT_SIZE) / 2;\n\n  const leftAffixTopPosition = leftLayout.height\n    ? calculateFlatAffixTopPosition({\n        height: flatHeight,\n        ...paddingFlat,\n        affixHeight: leftLayout.height,\n      })\n    : null;\n\n  const rightAffixTopPosition = rightLayout.height\n    ? calculateFlatAffixTopPosition({\n        height: flatHeight,\n        ...paddingFlat,\n        affixHeight: rightLayout.height,\n      })\n    : null;\n\n  const labelProps = {\n    label,\n    onLayoutAnimatedText,\n    onLabelTextLayout,\n    placeholderOpacity,\n    labelError: error,\n    placeholderStyle: styles.placeholder,\n    baseLabelTranslateY,\n    baseLabelTranslateX,\n    font,\n    fontSize,\n    lineHeight,\n    fontWeight,\n    labelScale,\n    wiggleOffsetX: LABEL_WIGGLE_X_OFFSET,\n    topPosition,\n    paddingLeft: isAndroid\n      ? I18nManager.isRTL\n        ? paddingRight\n        : paddingLeft\n      : paddingLeft,\n    paddingRight: isAndroid\n      ? I18nManager.isRTL\n        ? paddingLeft\n        : paddingRight\n      : paddingRight,\n    hasActiveOutline,\n    activeColor,\n    placeholderColor,\n    errorColor,\n    roundness,\n    maxFontSizeMultiplier: rest.maxFontSizeMultiplier,\n    testID,\n    contentStyle,\n    inputContainerLayout: parentState.inputContainerLayout,\n    labelTextLayout: parentState.labelTextLayout,\n    opacity:\n      parentState.value || parentState.focused\n        ? parentState.labelLayout.measured\n          ? 1\n          : 0\n        : 1,\n    isV3,\n  };\n\n  const affixTopPosition = {\n    [AdornmentSide.Left]: leftAffixTopPosition,\n    [AdornmentSide.Right]: rightAffixTopPosition,\n  };\n  const onAffixChange = {\n    [AdornmentSide.Left]: onLeftAffixLayoutChange,\n    [AdornmentSide.Right]: onRightAffixLayoutChange,\n  };\n\n  let adornmentProps: TextInputAdornmentProps = {\n    paddingHorizontal,\n    adornmentConfig,\n    forceFocus,\n    topPosition: {\n      [AdornmentType.Affix]: affixTopPosition,\n      [AdornmentType.Icon]: iconTopPosition,\n    },\n    onAffixChange,\n    isTextInputFocused: parentState.focused,\n    maxFontSizeMultiplier: rest.maxFontSizeMultiplier,\n    disabled,\n  };\n  if (adornmentConfig.length) {\n    adornmentProps = {\n      ...adornmentProps,\n      left,\n      right,\n      textStyle: { ...font, fontSize, lineHeight, fontWeight },\n      visible: parentState.labeled,\n    };\n  }\n\n  return (\n    <View style={[containerStyle, viewStyle]}>\n      <Underline\n        style={underlineStyle}\n        hasActiveOutline={hasActiveOutline}\n        parentState={parentState}\n        underlineColorCustom={underlineColorCustom}\n        error={error}\n        colors={colors}\n        activeColor={activeColor}\n        theme={theme}\n      />\n      <View\n        onLayout={onInputLayout}\n        style={[\n          styles.labelContainer,\n          {\n            minHeight,\n          },\n        ]}\n      >\n        {!isAndroid && multiline && !!label && !disabled && (\n          // Workaround for: https://github.com/callstack/react-native-paper/issues/2799\n          // Patch for a multiline TextInput with fixed height, which allow to avoid covering input label with its value.\n          <View\n            testID=\"patch-container\"\n            pointerEvents=\"none\"\n            style={[\n              StyleSheet.absoluteFill,\n              dense ? styles.densePatchContainer : styles.patchContainer,\n              {\n                backgroundColor:\n                  viewStyle.backgroundColor || containerStyle.backgroundColor,\n                left: paddingLeft,\n                right: paddingRight,\n              },\n            ]}\n          />\n        )}\n        {label ? (\n          <InputLabel\n            labeled={parentState.labeled}\n            error={parentState.error}\n            focused={parentState.focused}\n            scaledLabel={scaledLabel}\n            wiggle={Boolean(parentState.value && labelProps.labelError)}\n            labelLayoutMeasured={parentState.labelLayout.measured}\n            labelLayoutWidth={parentState.labelLayout.width}\n            labelLayoutHeight={parentState.labelLayout.height}\n            {...labelProps}\n          />\n        ) : null}\n        {render?.({\n          ...rest,\n          ref: innerRef,\n          onChangeText,\n          placeholder: label ? parentState.placeholder : rest.placeholder,\n          editable: !disabled && editable,\n          selectionColor,\n          cursorColor:\n            typeof cursorColor === 'undefined' ? activeColor : cursorColor,\n          placeholderTextColor: placeholderTextColor ?? placeholderColor,\n          onFocus,\n          onBlur,\n          underlineColorAndroid: 'transparent',\n          multiline,\n          style: [\n            styles.input,\n            multiline && height ? { height: flatHeight } : {},\n            paddingFlat,\n            {\n              paddingLeft,\n              paddingRight,\n              ...font,\n              fontSize,\n              lineHeight,\n              fontWeight,\n              color: inputTextColor,\n              textAlignVertical: multiline ? 'top' : 'center',\n              textAlign: textAlign\n                ? textAlign\n                : I18nManager.getConstants().isRTL\n                ? 'right'\n                : 'left',\n              minWidth: Math.min(\n                parentState.labelTextLayout.width + 2 * FLAT_INPUT_OFFSET,\n                MIN_WIDTH\n              ),\n            },\n            Platform.OS === 'web' && { outline: 'none' },\n            adornmentStyleAdjustmentForNativeInput,\n            contentStyle,\n          ],\n          testID,\n        })}\n      </View>\n      <TextInputAdornment {...adornmentProps} />\n    </View>\n  );\n};\n\nexport default TextInputFlat;\n\nconst styles = StyleSheet.create({\n  placeholder: {\n    position: 'absolute',\n    left: 0,\n  },\n  labelContainer: {\n    paddingTop: 0,\n    paddingBottom: 0,\n    flexGrow: 1,\n  },\n  input: {\n    margin: 0,\n    flexGrow: 1,\n  },\n  inputFlat: {\n    paddingTop: 24,\n    paddingBottom: 4,\n  },\n  inputFlatDense: {\n    paddingTop: 22,\n    paddingBottom: 2,\n  },\n  patchContainer: {\n    height: 24,\n    zIndex: 2,\n  },\n  densePatchContainer: {\n    height: 22,\n    zIndex: 2,\n  },\n});\n","import * as React from 'react';\nimport {\n  Animated,\n  View,\n  TextInput as NativeTextInput,\n  StyleSheet,\n  I18nManager,\n  Platform,\n  TextStyle,\n  ColorValue,\n  LayoutChangeEvent,\n} from 'react-native';\n\nimport { Outline } from './Addons/Outline';\nimport { AdornmentType, AdornmentSide } from './Adornment/enums';\nimport TextInputAdornment, {\n  getAdornmentConfig,\n  getAdornmentStyleAdjustmentForNativeInput,\n  TextInputAdornmentProps,\n} from './Adornment/TextInputAdornment';\nimport {\n  MAXIMIZED_LABEL_FONT_SIZE,\n  MINIMIZED_LABEL_FONT_SIZE,\n  LABEL_WIGGLE_X_OFFSET,\n  ADORNMENT_SIZE,\n  OUTLINE_MINIMIZED_LABEL_Y_OFFSET,\n  LABEL_PADDING_TOP,\n  MIN_DENSE_HEIGHT_OUTLINED,\n  LABEL_PADDING_TOP_DENSE,\n} from './constants';\nimport {\n  calculateLabelTopPosition,\n  calculateInputHeight,\n  calculatePadding,\n  adjustPaddingOut,\n  Padding,\n  calculateOutlinedIconAndAffixTopPosition,\n  getOutlinedInputColors,\n  getConstants,\n} from './helpers';\nimport InputLabel from './Label/InputLabel';\nimport LabelBackground from './Label/LabelBackground';\nimport type { RenderProps, ChildTextInputProps } from './types';\n\nconst TextInputOutlined = ({\n  disabled = false,\n  editable = true,\n  label,\n  error = false,\n  selectionColor: customSelectionColor,\n  cursorColor,\n  underlineColor: _underlineColor,\n  outlineColor: customOutlineColor,\n  activeOutlineColor,\n  outlineStyle,\n  textColor,\n  dense,\n  style,\n  theme,\n  render = (props: RenderProps) => <NativeTextInput {...props} />,\n  multiline = false,\n  parentState,\n  innerRef,\n  onFocus,\n  forceFocus,\n  onBlur,\n  onChangeText,\n  onLayoutAnimatedText,\n  onLabelTextLayout,\n  onLeftAffixLayoutChange,\n  onRightAffixLayoutChange,\n  onInputLayout,\n  onLayout,\n  left,\n  right,\n  placeholderTextColor,\n  testID = 'text-input-outlined',\n  contentStyle,\n  scaledLabel,\n  ...rest\n}: ChildTextInputProps) => {\n  const adornmentConfig = getAdornmentConfig({ left, right });\n\n  const { colors, isV3, roundness } = theme;\n  const font = isV3 ? theme.fonts.bodyLarge : theme.fonts.regular;\n  const hasActiveOutline = parentState.focused || error;\n\n  const { INPUT_PADDING_HORIZONTAL, MIN_HEIGHT, ADORNMENT_OFFSET, MIN_WIDTH } =\n    getConstants(isV3);\n\n  const {\n    fontSize: fontSizeStyle,\n    fontWeight,\n    lineHeight: lineHeightStyle,\n    height,\n    backgroundColor = colors?.background,\n    textAlign,\n    ...viewStyle\n  } = (StyleSheet.flatten(style) || {}) as TextStyle;\n  const fontSize = fontSizeStyle || MAXIMIZED_LABEL_FONT_SIZE;\n  const lineHeight =\n    lineHeightStyle || (Platform.OS === 'web' ? fontSize * 1.2 : undefined);\n\n  const {\n    inputTextColor,\n    activeColor,\n    outlineColor,\n    placeholderColor,\n    errorColor,\n    selectionColor,\n  } = getOutlinedInputColors({\n    activeOutlineColor,\n    customOutlineColor,\n    customSelectionColor,\n    textColor,\n    disabled,\n    error,\n    theme,\n  });\n\n  const densePaddingTop = label ? LABEL_PADDING_TOP_DENSE : 0;\n  const paddingTop = label ? LABEL_PADDING_TOP : 0;\n  const yOffset = label ? OUTLINE_MINIMIZED_LABEL_Y_OFFSET : 0;\n\n  const labelScale = MINIMIZED_LABEL_FONT_SIZE / fontSize;\n  const fontScale = MAXIMIZED_LABEL_FONT_SIZE / fontSize;\n\n  const labelWidth = parentState.labelLayout.width;\n  const labelHeight = parentState.labelLayout.height;\n  const labelHalfWidth = labelWidth / 2;\n  const labelHalfHeight = labelHeight / 2;\n\n  const baseLabelTranslateX =\n    (I18nManager.getConstants().isRTL ? 1 : -1) *\n    (labelHalfWidth -\n      (labelScale * labelWidth) / 2 -\n      (fontSize - MINIMIZED_LABEL_FONT_SIZE) * labelScale);\n\n  let labelTranslationXOffset = 0;\n  const isAdornmentLeftIcon = adornmentConfig.some(\n    ({ side, type }) =>\n      side === AdornmentSide.Left && type === AdornmentType.Icon\n  );\n  const isAdornmentRightIcon = adornmentConfig.some(\n    ({ side, type }) =>\n      side === AdornmentSide.Right && type === AdornmentType.Icon\n  );\n\n  if (isAdornmentLeftIcon) {\n    labelTranslationXOffset =\n      (I18nManager.getConstants().isRTL ? -1 : 1) *\n      (ADORNMENT_SIZE + ADORNMENT_OFFSET - (isV3 ? 0 : 8));\n  }\n\n  const minInputHeight =\n    (dense ? MIN_DENSE_HEIGHT_OUTLINED : MIN_HEIGHT) - paddingTop;\n\n  const inputHeight = calculateInputHeight(labelHeight, height, minInputHeight);\n\n  const topPosition = calculateLabelTopPosition(\n    labelHeight,\n    inputHeight,\n    paddingTop\n  );\n\n  if (height && typeof height !== 'number') {\n    // eslint-disable-next-line\n    console.warn('Currently we support only numbers in height prop');\n  }\n\n  const paddingSettings = {\n    height: height ? +height : null,\n    labelHalfHeight,\n    offset: paddingTop,\n    multiline: multiline ? multiline : null,\n    dense: dense ? dense : null,\n    topPosition,\n    fontSize,\n    lineHeight,\n    label,\n    scale: fontScale,\n    isAndroid: Platform.OS === 'android',\n    styles: StyleSheet.flatten(\n      dense ? styles.inputOutlinedDense : styles.inputOutlined\n    ) as Padding,\n  };\n\n  const pad = calculatePadding(paddingSettings);\n\n  const paddingOut = adjustPaddingOut({ ...paddingSettings, pad });\n\n  const baseLabelTranslateY = -labelHalfHeight - (topPosition + yOffset);\n\n  const { current: placeholderOpacityAnims } = React.useRef([\n    new Animated.Value(0),\n    new Animated.Value(1),\n  ]);\n\n  const placeholderOpacity = hasActiveOutline\n    ? parentState.labeled\n    : placeholderOpacityAnims[parentState.labelLayout.measured ? 1 : 0];\n\n  const placeholderStyle = {\n    position: 'absolute',\n    left: 0,\n    paddingHorizontal: INPUT_PADDING_HORIZONTAL,\n  };\n\n  const labelBackgroundColor: ColorValue =\n    backgroundColor === 'transparent'\n      ? theme.colors.background\n      : backgroundColor;\n\n  const labelProps = {\n    label,\n    onLayoutAnimatedText,\n    onLabelTextLayout,\n    placeholderOpacity,\n    labelError: error,\n    placeholderStyle,\n    baseLabelTranslateY,\n    baseLabelTranslateX,\n    font,\n    fontSize,\n    lineHeight,\n    fontWeight,\n    labelScale,\n    wiggleOffsetX: LABEL_WIGGLE_X_OFFSET,\n    topPosition,\n    hasActiveOutline,\n    activeColor,\n    placeholderColor,\n    backgroundColor: labelBackgroundColor,\n    errorColor,\n    labelTranslationXOffset,\n    roundness,\n    maxFontSizeMultiplier: rest.maxFontSizeMultiplier,\n    testID,\n    contentStyle,\n    inputContainerLayout: {\n      width:\n        parentState.inputContainerLayout.width +\n        (isAdornmentRightIcon || isAdornmentLeftIcon\n          ? INPUT_PADDING_HORIZONTAL\n          : 0),\n    },\n    opacity:\n      parentState.value || parentState.focused\n        ? parentState.labelLayout.measured\n          ? 1\n          : 0\n        : 1,\n    isV3,\n  };\n\n  const onLayoutChange = React.useCallback(\n    (e: LayoutChangeEvent) => {\n      onInputLayout(e);\n      onLayout?.(e);\n    },\n    [onLayout, onInputLayout]\n  );\n\n  const minHeight = (height ||\n    (dense ? MIN_DENSE_HEIGHT_OUTLINED : MIN_HEIGHT)) as number;\n\n  const outlinedHeight =\n    inputHeight + (dense ? densePaddingTop / 2 : paddingTop);\n  const { leftLayout, rightLayout } = parentState;\n\n  const leftAffixTopPosition = calculateOutlinedIconAndAffixTopPosition({\n    height: outlinedHeight,\n    affixHeight: leftLayout.height || 0,\n    labelYOffset: -yOffset,\n  });\n\n  const rightAffixTopPosition = calculateOutlinedIconAndAffixTopPosition({\n    height: outlinedHeight,\n    affixHeight: rightLayout.height || 0,\n    labelYOffset: -yOffset,\n  });\n  const iconTopPosition = calculateOutlinedIconAndAffixTopPosition({\n    height: outlinedHeight,\n    affixHeight: ADORNMENT_SIZE,\n    labelYOffset: -yOffset,\n  });\n\n  const rightAffixWidth = right\n    ? rightLayout.width || ADORNMENT_SIZE\n    : ADORNMENT_SIZE;\n\n  const leftAffixWidth = left\n    ? leftLayout.width || ADORNMENT_SIZE\n    : ADORNMENT_SIZE;\n\n  const adornmentStyleAdjustmentForNativeInput =\n    getAdornmentStyleAdjustmentForNativeInput({\n      adornmentConfig,\n      rightAffixWidth,\n      leftAffixWidth,\n      mode: 'outlined',\n      isV3,\n    });\n  const affixTopPosition = {\n    [AdornmentSide.Left]: leftAffixTopPosition,\n    [AdornmentSide.Right]: rightAffixTopPosition,\n  };\n  const onAffixChange = {\n    [AdornmentSide.Left]: onLeftAffixLayoutChange,\n    [AdornmentSide.Right]: onRightAffixLayoutChange,\n  };\n\n  let adornmentProps: TextInputAdornmentProps = {\n    adornmentConfig,\n    forceFocus,\n    topPosition: {\n      [AdornmentType.Icon]: iconTopPosition,\n      [AdornmentType.Affix]: affixTopPosition,\n    },\n    onAffixChange,\n    isTextInputFocused: parentState.focused,\n    maxFontSizeMultiplier: rest.maxFontSizeMultiplier,\n    disabled,\n  };\n  if (adornmentConfig.length) {\n    adornmentProps = {\n      ...adornmentProps,\n      left,\n      right,\n      textStyle: { ...font, fontSize, lineHeight, fontWeight },\n      visible: parentState.labeled,\n    };\n  }\n\n  return (\n    <View style={viewStyle}>\n      {/*\n          Render the outline separately from the container\n          This is so that the label can overlap the outline\n          Otherwise the border will cut off the label on Android\n          */}\n      <Outline\n        isV3={isV3}\n        style={outlineStyle}\n        label={label}\n        roundness={roundness}\n        hasActiveOutline={hasActiveOutline}\n        focused={parentState.focused}\n        activeColor={activeColor}\n        outlineColor={outlineColor}\n        backgroundColor={backgroundColor}\n      />\n      <View\n        style={[\n          styles.labelContainer,\n          {\n            paddingTop,\n            minHeight,\n          },\n        ]}\n      >\n        {label ? (\n          <InputLabel\n            labeled={parentState.labeled}\n            error={parentState.error}\n            focused={parentState.focused}\n            scaledLabel={scaledLabel}\n            wiggle={Boolean(parentState.value && labelProps.labelError)}\n            labelLayoutMeasured={parentState.labelLayout.measured}\n            labelLayoutWidth={parentState.labelLayout.width}\n            labelLayoutHeight={parentState.labelLayout.height}\n            {...labelProps}\n            labelBackground={LabelBackground}\n            maxFontSizeMultiplier={rest.maxFontSizeMultiplier}\n          />\n        ) : null}\n        {render?.({\n          ...rest,\n          ref: innerRef,\n          onLayout: onLayoutChange,\n          onChangeText,\n          placeholder: label ? parentState.placeholder : rest.placeholder,\n          editable: !disabled && editable,\n          selectionColor,\n          cursorColor:\n            typeof cursorColor === 'undefined' ? activeColor : cursorColor,\n          placeholderTextColor: placeholderTextColor || placeholderColor,\n          onFocus,\n          onBlur,\n          underlineColorAndroid: 'transparent',\n          multiline,\n          style: [\n            styles.input,\n            !multiline || (multiline && height) ? { height: inputHeight } : {},\n            paddingOut,\n            {\n              ...font,\n              fontSize,\n              lineHeight,\n              fontWeight,\n              color: inputTextColor,\n              textAlignVertical: multiline ? 'top' : 'center',\n              textAlign: textAlign\n                ? textAlign\n                : I18nManager.getConstants().isRTL\n                ? 'right'\n                : 'left',\n              paddingHorizontal: INPUT_PADDING_HORIZONTAL,\n              minWidth: Math.min(\n                parentState.labelTextLayout.width +\n                  2 * INPUT_PADDING_HORIZONTAL,\n                MIN_WIDTH\n              ),\n            },\n            Platform.OS === 'web' && { outline: 'none' },\n            adornmentStyleAdjustmentForNativeInput,\n            contentStyle,\n          ],\n          testID,\n        } as RenderProps)}\n      </View>\n      <TextInputAdornment {...adornmentProps} />\n    </View>\n  );\n};\n\nexport default TextInputOutlined;\n\nconst styles = StyleSheet.create({\n  labelContainer: {\n    paddingBottom: 0,\n    flexGrow: 1,\n  },\n  input: {\n    margin: 0,\n    flexGrow: 1,\n  },\n  inputOutlined: {\n    paddingTop: 8,\n    paddingBottom: 8,\n  },\n  inputOutlinedDense: {\n    paddingTop: 4,\n    paddingBottom: 4,\n  },\n});\n","export const MAXIMIZED_LABEL_FONT_SIZE = 16;\nexport const MINIMIZED_LABEL_FONT_SIZE = 12;\nexport const LABEL_WIGGLE_X_OFFSET = 4;\n\nexport const ADORNMENT_SIZE = 24;\nexport const MIN_WIDTH = 100;\n\n//Text input affix offset\nexport const MD2_AFFIX_OFFSET = 12;\nexport const MD3_AFFIX_OFFSET = 16;\n\n// Text input icon\nexport const ICON_SIZE = 24;\nexport const MD2_ICON_OFFSET = 12;\nexport const MD3_ICON_OFFSET = 16;\n\n// Text input common\nexport const MD2_MIN_HEIGHT = 64;\nexport const MD3_MIN_HEIGHT = 56;\nexport const MD3_ADORNMENT_OFFSET = 16;\nexport const MD2_ADORNMENT_OFFSET = 12;\nexport const LABEL_PADDING_TOP_DENSE = 24;\nexport const LABEL_PADDING_TOP = 8;\n\n// Text input flat\nexport const MD2_LABEL_PADDING_TOP = 30;\nexport const MD3_LABEL_PADDING_TOP = 26;\n\nexport const MD2_LABEL_PADDING_HORIZONTAL = 12;\nexport const MD3_LABEL_PADDING_HORIZONTAL = 16;\n\nexport const MD2_FLAT_INPUT_OFFSET = 8;\nexport const MD3_FLAT_INPUT_OFFSET = 16;\n\nexport const MINIMIZED_LABEL_Y_OFFSET = -18;\nexport const MIN_DENSE_HEIGHT_WL = 52;\nexport const MIN_DENSE_HEIGHT = 40;\n\n// Text input outlined\nexport const MD2_INPUT_PADDING_HORIZONTAL = 14;\nexport const MD3_INPUT_PADDING_HORIZONTAL = 16;\n\n// extra space to avoid overlapping input's text and icon\nexport const MD2_OUTLINED_INPUT_OFFSET = 8;\nexport const MD3_OUTLINED_INPUT_OFFSET = 16;\n\nexport const OUTLINE_MINIMIZED_LABEL_Y_OFFSET = -6;\nexport const MIN_DENSE_HEIGHT_OUTLINED = 48;\n","import { Platform } from 'react-native';\n\nimport color from 'color';\n\nimport { AdornmentSide, AdornmentType } from './Adornment/enums';\nimport type { AdornmentConfig } from './Adornment/types';\nimport {\n  MIN_WIDTH,\n  ADORNMENT_SIZE,\n  MD2_ADORNMENT_OFFSET,\n  MD2_AFFIX_OFFSET,\n  MD2_FLAT_INPUT_OFFSET,\n  MD2_ICON_OFFSET,\n  MD2_INPUT_PADDING_HORIZONTAL,\n  MD2_LABEL_PADDING_HORIZONTAL,\n  MD2_LABEL_PADDING_TOP,\n  MD2_MIN_HEIGHT,\n  MD2_OUTLINED_INPUT_OFFSET,\n  MD3_ADORNMENT_OFFSET,\n  MD3_AFFIX_OFFSET,\n  MD3_FLAT_INPUT_OFFSET,\n  MD3_ICON_OFFSET,\n  MD3_INPUT_PADDING_HORIZONTAL,\n  MD3_LABEL_PADDING_HORIZONTAL,\n  MD3_LABEL_PADDING_TOP,\n  MD3_MIN_HEIGHT,\n  MD3_OUTLINED_INPUT_OFFSET,\n} from './constants';\nimport type { TextInputLabelProp } from './types';\nimport type { InternalTheme } from '../../types';\n\ntype PaddingProps = {\n  height: number | null;\n  labelHalfHeight: number;\n  multiline: boolean | null;\n  dense: boolean | null;\n  topPosition: number;\n  fontSize: number;\n  lineHeight?: number;\n  label?: TextInputLabelProp | null;\n  scale: number;\n  offset: number;\n  isAndroid: boolean;\n  styles: { paddingTop: number; paddingBottom: number };\n};\n\ntype AdjProps = PaddingProps & {\n  pad: number;\n};\n\nexport type Padding = { paddingTop: number; paddingBottom: number };\n\nexport const calculateLabelTopPosition = (\n  labelHeight: number,\n  height: number = 0,\n  optionalPadding: number = 0\n): number => {\n  const customHeight = height > 0 ? height : 0;\n\n  return Math.floor((customHeight - labelHeight) / 2 + optionalPadding);\n};\n\nexport const calculateInputHeight = (\n  labelHeight: number,\n  height: any = 0,\n  minHeight: number\n): number => {\n  const finalHeight = height > 0 ? height : labelHeight;\n\n  if (height > 0) return height;\n  return finalHeight < minHeight ? minHeight : finalHeight;\n};\n\nexport const calculatePadding = (props: PaddingProps): number => {\n  const { height, multiline = false } = props;\n\n  let result = 0;\n\n  if (multiline) {\n    if (height && multiline) {\n      result = calculateTextAreaPadding(props);\n    } else {\n      result = calculateInputPadding(props);\n    }\n  }\n\n  return Math.max(0, result);\n};\n\nconst calculateTextAreaPadding = (props: PaddingProps) => {\n  const { dense } = props;\n\n  return dense ? 10 : 20;\n};\n\nconst calculateInputPadding = ({\n  topPosition,\n  fontSize,\n  multiline,\n  scale,\n  dense,\n  offset,\n  isAndroid,\n}: PaddingProps): number => {\n  const refFontSize = scale * fontSize;\n  let result = Math.floor(topPosition / 2);\n\n  result =\n    result +\n    Math.floor((refFontSize - fontSize) / 2) -\n    (scale < 1 ? offset / 2 : 0);\n\n  if (multiline && isAndroid)\n    result = Math.min(dense ? offset / 2 : offset, result);\n\n  return result;\n};\n\nexport const adjustPaddingOut = ({\n  pad,\n  multiline,\n  label,\n  scale,\n  height,\n  fontSize,\n  lineHeight,\n  dense,\n  offset,\n  isAndroid,\n}: AdjProps): Padding => {\n  const fontHeight = lineHeight ?? fontSize;\n  const refFontHeight = scale * fontSize;\n  let result = pad;\n\n  if (!isAndroid && height && !multiline) {\n    return {\n      paddingTop: Math.max(0, (height - fontHeight) / 2),\n      paddingBottom: Math.max(0, (height - fontHeight) / 2),\n    };\n  }\n  if (!isAndroid && multiline) {\n    if (dense) {\n      if (label) {\n        result += scale < 1 ? Math.min(offset, (refFontHeight / 2) * scale) : 0;\n      } else {\n        result += 0;\n      }\n    }\n    if (!dense) {\n      if (label) {\n        result +=\n          scale < 1\n            ? Math.min(offset, refFontHeight * scale)\n            : Math.min(offset / 2, refFontHeight * scale);\n      } else {\n        result += scale < 1 ? Math.min(offset / 2, refFontHeight * scale) : 0;\n      }\n    }\n    result = Math.floor(result);\n  }\n  return { paddingTop: result, paddingBottom: result };\n};\n\nexport const adjustPaddingFlat = ({\n  pad,\n  scale,\n  multiline,\n  label,\n  height,\n  offset,\n  dense,\n  fontSize,\n  isAndroid,\n  styles,\n}: AdjProps): Padding => {\n  let result = pad;\n  let topResult = result;\n  let bottomResult = result;\n  const { paddingTop, paddingBottom } = styles;\n  const refFontSize = scale * fontSize;\n\n  if (!multiline) {\n    // do not modify padding if input is not multiline\n    if (label) {\n      // return const style for flat input with label\n      return { paddingTop, paddingBottom };\n    }\n    // return pad for flat input without label\n    return { paddingTop: result, paddingBottom: result };\n  }\n\n  if (label) {\n    // add paddings passed from styles\n    topResult = paddingTop;\n    bottomResult = paddingBottom;\n\n    // adjust top padding for iOS\n    if (!isAndroid) {\n      if (dense) {\n        topResult +=\n          scale < 1\n            ? Math.min(result, refFontSize * scale) - result / 2\n            : Math.min(result, refFontSize * scale) - result / 2;\n      }\n      if (!dense) {\n        topResult +=\n          scale < 1\n            ? Math.min(offset / 2, refFontSize * scale)\n            : Math.min(result, refFontSize * scale) - offset / 2;\n      }\n    }\n    topResult = Math.floor(topResult);\n  } else {\n    if (height) {\n      // center text when height is passed\n      return {\n        paddingTop: Math.max(0, (height - fontSize) / 2),\n        paddingBottom: Math.max(0, (height - fontSize) / 2),\n      };\n    }\n    // adjust paddings for iOS if no label\n    if (!isAndroid) {\n      if (dense) {\n        result +=\n          scale < 1\n            ? Math.min(offset / 2, (fontSize / 2) * scale)\n            : Math.min(offset / 2, scale);\n      }\n      if (!dense) {\n        result +=\n          scale < 1\n            ? Math.min(offset, fontSize * scale)\n            : Math.min(fontSize, (offset / 2) * scale);\n      }\n\n      result = Math.floor(result);\n      topResult = result;\n      bottomResult = result;\n    }\n  }\n\n  return {\n    paddingTop: Math.max(0, topResult),\n    paddingBottom: Math.max(0, bottomResult),\n  };\n};\n\nexport function calculateFlatAffixTopPosition({\n  height,\n  paddingTop,\n  paddingBottom,\n  affixHeight,\n}: {\n  height: number;\n  paddingTop: number;\n  paddingBottom: number;\n  affixHeight: number;\n}): number {\n  const inputHeightWithoutPadding = height - paddingTop - paddingBottom;\n\n  const halfOfTheInputHeightDecreasedByAffixHeight =\n    (inputHeightWithoutPadding - affixHeight) / 2;\n\n  return paddingTop + halfOfTheInputHeightDecreasedByAffixHeight;\n}\n\nexport function calculateOutlinedIconAndAffixTopPosition({\n  height,\n  affixHeight,\n  labelYOffset,\n}: {\n  height: number;\n  affixHeight: number;\n  labelYOffset: number;\n}): number {\n  return (height - affixHeight + labelYOffset) / 2;\n}\n\nexport const calculateFlatInputHorizontalPadding = ({\n  adornmentConfig,\n  isV3,\n}: {\n  adornmentConfig: AdornmentConfig[];\n  isV3?: boolean;\n}) => {\n  const { LABEL_PADDING_HORIZONTAL, ADORNMENT_OFFSET, FLAT_INPUT_OFFSET } =\n    getConstants(isV3);\n\n  let paddingLeft = LABEL_PADDING_HORIZONTAL;\n  let paddingRight = LABEL_PADDING_HORIZONTAL;\n\n  adornmentConfig.forEach(({ type, side }) => {\n    if (type === AdornmentType.Icon && side === AdornmentSide.Left) {\n      paddingLeft = ADORNMENT_SIZE + ADORNMENT_OFFSET + FLAT_INPUT_OFFSET;\n    } else if (side === AdornmentSide.Right) {\n      if (type === AdornmentType.Affix) {\n        paddingRight = ADORNMENT_SIZE + ADORNMENT_OFFSET + FLAT_INPUT_OFFSET;\n      } else if (type === AdornmentType.Icon) {\n        paddingRight = ADORNMENT_SIZE + ADORNMENT_OFFSET + FLAT_INPUT_OFFSET;\n      }\n    }\n  });\n\n  return { paddingLeft, paddingRight };\n};\n\ntype BaseProps = {\n  theme: InternalTheme;\n  disabled?: boolean;\n};\n\ntype Mode = 'flat' | 'outlined';\n\nconst getInputTextColor = ({\n  theme,\n  textColor,\n  disabled,\n}: BaseProps & { textColor?: string }) => {\n  if (textColor) {\n    return textColor;\n  }\n\n  if (theme.isV3) {\n    if (disabled) {\n      return theme.colors.onSurfaceDisabled;\n    }\n\n    return theme.colors.onSurface;\n  }\n\n  if (disabled) {\n    return color(theme.colors.text).alpha(0.54).rgb().string();\n  }\n\n  return theme.colors.text;\n};\n\nconst getActiveColor = ({\n  theme,\n  disabled,\n  error,\n  activeUnderlineColor,\n  activeOutlineColor,\n  mode,\n}: BaseProps & {\n  error?: boolean;\n  activeUnderlineColor?: string;\n  activeOutlineColor?: string;\n  mode?: Mode;\n}) => {\n  const isFlat = mode === 'flat';\n  const modeColor = isFlat ? activeUnderlineColor : activeOutlineColor;\n\n  if (error) {\n    return theme.colors.error;\n  }\n\n  if (modeColor) {\n    return modeColor;\n  }\n\n  if (disabled) {\n    if (theme.isV3) {\n      return theme.colors.onSurfaceDisabled;\n    }\n\n    return color(theme.colors.text).alpha(0.54).rgb().string();\n  }\n\n  return theme.colors.primary;\n};\n\nconst getPlaceholderColor = ({ theme, disabled }: BaseProps) => {\n  if (theme.isV3) {\n    if (disabled) {\n      return theme.colors.onSurfaceDisabled;\n    }\n\n    return theme.colors.onSurfaceVariant;\n  }\n\n  if (disabled) {\n    return theme.colors.disabled;\n  }\n\n  return theme.colors.placeholder;\n};\n\nconst getSelectionColor = ({\n  activeColor,\n  customSelectionColor,\n}: {\n  activeColor: string;\n  customSelectionColor?: string;\n}) => {\n  if (typeof customSelectionColor !== 'undefined') {\n    return customSelectionColor;\n  }\n\n  if (Platform.OS === 'android') {\n    return color(activeColor).alpha(0.54).rgb().string();\n  }\n\n  return activeColor;\n};\n\nconst getFlatBackgroundColor = ({ theme, disabled }: BaseProps) => {\n  if (theme.isV3) {\n    if (disabled) {\n      return color(theme.colors.onSurface).alpha(0.04).rgb().string();\n    } else {\n      return theme.colors.surfaceVariant;\n    }\n  }\n\n  if (disabled) {\n    return undefined;\n  }\n\n  return theme.dark\n    ? color(theme.colors?.background).lighten(0.24).rgb().string()\n    : color(theme.colors?.background).darken(0.06).rgb().string();\n};\n\nconst getFlatUnderlineColor = ({\n  theme,\n  disabled,\n  underlineColor,\n}: BaseProps & { underlineColor?: string }) => {\n  if (!disabled && underlineColor) {\n    return underlineColor;\n  }\n\n  if (theme.isV3) {\n    if (disabled) {\n      return theme.colors.onSurfaceDisabled;\n    }\n\n    return theme.colors.onSurfaceVariant;\n  }\n\n  if (disabled) {\n    return 'transparent';\n  }\n\n  return theme.colors.disabled;\n};\n\nconst getOutlinedOutlineInputColor = ({\n  theme,\n  disabled,\n  customOutlineColor,\n}: BaseProps & { customOutlineColor?: string }) => {\n  const isTransparent = color(customOutlineColor).alpha() === 0;\n\n  if (!disabled && customOutlineColor) {\n    return customOutlineColor;\n  }\n\n  if (theme.isV3) {\n    if (disabled) {\n      if (theme.dark) {\n        return 'transparent';\n      }\n      return theme.colors.surfaceDisabled;\n    }\n\n    return theme.colors.outline;\n  }\n\n  if (disabled) {\n    if (isTransparent) {\n      return customOutlineColor;\n    }\n    return theme.colors.disabled;\n  }\n  return theme.colors.placeholder;\n};\n\nexport const getFlatInputColors = ({\n  underlineColor,\n  activeUnderlineColor,\n  customSelectionColor,\n  textColor,\n  disabled,\n  error,\n  theme,\n}: {\n  underlineColor?: string;\n  activeUnderlineColor?: string;\n  customSelectionColor?: string;\n  textColor?: string;\n  disabled?: boolean;\n  error?: boolean;\n  theme: InternalTheme;\n}) => {\n  const baseFlatColorProps = { theme, disabled };\n  const activeColor = getActiveColor({\n    ...baseFlatColorProps,\n    error,\n    activeUnderlineColor,\n    mode: 'flat',\n  });\n\n  return {\n    inputTextColor: getInputTextColor({\n      ...baseFlatColorProps,\n      textColor,\n    }),\n    activeColor,\n    underlineColorCustom: getFlatUnderlineColor({\n      ...baseFlatColorProps,\n      underlineColor,\n    }),\n    placeholderColor: getPlaceholderColor(baseFlatColorProps),\n    selectionColor: getSelectionColor({ activeColor, customSelectionColor }),\n    errorColor: theme.colors.error,\n    backgroundColor: getFlatBackgroundColor(baseFlatColorProps),\n  };\n};\n\nexport const getOutlinedInputColors = ({\n  activeOutlineColor,\n  customOutlineColor,\n  customSelectionColor,\n  textColor,\n  disabled,\n  error,\n  theme,\n}: {\n  activeOutlineColor?: string;\n  customOutlineColor?: string;\n  customSelectionColor?: string;\n  textColor?: string;\n  disabled?: boolean;\n  error?: boolean;\n  theme: InternalTheme;\n}) => {\n  const baseOutlinedColorProps = { theme, disabled };\n  const activeColor = getActiveColor({\n    ...baseOutlinedColorProps,\n    error,\n    activeOutlineColor,\n    mode: 'outlined',\n  });\n\n  return {\n    inputTextColor: getInputTextColor({\n      ...baseOutlinedColorProps,\n      textColor,\n    }),\n    activeColor,\n    outlineColor: getOutlinedOutlineInputColor({\n      ...baseOutlinedColorProps,\n      customOutlineColor,\n    }),\n    placeholderColor: getPlaceholderColor(baseOutlinedColorProps),\n    selectionColor: getSelectionColor({ activeColor, customSelectionColor }),\n    errorColor: theme.colors.error,\n  };\n};\n\nexport const getConstants = (isV3?: boolean) => {\n  // Text input affix\n  let AFFIX_OFFSET;\n  // Text input icon\n  let ICON_OFFSET;\n  //Text input flat\n  let LABEL_PADDING_TOP;\n  let LABEL_PADDING_HORIZONTAL;\n  let FLAT_INPUT_OFFSET;\n  let MIN_HEIGHT;\n  // Text input outlined;\n  let INPUT_PADDING_HORIZONTAL;\n  let ADORNMENT_OFFSET;\n  let OUTLINED_INPUT_OFFSET;\n\n  if (isV3) {\n    AFFIX_OFFSET = MD3_AFFIX_OFFSET;\n    ICON_OFFSET = MD3_ICON_OFFSET;\n    LABEL_PADDING_TOP = MD3_LABEL_PADDING_TOP;\n    LABEL_PADDING_HORIZONTAL = MD3_LABEL_PADDING_HORIZONTAL;\n    FLAT_INPUT_OFFSET = MD3_FLAT_INPUT_OFFSET;\n    MIN_HEIGHT = MD3_MIN_HEIGHT;\n    INPUT_PADDING_HORIZONTAL = MD3_INPUT_PADDING_HORIZONTAL;\n    ADORNMENT_OFFSET = MD3_ADORNMENT_OFFSET;\n    OUTLINED_INPUT_OFFSET = MD3_OUTLINED_INPUT_OFFSET;\n  } else {\n    AFFIX_OFFSET = MD2_AFFIX_OFFSET;\n    ICON_OFFSET = MD2_ICON_OFFSET;\n    LABEL_PADDING_TOP = MD2_LABEL_PADDING_TOP;\n    LABEL_PADDING_HORIZONTAL = MD2_LABEL_PADDING_HORIZONTAL;\n    FLAT_INPUT_OFFSET = MD2_FLAT_INPUT_OFFSET;\n    MIN_HEIGHT = MD2_MIN_HEIGHT;\n    INPUT_PADDING_HORIZONTAL = MD2_INPUT_PADDING_HORIZONTAL;\n    ADORNMENT_OFFSET = MD2_ADORNMENT_OFFSET;\n    OUTLINED_INPUT_OFFSET = MD2_OUTLINED_INPUT_OFFSET;\n  }\n\n  return {\n    AFFIX_OFFSET,\n    ICON_OFFSET,\n    LABEL_PADDING_TOP,\n    LABEL_PADDING_HORIZONTAL,\n    FLAT_INPUT_OFFSET,\n    MIN_HEIGHT,\n    INPUT_PADDING_HORIZONTAL,\n    ADORNMENT_OFFSET,\n    OUTLINED_INPUT_OFFSET,\n    MIN_WIDTH,\n  };\n};\n","import * as React from 'react';\nimport {\n  GestureResponderEvent,\n  StyleProp,\n  StyleSheet,\n  ViewStyle,\n  View,\n  Animated,\n  ColorValue,\n} from 'react-native';\n\nimport color from 'color';\n\nimport { ToggleButtonGroupContext } from './ToggleButtonGroup';\nimport { getToggleButtonColor } from './utils';\nimport { useInternalTheme } from '../../core/theming';\nimport { black, white } from '../../styles/themes/v2/colors';\nimport type { ThemeProp } from '../../types';\nimport { forwardRef } from '../../utils/forwardRef';\nimport type { IconSource } from '../Icon';\nimport IconButton from '../IconButton/IconButton';\n\nexport type Props = {\n  /**\n   * Icon to display for the `ToggleButton`.\n   */\n  icon: IconSource;\n  /**\n   * Size of the icon.\n   */\n  size?: number;\n  /**\n   * Custom text color for button.\n   */\n  iconColor?: string;\n  /**\n   * Color of the ripple effect.\n   */\n  rippleColor?: ColorValue;\n  /**\n   * Whether the button is disabled.\n   */\n  disabled?: boolean;\n  /**\n   * Accessibility label for the `ToggleButton`. This is read by the screen reader when the user taps the button.\n   */\n  accessibilityLabel?: string;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: (value?: GestureResponderEvent | string) => void;\n  /**\n   * Value of button.\n   */\n  value?: string;\n  /**\n   * Status of button.\n   */\n  status?: 'checked' | 'unchecked';\n  style?: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n  ref?: React.RefObject<View>;\n  /**\n   * testID to be used on tests.\n   */\n  testID?: string;\n};\n\n/**\n * Toggle buttons can be used to group related options. To emphasize groups of related toggle buttons,\n * a group should share a common container.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { ToggleButton } from 'react-native-paper';\n *\n * const ToggleButtonExample = () => {\n *   const [status, setStatus] = React.useState('checked');\n *\n *   const onButtonToggle = value => {\n *     setStatus(status === 'checked' ? 'unchecked' : 'checked');\n *   };\n *\n *   return (\n *     <ToggleButton\n *       icon=\"bluetooth\"\n *       value=\"bluetooth\"\n *       status={status}\n *       onPress={onButtonToggle}\n *     />\n *   );\n * };\n *\n * export default ToggleButtonExample;\n *\n * ```\n */\nconst ToggleButton = forwardRef<View, Props>(\n  (\n    {\n      icon,\n      size,\n      theme: themeOverrides,\n      accessibilityLabel,\n      disabled,\n      style,\n      value,\n      status,\n      onPress,\n      rippleColor,\n      ...rest\n    }: Props,\n    ref\n  ) => {\n    const theme = useInternalTheme(themeOverrides);\n    const borderRadius = theme.roundness;\n\n    return (\n      <ToggleButtonGroupContext.Consumer>\n        {(\n          context: { value: string | null; onValueChange: Function } | null\n        ) => {\n          const checked: boolean | null =\n            (context && context.value === value) || status === 'checked';\n\n          const backgroundColor = getToggleButtonColor({ theme, checked });\n          const borderColor = theme.isV3\n            ? theme.colors.outline\n            : color(theme.dark ? white : black)\n                .alpha(0.29)\n                .rgb()\n                .string();\n\n          return (\n            <IconButton\n              borderless={false}\n              icon={icon}\n              onPress={(e?: GestureResponderEvent | string) => {\n                if (onPress) {\n                  onPress(e);\n                }\n\n                if (context) {\n                  context.onValueChange(!checked ? value : null);\n                }\n              }}\n              size={size}\n              accessibilityLabel={accessibilityLabel}\n              accessibilityState={{ disabled, selected: checked }}\n              disabled={disabled}\n              style={[\n                styles.content,\n                {\n                  backgroundColor,\n                  borderRadius,\n                  borderColor,\n                },\n                style,\n              ]}\n              ref={ref}\n              theme={theme}\n              rippleColor={rippleColor}\n              {...rest}\n            />\n          );\n        }}\n      </ToggleButtonGroupContext.Consumer>\n    );\n  }\n);\n\nconst styles = StyleSheet.create({\n  content: {\n    width: 42,\n    height: 42,\n    margin: 0,\n  },\n});\n\nexport default ToggleButton;\n\n// @component-docs ignore-next-line\nexport { ToggleButton };\n","import * as React from 'react';\n\nexport type Props<Value = string> = {\n  /**\n   * Function to execute on selection change.\n   */\n  onValueChange: (value: Value) => void;\n  /**\n   * Value of the currently selected toggle button.\n   */\n  value: Value | null;\n  /**\n   * React elements containing toggle buttons.\n   */\n  children: React.ReactNode;\n};\n\ntype ToggleButtonContextType<Value> = {\n  value: Value | null;\n  onValueChange: (item: Value) => void;\n};\n\nexport const ToggleButtonGroupContext =\n  //@ts-expect-error: TS can't ensure the type from Group to children\n  React.createContext<ToggleButtonContextType>(null as any);\n\n/**\n * Toggle group allows to control a group of toggle buttons.</br>\n * It doesn't change the appearance of the toggle buttons. If you want to group them in a row, check out [ToggleButton.Row](ToggleButtonRow).\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { ToggleButton } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [value, setValue] = React.useState('left');\n *\n *   return (\n *     <ToggleButton.Group\n *       onValueChange={value => setValue(value)}\n *       value={value}>\n *       <ToggleButton icon=\"format-align-left\" value=\"left\" />\n *       <ToggleButton icon=\"format-align-right\" value=\"right\" />\n *     </ToggleButton.Group>\n *   );\n * };\n *\n * export default MyComponent;\n *```\n */\nconst ToggleButtonGroup = <Value = string,>({\n  value,\n  onValueChange,\n  children,\n}: Props<Value>) => (\n  <ToggleButtonGroupContext.Provider\n    value={{\n      value,\n      onValueChange,\n    }}\n  >\n    {children}\n  </ToggleButtonGroupContext.Provider>\n);\n\nToggleButtonGroup.displayName = 'ToggleButton.Group';\n\nexport default ToggleButtonGroup;\n\n// @component-docs ignore-next-line\nexport { ToggleButtonGroup };\n","import * as React from 'react';\nimport { StyleSheet, View, StyleProp, ViewStyle } from 'react-native';\n\nimport ToggleButton from './ToggleButton';\nimport ToggleButtonGroup from './ToggleButtonGroup';\n\nexport type Props = {\n  /**\n   * Function to execute on selection change.\n   */\n  onValueChange: (value: string) => void;\n  /**\n   * Value of the currently selected toggle button.\n   */\n  value: string;\n  /**\n   * React elements containing toggle buttons.\n   */\n  children: React.ReactNode;\n  style?: StyleProp<ViewStyle>;\n};\n\n/**\n * Toggle button row renders a group of toggle buttons in a row.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { ToggleButton } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [value, setValue] = React.useState('left');\n *\n *   return (\n *     <ToggleButton.Row onValueChange={value => setValue(value)} value={value}>\n *       <ToggleButton icon=\"format-align-left\" value=\"left\" />\n *       <ToggleButton icon=\"format-align-right\" value=\"right\" />\n *     </ToggleButton.Row>\n *   );\n * };\n *\n * export default MyComponent;\n *\n *```\n */\nconst ToggleButtonRow = ({ value, onValueChange, children, style }: Props) => {\n  const count = React.Children.count(children);\n\n  return (\n    <ToggleButtonGroup value={value} onValueChange={onValueChange}>\n      <View style={[styles.row, style]}>\n        {React.Children.map(children, (child, i) => {\n          // @ts-expect-error: TypeScript complains about child.type but it doesn't matter\n          if (child && child.type === ToggleButton) {\n            // @ts-expect-error: We're sure that child is a React Element\n            return React.cloneElement(child, {\n              style: [\n                styles.button,\n                i === 0\n                  ? styles.first\n                  : i === count - 1\n                  ? styles.last\n                  : styles.middle,\n                // @ts-expect-error: We're sure that child is a React Element\n                child.props.style,\n              ],\n            });\n          }\n\n          return child;\n        })}\n      </View>\n    </ToggleButtonGroup>\n  );\n};\n\nToggleButtonRow.displayName = 'ToggleButton.Row';\n\nconst styles = StyleSheet.create({\n  row: {\n    flexDirection: 'row',\n  },\n  button: {\n    borderWidth: StyleSheet.hairlineWidth,\n  },\n\n  first: {\n    borderTopRightRadius: 0,\n    borderBottomRightRadius: 0,\n  },\n\n  middle: {\n    borderRadius: 0,\n    borderLeftWidth: 0,\n  },\n\n  last: {\n    borderLeftWidth: 0,\n    borderTopLeftRadius: 0,\n    borderBottomLeftRadius: 0,\n  },\n});\n\nexport default ToggleButtonRow;\n\n// @component-docs ignore-next-line\nexport { ToggleButtonRow };\n","import ToggleButtonComponent from './ToggleButton';\nimport ToggleButtonGroup from './ToggleButtonGroup';\nimport ToggleButtonRow from './ToggleButtonRow';\n\nconst ToggleButton = Object.assign(\n  // @component ./ToggleButton.tsx\n  ToggleButtonComponent,\n  {\n    // @component ./ToggleButtonGroup.tsx\n    Group: ToggleButtonGroup,\n    // @component ./ToggleButtonRow.tsx\n    Row: ToggleButtonRow,\n  }\n);\n\nexport default ToggleButton;\n","import color from 'color';\n\nimport { tokens } from '../../styles/themes/v3/tokens';\nimport type { InternalTheme } from '../../types';\n\nexport const getToggleButtonColor = ({\n  theme,\n  checked,\n}: {\n  theme: InternalTheme;\n  checked: boolean | null;\n}) => {\n  if (checked) {\n    if (theme.isV3) {\n      return color(theme.colors.onSecondaryContainer)\n        .alpha(tokens.md.ref.opacity.level2)\n        .rgb()\n        .string();\n    }\n    if (theme.dark) {\n      return 'rgba(255, 255, 255, .12)';\n    }\n    return 'rgba(0, 0, 0, .08)';\n  }\n  return 'transparent';\n};\n","import * as React from 'react';\nimport {\n  Dimensions,\n  View,\n  LayoutChangeEvent,\n  StyleSheet,\n  Platform,\n  Pressable,\n  ViewStyle,\n} from 'react-native';\n\nimport type { ThemeProp } from 'src/types';\n\nimport { getTooltipPosition, Measurement } from './utils';\nimport { useInternalTheme } from '../../core/theming';\nimport { addEventListener } from '../../utils/addEventListener';\nimport Portal from '../Portal/Portal';\nimport Text from '../Typography/Text';\n\nexport type Props = {\n  /**\n   * Tooltip reference element. Needs to be able to hold a ref.\n   */\n  children: React.ReactElement;\n  /**\n   * The number of milliseconds a user must touch the element before showing the tooltip.\n   */\n  enterTouchDelay?: number;\n  /**\n   * The number of milliseconds after the user stops touching an element before hiding the tooltip.\n   */\n  leaveTouchDelay?: number;\n  /**\n   * Tooltip title\n   */\n  title: string;\n  /**\n   * Specifies the largest possible scale a title font can reach.\n   */\n  titleMaxFontSizeMultiplier?: number;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n};\n\n/**\n * Tooltips display informative text when users hover over, focus on, or tap an element.\n *\n * Plain tooltips, when activated, display a text label identifying an element, such as a description of its function. Tooltips should include only short, descriptive text and avoid restating visible UI text.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { IconButton, Tooltip } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <Tooltip title=\"Selected Camera\">\n *     <IconButton icon=\"camera\" selected size={24} onPress={() => {}} />\n *   </Tooltip>\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst Tooltip = ({\n  children,\n  enterTouchDelay = 500,\n  leaveTouchDelay = 1500,\n  title,\n  theme: themeOverrides,\n  titleMaxFontSizeMultiplier,\n  ...rest\n}: Props) => {\n  const isWeb = Platform.OS === 'web';\n\n  const theme = useInternalTheme(themeOverrides);\n  const [visible, setVisible] = React.useState(false);\n\n  const [measurement, setMeasurement] = React.useState({\n    children: {},\n    tooltip: {},\n    measured: false,\n  });\n  const showTooltipTimer = React.useRef<NodeJS.Timeout[]>([]);\n  const hideTooltipTimer = React.useRef<NodeJS.Timeout[]>([]);\n  const childrenWrapperRef = React.useRef() as React.MutableRefObject<View>;\n  const touched = React.useRef(false);\n\n  React.useEffect(() => {\n    return () => {\n      if (showTooltipTimer.current.length) {\n        showTooltipTimer.current.forEach((t) => clearTimeout(t));\n        showTooltipTimer.current = [];\n      }\n\n      if (hideTooltipTimer.current.length) {\n        hideTooltipTimer.current.forEach((t) => clearTimeout(t));\n        hideTooltipTimer.current = [];\n      }\n    };\n  }, []);\n\n  React.useEffect(() => {\n    const subscription = addEventListener(Dimensions, 'change', () =>\n      setVisible(false)\n    );\n\n    return () => subscription.remove();\n  }, []);\n\n  const handleOnLayout = ({ nativeEvent: { layout } }: LayoutChangeEvent) => {\n    childrenWrapperRef.current.measure(\n      (_x, _y, width, height, pageX, pageY) => {\n        setMeasurement({\n          children: { pageX, pageY, height, width },\n          tooltip: { ...layout },\n          measured: true,\n        });\n      }\n    );\n  };\n\n  const handleTouchStart = () => {\n    if (hideTooltipTimer.current.length) {\n      hideTooltipTimer.current.forEach((t) => clearTimeout(t));\n      hideTooltipTimer.current = [];\n    }\n\n    if (isWeb) {\n      let id = setTimeout(() => {\n        touched.current = true;\n        setVisible(true);\n      }, enterTouchDelay) as unknown as NodeJS.Timeout;\n      showTooltipTimer.current.push(id);\n    } else {\n      touched.current = true;\n      setVisible(true);\n    }\n  };\n\n  const handleTouchEnd = () => {\n    touched.current = false;\n    if (showTooltipTimer.current.length) {\n      showTooltipTimer.current.forEach((t) => clearTimeout(t));\n      showTooltipTimer.current = [];\n    }\n\n    let id = setTimeout(() => {\n      setVisible(false);\n      setMeasurement({ children: {}, tooltip: {}, measured: false });\n    }, leaveTouchDelay) as unknown as NodeJS.Timeout;\n    hideTooltipTimer.current.push(id);\n  };\n\n  const mobilePressProps = {\n    onPress: React.useCallback(() => {\n      if (touched.current) {\n        return null;\n      } else {\n        if (children.props.disabled) return null;\n        return children.props.onPress?.();\n      }\n    }, [children.props]),\n    onLongPress: () => handleTouchStart(),\n    onPressOut: () => handleTouchEnd(),\n    delayLongPress: enterTouchDelay,\n  };\n\n  const webPressProps = {\n    onHoverIn: () => {\n      handleTouchStart();\n      children.props.onHoverIn?.();\n    },\n    onHoverOut: () => {\n      handleTouchEnd();\n      children.props.onHoverOut?.();\n    },\n  };\n\n  return (\n    <>\n      {visible && (\n        <Portal>\n          <View\n            onLayout={handleOnLayout}\n            style={[\n              styles.tooltip,\n              {\n                backgroundColor: theme.isV3\n                  ? theme.colors.onSurface\n                  : theme.colors.tooltip,\n                ...getTooltipPosition(measurement as Measurement, children),\n                borderRadius: theme.roundness,\n                ...(measurement.measured ? styles.visible : styles.hidden),\n              },\n            ]}\n            testID=\"tooltip-container\"\n          >\n            <Text\n              accessibilityLiveRegion=\"polite\"\n              numberOfLines={1}\n              selectable={false}\n              variant=\"labelLarge\"\n              style={{ color: theme.colors.surface }}\n              maxFontSizeMultiplier={titleMaxFontSizeMultiplier}\n            >\n              {title}\n            </Text>\n          </View>\n        </Portal>\n      )}\n      {/* Need the xxPressProps in both places */}\n      <Pressable\n        ref={childrenWrapperRef}\n        style={styles.pressContainer}\n        {...(isWeb ? webPressProps : mobilePressProps)}\n      >\n        {React.cloneElement(children, {\n          ...rest,\n          ...(isWeb ? webPressProps : mobilePressProps),\n        })}\n      </Pressable>\n    </>\n  );\n};\n\nTooltip.displayName = 'Tooltip';\n\nconst styles = StyleSheet.create({\n  tooltip: {\n    alignSelf: 'flex-start',\n    justifyContent: 'center',\n    paddingHorizontal: 16,\n    height: 32,\n    maxHeight: 32,\n  },\n  visible: {\n    opacity: 1,\n  },\n  hidden: {\n    opacity: 0,\n  },\n  pressContainer: {\n    ...(Platform.OS === 'web' && { cursor: 'default' }),\n  } as ViewStyle,\n});\n\nexport default Tooltip;\n","import { Dimensions, LayoutRectangle, ViewStyle } from 'react-native';\n\ntype ChildrenMeasurement = {\n  width: number;\n  height: number;\n  pageX: number;\n  pageY: number;\n};\n\ntype TooltipLayout = LayoutRectangle;\n\nexport type Measurement = {\n  children: ChildrenMeasurement;\n  tooltip: TooltipLayout;\n  measured: boolean;\n};\n\n/**\n * Return true when the tooltip center x-coordinate relative to the wrapped element is negative.\n * The tooltip will be placed at the starting x-coordinate from the wrapped element.\n */\nconst overflowLeft = (center: number): boolean => {\n  return center < 0;\n};\n\n/**\n * Return true when the tooltip center x-coordinate + tooltip width is greater than the layout width\n * The tooltip width will grow from right to left relative to the wrapped element.\n */\nconst overflowRight = (center: number, tooltipWidth: number): boolean => {\n  const { width: layoutWidth } = Dimensions.get('window');\n\n  return center + tooltipWidth > layoutWidth;\n};\n\n/**\n * Return true when the children y-coordinate + its height + tooltip height is greater than the layout height.\n * The tooltip will be placed at the top of the wrapped element.\n */\nconst overflowBottom = (\n  childrenY: number,\n  childrenHeight: number,\n  tooltipHeight: number\n): boolean => {\n  const { height: layoutHeight } = Dimensions.get('window');\n\n  return childrenY + childrenHeight + tooltipHeight > layoutHeight;\n};\n\nconst getTooltipXPosition = (\n  { pageX: childrenX, width: childrenWidth }: ChildrenMeasurement,\n  { width: tooltipWidth }: TooltipLayout\n): number => {\n  // when the children use position absolute the childrenWidth is measured as 0,\n  // so it's best to anchor the tooltip at the start of the children\n  const center =\n    childrenWidth > 0\n      ? childrenX + (childrenWidth - tooltipWidth) / 2\n      : childrenX;\n\n  if (overflowLeft(center)) return childrenX;\n\n  if (overflowRight(center, tooltipWidth))\n    return childrenX + childrenWidth - tooltipWidth;\n\n  return center;\n};\n\nconst getTooltipYPosition = (\n  { pageY: childrenY, height: childrenHeight }: ChildrenMeasurement,\n  { height: tooltipHeight }: TooltipLayout\n): number => {\n  if (overflowBottom(childrenY, childrenHeight, tooltipHeight))\n    return childrenY - tooltipHeight;\n\n  return childrenY + childrenHeight;\n};\n\nconst getChildrenMeasures = (\n  style: ViewStyle | Array<ViewStyle>,\n  measures: ChildrenMeasurement\n): ChildrenMeasurement => {\n  const { position, top, bottom, left, right } = Array.isArray(style)\n    ? style.reduce((acc, current) => ({ ...acc, ...current }))\n    : style;\n\n  if (position === 'absolute') {\n    let pageX = 0;\n    let pageY = measures.pageY;\n    let height = 0;\n    let width = 0;\n    if (typeof left === 'number') {\n      pageX = left;\n      width = 0;\n    }\n    if (typeof right === 'number') {\n      pageX = measures.width - right;\n      width = 0;\n    }\n    if (typeof top === 'number') {\n      pageY = pageY + top;\n    }\n    if (typeof bottom === 'number') {\n      pageY = pageY - bottom;\n    }\n\n    return { pageX, pageY, width, height };\n  }\n\n  return measures;\n};\n\nexport const getTooltipPosition = (\n  { children, tooltip, measured }: Measurement,\n  component: React.ReactElement<{\n    style: ViewStyle | Array<ViewStyle> | undefined | null;\n  }>\n): {} | { left: number; top: number } => {\n  if (!measured) return {};\n  let measures = children;\n  if (component.props.style) {\n    measures = getChildrenMeasures(component.props.style, children);\n  }\n\n  return {\n    left: getTooltipXPosition(measures, tooltip),\n    top: getTooltipYPosition(measures, tooltip),\n  };\n};\n","import type * as React from 'react';\nimport type {\n  PressableProps as PressableNativeProps,\n  StyleProp,\n  View,\n  ViewStyle,\n} from 'react-native';\nimport { Pressable as PressableNative } from 'react-native';\n\n// This component is added to support type-safe hover and focus states on web\n// https://necolas.github.io/react-native-web/docs/pressable/\n\nexport type PressableStateCallbackType = {\n  hovered: boolean;\n  pressed: boolean;\n  focused: boolean;\n};\n\nexport type PressableProps = Omit<\n  PressableNativeProps,\n  'children' | 'style'\n> & {\n  children:\n    | React.ReactNode\n    | ((state: PressableStateCallbackType) => React.ReactNode)\n    | undefined;\n  style?:\n    | StyleProp<ViewStyle>\n    | ((state: PressableStateCallbackType) => StyleProp<ViewStyle>)\n    | undefined;\n};\n\nexport const Pressable: React.ForwardRefExoticComponent<\n  PressableProps & React.RefAttributes<View>\n> = PressableNative as any;\n","import * as React from 'react';\nimport {\n  PressableAndroidRippleConfig,\n  StyleProp,\n  Platform,\n  ViewStyle,\n  StyleSheet,\n  GestureResponderEvent,\n  View,\n  ColorValue,\n} from 'react-native';\n\nimport type { PressableProps } from './Pressable';\nimport { Pressable } from './Pressable';\nimport { getTouchableRippleColors } from './utils';\nimport { Settings, SettingsContext } from '../../core/settings';\nimport { useInternalTheme } from '../../core/theming';\nimport type { ThemeProp } from '../../types';\nimport { forwardRef } from '../../utils/forwardRef';\nimport hasTouchHandler from '../../utils/hasTouchHandler';\n\nconst ANDROID_VERSION_LOLLIPOP = 21;\nconst ANDROID_VERSION_PIE = 28;\n\nexport type Props = PressableProps & {\n  borderless?: boolean;\n  background?: PressableAndroidRippleConfig;\n  centered?: boolean;\n  disabled?: boolean;\n  onPress?: (e: GestureResponderEvent) => void | null;\n  onLongPress?: (e: GestureResponderEvent) => void;\n  onPressIn?: (e: GestureResponderEvent) => void;\n  onPressOut?: (e: GestureResponderEvent) => void;\n  rippleColor?: ColorValue;\n  underlayColor?: string;\n  children: React.ReactNode;\n  style?: StyleProp<ViewStyle>;\n  theme?: ThemeProp;\n};\n\nconst TouchableRipple = (\n  {\n    style,\n    background,\n    borderless = false,\n    disabled: disabledProp,\n    rippleColor,\n    underlayColor,\n    children,\n    theme: themeOverrides,\n    ...rest\n  }: Props,\n  ref: React.ForwardedRef<View>\n) => {\n  const theme = useInternalTheme(themeOverrides);\n  const { rippleEffectEnabled } = React.useContext<Settings>(SettingsContext);\n\n  const { onPress, onLongPress, onPressIn, onPressOut } = rest;\n\n  const hasPassedTouchHandler = hasTouchHandler({\n    onPress,\n    onLongPress,\n    onPressIn,\n    onPressOut,\n  });\n\n  const disabled = disabledProp || !hasPassedTouchHandler;\n\n  const { calculatedRippleColor, calculatedUnderlayColor } =\n    getTouchableRippleColors({\n      theme,\n      rippleColor,\n      underlayColor,\n    });\n\n  // A workaround for ripple on Android P is to use useForeground + overflow: 'hidden'\n  // https://github.com/facebook/react-native/issues/6480\n  const useForeground =\n    Platform.OS === 'android' &&\n    Platform.Version >= ANDROID_VERSION_PIE &&\n    borderless;\n\n  if (TouchableRipple.supported) {\n    const androidRipple = rippleEffectEnabled\n      ? background ?? {\n          color: calculatedRippleColor,\n          borderless,\n          foreground: useForeground,\n        }\n      : undefined;\n\n    return (\n      <Pressable\n        {...rest}\n        ref={ref}\n        disabled={disabled}\n        style={[borderless && styles.overflowHidden, style]}\n        android_ripple={androidRipple}\n      >\n        {React.Children.only(children)}\n      </Pressable>\n    );\n  }\n\n  return (\n    <Pressable\n      {...rest}\n      ref={ref}\n      disabled={disabled}\n      style={[borderless && styles.overflowHidden, style]}\n    >\n      {({ pressed }) => (\n        <>\n          {pressed && rippleEffectEnabled && (\n            <View\n              testID=\"touchable-ripple-underlay\"\n              style={[\n                styles.underlay,\n                { backgroundColor: calculatedUnderlayColor },\n              ]}\n            />\n          )}\n          {React.Children.only(children)}\n        </>\n      )}\n    </Pressable>\n  );\n};\n\nTouchableRipple.supported =\n  Platform.OS === 'android' && Platform.Version >= ANDROID_VERSION_LOLLIPOP;\n\nconst styles = StyleSheet.create({\n  overflowHidden: {\n    overflow: 'hidden',\n  },\n  underlay: {\n    ...StyleSheet.absoluteFillObject,\n    zIndex: 2,\n  },\n});\n\nconst Component = forwardRef(TouchableRipple);\n\nexport default Component as typeof Component & { supported: boolean };\n","import type { ColorValue } from 'react-native';\n\nimport color from 'color';\n\nimport type { InternalTheme } from '../../types';\n\nconst getUnderlayColor = ({\n  theme,\n  calculatedRippleColor,\n  underlayColor,\n}: {\n  theme: InternalTheme;\n  calculatedRippleColor: ColorValue;\n  underlayColor?: string;\n}) => {\n  if (underlayColor != null) {\n    return underlayColor;\n  }\n\n  if (theme.isV3) {\n    return color(calculatedRippleColor).rgb().string();\n  }\n\n  return color(calculatedRippleColor).fade(0.5).rgb().string();\n};\n\nconst getRippleColor = ({\n  theme,\n  rippleColor,\n}: {\n  theme: InternalTheme;\n  rippleColor?: ColorValue;\n}) => {\n  if (rippleColor) {\n    return rippleColor;\n  }\n\n  if (theme.isV3) {\n    return color(theme.colors.onSurface).alpha(0.12).rgb().string();\n  }\n\n  if (theme.dark) {\n    return color(theme.colors.text).alpha(0.32).rgb().string();\n  }\n  return color(theme.colors.text).alpha(0.2).rgb().string();\n};\n\nexport const getTouchableRippleColors = ({\n  theme,\n  rippleColor,\n  underlayColor,\n}: {\n  theme: InternalTheme;\n  rippleColor?: ColorValue;\n  underlayColor?: string;\n}) => {\n  const calculatedRippleColor = getRippleColor({ theme, rippleColor });\n  return {\n    calculatedRippleColor,\n    calculatedUnderlayColor: getUnderlayColor({\n      theme,\n      calculatedRippleColor,\n      underlayColor,\n    }),\n  };\n};\n","import * as React from 'react';\nimport { Animated, I18nManager, StyleSheet, TextStyle } from 'react-native';\n\nimport type { VariantProp } from './types';\nimport { useInternalTheme } from '../../core/theming';\nimport type { ThemeProp } from '../../types';\n\ntype Props<T> = React.ComponentPropsWithRef<typeof Animated.Text> & {\n  /**\n   * Variant defines appropriate text styles for type role and its size.\n   * Available variants:\n   *\n   *  Display: `displayLarge`, `displayMedium`, `displaySmall`\n   *\n   *  Headline: `headlineLarge`, `headlineMedium`, `headlineSmall`\n   *\n   *  Title: `titleLarge`, `titleMedium`, `titleSmall`\n   *\n   *  Label:  `labelLarge`, `labelMedium`, `labelSmall`\n   *\n   *  Body: `bodyLarge`, `bodyMedium`, `bodySmall`\n   */\n  variant?: VariantProp<T>;\n  style?: TextStyle;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n};\n\n/**\n * Animated text component which follows styles from the theme.\n *\n * @extends Text props https://reactnative.dev/docs/text#props\n */\nfunction AnimatedText({\n  style,\n  theme: themeOverrides,\n  variant,\n  ...rest\n}: Props<never>) {\n  const theme = useInternalTheme(themeOverrides);\n  const writingDirection = I18nManager.getConstants().isRTL ? 'rtl' : 'ltr';\n\n  if (theme.isV3 && variant) {\n    const font = theme.fonts[variant];\n    if (typeof font !== 'object') {\n      throw new Error(\n        `Variant ${variant} was not provided properly. Valid variants are ${Object.keys(\n          theme.fonts\n        ).join(', ')}.`\n      );\n    }\n\n    return (\n      <Animated.Text\n        {...rest}\n        style={[\n          font,\n          styles.text,\n          { writingDirection, color: theme.colors.onSurface },\n          style,\n        ]}\n      />\n    );\n  } else {\n    const font = !theme.isV3 ? theme.fonts.regular : theme.fonts.bodyMedium;\n    const textStyle = {\n      ...font,\n      color: theme.isV3 ? theme.colors.onSurface : theme.colors.text,\n    };\n    return (\n      <Animated.Text\n        {...rest}\n        style={[\n          styles.text,\n          textStyle,\n          {\n            writingDirection,\n          },\n          style,\n        ]}\n      />\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  text: {\n    textAlign: 'left',\n  },\n});\n\nexport const customAnimatedText = <T,>() =>\n  AnimatedText as (props: Props<T>) => JSX.Element;\n\nexport default AnimatedText;\n","import * as React from 'react';\nimport {\n  I18nManager,\n  StyleProp,\n  StyleSheet,\n  Text as NativeText,\n  TextStyle,\n} from 'react-native';\n\nimport AnimatedText from './AnimatedText';\nimport type { VariantProp } from './types';\nimport StyledText from './v2/StyledText';\nimport { useInternalTheme } from '../../core/theming';\nimport type { ThemeProp } from '../../types';\nimport { forwardRef } from '../../utils/forwardRef';\n\nexport type Props<T> = React.ComponentProps<typeof NativeText> & {\n  /**\n   * @supported Available in v5.x with theme version 3\n   *\n   * Variant defines appropriate text styles for type role and its size.\n   * Available variants:\n   *\n   *  Display: `displayLarge`, `displayMedium`, `displaySmall`\n   *\n   *  Headline: `headlineLarge`, `headlineMedium`, `headlineSmall`\n   *\n   *  Title: `titleLarge`, `titleMedium`, `titleSmall`\n   *\n   *  Label:  `labelLarge`, `labelMedium`, `labelSmall`\n   *\n   *  Body: `bodyLarge`, `bodyMedium`, `bodySmall`\n   */\n  variant?: VariantProp<T>;\n  children: React.ReactNode;\n  theme?: ThemeProp;\n  style?: StyleProp<TextStyle>;\n};\n\nexport type TextRef = React.ForwardedRef<{\n  setNativeProps(args: Object): void;\n}>;\n\n// @component-group Typography\n\n/**\n * Typography component showing styles complied with passed `variant` prop and supported by the type system.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Text } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <>\n *     <Text variant=\"displayLarge\">Display Large</Text>\n *     <Text variant=\"displayMedium\">Display Medium</Text>\n *     <Text variant=\"displaySmall\">Display small</Text>\n *\n *     <Text variant=\"headlineLarge\">Headline Large</Text>\n *     <Text variant=\"headlineMedium\">Headline Medium</Text>\n *     <Text variant=\"headlineSmall\">Headline Small</Text>\n *\n *     <Text variant=\"titleLarge\">Title Large</Text>\n *     <Text variant=\"titleMedium\">Title Medium</Text>\n *     <Text variant=\"titleSmall\">Title Small</Text>\n *\n *     <Text variant=\"bodyLarge\">Body Large</Text>\n *     <Text variant=\"bodyMedium\">Body Medium</Text>\n *     <Text variant=\"bodySmall\">Body Small</Text>\n *\n *     <Text variant=\"labelLarge\">Label Large</Text>\n *     <Text variant=\"labelMedium\">Label Medium</Text>\n *     <Text variant=\"labelSmall\">Label Small</Text>\n *  </>\n * );\n *\n * export default MyComponent;\n * ```\n *\n * @extends Text props https://reactnative.dev/docs/text#props\n */\nconst Text = (\n  { style, variant, theme: initialTheme, ...rest }: Props<string>,\n  ref: TextRef\n) => {\n  const root = React.useRef<NativeText | null>(null);\n  // FIXME: destructure it in TS 4.6+\n  const theme = useInternalTheme(initialTheme);\n  const writingDirection = I18nManager.getConstants().isRTL ? 'rtl' : 'ltr';\n\n  React.useImperativeHandle(ref, () => ({\n    setNativeProps: (args: Object) => root.current?.setNativeProps(args),\n  }));\n\n  if (theme.isV3 && variant) {\n    let font = theme.fonts[variant];\n    let textStyle = [font, style];\n\n    if (\n      React.isValidElement(rest.children) &&\n      (rest.children.type === Component ||\n        rest.children.type === AnimatedText ||\n        rest.children.type === StyledText)\n    ) {\n      const { props } = rest.children;\n\n      // Context:   Some components have the built-in `Text` component with a predefined variant,\n      //            that also accepts `children` as a `React.Node`. This can result in a situation,\n      //            where another `Text` component is rendered within the built-in `Text` component.\n      //            By doing that, we assume that user doesn't want to consume pre-defined font properties.\n      // Case one:  Nested `Text` has different `variant` that specified in parent. For example:\n      //              <Chip>\n      //                <Text variant=\"displayMedium\">Nested</Text>\n      //              </Chip>\n      // Solution:  To address the following scenario, the code below overrides the `variant`\n      //            specified in a parent in favor of children's variant:\n      if (props.variant) {\n        font = theme.fonts[props.variant as VariantProp<typeof props.variant>];\n        textStyle = [style, font];\n      }\n\n      // Case two:  Nested `Text` has specified `styles` which intefere\n      //            with font properties, from the parent's `variant`. For example:\n      //              <Chip>\n      //                <Text style={{fontSize: 30}}>Nested</Text>\n      //              </Chip>\n      // Solution:  To address the following scenario, the code below overrides the\n      //            parent's style with children's style:\n      if (!props.variant) {\n        textStyle = [style, props.style];\n      }\n    }\n\n    if (typeof font !== 'object') {\n      throw new Error(\n        `Variant ${variant} was not provided properly. Valid variants are ${Object.keys(\n          theme.fonts\n        ).join(', ')}.`\n      );\n    }\n\n    return (\n      <NativeText\n        ref={root}\n        style={[\n          styles.text,\n          { writingDirection, color: theme.colors.onSurface },\n          textStyle,\n        ]}\n        {...rest}\n      />\n    );\n  } else {\n    const font = theme.isV3 ? theme.fonts.default : theme.fonts?.regular;\n    const textStyle = {\n      ...font,\n      color: theme.isV3 ? theme.colors?.onSurface : theme.colors.text,\n    };\n    return (\n      <NativeText\n        {...rest}\n        ref={root}\n        style={[styles.text, textStyle, { writingDirection }, style]}\n      />\n    );\n  }\n};\n\nconst styles = StyleSheet.create({\n  text: {\n    textAlign: 'left',\n  },\n});\n\ntype TextComponent<T> = (\n  props: Props<T> & { ref?: React.RefObject<TextRef> }\n) => JSX.Element;\n\nconst Component = forwardRef(Text) as TextComponent<never>;\n\nexport const customText = <T,>() => Component as unknown as TextComponent<T>;\n\nexport default Component;\n","import * as React from 'react';\nimport { Text, TextStyle, StyleSheet, StyleProp } from 'react-native';\n\nimport StyledText from './StyledText';\n\nexport type Props = React.ComponentProps<typeof Text> & {\n  style?: StyleProp<TextStyle>;\n  children: React.ReactNode;\n};\n\n// @component-group Typography\n\n/**\n * Typography component for showing a caption.\n *\n * <div class=\"screenshots\">\n *   <img src=\"screenshots/caption.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Caption } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <Caption>Caption</Caption>\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst Caption = (props: Props) => (\n  <StyledText\n    {...props}\n    alpha={0.54}\n    family=\"regular\"\n    style={[styles.text, props.style]}\n  />\n);\n\nexport default Caption;\n\nconst styles = StyleSheet.create({\n  text: {\n    fontSize: 12,\n    lineHeight: 20,\n    marginVertical: 2,\n    letterSpacing: 0.4,\n  },\n});\n","import * as React from 'react';\nimport { Text, TextStyle, StyleSheet, StyleProp } from 'react-native';\n\nimport StyledText from './StyledText';\n\nexport type Props = React.ComponentProps<typeof Text> & {\n  style?: StyleProp<TextStyle>;\n  children: React.ReactNode;\n};\n\n// @component-group Typography\n\n/**\n * Typography component for showing a headline.\n *\n * <div class=\"screenshots\">\n *   <img src=\"screenshots/headline.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Headline } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <Headline>Headline</Headline>\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst Headline = (props: Props) => {\n  return (\n    <StyledText\n      {...props}\n      alpha={0.87}\n      family=\"regular\"\n      style={[styles.text, props.style]}\n    />\n  );\n};\n\nexport default Headline;\n\nconst styles = StyleSheet.create({\n  text: {\n    fontSize: 24,\n    lineHeight: 32,\n    marginVertical: 2,\n    letterSpacing: 0,\n  },\n});\n","import * as React from 'react';\nimport { TextProps, StyleSheet } from 'react-native';\n\nimport StyledText from './StyledText';\n\nexport type Props = TextProps & {\n  children: React.ReactNode;\n};\n\n// @component-group Typography\n\n/**\n * Typography component for showing a paragraph.\n *\n * <div class=\"screenshots\">\n *   <img src=\"screenshots/paragraph.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Paragraph } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <Paragraph>Paragraph</Paragraph>\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst Paragraph = (props: Props) => (\n  <StyledText\n    {...props}\n    alpha={0.87}\n    family=\"regular\"\n    style={[styles.text, props.style]}\n  />\n);\n\nexport default Paragraph;\n\nconst styles = StyleSheet.create({\n  text: {\n    fontSize: 14,\n    lineHeight: 20,\n    marginVertical: 2,\n    letterSpacing: 0.25,\n  },\n});\n","import * as React from 'react';\nimport { I18nManager, StyleProp, StyleSheet, TextStyle } from 'react-native';\n\nimport color from 'color';\nimport type { ThemeProp } from 'src/types';\n\nimport Text from './Text';\nimport { useInternalTheme } from '../../../core/theming';\n\ntype Props = React.ComponentProps<typeof Text> & {\n  alpha?: number;\n  family: 'regular' | 'medium' | 'light' | 'thin';\n  style?: StyleProp<TextStyle>;\n  theme?: ThemeProp;\n};\n\nconst StyledText = ({\n  alpha = 1,\n  family,\n  style,\n  theme: themeOverrides,\n  ...rest\n}: Props) => {\n  const theme = useInternalTheme(themeOverrides);\n\n  const textColor = color(\n    theme.isV3 ? theme.colors.onSurface : theme.colors?.text\n  )\n    .alpha(alpha)\n    .rgb()\n    .string();\n  const writingDirection = I18nManager.getConstants().isRTL ? 'rtl' : 'ltr';\n\n  return (\n    <Text\n      {...rest}\n      style={[\n        styles.text,\n        {\n          color: textColor,\n          ...(!theme.isV3 && theme.fonts?.[family]),\n          writingDirection,\n        },\n        style,\n      ]}\n    />\n  );\n};\n\nconst styles = StyleSheet.create({\n  text: {\n    textAlign: 'left',\n  },\n});\n\nexport default StyledText;\n","import * as React from 'react';\nimport { Text, TextStyle, StyleSheet, StyleProp } from 'react-native';\n\nimport StyledText from './StyledText';\n\nexport type Props = React.ComponentProps<typeof Text> & {\n  style?: StyleProp<TextStyle>;\n  children: React.ReactNode;\n};\n\n// @component-group Typography\n\n/**\n * Typography component for showing a subheading.\n *\n * <div class=\"screenshots\">\n *   <img src=\"screenshots/subheading.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Subheading } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <Subheading>Subheading</Subheading>\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst Subheading = (props: Props) => (\n  <StyledText\n    {...props}\n    alpha={0.87}\n    family=\"regular\"\n    style={[styles.text, props.style]}\n  />\n);\n\nexport default Subheading;\n\nconst styles = StyleSheet.create({\n  text: {\n    fontSize: 16,\n    lineHeight: 24,\n    marginVertical: 2,\n    letterSpacing: 0.5,\n  },\n});\n","import * as React from 'react';\nimport {\n  StyleProp,\n  StyleSheet,\n  Text as NativeText,\n  TextStyle,\n} from 'react-native';\n\nimport type { MD2Theme } from 'src/types';\n\nimport { useInternalTheme } from '../../../core/theming';\nimport { forwardRef } from '../../../utils/forwardRef';\n\ntype Props = React.ComponentProps<typeof NativeText> & {\n  style?: StyleProp<TextStyle>;\n  /**\n   * @optional\n   */\n  theme?: MD2Theme;\n};\n\n// @component-group Typography\n\n/**\n * Text component which follows styles from the theme.\n *\n * @extends Text props https://reactnative.dev/docs/text#props\n */\nconst Text: React.ForwardRefRenderFunction<{}, Props> = (\n  { style, theme: overrideTheme, ...rest }: Props,\n  ref\n) => {\n  const root = React.useRef<NativeText | null>(null);\n  const theme = useInternalTheme(overrideTheme);\n\n  React.useImperativeHandle(ref, () => ({\n    setNativeProps: (args: Object) => root.current?.setNativeProps(args),\n  }));\n\n  return (\n    <NativeText\n      {...rest}\n      ref={root}\n      style={[\n        {\n          ...(!theme.isV3 && theme.fonts?.regular),\n          color: theme.isV3 ? theme.colors?.onSurface : theme.colors.text,\n        },\n        styles.text,\n        style,\n      ]}\n    />\n  );\n};\n\nconst styles = StyleSheet.create({\n  text: {\n    textAlign: 'left',\n  },\n});\n\nexport default forwardRef(Text);\n","import * as React from 'react';\nimport { Text, StyleSheet } from 'react-native';\n\nimport StyledText from './StyledText';\n\nexport type Props = React.ComponentProps<typeof Text> & {\n  children: React.ReactNode;\n};\n\n// @component-group Typography\n\n/**\n * Typography component for showing a title.\n *\n * <div class=\"screenshots\">\n *   <img src=\"screenshots/title.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Title } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <Title>Title</Title>\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst Title = (props: Props) => (\n  <StyledText\n    {...props}\n    alpha={0.87}\n    family=\"medium\"\n    style={[styles.text, props.style]}\n  />\n);\n\nexport default Title;\n\nconst styles = StyleSheet.create({\n  text: {\n    fontSize: 20,\n    lineHeight: 30,\n    marginVertical: 2,\n    letterSpacing: 0.15,\n  },\n});\n","export { default as Caption } from './Caption';\nexport { default as Headline } from './Headline';\nexport { default as Paragraph } from './Paragraph';\nexport { default as Subheading } from './Subheading';\nexport { default as Title } from './Title';\n","import { NativeModules, Platform } from 'react-native';\n\n// Use the existence of expo-constants as a heuristic for determining if the\n// status bar is translucent on Android. This should be replaced in the future\n// with react-native-safe-area-context.\nconst estimatedStatusBarHeight =\n  NativeModules.NativeUnimoduleProxy?.modulesConstants?.ExponentConstants\n    ?.statusBarHeight ?? 0;\n\nexport const APPROX_STATUSBAR_HEIGHT = Platform.select({\n  android: estimatedStatusBarHeight,\n  ios: Platform.Version < 11 ? estimatedStatusBarHeight : 0,\n});\n"],"names":["React","_interopRequireWildcard","require","_PortalConsumer","_interopRequireDefault","_PortalHost","_settings","_theming","_jsxRuntime","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","_callSuper","o","_getPrototypeOf2","_possibleConstructorReturn2","_isNativeReflectConstruct","Reflect","construct","constructor","apply","Boolean","prototype","valueOf","Portal","_React$Component","_classCallCheck2","arguments","_inherits2","_createClass2","key","value","_this$props","this","props","children","theme","jsx","Consumer","settings","PortalContext","manager","Provider","ThemeProvider","Component","Host","PortalHost","exports","withInternalTheme","PortalConsumer","checkManager","mount","update","unmount","Error","_reactNative","_PortalManager","createContext","_this","_len","length","args","Array","_key","concat","setManager","nextKey","queue","push","type","op","index","findIndex","action","pop","jsxs","View","style","styles","container","collapsable","pointerEvents","ref","displayName","StyleSheet","create","flex","_React$PureComponent","PortalManager","state","portals","setState","_toConsumableArray2","map","item","assign","filter","_ref","absoluteFill","PureComponent","_color","_excluded","isRTL","I18nManager","height","overflow","webContainer","width","progressBar","_theme$colors","color","indeterminate","_ref$progress","progress","_ref$visible","visible","themeOverrides","animatedValue","fillStyle","_ref$testID","testID","rest","_objectWithoutProperties2","isWeb","Platform","OS","useInternalTheme","timer","useRef","Animated","Value","current","fade","passedAnimatedValue","_React$useState","useState","_React$useState2","_slicedToArray2","setWidth","_React$useState3","_React$useState4","prevWidth","setPrevWidth","indeterminateAnimation","scale","animation","useEffect","startAnimation","useCallback","timing","duration","toValue","useNativeDriver","isInteraction","start","setValue","loop","stopAnimation","stop","tintColor","colors","primary","trackTintColor","isV3","surfaceVariant","setColor","alpha","rgb","string","onLayout","event","nativeEvent","layout","accessible","accessibilityRole","accessibilityState","busy","accessibilityValue","min","max","now","backgroundColor","opacity","transform","translateX","interpolate","inputRange","outputRange","scaleX","_RadioButtonAndroid","_RadioButtonIOS","Button","select","RadioButtonAndroid","ios","RadioButtonIOS","_RadioButtonGroup","_utils","_utils2","_TouchableRipple","disabled","onPress","status","borderAnim","radioAnim","isFirstRendering","RadioButtonContext","context","checked","isChecked","contextValue","_getAndroidSelectionC","getAndroidSelectionControlColor","customColor","customUncheckedColor","uncheckedColor","rippleColor","selectionControlColor","borderless","undefined","handlePress","onValueChange","accessibilityLiveRegion","radio","borderColor","borderWidth","radioContainer","dot","borderRadius","alignItems","justifyContent","margin","RadioButtonGroup","_MaterialCommunityIcon","_getSelectionControlI","getSelectionControlIOSColor","checkedColor","allowFontScaling","name","size","direction","padding","_RadioButton","_Text","RadioButtonItem","radioButton","label","labelStyle","onLongPress","background","_ref$accessibilityLab","accessibilityLabel","mode","_ref$position","position","_ref$labelVariant","labelVariant","labelMaxFontSizeMultiplier","radioButtonProps","isLeading","textColor","onSurface","text","disabledTextColor","onSurfaceDisabled","computedStyle","textAlign","variant","font","maxFontSizeMultiplier","flexDirection","paddingVertical","paddingHorizontal","flexShrink","flexGrow","fontSize","_RadioButtonItem","RadioButton","RadioButtonComponent","Group","Android","IOS","Item","console","warn","_ref2","_ActivityIndicator","_Divider","_IconButton","_Surface","_forwardRef","Searchbar","forwardRef","_theme$colors2","icon","customIconColor","iconColor","customRippleColor","onIconPress","_ref$searchAccessibil","searchAccessibilityLabel","clearIcon","_ref$clearAccessibili","clearAccessibilityLabel","onClearIconPress","traileringIcon","traileringIconColor","traileringIconAccessibilityLabel","customTraileringRippleColor","traileringRippleColor","onTraileringIconPress","right","_ref$mode","_ref$showDivider","showDivider","inputStyle","placeholder","_ref$elevation","elevation","_ref$loading","loading","root","useImperativeHandle","input","focus","clear","setNativeProps","isFocused","blur","noop","roundness","dark","fonts","placeholderTextColor","onSurfaceVariant","md2IconColor","bodyLarge","lineHeight","regular","isBarMode","shouldRenderTraileringIcon","level3","getConstants","TextInput","web","outline","barModeInput","viewModeInput","selectionColor","underlineColorAndroid","returnKeyType","keyboardAppearance","v3Loader","loader","v3ClearIcon","v3ClearIconHidden","_root$current","onChangeText","_ref3","rightStyle","bold","divider","paddingLeft","alignSelf","minWidth","minHeight","marginHorizontal","marginRight","marginLeft","display","bottom","_Icon","SegmentedButtonItem","showSelectedCheck","segment","_ref$density","density","checkScale","spring","_getSegmentedButtonCo","getSegmentedButtonColors","segmentBorderRadius","getSegmentedButtonBorderRadius","showIcon","showCheckedIcon","iconSize","iconStyle","buttonStyle","getSegmentedButtonDensityPadding","rippleStyle","labelTextStyle","labelLarge","textTransform","fontWeight","button","content","source","selectable","numberOfLines","borderStyle","_react","_SegmentedButtonItem","SegmentedButtons","buttons","multiSelect","row","disabledChildStyle","getDisabledSegmentedButtonStyle","isArray","includes","createElement","nextValue","val","_colors","getSegmentedButtonBorderWidth","_buttons$index","_buttons","isDisabled","isNextDisabled","borderRightWidth","borderTopRightRadius","borderBottomRightRadius","borderTopLeftRadius","borderBottomLeftRadius","_ref6","hairlineWidth","_ref8","_ref4","secondaryContainer","getSegmentedButtonBackgroundColor","_ref5","surfaceDisabled","white","black","getSegmentedButtonBorderColor","_ref7","onSecondaryContainer","getSegmentedButtonTextColor","_reactNativeSafeAreaContext","_useLatestCallback","_Button","_excluded2","Snackbar","_ref$iconAccessibilit","iconAccessibilityLabel","_ref$duration","onDismiss","wrapperStyle","_useSafeAreaInsets","useSafeAreaInsets","left","hideTimeout","hidden","setHidden","animateShow","useLatestCallback","clearTimeout","easing","Easing","out","ease","finished","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","setTimeout","handleOnVisible","handleOnHidden","useLayoutEffect","actionStyle","actionLabel","onPressAction","actionRippleColor","actionProps","buttonTextColor","inversePrimary","accent","inverseOnSurface","surface","inverseSurface","isIconButton","wrapperPaddings","paddingBottom","Math","wrapper","actionsContainer","compact","DURATION_SHORT","DURATION_MEDIUM","DURATION_LONG","marginVertical","_overlay","_shadow","_splitStyles3","_excluded3","MD2Surface","overrideTheme","_ref2$elevation","flatten","_useInternalTheme","isDarkTheme","overlay","shadow","outerLayerStyleProperties","shadowColor","iOSShadowOutputRanges","shadowOpacity","shadowRadius","getStyleForShadowLayer","layer","isAnimatedValue","extrapolate","shadowOffset","SurfaceIOS","_ref3$mode","_React$useMemo","useMemo","flattenedStyles","_splitStyles","splitStyles","startsWith","endsWith","_splitStyles2","filteredStyles","outerLayerStyles","borderRadiusStyles","bgColor","isElevated","_React$useMemo2","outerLayerViewStyles","innerLayerViewStyles","Surface","_ref4$elevation","overridenTheme","_ref4$testID","_ref4$mode","_colors$elevation2","_colors$elevation","_props$pointerEvents","elevationLevel","sharedStyle","version","NativeModules","PlatformConstants","reactNativeVersion","_getSwitchColor","getSwitchColor","onTintColor","thumbTintColor","major","minor","activeTrackColor","thumbColor","activeThumbColor","trackColor","true","false","Switch","getThumbTintColor","grey800","grey400","grey50","getOnTintColor","grey700","getCheckedColor","activeColor","hasActiveOutline","focused","outlineColor","noLabelOutline","top","parentState","error","underlineColorCustom","activeScale","underline","md3Underline","scaleY","zIndex","adornmentConfig","side","AdornmentSide","Left","adornment","Right","forEach","isValidElement","TextInputAffix","AdornmentType","Affix","TextInputIcon","Icon","leftAffixWidth","rightAffixWidth","_ref3$inputOffset","inputOffset","_getConstants","OUTLINED_INPUT_OFFSET","ADORNMENT_OFFSET","isLeftSide","inputModeAdornemntOffset","InputMode","Outlined","paddingKey","captalize","offset","isAffix","marginKey","_defineProperty2","reduce","mergedStyles","currentStyle","_enums","_TextInputAffix","_TextInputIcon","_helpers","charAt","toUpperCase","slice","onAffixChange","textStyle","topPosition","isTextInputFocused","forceFocus","Fragment","inputAdornmentComponent","commonProps","IconAdornment","AffixAdornment","affix","AffixContext","fontFamily","onTextLayout","_ref2$accessibilityLa","AFFIX_OFFSET","_React$useContext","useContext","getTextColor","Text","Pressable","_constants","StyleContext","ICON_OFFSET","contextState","_ref2$forceTextInputF","forceTextInputFocus","onPressWithFocusControl","getIconColor","iconButton","ICON_SIZE","_AnimatedText","labelContainer","memo","labeled","wiggle","labelLayoutWidth","labelLayoutHeight","labelBackground","labelError","onLayoutAnimatedText","onLabelTextLayout","placeholderStyle","baseLabelTranslateX","baseLabelTranslateY","placeholderOpacity","wiggleOffsetX","labelScale","paddingRight","placeholderColor","errorColor","labelTranslationXOffset","inputContainerLayout","scaledLabel","INPUT_PADDING_HORIZONTAL","useWindowDimensions","paddingOffset","labelTranslationX","translateY","labelWidth","commonStyles","maxWidth","labelTextScaleY","labelTextTransform","view","maxHeight","outlinedLabel","_TextInputFlat","_TextInputOutlined","_roundLayoutSize","DefaultRenderer","_ref$dense","dense","_ref$disabled","_ref$error","errorProp","_ref$multiline","multiline","_ref$editable","editable","contentStyle","_ref$render","render","isControlled","validInputValue","defaultValue","setFocused","setPlaceholder","_React$useState5","_React$useState6","uncontrolledValue","setUncontrolledValue","_React$useState7","_React$useState8","labelTextLayout","setLabelTextLayout","_React$useState9","_React$useState10","setInputContainerLayout","_React$useState11","measured","_React$useState12","labelLayout","setLabelLayout","_React$useState13","_React$useState14","leftLayout","setLeftLayout","_React$useState15","_React$useState16","rightLayout","setRightLayout","_root$current2","_root$current3","_root$current4","_root$current5","_root$current6","onLeftAffixLayoutChange","roundLayoutSize","onRightAffixLayoutChange","handleFocus","onFocus","handleBlur","onBlur","handleChangeText","handleLayoutAnimatedText","handleLabelTextLayout","lines","acc","line","ceil","handleInputContainerLayout","_root$current7","_rest$maxFontSizeMult","innerRef","onInputLayout","_Underline","_TextInputAdornment","_InputLabel","customSelectionColor","cursorColor","underlineColor","underlineStyle","activeUnderlineColor","isAndroid","LABEL_PADDING_TOP","FLAT_INPUT_OFFSET","MIN_HEIGHT","MIN_WIDTH","fontSizeStyle","lineHeightStyle","viewStyle","MAXIMIZED_LABEL_FONT_SIZE","isPaddingHorizontalPassed","getAdornmentConfig","_calculateFlatInputHo","calculateFlatInputHorizontalPadding","ADORNMENT_SIZE","adornmentStyleAdjustmentForNativeInput","getAdornmentStyleAdjustmentForNativeInput","Flat","_getFlatInputColors","getFlatInputColors","inputTextColor","containerStyle","MINIMIZED_LABEL_FONT_SIZE","fontScale","labelHeight","labelHalfWidth","labelHalfHeight","minInputHeight","MIN_DENSE_HEIGHT_WL","MIN_DENSE_HEIGHT","LABEL_PADDING_TOP_DENSE","inputHeight","calculateInputHeight","calculateLabelTopPosition","paddingSettings","inputFlatDense","inputFlat","pad","calculatePadding","paddingFlat","adjustPaddingFlat","MINIMIZED_LABEL_Y_OFFSET","placeholderOpacityAnims","flatHeight","iconTopPosition","leftAffixTopPosition","calculateFlatAffixTopPosition","affixHeight","rightAffixTopPosition","labelProps","LABEL_WIGGLE_X_OFFSET","affixTopPosition","adornmentProps","Underline","densePatchContainer","patchContainer","labelLayoutMeasured","textAlignVertical","paddingTop","_Outline","_LabelBackground","customOutlineColor","activeOutlineColor","outlineStyle","_ref2$backgroundColor","_getOutlinedInputColo","getOutlinedInputColors","densePaddingTop","yOffset","OUTLINE_MINIMIZED_LABEL_Y_OFFSET","isAdornmentLeftIcon","some","isAdornmentRightIcon","MIN_DENSE_HEIGHT_OUTLINED","inputOutlinedDense","inputOutlined","paddingOut","adjustPaddingOut","labelBackgroundColor","onLayoutChange","outlinedHeight","calculateOutlinedIconAndAffixTopPosition","labelYOffset","Outline","LabelBackground","calculateTextAreaPadding","optionalPadding","customHeight","floor","finalHeight","_props$multiline","result","calculateInputPadding","refFontSize","fontHeight","refFontHeight","topResult","bottomResult","LABEL_PADDING_HORIZONTAL","getInputTextColor","getActiveColor","_ref9","modeColor","getPlaceholderColor","_ref10","getSelectionColor","_ref11","getFlatBackgroundColor","_ref12","lighten","darken","getFlatUnderlineColor","_ref13","getOutlinedOutlineInputColor","_ref14","isTransparent","_ref15","baseFlatColorProps","_ref16","baseOutlinedColorProps","MD3_AFFIX_OFFSET","MD3_ICON_OFFSET","MD3_LABEL_PADDING_TOP","MD3_LABEL_PADDING_HORIZONTAL","MD3_FLAT_INPUT_OFFSET","MD3_MIN_HEIGHT","MD3_INPUT_PADDING_HORIZONTAL","MD3_ADORNMENT_OFFSET","MD3_OUTLINED_INPUT_OFFSET","MD2_AFFIX_OFFSET","MD2_ICON_OFFSET","MD2_LABEL_PADDING_TOP","MD2_LABEL_PADDING_HORIZONTAL","MD2_FLAT_INPUT_OFFSET","MD2_MIN_HEIGHT","MD2_INPUT_PADDING_HORIZONTAL","MD2_ADORNMENT_OFFSET","MD2_OUTLINED_INPUT_OFFSET","_ToggleButtonGroup","ToggleButton","ToggleButtonGroupContext","getToggleButtonColor","selected","ToggleButtonGroup","_ToggleButton","ToggleButtonRow","count","Children","child","cloneElement","first","last","middle","borderLeftWidth","_ToggleButtonRow","ToggleButtonComponent","Row","_tokens","tokens","md","level2","_addEventListener","_Portal","Tooltip","_ref$enterTouchDelay","enterTouchDelay","_ref$leaveTouchDelay","leaveTouchDelay","title","titleMaxFontSizeMultiplier","setVisible","tooltip","measurement","setMeasurement","showTooltipTimer","hideTooltipTimer","childrenWrapperRef","touched","subscription","addEventListener","Dimensions","remove","handleTouchStart","id","handleTouchEnd","mobilePressProps","onPressOut","delayLongPress","webPressProps","onHoverIn","onHoverOut","measure","_x","_y","pageX","pageY","getTooltipPosition","pressContainer","cursor","getTooltipXPosition","childrenX","childrenWidth","tooltipWidth","center","overflowLeft","overflowRight","getTooltipYPosition","childrenY","childrenHeight","tooltipHeight","overflowBottom","component","measures","getChildrenMeasures","PressableNative","_Pressable","_hasTouchHandler","TouchableRipple","_ref$borderless","disabledProp","underlayColor","rippleEffectEnabled","SettingsContext","onPressIn","hasPassedTouchHandler","hasTouchHandler","_getTouchableRippleCo","getTouchableRippleColors","calculatedRippleColor","calculatedUnderlayColor","useForeground","Version","supported","androidRipple","foreground","overflowHidden","android_ripple","only","pressed","underlay","absoluteFillObject","getUnderlayColor","getRippleColor","AnimatedText","writingDirection","keys","join","bodyMedium","_StyledText","initialTheme","StyledText","_theme$fonts","family","letterSpacing","_ref$alpha","_Caption","_Headline","_Paragraph","_Subheading","_Title","_NativeModules$Native","_NativeModules$Native2","_NativeModules$Native3","_NativeModules$Native4","estimatedStatusBarHeight","NativeUnimoduleProxy","modulesConstants","ExponentConstants","statusBarHeight","android"],"sourceRoot":""}