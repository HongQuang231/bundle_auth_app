{"version":3,"file":"src_navigation_CreateTicketNavigation_tsx.chunk.bundle","mappings":"2NAAA,IAAAA,EAAAC,EAAA,OACAC,EAAAD,EAAA,OACAE,EAAAF,EAAA,OACAG,EAUgF,SAAAC,EAAAC,GAAA,IAAAA,GAAAD,GAAAA,EAAAE,WAAA,OAAAF,EAAA,UAAAA,GAAA,iBAAAA,GAAA,mBAAAA,EAAA,OAAAG,QAAAH,GAAA,IAAAI,EAAAC,EAAAJ,GAAA,GAAAG,GAAAA,EAAAE,IAAAN,GAAA,OAAAI,EAAAG,IAAAP,GAAA,IAAAQ,EAAA,CAAAC,UAAA,MAAAC,EAAAC,OAAAC,gBAAAD,OAAAE,yBAAA,QAAAC,KAAAd,EAAA,eAAAc,GAAA,GAAAC,eAAAC,KAAAhB,EAAAc,GAAA,KAAAG,EAAAP,EAAAC,OAAAE,yBAAAb,EAAAc,GAAA,KAAAG,IAAAA,EAAAV,KAAAU,EAAAC,KAAAP,OAAAC,eAAAJ,EAAAM,EAAAG,GAAAT,EAAAM,GAAAd,EAAAc,EAAA,QAAAN,EAAAL,QAAAH,EAAAI,GAAAA,EAAAc,IAAAlB,EAAAQ,GAAAA,CAAA,CAVhFW,CAAAvB,EAAA,OACAwB,EAAAxB,EAAA,OACAyB,EAAAC,EAAA1B,EAAA,QACA2B,EAAAD,EAAA1B,EAAA,QACA4B,EAAAF,EAAA1B,EAAA,QAEA6B,GADAH,EAAA1B,EAAA,QACA0B,EAAA1B,EAAA,SACA8B,EAAAJ,EAAA1B,EAAA,QACA+B,EAAA/B,EAAA,OACAgC,EAAAN,EAAA1B,EAAA,QACAiC,EAAAP,EAAA1B,EAAA,QAAgFkC,EAAAlC,EAAA,gBAAAS,EAAAL,GAAA,sBAAA+B,QAAA,gBAAA9B,EAAA,IAAA8B,QAAA3B,EAAA,IAAA2B,QAAA,OAAA1B,EAAA,SAAAL,GAAA,OAAAA,EAAAI,EAAAH,CAAA,GAAAD,EAAA,CAChF,IAAMgC,GAAQ,EAAAC,EAAAA,8BAERC,EAAa,CACjB,CACEC,WAAYC,EAAAA,QACZC,eAAgBC,EAAAA,eAAeC,cAEjC,CACEJ,WAAYK,EAAAA,QACZH,eAAgBC,EAAAA,eAAeG,qBAEjC,CACEN,WAAYO,EAAAA,QACZL,eAAgBC,EAAAA,eAAeK,qBA+BjCC,EAAAA,QA3B6B,SAACC,GAC9B,OACE,EAAAf,EAAAgB,MAAAhB,EAAAiB,SAAA,CAAAC,SAAA,EACE,EAAAlB,EAAAmB,KAACpD,EAAAqD,aAAY,CAACC,MAAO,CAACC,EAAAA,iBACtB,EAAAtB,EAAAmB,KAACpD,EAAAwD,oBAAmB1C,OAAA2C,OAAA,CAClBC,cAAeC,EAAAA,SACXzD,EAAG,CACP0D,MAAK9C,OAAA2C,OAAA,GAAMvD,EAAI2D,MAAUD,EAAAA,SAAOT,UAChC,EAAAlB,EAAAgB,MAAChD,EAAA6D,cAAa,CAAAX,SAAA,EACZ,EAAAlB,EAAAmB,KAACjB,EAAM4B,UAAS,CACdC,cAAe,CACbC,aAAa,GACbd,SACDd,EAAW6B,KAAI,SAACC,EAAQC,GAAK,OAC5B,EAAAnC,EAAAmB,KAACjB,EAAMkC,OAAM,CAEXC,KAAMH,EAAO3B,eACb+B,UAAWJ,EAAO7B,WAClBkC,cAAexB,GAHVmB,EAAO3B,eAIZ,OAGN,EAAAP,EAAAmB,KAACzB,EAAArB,QAAK,CAACmE,OAAQC,EAAAA,kBAKzB,C","sources":["webpack:///./src/navigation/CreateTicketNavigation.tsx"],"sourcesContent":["import {createNativeStackNavigator} from '@react-navigation/native-stack';\nimport {ApplicationProvider, IconRegistry} from '@ui-kitten/components';\nimport {PaperProvider} from 'react-native-paper';\nimport * as eva from '@eva-design/eva';\nimport {EvaIconsPack} from '@ui-kitten/eva-icons';\nimport {default as theme} from '../../custom-theme.json'; // <-- Import app theme\nimport {default as mapping} from '../../mapping.json'; // <-- Import app mapping\nimport Toast from 'react-native-toast-message';\nimport React from 'react';\nimport toastConfig from '../utils/ToastConfig';\nimport CreateTicketScreen from '../app/screens/home/component/CreateTicket';\nimport {NavigationName} from '../constants';\nimport CreateTicketSuccessScreen from '../app/screens/home/component/CreateTicketSuccess';\nimport AddTicketRelative from '../app/screens/home/component/AddTicketRelative';\nconst Stack = createNativeStackNavigator();\n\nconst listScreen = [\n  {\n    moduleName: CreateTicketScreen,\n    navigationName: NavigationName.CreateTicket,\n  },\n  {\n    moduleName: CreateTicketSuccessScreen,\n    navigationName: NavigationName.CreateTicketSuccess,\n  },\n  {\n    moduleName: AddTicketRelative,\n    navigationName: NavigationName.AddTicketRelativeS,\n  },\n];\n\nconst CreateTicketNavigation = (props: any) => {\n  return (\n    <>\n      <IconRegistry icons={[EvaIconsPack]} />\n      <ApplicationProvider\n        customMapping={mapping as any}\n        {...eva}\n        theme={{...eva.light, ...theme}}>\n        <PaperProvider>\n          <Stack.Navigator\n            screenOptions={{\n              headerShown: false,\n            }}>\n            {listScreen.map((screen, index) => (\n              <Stack.Screen\n                key={screen.navigationName}\n                name={screen.navigationName}\n                component={screen.moduleName}\n                initialParams={props}\n              />\n            ))}\n          </Stack.Navigator>\n          <Toast config={toastConfig} />\n        </PaperProvider>\n      </ApplicationProvider>\n    </>\n  );\n};\n\nexport default CreateTicketNavigation;\n"],"names":["_nativeStack","require","_components","_reactNativePaper","eva","e","r","__esModule","default","t","_getRequireWildcardCache","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","_interopRequireWildcard","_evaIcons","_customTheme","_interopRequireDefault","_mapping","_reactNativeToastMessage","_ToastConfig","_CreateTicket","_constants","_CreateTicketSuccess","_AddTicketRelative","_jsxRuntime","WeakMap","Stack","createNativeStackNavigator","listScreen","moduleName","CreateTicketScreen","navigationName","NavigationName","CreateTicket","CreateTicketSuccessScreen","CreateTicketSuccess","AddTicketRelative","AddTicketRelativeS","exports","props","jsxs","Fragment","children","jsx","IconRegistry","icons","EvaIconsPack","ApplicationProvider","assign","customMapping","mapping","theme","light","PaperProvider","Navigator","screenOptions","headerShown","map","screen","index","Screen","name","component","initialParams","config","toastConfig"],"sourceRoot":""}