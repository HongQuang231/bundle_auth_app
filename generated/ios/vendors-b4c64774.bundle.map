{"version":3,"file":"vendors-b4c64774.bundle","mappings":"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","sources":["webpack:///./node_modules/react-native-reanimated/src/reanimated2/mockedRequestAnimationFrame.ts","webpack:///./node_modules/react-native-reanimated/src/reanimated2/mutables.ts","webpack:///./node_modules/react-native-reanimated/src/reanimated2/platform-specific/RNRenderer.ts","webpack:///./node_modules/react-native-reanimated/src/reanimated2/platform-specific/checkCppVersion.ts","webpack:///./node_modules/react-native-reanimated/src/reanimated2/platform-specific/jsVersion.ts","webpack:///./node_modules/react-native-reanimated/src/reanimated2/platformFunctions/dispatchCommand.ts","webpack:///./node_modules/react-native-reanimated/src/reanimated2/platformFunctions/getRelativeCoords.ts","webpack:///./node_modules/react-native-reanimated/src/reanimated2/platformFunctions/index.ts","webpack:///./node_modules/react-native-reanimated/src/reanimated2/platformFunctions/measure.ts","webpack:///./node_modules/react-native-reanimated/src/reanimated2/platformFunctions/scrollTo.ts","webpack:///./node_modules/react-native-reanimated/src/reanimated2/platformFunctions/setGestureState.ts","webpack:///./node_modules/react-native-reanimated/src/reanimated2/platformFunctions/setNativeProps.ts","webpack:///./node_modules/react-native-reanimated/src/reanimated2/pluginUtils.ts","webpack:///./node_modules/react-native-reanimated/src/reanimated2/publicGlobals.ts","webpack:///./node_modules/react-native-reanimated/src/reanimated2/runtimes.ts","webpack:///./node_modules/react-native-reanimated/src/reanimated2/screenTransition/RNScreensTurboModule.ts","webpack:///./node_modules/react-native-reanimated/src/reanimated2/screenTransition/animationManager.ts","webpack:///./node_modules/react-native-reanimated/src/reanimated2/screenTransition/index.ts","webpack:///./node_modules/react-native-reanimated/src/reanimated2/screenTransition/presets.ts","webpack:///./node_modules/react-native-reanimated/src/reanimated2/screenTransition/styleUpdater.ts","webpack:///./node_modules/react-native-reanimated/src/reanimated2/screenTransition/swipeSimulator.ts","webpack:///./node_modules/react-native-reanimated/src/reanimated2/shareableMappingCache.ts","webpack:///./node_modules/react-native-reanimated/src/reanimated2/shareables.ts","webpack:///./node_modules/react-native-reanimated/src/reanimated2/threads.ts","webpack:///./node_modules/react-native-reanimated/src/reanimated2/valueSetter.ts","webpack:///./node_modules/react-native-reanimated/src/reanimated2/valueUnpacker.ts","webpack:///./node_modules/react-native-reanimated/src/specs/NativeReanimatedModule.ts"],"sourcesContent":["'use strict';\n\n// This is Jest implementation of `requestAnimationFrame` that is required\n// by React Native for test purposes.\nexport function mockedRequestAnimationFrame(\n  callback: (timestamp: number) => void\n): ReturnType<typeof setTimeout> {\n  return setTimeout(() => callback(performance.now()), 0);\n}\n","'use strict';\nimport { shouldBeUseWeb } from './PlatformChecker';\nimport type { Mutable } from './commonTypes';\nimport { makeShareableCloneRecursive } from './shareables';\nimport { shareableMappingCache } from './shareableMappingCache';\nimport { executeOnUIRuntimeSync, runOnUI } from './threads';\nimport { valueSetter } from './valueSetter';\n\nconst SHOULD_BE_USE_WEB = shouldBeUseWeb();\n\ntype Listener<Value> = (newValue: Value) => void;\n\nexport function makeUIMutable<Value>(initial: Value): Mutable<Value> {\n  'worklet';\n\n  const listeners = new Map<number, Listener<Value>>();\n  let value = initial;\n\n  const self: Mutable<Value> = {\n    set value(newValue) {\n      valueSetter(self, newValue);\n    },\n    get value() {\n      return value;\n    },\n    /**\n     * _value prop should only be accessed by the valueSetter implementation\n     * which may make the decision about updating the mutable value depending\n     * on the provided new value. All other places should only attempt to modify\n     * the mutable by assigning to value prop directly.\n     */\n    set _value(newValue: Value) {\n      value = newValue;\n      listeners.forEach((listener) => {\n        listener(newValue);\n      });\n    },\n    get _value(): Value {\n      return value;\n    },\n    modify: (modifier, forceUpdate = true) => {\n      valueSetter(\n        self,\n        modifier !== undefined ? modifier(value) : value,\n        forceUpdate\n      );\n    },\n    addListener: (id: number, listener: Listener<Value>) => {\n      listeners.set(id, listener);\n    },\n    removeListener: (id: number) => {\n      listeners.delete(id);\n    },\n    _animation: null,\n    _isReanimatedSharedValue: true,\n  };\n  return self;\n}\n\nexport function makeMutable<Value>(initial: Value): Mutable<Value> {\n  let value: Value = initial;\n  const handle = makeShareableCloneRecursive({\n    __init: () => {\n      'worklet';\n      return makeUIMutable(initial);\n    },\n  });\n  // listeners can only work on JS thread on Web and jest environments\n  const listeners = SHOULD_BE_USE_WEB\n    ? new Map<number, Listener<Value>>()\n    : undefined;\n  const mutable: Mutable<Value> = {\n    set value(newValue) {\n      if (SHOULD_BE_USE_WEB) {\n        valueSetter(mutable, newValue);\n      } else {\n        runOnUI(() => {\n          mutable.value = newValue;\n        })();\n      }\n    },\n    get value(): Value {\n      if (SHOULD_BE_USE_WEB) {\n        return value;\n      }\n      const uiValueGetter = executeOnUIRuntimeSync((sv: Mutable<Value>) => {\n        return sv.value;\n      });\n      return uiValueGetter(mutable);\n    },\n    set _value(newValue: Value) {\n      if (!SHOULD_BE_USE_WEB) {\n        throw new Error(\n          '[Reanimated] Setting `_value` directly is only possible on the UI runtime. Perhaps you want to assign to `value` instead?'\n        );\n      }\n      value = newValue;\n      listeners!.forEach((listener) => {\n        listener(newValue);\n      });\n    },\n    get _value(): Value {\n      if (SHOULD_BE_USE_WEB) {\n        return value;\n      }\n      throw new Error(\n        '[Reanimated] Reading from `_value` directly is only possible on the UI runtime. Perhaps you passed an Animated Style to a non-animated component?'\n      );\n    },\n\n    modify: (modifier, forceUpdate = true) => {\n      if (!SHOULD_BE_USE_WEB) {\n        runOnUI(() => {\n          mutable.modify(modifier, forceUpdate);\n        })();\n      } else {\n        valueSetter(\n          mutable,\n          modifier !== undefined ? modifier(mutable.value) : mutable.value,\n          forceUpdate\n        );\n      }\n    },\n    addListener: (id: number, listener: Listener<Value>) => {\n      if (!SHOULD_BE_USE_WEB) {\n        throw new Error(\n          '[Reanimated] Adding listeners is only possible on the UI runtime.'\n        );\n      }\n      listeners!.set(id, listener);\n    },\n    removeListener: (id: number) => {\n      if (!SHOULD_BE_USE_WEB) {\n        throw new Error(\n          '[Reanimated] Removing listeners is only possible on the UI runtime.'\n        );\n      }\n      listeners!.delete(id);\n    },\n    _isReanimatedSharedValue: true,\n  };\n  shareableMappingCache.set(mutable, handle);\n  return mutable;\n}\n","// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-nocheck\n'use strict';\nexport { default as RNRenderer } from 'react-native/Libraries/Renderer/shims/ReactNative';\n","'use strict';\nimport { jsVersion } from './jsVersion';\n\nexport function checkCppVersion() {\n  const cppVersion = global._REANIMATED_VERSION_CPP;\n  if (cppVersion === undefined) {\n    console.warn(\n      `[Reanimated] Couldn't determine the version of the native part of Reanimated.\n    See \\`https://docs.swmansion.com/react-native-reanimated/docs/guides/troubleshooting#couldnt-determine-the-version-of-the-native-part-of-reanimated\\` for more details.`\n    );\n    return;\n  }\n  const ok = matchVersion(jsVersion, cppVersion);\n  if (!ok) {\n    throw new Error(\n      `[Reanimated] Mismatch between JavaScript part and native part of Reanimated (${jsVersion} vs ${cppVersion}).\n    See \\`https://docs.swmansion.com/react-native-reanimated/docs/guides/troubleshooting#mismatch-between-javascript-part-and-native-part-of-reanimated\\` for more details.`\n    );\n  }\n}\n\n// This is used only in test files, therefore it is reported by ts-prune (which is desired)\n// ts-prune-ignore-next\nexport function matchVersion(version1: string, version2: string) {\n  if (version1.match(/^\\d+\\.\\d+\\.\\d+$/) && version2.match(/^\\d+\\.\\d+\\.\\d+$/)) {\n    // x.y.z, compare only major and minor, skip patch\n    const [major1, minor1] = version1.split('.');\n    const [major2, minor2] = version2.split('.');\n    return major1 === major2 && minor1 === minor2;\n  } else {\n    // alpha, beta or rc, compare everything\n    return version1 === version2;\n  }\n}\n","'use strict';\n/**\n * We hardcode the version of Reanimated here in order to compare it\n * with the version used to build the native part of the library in runtime.\n * Remember to keep this in sync with the version declared in `package.json`\n */\nexport const jsVersion = '3.12.1';\n","'use strict';\nimport type { ShadowNodeWrapper } from '../commonTypes';\nimport {\n  isChromeDebugger,\n  isFabric,\n  isJest,\n  shouldBeUseWeb,\n} from '../PlatformChecker';\nimport type {\n  AnimatedRef,\n  AnimatedRefOnJS,\n  AnimatedRefOnUI,\n} from '../hook/commonTypes';\nimport type { Component } from 'react';\n\ntype DispatchCommand = <T extends Component>(\n  animatedRef: AnimatedRef<T>,\n  commandName: string,\n  args?: unknown[]\n) => void;\n\n/**\n * Lets you synchronously call a command of a native component.\n *\n * @param animatedRef - An [animated ref](https://docs.swmansion.com/react-native-reanimated/docs/core/useAnimatedRef#returns) connected to the component you'd want to call the command on.\n * @param commandName - The name of the command to dispatch (e.g. `\"focus\"` or `\"scrollToEnd\"`).\n * @param args - An optional array of arguments for the command.\n * @see https://docs.swmansion.com/react-native-reanimated/docs/advanced/dispatchCommand\n */\nexport let dispatchCommand: DispatchCommand;\n\nfunction dispatchCommandFabric(\n  animatedRef: AnimatedRefOnJS | AnimatedRefOnUI,\n  commandName: string,\n  args: Array<unknown> = []\n) {\n  'worklet';\n  if (!_WORKLET) {\n    return;\n  }\n\n  const shadowNodeWrapper = animatedRef() as ShadowNodeWrapper;\n  global._dispatchCommandFabric!(shadowNodeWrapper, commandName, args);\n}\n\nfunction dispatchCommandPaper(\n  animatedRef: AnimatedRefOnJS | AnimatedRefOnUI,\n  commandName: string,\n  args: Array<unknown> = []\n) {\n  'worklet';\n  if (!_WORKLET) {\n    return;\n  }\n\n  const viewTag = animatedRef() as number;\n  global._dispatchCommandPaper!(viewTag, commandName, args);\n}\n\nfunction dispatchCommandJest() {\n  console.warn('[Reanimated] dispatchCommand() is not supported with Jest.');\n}\n\nfunction dispatchCommandChromeDebugger() {\n  console.warn(\n    '[Reanimated] dispatchCommand() is not supported with Chrome Debugger.'\n  );\n}\n\nfunction dispatchCommandDefault() {\n  console.warn(\n    '[Reanimated] dispatchCommand() is not supported on this configuration.'\n  );\n}\n\nif (!shouldBeUseWeb()) {\n  // Those assertions are actually correct since on Native platforms `AnimatedRef` is\n  // mapped as a different function in `shareableMappingCache` and\n  // TypeScript is not able to infer that.\n  if (isFabric()) {\n    dispatchCommand = dispatchCommandFabric as unknown as DispatchCommand;\n  } else {\n    dispatchCommand = dispatchCommandPaper as unknown as DispatchCommand;\n  }\n} else if (isJest()) {\n  dispatchCommand = dispatchCommandJest;\n} else if (isChromeDebugger()) {\n  dispatchCommand = dispatchCommandChromeDebugger;\n} else {\n  dispatchCommand = dispatchCommandDefault;\n}\n","'use strict';\nimport type { Component } from 'react';\nimport { measure } from './measure';\nimport type { AnimatedRef } from '../hook/commonTypes';\n\n/**\n * An object which contains relative coordinates.\n */\nexport interface ComponentCoords {\n  x: number;\n  y: number;\n}\n\n/**\n * Lets you determines the location on the screen, relative to the given view.\n *\n * @param animatedRef - An [animated ref](https://docs.swmansion.com/react-native-reanimated/docs/core/useAnimatedRef#returns) connected to the component you'd want to get the coordinates from.\n * @param absoluteX - A number which is an absolute x coordinate.\n * @param absoluteY - A number which is an absolute y coordinate.\n * @returns An object which contains relative coordinates - {@link ComponentCoords}.\n * @see https://docs.swmansion.com/react-native-reanimated/docs/utilities/getRelativeCoords\n */\nexport function getRelativeCoords(\n  animatedRef: AnimatedRef<Component>,\n  absoluteX: number,\n  absoluteY: number\n): ComponentCoords | null {\n  'worklet';\n  const parentCoords = measure(animatedRef);\n  if (parentCoords === null) {\n    return null;\n  }\n  return {\n    x: absoluteX - parentCoords.pageX,\n    y: absoluteY - parentCoords.pageY,\n  };\n}\n","'use strict';\nexport { dispatchCommand } from './dispatchCommand';\nexport { measure } from './measure';\nexport { scrollTo } from './scrollTo';\nexport { setGestureState } from './setGestureState';\nexport { setNativeProps } from './setNativeProps';\nexport { getRelativeCoords } from './getRelativeCoords';\nexport type { ComponentCoords } from './getRelativeCoords';\n","'use strict';\nimport type { MeasuredDimensions, ShadowNodeWrapper } from '../commonTypes';\nimport {\n  isChromeDebugger,\n  isFabric,\n  isJest,\n  shouldBeUseWeb,\n} from '../PlatformChecker';\nimport type {\n  AnimatedRef,\n  AnimatedRefOnJS,\n  AnimatedRefOnUI,\n} from '../hook/commonTypes';\nimport type { Component } from 'react';\n\ntype Measure = <T extends Component>(\n  animatedRef: AnimatedRef<T>\n) => MeasuredDimensions | null;\n\n/**\n * Lets you synchronously get the dimensions and position of a view on the screen.\n *\n * @param animatedRef - An [animated ref](https://docs.swmansion.com/react-native-reanimated/docs/core/useAnimatedRef#returns) connected to the component you'd want to get the measurements from.\n * @returns An object containing component measurements or null when the measurement couldn't be performed- {@link MeasuredDimensions}.\n * @see https://docs.swmansion.com/react-native-reanimated/docs/advanced/measure/\n */\nexport let measure: Measure;\n\nfunction measureFabric(animatedRef: AnimatedRefOnJS | AnimatedRefOnUI) {\n  'worklet';\n  if (!_WORKLET) {\n    return null;\n  }\n\n  const viewTag = animatedRef();\n  if (viewTag === -1) {\n    console.warn(\n      `[Reanimated] The view with tag ${viewTag} is not a valid argument for measure(). This may be because the view is not currently rendered, which may not be a bug (e.g. an off-screen FlatList item).`\n    );\n    return null;\n  }\n\n  const measured = global._measureFabric!(viewTag as ShadowNodeWrapper);\n  if (measured === null) {\n    console.warn(\n      `[Reanimated] The view has some undefined, not-yet-computed or meaningless value of \\`LayoutMetrics\\` type. This may be because the view is not currently rendered, which may not be a bug (e.g. an off-screen FlatList item).`\n    );\n    return null;\n  } else if (measured.x === -1234567) {\n    console.warn(\n      `[Reanimated] The view returned an invalid measurement response. Please make sure the view is currently rendered.`\n    );\n    return null;\n  } else if (isNaN(measured.x)) {\n    console.warn(\n      `[Reanimated] The view gets view-flattened on Android. To disable view-flattening, set \\`collapsable={false}\\` on this component.`\n    );\n    return null;\n  } else {\n    return measured;\n  }\n}\n\nfunction measurePaper(animatedRef: AnimatedRefOnJS | AnimatedRefOnUI) {\n  'worklet';\n  if (!_WORKLET) {\n    return null;\n  }\n\n  const viewTag = animatedRef();\n  if (viewTag === -1) {\n    console.warn(\n      `[Reanimated] The view with tag ${viewTag} is not a valid argument for measure(). This may be because the view is not currently rendered, which may not be a bug (e.g. an off-screen FlatList item).`\n    );\n    return null;\n  }\n\n  const measured = global._measurePaper!(viewTag as number);\n  if (measured === null) {\n    console.warn(\n      `[Reanimated] The view with tag ${\n        viewTag as number\n      } has some undefined, not-yet-computed or meaningless value of \\`LayoutMetrics\\` type. This may be because the view is not currently rendered, which may not be a bug (e.g. an off-screen FlatList item).`\n    );\n    return null;\n  } else if (measured.x === -1234567) {\n    console.warn(\n      `[Reanimated] The view with tag ${\n        viewTag as number\n      } returned an invalid measurement response. Please make sure the view is currently rendered.`\n    );\n    return null;\n  } else if (isNaN(measured.x)) {\n    console.warn(\n      `[Reanimated] The view with tag ${\n        viewTag as number\n      } gets view-flattened on Android. To disable view-flattening, set \\`collapsable={false}\\` on this component.`\n    );\n    return null;\n  } else {\n    return measured;\n  }\n}\n\nfunction measureJest() {\n  console.warn('[Reanimated] measure() cannot be used with Jest.');\n  return null;\n}\n\nfunction measureChromeDebugger() {\n  console.warn('[Reanimated] measure() cannot be used with Chrome Debugger.');\n  return null;\n}\n\nfunction measureDefault() {\n  console.warn(\n    '[Reanimated] measure() is not supported on this configuration.'\n  );\n  return null;\n}\n\nif (!shouldBeUseWeb()) {\n  // Those assertions are actually correct since on Native platforms `AnimatedRef` is\n  // mapped as a different function in `shareableMappingCache` and\n  // TypeScript is not able to infer that.\n  if (isFabric()) {\n    measure = measureFabric as unknown as Measure;\n  } else {\n    measure = measurePaper as unknown as Measure;\n  }\n} else if (isJest()) {\n  measure = measureJest;\n} else if (isChromeDebugger()) {\n  measure = measureChromeDebugger;\n} else {\n  measure = measureDefault;\n}\n","'use strict';\nimport {\n  isChromeDebugger,\n  isFabric,\n  isJest,\n  shouldBeUseWeb,\n} from '../PlatformChecker';\nimport { dispatchCommand } from './dispatchCommand';\nimport type {\n  AnimatedRef,\n  AnimatedRefOnJS,\n  AnimatedRefOnUI,\n} from '../hook/commonTypes';\nimport type { Component } from 'react';\n\ntype ScrollTo = <T extends Component>(\n  animatedRef: AnimatedRef<T>,\n  x: number,\n  y: number,\n  animated: boolean\n) => void;\n\n/**\n * Lets you synchronously scroll to a given position of a `ScrollView`.\n *\n * @param animatedRef - An [animated ref](https://docs.swmansion.com/react-native-reanimated/docs/core/useAnimatedRef) attached to an `Animated.ScrollView` component.\n * @param x - The x position you want to scroll to.\n * @param y - The y position you want to scroll to.\n * @param animated - Whether the scrolling should be smooth or instant.\n * @see https://docs.swmansion.com/react-native-reanimated/docs/scroll/scrollTo\n */\nexport let scrollTo: ScrollTo;\n\nfunction scrollToFabric(\n  animatedRef: AnimatedRefOnJS | AnimatedRefOnUI,\n  x: number,\n  y: number,\n  animated: boolean\n) {\n  'worklet';\n  dispatchCommand(\n    // This assertion is needed to comply to `dispatchCommand` interface\n    animatedRef as unknown as AnimatedRef<Component>,\n    'scrollTo',\n    [x, y, animated]\n  );\n}\n\nfunction scrollToPaper(\n  animatedRef: AnimatedRefOnJS | AnimatedRefOnUI,\n  x: number,\n  y: number,\n  animated: boolean\n) {\n  'worklet';\n  if (!_WORKLET) {\n    return;\n  }\n\n  const viewTag = animatedRef() as number;\n  global._scrollToPaper!(viewTag, x, y, animated);\n}\n\nfunction scrollToJest() {\n  console.warn('[Reanimated] scrollTo() is not supported with Jest.');\n}\n\nfunction scrollToChromeDebugger() {\n  console.warn(\n    '[Reanimated] scrollTo() is not supported with Chrome Debugger.'\n  );\n}\n\nfunction scrollToDefault() {\n  console.warn(\n    '[Reanimated] scrollTo() is not supported on this configuration.'\n  );\n}\n\nif (!shouldBeUseWeb()) {\n  // Those assertions are actually correct since on Native platforms `AnimatedRef` is\n  // mapped as a different function in `shareableMappingCache` and\n  // TypeScript is not able to infer that.\n  if (isFabric()) {\n    scrollTo = scrollToFabric as unknown as ScrollTo;\n  } else {\n    scrollTo = scrollToPaper as unknown as ScrollTo;\n  }\n} else if (isJest()) {\n  scrollTo = scrollToJest;\n} else if (isChromeDebugger()) {\n  scrollTo = scrollToChromeDebugger;\n} else {\n  scrollTo = scrollToDefault;\n}\n","'use strict';\nimport { isChromeDebugger, isJest, shouldBeUseWeb } from '../PlatformChecker';\n\ntype SetGestureState = (handlerTag: number, newState: number) => void;\n\nexport let setGestureState: SetGestureState;\n\nfunction setGestureStateNative(handlerTag: number, newState: number) {\n  'worklet';\n  if (!_WORKLET) {\n    console.warn(\n      '[Reanimated] You can not use setGestureState in non-worklet function.'\n    );\n    return;\n  }\n  global._setGestureState(handlerTag, newState);\n}\n\nfunction setGestureStateJest() {\n  console.warn('[Reanimated] setGestureState() cannot be used with Jest.');\n}\n\nfunction setGestureStateChromeDebugger() {\n  console.warn(\n    '[Reanimated] setGestureState() cannot be used with Chrome Debugger.'\n  );\n}\n\nfunction setGestureStateDefault() {\n  console.warn(\n    '[Reanimated] setGestureState() is not supported on this configuration.'\n  );\n}\n\nif (!shouldBeUseWeb()) {\n  setGestureState = setGestureStateNative;\n} else if (isJest()) {\n  setGestureState = setGestureStateJest;\n} else if (isChromeDebugger()) {\n  setGestureState = setGestureStateChromeDebugger;\n} else {\n  setGestureState = setGestureStateDefault;\n}\n","'use strict';\nimport type { ShadowNodeWrapper, StyleProps } from '../commonTypes';\nimport {\n  isChromeDebugger,\n  isFabric,\n  isJest,\n  shouldBeUseWeb,\n} from '../PlatformChecker';\nimport type {\n  AnimatedRef,\n  AnimatedRefOnJS,\n  AnimatedRefOnUI,\n} from '../hook/commonTypes';\nimport type { Component } from 'react';\nimport { processColorsInProps } from '../Colors';\n\ntype SetNativeProps = <T extends Component>(\n  animatedRef: AnimatedRef<T>,\n  updates: StyleProps\n) => void;\n/**\n * Lets you imperatively update component properties. You should always reach for [useAnimatedStyle](https://docs.swmansion.com/react-native-reanimated/docs/core/useAnimatedStyle) and [useAnimatedProps](https://docs.swmansion.com/react-native-reanimated/docs/core/useAnimatedProps) first when animating styles or properties.\n *\n * @param animatedRef - An [animated ref](https://docs.swmansion.com/react-native-reanimated/docs/core/useAnimatedRef#returns) connected to the component you'd want to update.\n * @param updates - An object with properties you want to update.\n * @see https://docs.swmansion.com/react-native-reanimated/docs/advanced/setNativeProps\n */\nexport let setNativeProps: SetNativeProps;\n\nfunction setNativePropsFabric(\n  animatedRef: AnimatedRefOnJS | AnimatedRefOnUI,\n  updates: StyleProps\n) {\n  'worklet';\n  if (!_WORKLET) {\n    console.warn(\n      '[Reanimated] setNativeProps() can only be used on the UI runtime.'\n    );\n    return;\n  }\n  const shadowNodeWrapper = animatedRef() as ShadowNodeWrapper;\n  processColorsInProps(updates);\n  global._updatePropsFabric!([{ shadowNodeWrapper, updates }]);\n}\n\nfunction setNativePropsPaper(\n  animatedRef: AnimatedRefOnJS | AnimatedRefOnUI,\n  updates: StyleProps\n) {\n  'worklet';\n  if (!_WORKLET) {\n    console.warn(\n      '[Reanimated] setNativeProps() can only be used on the UI runtime.'\n    );\n    return;\n  }\n  const tag = animatedRef() as number;\n  const name = (animatedRef as AnimatedRefOnUI).viewName.value;\n  processColorsInProps(updates);\n  global._updatePropsPaper!([{ tag, name, updates }]);\n}\n\nfunction setNativePropsJest() {\n  console.warn('[Reanimated] setNativeProps() is not supported with Jest.');\n}\n\nfunction setNativePropsChromeDebugger() {\n  console.warn(\n    '[Reanimated] setNativeProps() is not supported with Chrome Debugger.'\n  );\n}\n\nfunction setNativePropsDefault() {\n  console.warn(\n    '[Reanimated] setNativeProps() is not supported on this configuration.'\n  );\n}\n\nif (!shouldBeUseWeb()) {\n  // Those assertions are actually correct since on Native platforms `AnimatedRef` is\n  // mapped as a different function in `shareableMappingCache` and\n  // TypeScript is not able to infer that.\n  if (isFabric()) {\n    setNativeProps = setNativePropsFabric as unknown as SetNativeProps;\n  } else {\n    setNativeProps = setNativePropsPaper as unknown as SetNativeProps;\n  }\n} else if (isJest()) {\n  setNativeProps = setNativePropsJest;\n} else if (isChromeDebugger()) {\n  setNativeProps = setNativePropsChromeDebugger;\n} else {\n  setNativeProps = setNativePropsDefault;\n}\n","'use strict';\nexport function getUseOfValueInStyleWarning() {\n  return (\n    \"It looks like you might be using shared value's .value inside reanimated inline style. \" +\n    'If you want a component to update when shared value changes you should use the shared value' +\n    ' directly instead of its current state represented by `.value`. See documentation here: ' +\n    'https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/glossary/#animations-in-inline-styling'\n  );\n}\n","'use strict';\n/* eslint-disable no-var */\nexport {};\n\ndeclare global {\n  /**\n   * This global variable is a diagnostic/development tool.\n   *\n   * It is `true` on the UI thread and `false` on the JS thread.\n   *\n   * It used to be necessary in the past for some of the\n   * functionalities of react-native-reanimated to work\n   * properly but it's no longer the case. Your code\n   * shouldn't depend on it, we keep it here\n   * mainly for backward compatibility for our users.\n   */\n  var _WORKLET: boolean | undefined;\n\n  /**\n   * This ArrayBuffer contains the memory address of `jsi::Runtime`\n   * which is the Reanimated UI runtime.\n   */\n  var _WORKLET_RUNTIME: ArrayBuffer;\n}\n","'use strict';\nimport { isWorkletFunction } from './commonTypes';\nimport type { WorkletFunction } from './commonTypes';\nimport { setupCallGuard, setupConsole } from './initializers';\nimport NativeReanimatedModule from './NativeReanimated';\nimport { shouldBeUseWeb } from './PlatformChecker';\nimport {\n  makeShareableCloneOnUIRecursive,\n  makeShareableCloneRecursive,\n} from './shareables';\n\nconst SHOULD_BE_USE_WEB = shouldBeUseWeb();\n\nexport type WorkletRuntime = {\n  __hostObjectWorkletRuntime: never;\n  readonly name: string;\n};\n\n/**\n * Lets you create a new JS runtime which can be used to run worklets possibly on different threads than JS or UI thread.\n *\n * @param name - A name used to identify the runtime which will appear in devices list in Chrome DevTools.\n * @param initializer - An optional worklet that will be run synchronously on the same thread immediately after the runtime is created.\n * @returns WorkletRuntime which is a jsi::HostObject\\<reanimated::WorkletRuntime\\> - {@link WorkletRuntime}\n * @see https://docs.swmansion.com/react-native-reanimated/docs/threading/createWorkletRuntime\n */\n// @ts-expect-error Check `runOnUI` overload.\nexport function createWorkletRuntime(\n  name: string,\n  initializer?: () => void\n): WorkletRuntime;\n\nexport function createWorkletRuntime(\n  name: string,\n  initializer?: WorkletFunction<[], void>\n): WorkletRuntime {\n  return NativeReanimatedModule.createWorkletRuntime(\n    name,\n    makeShareableCloneRecursive(() => {\n      'worklet';\n      setupCallGuard();\n      setupConsole();\n      initializer?.();\n    })\n  );\n}\n\n// @ts-expect-error Check `runOnUI` overload.\nexport function runOnRuntime<Args extends unknown[], ReturnValue>(\n  workletRuntime: WorkletRuntime,\n  worklet: (...args: Args) => ReturnValue\n): WorkletFunction<Args, ReturnValue>;\n/**\n * Schedule a worklet to execute on the background queue.\n */\nexport function runOnRuntime<Args extends unknown[], ReturnValue>(\n  workletRuntime: WorkletRuntime,\n  worklet: WorkletFunction<Args, ReturnValue>\n): (...args: Args) => void {\n  'worklet';\n  if (__DEV__ && !SHOULD_BE_USE_WEB && !isWorkletFunction(worklet)) {\n    throw new Error(\n      '[Reanimated] The function passed to `runOnRuntime` is not a worklet.' +\n        (_WORKLET\n          ? ' Please make sure that `processNestedWorklets` option in Reanimated Babel plugin is enabled.'\n          : '')\n    );\n  }\n  if (_WORKLET) {\n    return (...args) =>\n      global._scheduleOnRuntime(\n        workletRuntime,\n        makeShareableCloneOnUIRecursive(() => {\n          'worklet';\n          worklet(...args);\n        })\n      );\n  }\n  return (...args) =>\n    NativeReanimatedModule.scheduleOnRuntime(\n      workletRuntime,\n      makeShareableCloneRecursive(() => {\n        'worklet';\n        worklet(...args);\n      })\n    );\n}\n","'use strict';\nimport type { RNScreensTurboModuleType } from './commonTypes';\n\nfunction noopFactory<T>(defaultReturnValue?: T): () => T {\n  return () => {\n    'worklet';\n    console.warn(\n      '[Reanimated] RNScreensTurboModule has not been found. Check that you have installed `react-native-screens@3.30.0` or newer in your project and rebuilt your app.'\n    );\n    return defaultReturnValue as T;\n  };\n}\n\ntype TransactionConfig = {\n  topScreenId: number;\n  belowTopScreenId: number;\n  canStartTransition: boolean;\n};\n\nexport const RNScreensTurboModule: RNScreensTurboModuleType =\n  global.RNScreensTurboModule || {\n    startTransition: noopFactory<TransactionConfig>({\n      topScreenId: -1,\n      belowTopScreenId: -1,\n      canStartTransition: false,\n    }),\n    updateTransition: noopFactory(),\n    finishTransition: noopFactory(),\n  };\n","'use strict';\n\nimport type { LockAxis, ScreenTransitionConfig } from './commonTypes';\nimport { configureProps } from '../../ConfigHelper';\nimport { applyStyle } from './styleUpdater';\nimport { getSwipeSimulator } from './swipeSimulator';\n\nconfigureProps();\n\nexport function startScreenTransition(\n  screenTransitionConfig: ScreenTransitionConfig\n) {\n  'worklet';\n  const { stackTag, sharedEvent } = screenTransitionConfig;\n  sharedEvent.addListener(stackTag, () => {\n    applyStyle(screenTransitionConfig, sharedEvent.value);\n  });\n}\n\nfunction getLockAxis(goBackGesture: string): LockAxis {\n  'worklet';\n  if (['swipeRight', 'swipeLeft', 'horizontalSwipe'].includes(goBackGesture)) {\n    return 'x';\n  } else if (\n    ['swipeUp', 'swipeDown', 'verticalSwipe'].includes(goBackGesture)\n  ) {\n    return 'y';\n  }\n  return undefined;\n}\n\nexport function finishScreenTransition(\n  screenTransitionConfig: ScreenTransitionConfig\n) {\n  'worklet';\n  const { stackTag, sharedEvent, goBackGesture } = screenTransitionConfig;\n  sharedEvent.removeListener(stackTag);\n  const lockAxis = getLockAxis(goBackGesture);\n  const step = getSwipeSimulator(\n    sharedEvent.value,\n    screenTransitionConfig,\n    lockAxis\n  );\n  step();\n}\n","'use strict';\n\nexport {\n  startScreenTransition,\n  finishScreenTransition,\n} from './animationManager';\nexport { ScreenTransition } from './presets';\nexport type {\n  AnimatedScreenTransition,\n  GoBackGesture,\n  ScreenTransitionConfig,\n} from './commonTypes';\n","'use strict';\n\nimport type { AnimatedScreenTransition } from './commonTypes';\n\nconst SwipeRight: AnimatedScreenTransition = {\n  topScreenStyle: (event) => {\n    'worklet';\n    return {\n      transform: [{ translateX: event.translationX }],\n    };\n  },\n  belowTopScreenStyle: (event, screenSize) => {\n    'worklet';\n    return {\n      transform: [\n        { translateX: (event.translationX - screenSize.width) * 0.3 },\n      ],\n    };\n  },\n};\n\nconst SwipeLeft: AnimatedScreenTransition = {\n  topScreenStyle: (event) => {\n    'worklet';\n    return {\n      transform: [{ translateX: event.translationX }],\n    };\n  },\n  belowTopScreenStyle: (event, screenSize) => {\n    'worklet';\n    return {\n      transform: [\n        { translateX: (event.translationX + screenSize.width) * 0.3 },\n      ],\n    };\n  },\n};\n\nconst SwipeDown: AnimatedScreenTransition = {\n  topScreenStyle: (event) => {\n    'worklet';\n    return {\n      transform: [{ translateY: event.translationY }],\n    };\n  },\n  belowTopScreenStyle: (event, screenSize) => {\n    'worklet';\n    return {\n      transform: [\n        { translateY: (event.translationY - screenSize.height) * 0.3 },\n      ],\n    };\n  },\n};\n\nconst SwipeUp: AnimatedScreenTransition = {\n  topScreenStyle: (event) => {\n    'worklet';\n    return {\n      transform: [{ translateY: event.translationY }],\n    };\n  },\n  belowTopScreenStyle: (event, screenSize) => {\n    'worklet';\n    return {\n      transform: [\n        { translateY: (event.translationY + screenSize.height) * 0.3 },\n      ],\n    };\n  },\n};\n\nconst TwoDimensional: AnimatedScreenTransition = {\n  topScreenStyle: (event, _screenSize) => {\n    'worklet';\n    return {\n      transform: [\n        { translateX: event.translationX },\n        { translateY: event.translationY },\n      ],\n    };\n  },\n  belowTopScreenStyle: (_event, _screenSize) => {\n    'worklet';\n    return {};\n  },\n};\n\nconst Horizontal: AnimatedScreenTransition = {\n  topScreenStyle: (event, _screenSize) => {\n    'worklet';\n    return {\n      transform: [{ translateX: event.translationX }],\n    };\n  },\n  belowTopScreenStyle: (_event, _screenSize) => {\n    'worklet';\n    return {};\n  },\n};\n\nconst Vertical: AnimatedScreenTransition = {\n  topScreenStyle: (event, _screenSize) => {\n    'worklet';\n    return {\n      transform: [{ translateY: event.translationY }],\n    };\n  },\n  belowTopScreenStyle: (_event, _screenSize) => {\n    'worklet';\n    return {};\n  },\n};\n\nconst SwipeRightFade: AnimatedScreenTransition = {\n  topScreenStyle: (event, screenSize) => {\n    'worklet';\n    return {\n      opacity: 1 - Math.abs(event.translationX / screenSize.width),\n    };\n  },\n  belowTopScreenStyle: (_event, _screenSize) => {\n    'worklet';\n    return {};\n  },\n};\n\nexport const ScreenTransition = {\n  SwipeRight,\n  SwipeLeft,\n  SwipeDown,\n  SwipeUp,\n  Horizontal,\n  Vertical,\n  TwoDimensional,\n  SwipeRightFade,\n};\n","'use strict';\nimport { isFabric } from '../PlatformChecker';\nimport updateProps from '../UpdateProps';\nimport type { ShadowNodeWrapper, SharedValue } from '../commonTypes';\nimport type { Descriptor } from '../hook/commonTypes';\nimport type {\n  PanGestureHandlerEventPayload,\n  ScreenTransitionConfig,\n} from './commonTypes';\n\nconst IS_FABRIC = isFabric();\n\nfunction createViewDescriptorPaper(screenId: number | ShadowNodeWrapper) {\n  'worklet';\n  return { tag: screenId, name: 'RCTView' };\n}\nfunction createViewDescriptorFabric(screenId: number | ShadowNodeWrapper) {\n  'worklet';\n  return { shadowNodeWrapper: screenId };\n}\nconst createViewDescriptor = IS_FABRIC\n  ? createViewDescriptorFabric\n  : createViewDescriptorPaper;\n\nfunction applyStyleForTopScreen(\n  screenTransitionConfig: ScreenTransitionConfig,\n  event: PanGestureHandlerEventPayload\n) {\n  'worklet';\n  const { screenDimensions, topScreenId, screenTransition } =\n    screenTransitionConfig;\n  const { topScreenStyle: computeTopScreenStyle } = screenTransition;\n  const topScreenStyle = computeTopScreenStyle(event, screenDimensions);\n  const topScreenDescriptor = {\n    value: [createViewDescriptor(topScreenId)],\n  };\n  updateProps(\n    topScreenDescriptor as SharedValue<Descriptor[]>,\n    topScreenStyle,\n    undefined\n  );\n}\n\nexport function applyStyleForBelowTopScreen(\n  screenTransitionConfig: ScreenTransitionConfig,\n  event: PanGestureHandlerEventPayload\n) {\n  'worklet';\n  const { screenDimensions, belowTopScreenId, screenTransition } =\n    screenTransitionConfig;\n  const { belowTopScreenStyle: computeBelowTopScreenStyle } = screenTransition;\n  const belowTopScreenStyle = computeBelowTopScreenStyle(\n    event,\n    screenDimensions\n  );\n  const belowTopScreenDescriptor = {\n    value: [createViewDescriptor(belowTopScreenId)],\n  };\n  updateProps(\n    belowTopScreenDescriptor as SharedValue<Descriptor[]>,\n    belowTopScreenStyle,\n    undefined\n  );\n}\n\nexport function applyStyle(\n  screenTransitionConfig: ScreenTransitionConfig,\n  event: PanGestureHandlerEventPayload\n) {\n  'worklet';\n  applyStyleForTopScreen(screenTransitionConfig, event);\n  applyStyleForBelowTopScreen(screenTransitionConfig, event);\n}\n","'use strict';\nimport type {\n  PanGestureHandlerEventPayload,\n  ScreenTransitionConfig,\n  LockAxis,\n} from './commonTypes';\nimport { applyStyle, applyStyleForBelowTopScreen } from './styleUpdater';\nimport { RNScreensTurboModule } from './RNScreensTurboModule';\n\nconst BASE_VELOCITY = 400;\nconst ADDITIONAL_VELOCITY_FACTOR_X = 400;\nconst ADDITIONAL_VELOCITY_FACTOR_Y = 500;\nconst ADDITIONAL_VELOCITY_FACTOR_XY = 600;\n\nfunction computeEasingProgress(\n  startingTimestamp: number,\n  distance: number,\n  velocity: number\n) {\n  'worklet';\n  if (Math.abs(distance) < 1) {\n    return 1;\n  }\n  const elapsedTime = (_getAnimationTimestamp() - startingTimestamp) / 1000;\n  const currentPosition = velocity * elapsedTime;\n  const progress = currentPosition / distance;\n  return progress;\n}\n\nfunction easing(x: number): number {\n  'worklet';\n  // based on https://easings.net/#easeOutQuart\n  return 1 - Math.pow(1 - x, 5);\n}\n\nfunction computeProgress(\n  screenTransitionConfig: ScreenTransitionConfig,\n  event: PanGestureHandlerEventPayload,\n  isTransitionCanceled: boolean\n) {\n  'worklet';\n  const screenDimensions = screenTransitionConfig.screenDimensions;\n  const progressX = Math.abs(event.translationX / screenDimensions.width);\n  const progressY = Math.abs(event.translationY / screenDimensions.height);\n  const maxProgress = Math.max(progressX, progressY);\n  const progress = isTransitionCanceled ? maxProgress / 2 : maxProgress;\n  return progress;\n}\n\nfunction maybeScheduleNextFrame(\n  step: () => void,\n  didScreenReachDestination: boolean,\n  screenTransitionConfig: ScreenTransitionConfig,\n  event: PanGestureHandlerEventPayload,\n  isTransitionCanceled: boolean\n) {\n  'worklet';\n  if (!didScreenReachDestination) {\n    const stackTag = screenTransitionConfig.stackTag;\n    const progress = computeProgress(\n      screenTransitionConfig,\n      event,\n      isTransitionCanceled\n    );\n    RNScreensTurboModule.updateTransition(stackTag, progress);\n    requestAnimationFrame(step);\n  } else {\n    screenTransitionConfig.onFinishAnimation?.();\n  }\n}\n\nexport function getSwipeSimulator(\n  event: PanGestureHandlerEventPayload,\n  screenTransitionConfig: ScreenTransitionConfig,\n  lockAxis?: LockAxis\n) {\n  'worklet';\n  const screenDimensions = screenTransitionConfig.screenDimensions;\n  const startTimestamp = _getAnimationTimestamp();\n  const { isTransitionCanceled } = screenTransitionConfig;\n  const startingPosition = {\n    x: event.translationX,\n    y: event.translationY,\n  };\n  const direction = {\n    x: Math.sign(event.translationX),\n    y: Math.sign(event.translationY),\n  };\n  const finalPosition = isTransitionCanceled\n    ? { x: 0, y: 0 }\n    : {\n        x: direction.x * screenDimensions.width,\n        y: direction.y * screenDimensions.height,\n      };\n  const distance = {\n    x: Math.abs(finalPosition.x - startingPosition.x),\n    y: Math.abs(finalPosition.y - startingPosition.y),\n  };\n  const didScreenReachDestination = {\n    x: false,\n    y: false,\n  };\n  const velocity = { x: BASE_VELOCITY, y: BASE_VELOCITY };\n  if (lockAxis === 'x') {\n    velocity.y = 0;\n    velocity.x +=\n      (ADDITIONAL_VELOCITY_FACTOR_X * distance.x) / screenDimensions.width;\n  } else if (lockAxis === 'y') {\n    velocity.x = 0;\n    velocity.y +=\n      (ADDITIONAL_VELOCITY_FACTOR_Y * distance.y) / screenDimensions.height;\n  } else {\n    const euclideanDistance = Math.sqrt(distance.x ** 2 + distance.y ** 2);\n    const screenDiagonal = Math.sqrt(\n      screenDimensions.width ** 2 + screenDimensions.height ** 2\n    );\n    const velocityVectorLength =\n      BASE_VELOCITY +\n      (ADDITIONAL_VELOCITY_FACTOR_XY * euclideanDistance) / screenDiagonal;\n    if (Math.abs(startingPosition.x) > Math.abs(startingPosition.y)) {\n      velocity.x = velocityVectorLength;\n      velocity.y =\n        velocityVectorLength *\n        Math.abs(startingPosition.y / startingPosition.x);\n    } else {\n      velocity.x =\n        velocityVectorLength *\n        Math.abs(startingPosition.x / startingPosition.y);\n      velocity.y = velocityVectorLength;\n    }\n  }\n\n  if (isTransitionCanceled) {\n    function didScreenReachDestinationCheck() {\n      if (lockAxis === 'x') {\n        return didScreenReachDestination.x;\n      } else if (lockAxis === 'y') {\n        return didScreenReachDestination.y;\n      } else {\n        return didScreenReachDestination.x && didScreenReachDestination.y;\n      }\n    }\n\n    function restoreOriginalStyleForBelowTopScreen() {\n      event.translationX = direction.x * screenDimensions.width;\n      event.translationY = direction.y * screenDimensions.height;\n      applyStyleForBelowTopScreen(screenTransitionConfig, event);\n    }\n\n    const computeFrame = () => {\n      const progress = {\n        x: computeEasingProgress(startTimestamp, distance.x, velocity.x),\n        y: computeEasingProgress(startTimestamp, distance.y, velocity.y),\n      };\n      event.translationX =\n        startingPosition.x - direction.x * distance.x * easing(progress.x);\n      event.translationY =\n        startingPosition.y - direction.y * distance.y * easing(progress.y);\n      if (direction.x > 0) {\n        if (event.translationX <= 0) {\n          didScreenReachDestination.x = true;\n          event.translationX = 0;\n        }\n      } else {\n        if (event.translationX >= 0) {\n          didScreenReachDestination.x = true;\n          event.translationX = 0;\n        }\n      }\n      if (direction.y > 0) {\n        if (event.translationY <= 0) {\n          didScreenReachDestination.y = true;\n          event.translationY = 0;\n        }\n      } else {\n        if (event.translationY >= 0) {\n          didScreenReachDestination.y = true;\n          event.translationY = 0;\n        }\n      }\n      applyStyle(screenTransitionConfig, event);\n      const finished = didScreenReachDestinationCheck();\n      if (finished) {\n        restoreOriginalStyleForBelowTopScreen();\n      }\n      maybeScheduleNextFrame(\n        computeFrame,\n        finished,\n        screenTransitionConfig,\n        event,\n        isTransitionCanceled\n      );\n    };\n    return computeFrame;\n  } else {\n    const computeFrame = () => {\n      const progress = {\n        x: computeEasingProgress(startTimestamp, distance.x, velocity.x),\n        y: computeEasingProgress(startTimestamp, distance.y, velocity.y),\n      };\n      event.translationX =\n        startingPosition.x + direction.x * distance.x * easing(progress.x);\n      event.translationY =\n        startingPosition.y + direction.y * distance.y * easing(progress.y);\n      if (direction.x > 0) {\n        if (event.translationX >= screenDimensions.width) {\n          didScreenReachDestination.x = true;\n          event.translationX = screenDimensions.width;\n        }\n      } else {\n        if (event.translationX <= -screenDimensions.width) {\n          didScreenReachDestination.x = true;\n          event.translationX = -screenDimensions.width;\n        }\n      }\n      if (direction.y > 0) {\n        if (event.translationY >= screenDimensions.height) {\n          didScreenReachDestination.y = true;\n          event.translationY = screenDimensions.height;\n        }\n      } else {\n        if (event.translationY <= -screenDimensions.height) {\n          didScreenReachDestination.y = true;\n          event.translationY = -screenDimensions.height;\n        }\n      }\n      applyStyle(screenTransitionConfig, event);\n      maybeScheduleNextFrame(\n        computeFrame,\n        didScreenReachDestination.x || didScreenReachDestination.y,\n        screenTransitionConfig,\n        event,\n        isTransitionCanceled\n      );\n    };\n    return computeFrame;\n  }\n}\n","'use strict';\nimport { shouldBeUseWeb } from './PlatformChecker';\nimport type { ShareableRef } from './commonTypes';\n\nconst SHOULD_BE_USE_WEB = shouldBeUseWeb();\n\n/**\n * This symbol is used to represent a mapping from the value to itself.\n *\n * It's used to prevent converting a shareable that's already converted -\n * for example a Shared Value that's in worklet's closure.\n **/\nexport const shareableMappingFlag = Symbol('shareable flag');\n\n/*\nDuring a fast refresh, React holds the same instance of a Mutable\n(that's guaranteed by `useRef`) but `shareableCache` gets regenerated and thus\nbecoming empty. This happens when editing the file that contains the definition of this cache.\n\nBecause of it, `makeShareableCloneRecursive` can't find given mapping\nin `shareableCache` for the Mutable and tries to clone it as if it was a regular JS object.\nDuring cloning we use `Object.entries` to iterate over the keys which throws an error on accessing `_value`.\nFor convenience we moved this cache to a separate file so it doesn't scare us with red squiggles.\n*/\n\nconst cache = SHOULD_BE_USE_WEB\n  ? null\n  : new WeakMap<object, ShareableRef | symbol>();\n\nexport const shareableMappingCache = SHOULD_BE_USE_WEB\n  ? {\n      set() {\n        // NOOP\n      },\n      get() {\n        return null;\n      },\n    }\n  : {\n      set(shareable: object, shareableRef?: ShareableRef): void {\n        cache!.set(shareable, shareableRef || shareableMappingFlag);\n      },\n      get: cache!.get.bind(cache),\n    };\n","'use strict';\nimport NativeReanimatedModule from './NativeReanimated';\nimport { isWorkletFunction } from './commonTypes';\nimport type {\n  ShareableRef,\n  FlatShareableRef,\n  WorkletFunction,\n} from './commonTypes';\nimport { shouldBeUseWeb } from './PlatformChecker';\nimport { registerWorkletStackDetails } from './errors';\nimport { jsVersion } from './platform-specific/jsVersion';\nimport {\n  shareableMappingCache,\n  shareableMappingFlag,\n} from './shareableMappingCache';\n\n// for web/chrome debugger/jest environments this file provides a stub implementation\n// where no shareable references are used. Instead, the objects themselves are used\n// instead of shareable references, because of the fact that we don't have to deal with\n// runnning the code on separate VMs.\nconst SHOULD_BE_USE_WEB = shouldBeUseWeb();\n\nconst MAGIC_KEY = 'REANIMATED_MAGIC_KEY';\n\nfunction isHostObject(value: NonNullable<object>) {\n  'worklet';\n  // We could use JSI to determine whether an object is a host object, however\n  // the below workaround works well and is way faster than an additional JSI call.\n  // We use the fact that host objects have broken implementation of `hasOwnProperty`\n  // and hence return true for all `in` checks regardless of the key we ask for.\n  return MAGIC_KEY in value;\n}\n\nfunction isPlainJSObject(object: object) {\n  return Object.getPrototypeOf(object) === Object.prototype;\n}\n\n// The below object is used as a replacement for objects that cannot be transferred\n// as shareable values. In makeShareableCloneRecursive we detect if an object is of\n// a plain Object.prototype and only allow such objects to be transferred. This lets\n// us avoid all sorts of react internals from leaking into the UI runtime. To make it\n// possible to catch errors when someone actually tries to access such object on the UI\n// runtime, we use the below Proxy object which is instantiated on the UI runtime and\n// throws whenever someone tries to access its fields.\nconst INACCESSIBLE_OBJECT = {\n  __init: () => {\n    'worklet';\n    return new Proxy(\n      {},\n      {\n        get: (_: unknown, prop: string | symbol) => {\n          if (\n            prop === '_isReanimatedSharedValue' ||\n            prop === '__remoteFunction'\n          ) {\n            // not very happy about this check here, but we need to allow for\n            // \"inaccessible\" objects to be tested with isSharedValue check\n            // as it is being used in the mappers when extracting inputs recursively\n            // as well as with isRemoteFunction when cloning objects recursively.\n            // Apparently we can't check if a key exists there as HostObjects always\n            // return true for such tests, so the only possibility for us is to\n            // actually access that key and see if it is set to true. We therefore\n            // need to allow for this key to be accessed here.\n            return false;\n          }\n          throw new Error(\n            `[Reanimated] Trying to access property \\`${String(\n              prop\n            )}\\` of an object which cannot be sent to the UI runtime.`\n          );\n        },\n        set: () => {\n          throw new Error(\n            '[Reanimated] Trying to write to an object which cannot be sent to the UI runtime.'\n          );\n        },\n      }\n    );\n  },\n};\n\nconst VALID_ARRAY_VIEWS_NAMES = [\n  'Int8Array',\n  'Uint8Array',\n  'Uint8ClampedArray',\n  'Int16Array',\n  'Uint16Array',\n  'Int32Array',\n  'Uint32Array',\n  'Float32Array',\n  'Float64Array',\n  'BigInt64Array',\n  'BigUint64Array',\n  'DataView',\n];\n\nconst DETECT_CYCLIC_OBJECT_DEPTH_THRESHOLD = 30;\n// Below variable stores object that we process in makeShareableCloneRecursive at the specified depth.\n// We use it to check if later on the function reenters with the same object\nlet processedObjectAtThresholdDepth: unknown;\n\nexport function makeShareableCloneRecursive<T>(\n  value: any,\n  shouldPersistRemote = false,\n  depth = 0\n): ShareableRef<T> {\n  if (SHOULD_BE_USE_WEB) {\n    return value;\n  }\n  if (depth >= DETECT_CYCLIC_OBJECT_DEPTH_THRESHOLD) {\n    // if we reach certain recursion depth we suspect that we are dealing with a cyclic object.\n    // this type of objects are not supported and cannot be trasferred as shareable, so we\n    // implement a simple detection mechanism that remembers the value at a given depth and\n    // tests whether we try reenter this method later on with the same value. If that happens\n    // we throw an appropriate error.\n    if (depth === DETECT_CYCLIC_OBJECT_DEPTH_THRESHOLD) {\n      processedObjectAtThresholdDepth = value;\n    } else if (value === processedObjectAtThresholdDepth) {\n      throw new Error(\n        '[Reanimated] Trying to convert a cyclic object to a shareable. This is not supported.'\n      );\n    }\n  } else {\n    processedObjectAtThresholdDepth = undefined;\n  }\n  // This one actually may be worth to be moved to c++, we also need similar logic to run on the UI thread\n  const type = typeof value;\n  const isTypeObject = type === 'object';\n  const isTypeFunction = type === 'function';\n  if ((isTypeObject || isTypeFunction) && value !== null) {\n    const cached = shareableMappingCache.get(value);\n    if (cached === shareableMappingFlag) {\n      return value;\n    } else if (cached !== undefined) {\n      return cached as ShareableRef<T>;\n    } else {\n      let toAdapt: any;\n      if (Array.isArray(value)) {\n        toAdapt = value.map((element) =>\n          makeShareableCloneRecursive(element, shouldPersistRemote, depth + 1)\n        );\n        freezeObjectIfDev(value);\n      } else if (isTypeFunction && !isWorkletFunction(value)) {\n        // this is a remote function\n        toAdapt = value;\n        freezeObjectIfDev(value);\n      } else if (isHostObject(value)) {\n        // for host objects we pass the reference to the object as shareable and\n        // then recreate new host object wrapping the same instance on the UI thread.\n        // there is no point of iterating over keys as we do for regular objects.\n        toAdapt = value;\n      } else if (isPlainJSObject(value) || isTypeFunction) {\n        toAdapt = {};\n        if (isWorkletFunction(value)) {\n          if (__DEV__) {\n            const babelVersion = value.__initData.version;\n            if (babelVersion !== undefined && babelVersion !== jsVersion) {\n              throw new Error(`[Reanimated] Mismatch between JavaScript code version and Reanimated Babel plugin version (${jsVersion} vs. ${babelVersion}).        \nSee \\`https://docs.swmansion.com/react-native-reanimated/docs/guides/troubleshooting#mismatch-between-javascript-code-version-and-reanimated-babel-plugin-version\\` for more details.\nOffending code was: \\`${getWorkletCode(value)}\\``);\n            }\n            registerWorkletStackDetails(\n              value.__workletHash,\n              value.__stackDetails!\n            );\n          }\n          if (value.__stackDetails) {\n            // `Error` type of value cannot be copied to the UI thread, so we\n            // remove it after we handled it in dev mode or delete it to ignore it in production mode.\n            // Not removing this would cause an infinite loop in production mode and it just\n            // seems more elegant to handle it this way.\n            delete value.__stackDetails;\n          }\n          // to save on transferring static __initData field of worklet structure\n          // we request shareable value to persist its UI counterpart. This means\n          // that the __initData field that contains long strings represeting the\n          // worklet code, source map, and location, will always be\n          // serialized/deserialized once.\n          toAdapt.__initData = makeShareableCloneRecursive(\n            value.__initData,\n            true,\n            depth + 1\n          );\n        }\n\n        for (const [key, element] of Object.entries(value)) {\n          if (key === '__initData' && toAdapt.__initData !== undefined) {\n            continue;\n          }\n          toAdapt[key] = makeShareableCloneRecursive(\n            element,\n            shouldPersistRemote,\n            depth + 1\n          );\n        }\n        freezeObjectIfDev(value);\n      } else if (value instanceof RegExp) {\n        const pattern = value.source;\n        const flags = value.flags;\n        const handle = makeShareableCloneRecursive({\n          __init: () => {\n            'worklet';\n            return new RegExp(pattern, flags);\n          },\n        });\n        shareableMappingCache.set(value, handle);\n        return handle as ShareableRef<T>;\n      } else if (value instanceof Error) {\n        const { name, message, stack } = value;\n        const handle = makeShareableCloneRecursive({\n          __init: () => {\n            'worklet';\n            const error = new Error();\n            error.name = name;\n            error.message = message;\n            error.stack = stack;\n            return error;\n          },\n        });\n        shareableMappingCache.set(value, handle);\n        return handle as ShareableRef<T>;\n      } else if (value instanceof ArrayBuffer) {\n        toAdapt = value;\n      } else if (ArrayBuffer.isView(value)) {\n        // typed array (e.g. Int32Array, Uint8ClampedArray) or DataView\n        const buffer = value.buffer;\n        const typeName = value.constructor.name;\n        const handle = makeShareableCloneRecursive({\n          __init: () => {\n            'worklet';\n            if (!VALID_ARRAY_VIEWS_NAMES.includes(typeName)) {\n              throw new Error(\n                `[Reanimated] Invalid array view name \\`${typeName}\\`.`\n              );\n            }\n            const constructor = global[typeName as keyof typeof global];\n            if (constructor === undefined) {\n              throw new Error(\n                `[Reanimated] Constructor for \\`${typeName}\\` not found.`\n              );\n            }\n            return new constructor(buffer);\n          },\n        });\n        shareableMappingCache.set(value, handle);\n        return handle as ShareableRef<T>;\n      } else {\n        // This is reached for object types that are not of plain Object.prototype.\n        // We don't support such objects from being transferred as shareables to\n        // the UI runtime and hence we replace them with \"inaccessible object\"\n        // which is implemented as a Proxy object that throws on any attempt\n        // of accessing its fields. We argue that such objects can sometimes leak\n        // as attributes of objects being captured by worklets but should never\n        // be used on the UI runtime regardless. If they are being accessed, the user\n        // will get an appropriate error message.\n        const inaccessibleObject =\n          makeShareableCloneRecursive<T>(INACCESSIBLE_OBJECT);\n        shareableMappingCache.set(value, inaccessibleObject);\n        return inaccessibleObject;\n      }\n      const adapted = NativeReanimatedModule.makeShareableClone(\n        toAdapt,\n        shouldPersistRemote,\n        value\n      );\n      shareableMappingCache.set(value, adapted);\n      shareableMappingCache.set(adapted);\n      return adapted;\n    }\n  }\n  return NativeReanimatedModule.makeShareableClone(\n    value,\n    shouldPersistRemote,\n    undefined\n  );\n}\n\nconst WORKLET_CODE_THRESHOLD = 255;\n\nfunction getWorkletCode(value: WorkletFunction) {\n  // @ts-ignore this is fine\n  const code = value?.__initData?.code;\n  if (!code) {\n    return 'unknown';\n  }\n  if (code.length > WORKLET_CODE_THRESHOLD) {\n    return `${code.substring(0, WORKLET_CODE_THRESHOLD)}...`;\n  }\n  return code;\n}\n\ntype RemoteFunction<T> = {\n  __remoteFunction: FlatShareableRef<T>;\n};\n\nfunction isRemoteFunction<T>(value: {\n  __remoteFunction?: unknown;\n}): value is RemoteFunction<T> {\n  'worklet';\n  return !!value.__remoteFunction;\n}\n\n/**\n * We freeze\n * - arrays,\n * - remote functions,\n * - plain JS objects,\n *\n * that are transformed to a shareable with a meaningful warning.\n * This should help detect issues when someone modifies data after it's been converted.\n * Meaning that they may be doing a faulty assumption in their\n * code expecting that the updates are going to automatically propagate to\n * the object sent to the UI thread. If the user really wants some objects\n * to be mutable they should use shared values instead.\n */\nfunction freezeObjectIfDev<T extends object>(value: T) {\n  if (!__DEV__) {\n    return;\n  }\n  Object.entries(value).forEach(([key, element]) => {\n    const descriptor = Object.getOwnPropertyDescriptor(value, key)!;\n    if (!descriptor.configurable) {\n      return;\n    }\n    Object.defineProperty(value, key, {\n      get() {\n        return element;\n      },\n      set() {\n        console.warn(\n          `[Reanimated] Tried to modify key \\`${key}\\` of an object which has been already passed to a worklet. See \nhttps://docs.swmansion.com/react-native-reanimated/docs/guides/troubleshooting#tried-to-modify-key-of-an-object-which-has-been-converted-to-a-shareable \nfor more details.`\n        );\n      },\n    });\n  });\n  Object.preventExtensions(value);\n}\n\nexport function makeShareableCloneOnUIRecursive<T>(\n  value: T\n): FlatShareableRef<T> {\n  'worklet';\n  if (SHOULD_BE_USE_WEB) {\n    // @ts-ignore web is an interesting place where we don't run a secondary VM on the UI thread\n    // see more details in the comment where USE_STUB_IMPLEMENTATION is defined.\n    return value;\n  }\n  // eslint-disable-next-line @typescript-eslint/no-shadow\n  function cloneRecursive(value: T): FlatShareableRef<T> {\n    if (\n      (typeof value === 'object' && value !== null) ||\n      typeof value === 'function'\n    ) {\n      if (isHostObject(value)) {\n        // We call `_makeShareableClone` to wrap the provided HostObject\n        // inside ShareableJSRef.\n        return global._makeShareableClone(\n          value,\n          undefined\n        ) as FlatShareableRef<T>;\n      }\n      if (isRemoteFunction<T>(value)) {\n        // RemoteFunctions are created by us therefore they are\n        // a Shareable out of the box and there is no need to\n        // call `_makeShareableClone`.\n        return value.__remoteFunction;\n      }\n      if (Array.isArray(value)) {\n        return global._makeShareableClone(\n          value.map(cloneRecursive),\n          undefined\n        ) as FlatShareableRef<T>;\n      }\n      const toAdapt: Record<string, FlatShareableRef<T>> = {};\n      for (const [key, element] of Object.entries(value)) {\n        toAdapt[key] = cloneRecursive(element);\n      }\n      return global._makeShareableClone(toAdapt, value) as FlatShareableRef<T>;\n    }\n    return global._makeShareableClone(value, undefined);\n  }\n  return cloneRecursive(value);\n}\n\nfunction makeShareableJS<T extends object>(value: T): T {\n  return value;\n}\n\nfunction makeShareableNative<T extends object>(value: T): T {\n  if (shareableMappingCache.get(value)) {\n    return value;\n  }\n  const handle = makeShareableCloneRecursive({\n    __init: () => {\n      'worklet';\n      return value;\n    },\n  });\n  shareableMappingCache.set(value, handle);\n  return value;\n}\n\n/**\n * This function creates a value on UI with persistent state - changes to it on the UI\n * thread will be seen by all worklets. Use it when you want to create a value\n * that is read and written only on the UI thread.\n */\nexport const makeShareable = SHOULD_BE_USE_WEB\n  ? makeShareableJS\n  : makeShareableNative;\n","'use strict';\nimport NativeReanimatedModule from './NativeReanimated';\nimport { isJest, shouldBeUseWeb } from './PlatformChecker';\nimport type { WorkletFunction } from './commonTypes';\nimport {\n  makeShareableCloneOnUIRecursive,\n  makeShareableCloneRecursive,\n} from './shareables';\nimport { isWorkletFunction } from './commonTypes';\n\nconst IS_JEST = isJest();\nconst SHOULD_BE_USE_WEB = shouldBeUseWeb();\n\n/**\n * An array of [worklet, args] pairs.\n * */\nlet _runOnUIQueue: Array<[WorkletFunction<unknown[], unknown>, unknown[]]> = [];\n\nexport function setupMicrotasks() {\n  'worklet';\n\n  let microtasksQueue: Array<() => void> = [];\n  let isExecutingMicrotasksQueue = false;\n  global.queueMicrotask = (callback: () => void) => {\n    microtasksQueue.push(callback);\n  };\n\n  global.__callMicrotasks = () => {\n    if (isExecutingMicrotasksQueue) {\n      return;\n    }\n    try {\n      isExecutingMicrotasksQueue = true;\n      for (let index = 0; index < microtasksQueue.length; index += 1) {\n        // we use classic 'for' loop because the size of the currentTasks array may change while executing some of the callbacks due to queueMicrotask calls\n        microtasksQueue[index]();\n      }\n      microtasksQueue = [];\n      global._maybeFlushUIUpdatesQueue();\n    } finally {\n      isExecutingMicrotasksQueue = false;\n    }\n  };\n}\n\nfunction callMicrotasksOnUIThread() {\n  'worklet';\n  global.__callMicrotasks();\n}\n\nexport const callMicrotasks = SHOULD_BE_USE_WEB\n  ? () => {\n      // on web flushing is a noop as immediates are handled by the browser\n    }\n  : callMicrotasksOnUIThread;\n\n/**\n * Lets you asynchronously run [workletized](https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/glossary#to-workletize) functions on the [UI thread](https://docs.swmansion.com/react-native-reanimated/docs/threading/runOnUI).\n *\n * This method does not schedule the work immediately but instead waits for other worklets\n * to be scheduled within the same JS loop. It uses queueMicrotask to schedule all the worklets\n * at once making sure they will run within the same frame boundaries on the UI thread.\n *\n * @param fun - A reference to a function you want to execute on the [UI thread](https://docs.swmansion.com/react-native-reanimated/docs/threading/runOnUI) from the [JavaScript thread](https://docs.swmansion.com/react-native-reanimated/docs/threading/runOnUI).\n * @returns A function that accepts arguments for the function passed as the first argument.\n * @see https://docs.swmansion.com/react-native-reanimated/docs/threading/runOnUI\n */\n// @ts-expect-error This overload is correct since it's what user sees in his code\n// before it's transformed by Reanimated Babel plugin.\nexport function runOnUI<Args extends unknown[], ReturnValue>(\n  worklet: (...args: Args) => ReturnValue\n): (...args: Args) => void;\n\nexport function runOnUI<Args extends unknown[], ReturnValue>(\n  worklet: WorkletFunction<Args, ReturnValue>\n): (...args: Args) => void {\n  'worklet';\n  if (__DEV__ && !SHOULD_BE_USE_WEB && _WORKLET) {\n    throw new Error(\n      '[Reanimated] `runOnUI` cannot be called on the UI runtime. Please call the function synchronously or use `queueMicrotask` or `requestAnimationFrame` instead.'\n    );\n  }\n  if (__DEV__ && !SHOULD_BE_USE_WEB && !isWorkletFunction(worklet)) {\n    throw new Error('[Reanimated] `runOnUI` can only be used on worklets.');\n  }\n  return (...args) => {\n    if (IS_JEST) {\n      // Mocking time in Jest is tricky as both requestAnimationFrame and queueMicrotask\n      // callbacks run on the same queue and can be interleaved. There is no way\n      // to flush particular queue in Jest and the only control over mocked timers\n      // is by using jest.advanceTimersByTime() method which advances all types\n      // of timers including immediate and animation callbacks. Ideally we'd like\n      // to have some way here to schedule work along with React updates, but\n      // that's not possible, and hence in Jest environment instead of using scheduling\n      // mechanism we just schedule the work ommiting the queue. This is ok for the\n      // uses that we currently have but may not be ok for future tests that we write.\n      NativeReanimatedModule.scheduleOnUI(\n        makeShareableCloneRecursive(() => {\n          'worklet';\n          worklet(...args);\n        })\n      );\n      return;\n    }\n    if (__DEV__) {\n      // in DEV mode we call shareable conversion here because in case the object\n      // can't be converted, we will get a meaningful stack-trace as opposed to the\n      // situation when conversion is only done via microtask queue. This does not\n      // make the app particularily less efficient as converted objects are cached\n      // and for a given worklet the conversion only happens once.\n      makeShareableCloneRecursive(worklet);\n      makeShareableCloneRecursive(args);\n    }\n    _runOnUIQueue.push([worklet as WorkletFunction, args]);\n    if (_runOnUIQueue.length === 1) {\n      queueMicrotask(() => {\n        const queue = _runOnUIQueue;\n        _runOnUIQueue = [];\n        NativeReanimatedModule.scheduleOnUI(\n          makeShareableCloneRecursive(() => {\n            'worklet';\n            // eslint-disable-next-line @typescript-eslint/no-shadow\n            queue.forEach(([worklet, args]) => {\n              worklet(...args);\n            });\n            callMicrotasks();\n          })\n        );\n      });\n    }\n  };\n}\n\n// @ts-expect-error Check `executeOnUIRuntimeSync` overload above.\nexport function executeOnUIRuntimeSync<Args extends unknown[], ReturnValue>(\n  worklet: (...args: Args) => ReturnValue\n): (...args: Args) => ReturnValue;\n\nexport function executeOnUIRuntimeSync<Args extends unknown[], ReturnValue>(\n  worklet: WorkletFunction<Args, ReturnValue>\n): (...args: Args) => ReturnValue {\n  return (...args) => {\n    return NativeReanimatedModule.executeOnUIRuntimeSync(\n      makeShareableCloneRecursive(() => {\n        'worklet';\n        const result = worklet(...args);\n        return makeShareableCloneOnUIRecursive(result);\n      })\n    );\n  };\n}\n\n// @ts-expect-error Check `runOnUI` overload above.\nexport function runOnUIImmediately<Args extends unknown[], ReturnValue>(\n  worklet: (...args: Args) => ReturnValue\n): WorkletFunction<Args, ReturnValue>;\n/**\n * Schedule a worklet to execute on the UI runtime skipping batching mechanism.\n */\nexport function runOnUIImmediately<Args extends unknown[], ReturnValue>(\n  worklet: WorkletFunction<Args, ReturnValue>\n): (...args: Args) => void {\n  'worklet';\n  if (__DEV__ && !SHOULD_BE_USE_WEB && _WORKLET) {\n    throw new Error(\n      '[Reanimated] `runOnUIImmediately` cannot be called on the UI runtime. Please call the function synchronously or use `queueMicrotask` or `requestAnimationFrame` instead.'\n    );\n  }\n  if (__DEV__ && !SHOULD_BE_USE_WEB && !isWorkletFunction(worklet)) {\n    throw new Error(\n      '[Reanimated] `runOnUIImmediately` can only be used on worklets.'\n    );\n  }\n  return (...args) => {\n    NativeReanimatedModule.scheduleOnUI(\n      makeShareableCloneRecursive(() => {\n        'worklet';\n        worklet(...args);\n      })\n    );\n  };\n}\n\ntype ReleaseRemoteFunction<Args extends unknown[], ReturnValue> = {\n  (...args: Args): ReturnValue;\n};\n\ntype DevRemoteFunction<Args extends unknown[], ReturnValue> = {\n  __remoteFunction: (...args: Args) => ReturnValue;\n};\n\ntype RemoteFunction<Args extends unknown[], ReturnValue> =\n  | ReleaseRemoteFunction<Args, ReturnValue>\n  | DevRemoteFunction<Args, ReturnValue>;\n\nfunction runWorkletOnJS<Args extends unknown[], ReturnValue>(\n  worklet: WorkletFunction<Args, ReturnValue>,\n  ...args: Args\n): void {\n  // remote function that calls a worklet synchronously on the JS runtime\n  worklet(...args);\n}\n\n/**\n * Lets you asynchronously run non-[workletized](https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/glossary#to-workletize) functions that couldn't otherwise run on the [UI thread](https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/glossary#ui-thread).\n * This applies to most external libraries as they don't have their functions marked with \"worklet\"; directive.\n *\n * @param fun - A reference to a function you want to execute on the JavaScript thread from the UI thread.\n * @returns A function that accepts arguments for the function passed as the first argument.\n * @see https://docs.swmansion.com/react-native-reanimated/docs/threading/runOnJS\n */\nexport function runOnJS<Args extends unknown[], ReturnValue>(\n  fun:\n    | ((...args: Args) => ReturnValue)\n    | RemoteFunction<Args, ReturnValue>\n    | WorkletFunction<Args, ReturnValue>\n): (...args: Args) => void {\n  'worklet';\n  type FunDevRemote = Extract<typeof fun, DevRemoteFunction<Args, ReturnValue>>;\n  if (SHOULD_BE_USE_WEB || !_WORKLET) {\n    // if we are already on the JS thread, we just schedule the worklet on the JS queue\n    return (...args) =>\n      queueMicrotask(\n        args.length\n          ? () => (fun as (...args: Args) => ReturnValue)(...args)\n          : (fun as () => ReturnValue)\n      );\n  }\n  if (isWorkletFunction<Args, ReturnValue>(fun)) {\n    // If `fun` is a worklet, we schedule a call of a remote function `runWorkletOnJS`\n    // and pass the worklet as a first argument followed by original arguments.\n\n    return (...args) =>\n      runOnJS(runWorkletOnJS<Args, ReturnValue>)(\n        fun as WorkletFunction<Args, ReturnValue>,\n        ...args\n      );\n  }\n  if ((fun as FunDevRemote).__remoteFunction) {\n    // In development mode the function provided as `fun` throws an error message\n    // such that when someone accidentally calls it directly on the UI runtime, they\n    // see that they should use `runOnJS` instead. To facilitate that we put the\n    // reference to the original remote function in the `__remoteFunction` property.\n    fun = (fun as FunDevRemote).__remoteFunction;\n  }\n  return (...args) => {\n    global._scheduleOnJS(\n      fun as\n        | ((...args: Args) => ReturnValue)\n        | WorkletFunction<Args, ReturnValue>,\n      args.length > 0\n        ? // TODO TYPESCRIPT this cast is terrible but will be fixed\n          (makeShareableCloneOnUIRecursive(args) as unknown as unknown[])\n        : undefined\n    );\n  };\n}\n","'use strict';\nimport type { AnimationObject, Mutable } from './commonTypes';\n\nexport function valueSetter<Value>(\n  mutable: Mutable<Value>,\n  value: Value,\n  forceUpdate = false\n): void {\n  'worklet';\n  const previousAnimation = mutable._animation;\n  if (previousAnimation) {\n    previousAnimation.cancelled = true;\n    mutable._animation = null;\n  }\n  if (\n    typeof value === 'function' ||\n    (value !== null &&\n      typeof value === 'object' &&\n      // TODO TYPESCRIPT fix this after fixing AnimationObject type\n      (value as unknown as AnimationObject).onFrame !== undefined)\n  ) {\n    const animation: AnimationObject<Value> =\n      typeof value === 'function'\n        ? // TODO TYPESCRIPT fix this after fixing AnimationObject type\n          (value as () => AnimationObject<Value>)()\n        : // TODO TYPESCRIPT fix this after fixing AnimationObject type\n          (value as unknown as AnimationObject<Value>);\n    // prevent setting again to the same value\n    // and triggering the mappers that treat this value as an input\n    // this happens when the animation's target value(stored in animation.current until animation.onStart is called) is set to the same value as a current one(this._value)\n    // built in animations that are not higher order(withTiming, withSpring) hold target value in .current\n    if (\n      mutable._value === animation.current &&\n      !animation.isHigherOrder &&\n      !forceUpdate\n    ) {\n      animation.callback && animation.callback(true);\n      return;\n    }\n    // animated set\n    const initializeAnimation = (timestamp: number) => {\n      animation.onStart(animation, mutable.value, timestamp, previousAnimation);\n    };\n    const currentTimestamp =\n      global.__frameTimestamp || global._getAnimationTimestamp();\n    initializeAnimation(currentTimestamp);\n\n    const step = (newTimestamp: number) => {\n      // Function `requestAnimationFrame` adds callback to an array, all the callbacks are flushed with function `__flushAnimationFrame`\n      // Usually we flush them inside function `nativeRequestAnimationFrame` and then the given timestamp is the timestamp of end of the current frame.\n      // However function `__flushAnimationFrame` may also be called inside `registerEventHandler` - then we get actual timestamp which is earlier than the end of the frame.\n\n      const timestamp =\n        newTimestamp < (animation.timestamp || 0)\n          ? animation.timestamp\n          : newTimestamp;\n\n      if (animation.cancelled) {\n        animation.callback && animation.callback(false /* finished */);\n        return;\n      }\n      const finished = animation.onFrame(animation, timestamp);\n      animation.finished = true;\n      animation.timestamp = timestamp;\n      // TODO TYPESCRIPT\n      // For now I'll assume that `animation.current` is always defined\n      // but actually need to dive into animations to understand it\n      mutable._value = animation.current!;\n      if (finished) {\n        animation.callback && animation.callback(true /* finished */);\n      } else {\n        requestAnimationFrame(step);\n      }\n    };\n\n    mutable._animation = animation;\n\n    step(currentTimestamp);\n  } else {\n    // prevent setting again to the same value\n    // and triggering the mappers that treat this value as an input\n    if (mutable._value === value && !forceUpdate) {\n      return;\n    }\n    mutable._value = value;\n  }\n}\n","'use strict';\nimport { shouldBeUseWeb } from './PlatformChecker';\nimport { isWorkletFunction } from './commonTypes';\nimport type { WorkletFunction } from './commonTypes';\n\nfunction valueUnpacker(\n  objectToUnpack: any,\n  category?: string,\n  remoteFunctionName?: string\n): any {\n  'worklet';\n  let workletsCache = global.__workletsCache;\n  let handleCache = global.__handleCache;\n  if (workletsCache === undefined) {\n    // init\n    workletsCache = global.__workletsCache = new Map();\n    handleCache = global.__handleCache = new WeakMap();\n  }\n  const workletHash = objectToUnpack.__workletHash;\n  if (workletHash !== undefined) {\n    let workletFun = workletsCache.get(workletHash);\n    if (workletFun === undefined) {\n      const initData = objectToUnpack.__initData;\n      if (global.evalWithSourceMap) {\n        // if the runtime (hermes only for now) supports loading source maps\n        // we want to use the proper filename for the location as it guarantees\n        // that debugger understands and loads the source code of the file where\n        // the worklet is defined.\n        workletFun = global.evalWithSourceMap(\n          '(' + initData.code + '\\n)',\n          initData.location,\n          initData.sourceMap\n        ) as (...args: any[]) => any;\n      } else if (global.evalWithSourceUrl) {\n        // if the runtime doesn't support loading source maps, in dev mode we\n        // can pass source url when evaluating the worklet. Now, instead of using\n        // the actual file location we use worklet hash, as it the allows us to\n        // properly symbolicate traces (see errors.ts for details)\n        workletFun = global.evalWithSourceUrl(\n          '(' + initData.code + '\\n)',\n          `worklet_${workletHash}`\n        ) as (...args: any[]) => any;\n      } else {\n        // in release we use the regular eval to save on JSI calls\n        // eslint-disable-next-line no-eval\n        workletFun = eval('(' + initData.code + '\\n)') as (\n          ...args: any[]\n        ) => any;\n      }\n      workletsCache.set(workletHash, workletFun);\n    }\n    const functionInstance = workletFun.bind(objectToUnpack);\n    objectToUnpack._recur = functionInstance;\n    return functionInstance;\n  } else if (objectToUnpack.__init !== undefined) {\n    let value = handleCache.get(objectToUnpack);\n    if (value === undefined) {\n      value = objectToUnpack.__init();\n      handleCache.set(objectToUnpack, value);\n    }\n    return value;\n  } else if (category === 'RemoteFunction') {\n    const fun = () => {\n      const label = remoteFunctionName\n        ? `function \\`${remoteFunctionName}\\``\n        : 'anonymous function';\n      throw new Error(`[Reanimated] Tried to synchronously call a non-worklet ${label} on the UI thread.\nSee https://docs.swmansion.com/react-native-reanimated/docs/guides/troubleshooting#tried-to-synchronously-call-a-non-worklet-function-on-the-ui-thread for more details.`);\n    };\n    fun.__remoteFunction = objectToUnpack;\n    return fun;\n  } else {\n    throw new Error(\n      `[Reanimated] Data type in category \"${category}\" not recognized by value unpacker: \"${_toString(\n        objectToUnpack\n      )}\".`\n    );\n  }\n}\n\ntype ValueUnpacker = WorkletFunction<\n  [objectToUnpack: any, category?: string],\n  any\n>;\n\nif (__DEV__ && !shouldBeUseWeb()) {\n  const testWorklet = (() => {\n    'worklet';\n  }) as WorkletFunction<[], void>;\n  if (!isWorkletFunction(testWorklet)) {\n    throw new Error(\n      `[Reanimated] Failed to create a worklet. See https://docs.swmansion.com/react-native-reanimated/docs/guides/troubleshooting#failed-to-create-a-worklet for more details.`\n    );\n  }\n  if (!isWorkletFunction(valueUnpacker)) {\n    throw new Error('[Reanimated] `valueUnpacker` is not a worklet');\n  }\n  const closure = (valueUnpacker as ValueUnpacker).__closure;\n  if (closure === undefined) {\n    throw new Error('[Reanimated] `valueUnpacker` closure is undefined');\n  }\n  if (Object.keys(closure).length !== 0) {\n    throw new Error('[Reanimated] `valueUnpacker` must have empty closure');\n  }\n}\n\nexport function getValueUnpackerCode() {\n  return (valueUnpacker as ValueUnpacker).__initData.code;\n}\n","'use strict';\nimport type { TurboModule } from 'react-native';\nimport { TurboModuleRegistry } from 'react-native';\n\ninterface Spec extends TurboModule {\n  installTurboModule: (valueUnpackerCode: string) => boolean;\n}\n\nexport default TurboModuleRegistry.get<Spec>('ReanimatedModule');\n"],"names":["Object","value","exports","callback","setTimeout","performance","now","initial","handle","makeShareableCloneRecursive","__init","anonymous","makeUIMutable","__closure","__workletHash","__initData","_worklet_10406608471697_init_data","listeners","SHOULD_BE_USE_WEB","Map","undefined","mutable","newValue","valueSetter","runOnUI","_worklet_12096167784162_init_data","uiValueGetter","executeOnUIRuntimeSync","sv","_worklet_15663752281893_init_data","_value","Error","forEach","listener","modify","modifier","forceUpdate","arguments","length","_worklet_10579608795621_init_data","addListener","id","set","removeListener","delete","_isReanimatedSharedValue","shareableMappingCache","_PlatformChecker","require","_shareables","_shareableMappingCache","_threads","_valueSetter","shouldBeUseWeb","_worklet_7567385505780_init_data","code","self","_animation","_interopRequireDefault","enumerable","get","_ReactNative","default","cppVersion","global","_REANIMATED_VERSION_CPP","console","warn","matchVersion","jsVersion","_slicedToArray2","_jsVersion","version1","version2","match","_version1$split","split","_version1$split2","major1","minor1","_version2$split","_version2$split2","major2","minor2","_worklet_5787908882912_init_data","dispatchCommandFabric","animatedRef","commandName","args","_WORKLET","shadowNodeWrapper","_dispatchCommandFabric","_worklet_2679067166432_init_data","dispatchCommandPaper","viewTag","_dispatchCommandPaper","isJest","isChromeDebugger","isFabric","_measure","_worklet_3711654747623_init_data","getRelativeCoords","absoluteX","absoluteY","parentCoords","measure","x","pageX","y","pageY","_dispatchCommand","dispatchCommand","_getRelativeCoords","_scrollTo","scrollTo","_setGestureState","setGestureState","_setNativeProps","setNativeProps","_worklet_363014412597_init_data","measureFabric","measured","_measureFabric","isNaN","_worklet_14552101714938_init_data","measurePaper","_measurePaper","_worklet_12337452388275_init_data","scrollToFabric","animated","_worklet_11531030463259_init_data","scrollToPaper","_scrollToPaper","_worklet_11528438424833_init_data","setGestureStateNative","handlerTag","newState","_Colors","_worklet_12875983101471_init_data","setNativePropsFabric","updates","processColorsInProps","_updatePropsFabric","_worklet_11028391068325_init_data","setNativePropsPaper","tag","name","viewName","_updatePropsPaper","initializer","NativeReanimatedModule","createWorkletRuntime","setupCallGuard","setupConsole","_worklet_3956478785482_init_data","_commonTypes","_initializers","_NativeReanimated","_worklet_15773630036335_init_data","_worklet_6225829938965_init_data","_worklet_6225829938965_init_data2","runOnRuntime","workletRuntime","worklet","_len","Array","_key","_scheduleOnRuntime","makeShareableCloneOnUIRecursive","apply","_len2","_key2","scheduleOnRuntime","__DEV__","isWorkletFunction","_worklet_7147163906879_init_data","noopFactory","defaultReturnValue","RNScreensTurboModule","startTransition","topScreenId","belowTopScreenId","canStartTransition","updateTransition","finishTransition","_ConfigHelper","_styleUpdater","_swipeSimulator","configureProps","_worklet_12350994437968_init_data","_worklet_10439323286317_init_data","startScreenTransition","screenTransitionConfig","stackTag","sharedEvent","applyStyle","getLockAxis","goBackGesture","includes","_worklet_705079603839_init_data","finishScreenTransition","lockAxis","getSwipeSimulator","step","_presets","ScreenTransition","_animationManager","_worklet_8707220923337_init_data","_worklet_16165606752518_init_data","SwipeRight","topScreenStyle","event","transform","translateX","translationX","belowTopScreenStyle","screenSize","width","_worklet_8707220923337_init_data2","_worklet_3919185032960_init_data","SwipeLeft","_worklet_7758076714729_init_data","_worklet_11464735627359_init_data","SwipeDown","translateY","translationY","height","_worklet_7758076714729_init_data2","_worklet_6408759986777_init_data","SwipeUp","_worklet_8521785939372_init_data","_worklet_5920086347119_init_data","TwoDimensional","_screenSize","_event","_worklet_13062982153651_init_data","_worklet_5920086347119_init_data2","Horizontal","_worklet_4575707110099_init_data","_worklet_5920086347119_init_data3","Vertical","_worklet_5505089207200_init_data","_worklet_5920086347119_init_data4","SwipeRightFade","opacity","Math","abs","_UpdateProps","IS_FABRIC","_worklet_17230583045032_init_data","createViewDescriptorPaper","screenId","_worklet_10882635397405_init_data","createViewDescriptorFabric","createViewDescriptor","_worklet_8462431732970_init_data","applyStyleForTopScreen","screenDimensions","computeTopScreenStyle","screenTransition","topScreenDescriptor","updateProps","_worklet_8995935696601_init_data","applyStyleForBelowTopScreen","computeBelowTopScreenStyle","belowTopScreenDescriptor","_worklet_649080379384_init_data","_RNScreensTurboModule","BASE_VELOCITY","_worklet_1154945631121_init_data","computeEasingProgress","startingTimestamp","distance","velocity","_getAnimationTimestamp","_worklet_8905179695754_init_data","easing","pow","_worklet_12355722056820_init_data","computeProgress","isTransitionCanceled","progressX","progressY","maxProgress","max","_worklet_6526418334642_init_data","maybeScheduleNextFrame","didScreenReachDestination","onFinishAnimation","progress","requestAnimationFrame","_worklet_8413278826149_init_data","startTimestamp","startingPosition","direction","sign","finalPosition","euclideanDistance","sqrt","screenDiagonal","velocityVectorLength","computeFrame","finished","ADDITIONAL_VELOCITY_FACTOR_X","ADDITIONAL_VELOCITY_FACTOR_Y","ADDITIONAL_VELOCITY_FACTOR_XY","shareableMappingFlag","Symbol","cache","WeakMap","shareable","shareableRef","bind","MAGIC_KEY","_worklet_6457566696199_init_data","isHostObject","processedObjectAtThresholdDepth","_worklet_17186589908483_init_data","INACCESSIBLE_OBJECT","Proxy","_","prop","String","VALID_ARRAY_VIEWS_NAMES","DETECT_CYCLIC_OBJECT_DEPTH_THRESHOLD","_worklet_17031627990684_init_data","_worklet_12197858677704_init_data","_worklet_14821401011820_init_data","shouldPersistRemote","depth","object","type","isTypeFunction","toAdapt","cached","isArray","map","element","freezeObjectIfDev","getPrototypeOf","prototype","__stackDetails","_ref","entries","_ref2","key","RegExp","pattern","source","flags","message","stack","error","ArrayBuffer","isView","buffer","typeName","constructor","inaccessibleObject","adapted","makeShareableClone","_worklet_11770591563495_init_data","isRemoteFunction","__remoteFunction","_worklet_17303105007774_init_data","cloneRecursive","_makeShareableClone","_ref5","_ref6","_worklet_15913789835932_init_data","result","_worklet_8328212374737_init_data","_toConsumableArray2","IS_JEST","_runOnUIQueue","_worklet_14171424909649_init_data","_worklet_3679683358222_init_data","setupMicrotasks","microtasksQueue","isExecutingMicrotasksQueue","queueMicrotask","push","__callMicrotasks","index","_maybeFlushUIUpdatesQueue","callMicrotasksOnUIThread","callMicrotasks","_worklet_799961381399_init_data","_worklet_11566079821664_init_data","scheduleOnUI","queue","_worklet_13121654459504_init_data","runOnUIImmediately","_len3","_key3","runWorkletOnJS","_len4","_key4","_worklet_2715592036660_init_data","runOnJS","fun","_len5","_key5","_len6","_key6","concat","_len7","_key7","_scheduleOnJS","_worklet_95615468412_init_data","timestamp","previousAnimation","cancelled","onFrame","animation","current","isHigherOrder","currentTimestamp","__frameTimestamp","onStart","newTimestamp","getValueUnpackerCode","_worklet_17109272077519_init_data","valueUnpacker","objectToUnpack","category","remoteFunctionName","workletsCache","__workletsCache","handleCache","__handleCache","workletHash","workletFun","initData","evalWithSourceMap","location","sourceMap","evalWithSourceUrl","eval","functionInstance","_recur","_toString","_worklet_14892326408241_init_data","_reactNative","TurboModuleRegistry"],"sourceRoot":""}