{"version":3,"file":"vendors-node_modules_react-native-blob-util_index_js-node_modules_react-native-document-picke-931b98.bundle","mappings":"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","sources":["webpack:///./node_modules/react-native-blob-util/android.js","webpack:///./node_modules/react-native-blob-util/class/ReactNativeBlobUtilBlobResponse.js","webpack:///./node_modules/react-native-blob-util/class/ReactNativeBlobUtilCanceledFetchError.js","webpack:///./node_modules/react-native-blob-util/class/ReactNativeBlobUtilFile.js","webpack:///./node_modules/react-native-blob-util/class/ReactNativeBlobUtilReadStream.js","webpack:///./node_modules/react-native-blob-util/class/ReactNativeBlobUtilSession.js","webpack:///./node_modules/react-native-blob-util/class/ReactNativeBlobUtilWriteStream.js","webpack:///./node_modules/react-native-blob-util/codegenSpecs/NativeBlobUtils.js","webpack:///./node_modules/react-native-blob-util/fetch.js","webpack:///./node_modules/react-native-blob-util/fs.js","webpack:///./node_modules/react-native-blob-util/index.js","webpack:///./node_modules/react-native-blob-util/ios.js","webpack:///./node_modules/react-native-blob-util/json-stream.js","webpack:///./node_modules/react-native-blob-util/lib/oboe-browser.min.js","webpack:///./node_modules/react-native-blob-util/mediacollection.js","webpack:///./node_modules/react-native-blob-util/polyfill/Blob.js","webpack:///./node_modules/react-native-blob-util/polyfill/Event.js","webpack:///./node_modules/react-native-blob-util/polyfill/EventTarget.js","webpack:///./node_modules/react-native-blob-util/polyfill/Fetch.js","webpack:///./node_modules/react-native-blob-util/polyfill/File.js","webpack:///./node_modules/react-native-blob-util/polyfill/FileReader.js","webpack:///./node_modules/react-native-blob-util/polyfill/ProgressEvent.js","webpack:///./node_modules/react-native-blob-util/polyfill/XMLHttpRequest.js","webpack:///./node_modules/react-native-blob-util/polyfill/XMLHttpRequestEventTarget.js","webpack:///./node_modules/react-native-blob-util/polyfill/index.js","webpack:///./node_modules/react-native-blob-util/utils/log.js","webpack:///./node_modules/react-native-blob-util/utils/uri.js","webpack:///./node_modules/react-native-blob-util/utils/uuid.js","webpack:///./node_modules/react-native-document-picker/src/NativeDocumentPicker.ts","webpack:///./node_modules/react-native-document-picker/src/fileTypes.ts","webpack:///./node_modules/react-native-document-picker/src/index.tsx","webpack:///./node_modules/react-native-fs/FS.common.js"],"sourcesContent":["// Copyright 2016 wkh237@github. All rights reserved.\n// Use of this source code is governed by a MIT-style license that can be\n// found in the LICENSE file.\n\nimport { Platform } from 'react-native';\nimport ReactNativeBlobUtil from './codegenSpecs/NativeBlobUtils';\n\n/**\n * Send an intent to open the file.\n * @param  {string} path Path of the file to be open.\n * @param  {string} mime MIME type string\n * @param  {string} chooserTitle for chooser, if not set the chooser won't be displayed (see https://developer.android.com/reference/android/content/Intent.html#createChooser(android.content.Intent,%20java.lang.CharSequence))\n * @return {Promise}\n */\nfunction actionViewIntent(path, mime, chooserTitle) {\n  if(typeof chooserTitle === 'undefined') chooserTitle = null;\n  if(Platform.OS === 'android')\n    return ReactNativeBlobUtil.actionViewIntent(path, mime, chooserTitle);\n  else\n    return Promise.reject('ReactNativeBlobUtil.android.actionViewIntent only supports Android.');\n}\n\nfunction getContentIntent(mime) {\n  if(Platform.OS === 'android')\n    return ReactNativeBlobUtil.getContentIntent(mime);\n  else\n    return Promise.reject('ReactNativeBlobUtil.android.getContentIntent only supports Android.');\n}\n\nfunction addCompleteDownload(config) {\n  if(Platform.OS === 'android')\n    return ReactNativeBlobUtil.addCompleteDownload(config);\n  else\n    return Promise.reject('ReactNativeBlobUtil.android.addCompleteDownload only supports Android.');\n}\n\nfunction getSDCardDir() {\n  if(Platform.OS === 'android')\n    return ReactNativeBlobUtil.getSDCardDir();\n  else\n    return Promise.reject('ReactNativeBlobUtil.android.getSDCardDir only supports Android.');\n}\n\nfunction getSDCardApplicationDir() {\n  if(Platform.OS === 'android')\n    return ReactNativeBlobUtil.getSDCardApplicationDir();\n  else\n    return Promise.reject('ReactNativeBlobUtil.android.getSDCardApplicationDir only supports Android.');\n}\n\n\nexport default {\n  actionViewIntent,\n  getContentIntent,\n  addCompleteDownload,\n  getSDCardDir,\n  getSDCardApplicationDir,\n};\n","import {ReactNativeBlobUtilResponseInfo, ReactNativeBlobUtilStream} from \"../types\";\r\nimport fs from \"../fs\";\r\nimport Blob from \"../polyfill/Blob\";\r\nimport ReactNativeBlobUtilSession from \"./ReactNativeBlobUtilSession\";\r\nimport URIUtil from \"../utils/uri\";\r\nimport base64 from \"base-64\";\r\n/**\r\n * ReactNativeBlobUtil response object class.\r\n */\r\nexport class FetchBlobResponse {\r\n\r\n    taskId: string;\r\n    path: () => string | null;\r\n    type: 'base64' | 'path' | 'utf8';\r\n    data: any;\r\n    blob: (contentType: string, sliceSize: number) => Promise<Blob>;\r\n    text: () => string | Promise<any>;\r\n    json: () => any;\r\n    base64: () => any;\r\n    flush: () => void;\r\n    respInfo: ReactNativeBlobUtilResponseInfo;\r\n    session: (name: string) => ReactNativeBlobUtilSession | null;\r\n    readFile: (encode: 'base64' | 'utf8' | 'ascii') => ?Promise<any>;\r\n    readStream: (\r\n        encode: 'utf8' | 'ascii' | 'base64',\r\n    ) => ReactNativeBlobUtilStream | null;\r\n\r\n    constructor(taskId: string, info: ReactNativeBlobUtilResponseInfo, data: any) {\r\n        this.data = data;\r\n        this.taskId = taskId;\r\n        this.type = info.rnfbEncode;\r\n        this.respInfo = info;\r\n\r\n        this.info = (): ReactNativeBlobUtilResponseInfo => {\r\n            return this.respInfo;\r\n        };\r\n\r\n        this.array = (): Promise<Array> => {\r\n            let cType = info.headers['Content-Type'] || info.headers['content-type'];\r\n            return new Promise((resolve, reject) => {\r\n                switch (this.type) {\r\n                    case 'base64':\r\n                        // TODO : base64 to array buffer\r\n                        break;\r\n                    case 'path':\r\n                        fs.readFile(this.data, 'ascii').then(resolve);\r\n                        break;\r\n                    default:\r\n                        // TODO : text to array buffer\r\n                        break;\r\n                }\r\n            });\r\n        };\r\n\r\n        /**\r\n         * Convert result to javascript ReactNativeBlobUtil object.\r\n         * @return {Promise<Blob>} Return a promise resolves Blob object.\r\n         */\r\n        this.blob = (): Promise<Blob> => {\r\n            let cType = info.headers['Content-Type'] || info.headers['content-type'];\r\n            return new Promise((resolve, reject) => {\r\n                switch (this.type) {\r\n                    case 'base64':\r\n                        Blob.build(this.data, {type: cType + ';BASE64'}).then(resolve);\r\n                        break;\r\n                    case 'path':\r\n                        Blob.build(URIUtil.wrap(this.data), {type: cType}).then(resolve);\r\n                        break;\r\n                    default:\r\n                        Blob.build(this.data, {type: 'text/plain'}).then(resolve);\r\n                        break;\r\n                }\r\n            });\r\n        };\r\n        /**\r\n         * Convert result to text.\r\n         * @return {string} Decoded base64 string.\r\n         */\r\n        this.text = (): string | Promise<any> => {\r\n            switch (this.type) {\r\n                case 'base64':\r\n                    return base64.decode(this.data);\r\n                case 'path':\r\n                    return fs.readFile(this.data, 'base64').then((b64) => Promise.resolve(base64.decode(b64)));\r\n                default:\r\n                    return this.data;\r\n            }\r\n        };\r\n        /**\r\n         * Convert result to JSON object.\r\n         * @return {object} Parsed javascript object.\r\n         */\r\n        this.json = (): any => {\r\n            switch (this.type) {\r\n                case 'base64':\r\n                    return JSON.parse(base64.decode(this.data));\r\n                case 'path':\r\n                    return fs.readFile(this.data, 'utf8')\r\n                        .then((text) => Promise.resolve(JSON.parse(text)));\r\n                default:\r\n                    return JSON.parse(this.data);\r\n            }\r\n        };\r\n        /**\r\n         * Return BASE64 string directly.\r\n         * @return {string} BASE64 string of response body.\r\n         */\r\n        this.base64 = (): string | Promise<any> => {\r\n            switch (this.type) {\r\n                case 'base64':\r\n                    return this.data;\r\n                case 'path':\r\n                    return fs.readFile(this.data, 'base64');\r\n                default:\r\n                    return base64.encode(this.data);\r\n            }\r\n        };\r\n        /**\r\n         * Remove cahced file\r\n         * @return {Promise}\r\n         */\r\n        this.flush = () => {\r\n            let path = this.path();\r\n            if (!path || this.type !== 'path')\r\n                return;\r\n            return fs.unlink(path);\r\n        };\r\n        /**\r\n         * get path of response temp file\r\n         * @return {string} File path of temp file.\r\n         */\r\n        this.path = () => {\r\n            if (this.type === 'path')\r\n                return this.data;\r\n            return null;\r\n        };\r\n\r\n        this.session = (name: string): ReactNativeBlobUtilSession | null => {\r\n            if (this.type === 'path')\r\n                return fs.session(name).add(this.data);\r\n            else {\r\n                console.warn('only file paths can be add into session.');\r\n                return null;\r\n            }\r\n        };\r\n        /**\r\n         * Start read stream from cached file\r\n         * @param  {String} encoding Encode type, should be one of `base64`, `ascii`, `utf8`.\r\n         * @return {void}\r\n         */\r\n        this.readStream = (encoding: 'base64' | 'utf8' | 'ascii'): ReactNativeBlobUtilStream | null => {\r\n            if (this.type === 'path') {\r\n                return fs.readStream(this.data, encoding);\r\n            }\r\n            else {\r\n                console.warn('ReactNativeBlobUtil', 'this response data does not contains any available stream');\r\n                return null;\r\n            }\r\n        };\r\n        /**\r\n         * Read file content with given encoding, if the response does not contains\r\n         * a file path, show warning message\r\n         * @param  {String} encoding Encode type, should be one of `base64`, `ascrii`, `utf8`.\r\n         * @return {String}\r\n         */\r\n        this.readFile = (encoding: 'base64' | 'utf8' | 'ascii') => {\r\n            if (this.type === 'path') {\r\n                return fs.readFile(this.data, encoding);\r\n            }\r\n            else {\r\n                console.warn('ReactNativeBlobUtil', 'this response does not contains a readable file');\r\n                return null;\r\n            }\r\n        };\r\n    }\r\n\r\n}","const CANCELED_FETCH_ERROR_NAME = 'ReactNativeBlobUtilCanceledFetch'\n\nclass CanceledFetchError extends Error {\n    constructor(message) {\n        super(message);\n        this.name = CANCELED_FETCH_ERROR_NAME\n    }\n}\n\nexport default CanceledFetchError","// Copyright 2016 wkh237@github. All rights reserved.\n// Use of this source code is governed by a MIT-style license that can be\n// found in the LICENSE file.\n\nexport default class ReactNativeBlobUtilFile {}\n","// Copyright 2016 wkh237@github. All rights reserved.\n// Use of this source code is governed by a MIT-style license that can be\n// found in the LICENSE file.\n\nimport {NativeEventEmitter} from 'react-native';\nimport UUID from '../utils/uuid';\n\nimport ReactNativeBlobUtil from '../codegenSpecs/NativeBlobUtils';\n\nconst emitter = new NativeEventEmitter(ReactNativeBlobUtil);\n\nexport default class ReactNativeBlobUtilReadStream {\n\n    path: string;\n    encoding: 'utf8' | 'ascii' | 'base64';\n    bufferSize: ?number;\n    closed: boolean;\n    tick: number = 10;\n\n    constructor(path: string, encoding: string, bufferSize?: ?number, tick: number) {\n        if (!path)\n            throw Error('ReactNativeBlobUtil could not open file stream with empty `path`');\n        this.encoding = encoding || 'utf8';\n        this.bufferSize = bufferSize;\n        this.path = path;\n        this.closed = false;\n        this.tick = tick;\n        this._onData = () => {\n        };\n        this._onEnd = () => {\n        };\n        this._onError = () => {\n        };\n        this.streamId = 'RNFBRS' + UUID();\n\n        // register for file stream event\n        let subscription = emitter.addListener('ReactNativeBlobUtilFilesystem', (e) => {\n            if (typeof e === 'string') e = JSON.parse(e);\n            if (e.streamId !== this.streamId) return; // wrong stream\n            let {event, code, detail} = e;\n            if (this._onData && event === 'data') {\n                this._onData(detail);\n                return;\n            }\n            else if (this._onEnd && event === 'end') {\n                this._onEnd(detail);\n            }\n            else {\n                const err = new Error(detail);\n                err.code = code || 'EUNSPECIFIED';\n                if (this._onError)\n                    this._onError(err);\n                else\n                    throw err;\n            }\n            // when stream closed or error, remove event handler\n            if (event === 'error' || event === 'end') {\n                subscription.remove();\n                this.closed = true;\n            }\n        });\n\n    }\n\n    open() {\n        if (!this.closed)\n            ReactNativeBlobUtil.readStream(this.path, this.encoding, this.bufferSize || 10240, this.tick || -1, this.streamId);\n        else\n            throw new Error('Stream closed');\n    }\n\n    onData(fn: () => void) {\n        this._onData = fn;\n    }\n\n    onError(fn) {\n        this._onError = fn;\n    }\n\n    onEnd(fn) {\n        this._onEnd = fn;\n    }\n\n}\n","// Copyright 2016 wkh237@github. All rights reserved.\n// Use of this source code is governed by a MIT-style license that can be\n// found in the LICENSE file.\n\nimport ReactNativeBlobUtil from '../codegenSpecs/NativeBlobUtils';\n\nlet sessions = {};\n\nexport default class ReactNativeBlobUtilSession {\n\n  name : string;\n\n  static getSession(name:string):any {\n    return sessions[name];\n  }\n\n  static setSession(name:string, val:any) {\n    sessions[name] = val;\n  }\n\n  static removeSession(name:string) {\n    delete sessions[name];\n  }\n\n  constructor(name:string, list:Array<string>) {\n    this.name = name;\n    if (!sessions[name]) {\n      if (Array.isArray(list))\n      sessions[name] = list;\n      else\n      sessions[name] = [];\n    }\n  }\n\n  add(path:string):ReactNativeBlobUtilSession {\n    sessions[this.name].push(path);\n    return this;\n  }\n\n  remove(path:string):ReactNativeBlobUtilSession {\n    let list = sessions[this.name];\n    for (let i of list) {\n      if (list[i] === path) {\n        sessions[this.name].splice(i, 1);\n        break;\n      }\n    }\n    return this;\n  }\n\n  list():Array<string> {\n    return sessions[this.name];\n  }\n\n  dispose():Promise {\n    return new Promise((resolve, reject) => {\n      ReactNativeBlobUtil.removeSession(sessions[this.name], (err) => {\n        if (err)\n          reject(new Error(err));\n        else {\n          delete sessions[this.name];\n          resolve();\n        }\n      });\n    });\n  }\n\n}\n","// Copyright 2016 wkh237@github. All rights reserved.\n// Use of this source code is governed by a MIT-style license that can be\n// found in the LICENSE file.\n\nimport ReactNativeBlobUtil from '../codegenSpecs/NativeBlobUtils';\nexport default class ReactNativeBlobUtilWriteStream {\n\n  id : string;\n  encoding : string;\n  append : boolean;\n\n  constructor(streamId:string, encoding:string, append:boolean) {\n    this.id = streamId;\n    this.encoding = encoding;\n    this.append = append;\n  }\n\n  write(data:string): Promise<ReactNativeBlobUtilWriteStream> {\n    return new Promise((resolve, reject) => {\n      try {\n        let method = this.encoding === 'ascii' ? 'writeArrayChunk' : 'writeChunk';\n        if (this.encoding.toLocaleLowerCase() === 'ascii' && !Array.isArray(data)) {\n            reject(new Error('ascii input data must be an Array'));\n            return;\n        }\n        ReactNativeBlobUtil[method](this.id, data, (error) => {\n          if (error)\n            reject(new Error(error));\n          else\n            resolve(this);\n        });\n      } catch (err) {\n        reject(new Error(err));\n      }\n    });\n  }\n\n  close() {\n    return new Promise((resolve, reject) => {\n      try {\n        ReactNativeBlobUtil.closeStream(this.id, () => {\n          resolve();\n        });\n      } catch (err) {\n        reject(new Error(err));\n      }\n    });\n  }\n\n}\n","// @flow\nimport type { TurboModule } from 'react-native/Libraries/TurboModule/RCTExport';\nimport { TurboModuleRegistry } from 'react-native';\n\nexport interface Spec extends TurboModule {\n    +getConstants: () => {|\n        CacheDir: string,\n        DocumentDir: string,\n        DownloadDir: string,\n        LibraryDir: string,\n        MainBundleDir: string,\n        MovieDir: string,\n        MusicDir: string,\n        PictureDir: string,\n        ApplicationSupportDir: string,\n        // Android Only Constants\n        RingtoneDir: string,\n        SDCardDir: string,\n        SDCardApplicationDir: string,\n        DCIMDir: string,\n        // Android Only Legacy Constants\n        LegacyDCIMDir: string,\n        LegacyPictureDir: string,\n        LegacyMusicDir: string,\n        LegacyDownloadDir: string,\n        LegacyMovieDir: string,\n        LegacyRingtoneDir: string,\n        LegacySDCardDir: string,\n    |};\n\n    +fetchBlobForm: (options: Object, taskId: string, method: string, url: string, headers: Object, form: Array<any>, callback: (value: Array<any>) => void) => void;\n    +fetchBlob: (options: Object, taskId: string, method: string, url: string, headers: Object, body: string, callback: (value: Array<any>) => void) => void;\n    +createFile: (path: string, data: string, encoding: string) => Promise<void>;\n    +createFileASCII: (path: string, data: Array<any>) => Promise<void>;\n    +pathForAppGroup: (groupName: string) => Promise<string>;\n    +syncPathAppGroup: (groupName: string) => string;\n    +exists: (path: string, callback: (value: Array<boolean>) => void) => void;\n    +writeFile: (path: string, encoding: string, data: string, transformFile: boolean, append: boolean) => Promise<number>;\n    +writeFileArray: (path: string, data: Array<any>, append: boolean) => Promise<number>;\n    +writeStream: (path: string, withEncoding: string, appendData: boolean, callback: (value: Array<any>) => void) => void;\n    +writeArrayChunk: (streamId: string, withArray: Array<any>, callback: (value: Array<any>) => void) => void;\n    +writeChunk: (streamId: string, withData: string, callback: (value: Array<any>) => void) => void;\n    +closeStream: (streamId: string, callback: (value: Array<any>) => void) => void;\n    +unlink: (path: string, callback: (value: Array<any>) => void) => void;\n    +removeSession: (paths: Array<any>, callback: (value: Array<any>) => void) => void;\n    +ls: (path: string) => Promise<Array<any>>;\n    +stat: (target: string, callback: (value: Array<any>) => void) => void;\n    +lstat: (path: string, callback: (value: Array<any>) => void) => void;\n    +cp: (src: string, dest: string, callback: (value: Array<any>) => void) => void;\n    +mv: (path: string, dest: string, callback: (value: Array<any>) => void) => void;\n    +mkdir: (path: string) => Promise<boolean>;\n    +readFile: (path: string, encoding: string, transformFile: boolean) => Promise<Array<any>>;\n    +hash: (path: string, algorithm: string) => Promise<string>;\n    +readStream: (path: string, encoding: string, bufferSize: number, tick: number, streamId: string) => void;\n    +getEnvironmentDirs: (callback: (value: Array<any>) => void) => void;\n    +cancelRequest: (taskId: string, callback: (value: Array<any>) => void) => void;\n    +enableProgressReport: (taskId: string, interval: number, count: number) => void;\n    +enableUploadProgressReport: (taskId: string, interval: number, count: number) => void;\n    +slice: (src: string, dest: string, start: number, end: number) => Promise<string>;\n    +presentOptionsMenu: (uri: string, scheme: string) => Promise<Array<any>>;\n    +presentOpenInMenu: (uri: string, scheme: string) => Promise<Array<any>>;\n    +presentPreview: (uri: string, scheme: string) => Promise<Array<any>>;\n    +excludeFromBackupKey: (url: string) => Promise<Array<any>>;\n    +df: (callback: (value: Array<any>) => void) => void;\n    +emitExpiredEvent: (callback: (value: string) => void) => void; // The callback is not really used here\n    // Android Only APIs\n    +actionViewIntent: (path: string, mime: string, chooserTitle: string) => Promise<void>;\n    +addCompleteDownload: (config: Object) => Promise<void>;\n    +copyToInternal: (contentUri: string, destpath: string) => Promise<string>;\n    +copyToMediaStore: (filedata: Object, mt: string, path: string) => Promise<string>;\n    +createMediaFile: (filedata: Object, mt: string) => Promise<string>;\n    +getBlob: (contentUri: string, encoding: string) => Promise<Array<any>>;\n    +getContentIntent: (mime: string) => Promise<string>;\n    +getSDCardDir: () => Promise<string>;\n    +getSDCardApplicationDir: () => Promise<string>;\n    +scanFile: (pairs: Array<any>, callback: (value: Array<any>) => void) => void;\n    +writeToMediaFile: (fileUri: string, path: string, transformFile: boolean) => Promise<string>;\n\n    // RCTEventEmitter\n    +addListener: (eventName: string) => void;\n    +removeListeners: (count: number) => void;\n  }\n\n  export default (TurboModuleRegistry.get<Spec>('ReactNativeBlobUtil'): ?Spec);\n\n\n","import {ReactNativeBlobUtilConfig} from './types';\nimport URIUtil from './utils/uri';\nimport fs from './fs';\nimport getUUID from './utils/uuid';\nimport {NativeEventEmitter} from 'react-native';\nimport {FetchBlobResponse} from './class/ReactNativeBlobUtilBlobResponse';\nimport CanceledFetchError from './class/ReactNativeBlobUtilCanceledFetchError';\nimport ReactNativeBlobUtil from './codegenSpecs/NativeBlobUtils';\n\nconst eventEmitter = new NativeEventEmitter(ReactNativeBlobUtil);\n\n// register message channel event handler.\neventEmitter.addListener('ReactNativeBlobUtilMessage', (e) => {\n    if (typeof e === 'string') e = JSON.parse(e);\n\n    if (e.event === 'warn') {\n        console.warn(e.detail);\n    }\n    else if (e.event === 'error') {\n        throw e.detail;\n    }\n    else {\n        console.log('ReactNativeBlobUtil native message', e.detail);\n    }\n});\n\n/**\n * Calling this method will inject configurations into followed `fetch` method.\n * @param  {ReactNativeBlobUtilConfig} options\n *         Fetch API configurations, contains the following options :\n *         @property {boolean} fileCache\n *                   When fileCache is `true`, response data will be saved in\n *                   storage with a random generated file name, rather than\n *                   a BASE64 encoded string.\n *         @property {string} appendExt\n *                   Set this property to change file extension of random-\n *                   generated file name.\n *         @property {string} path\n *                   If this property has a valid string format, resonse data\n *                   will be saved to specific file path. Default string format\n *                   is : `ReactNativeBlobUtil-file://path-to-file`\n *         @property {string} key\n *                   If this property is set, it will be converted to md5, to\n *                   check if a file with this name exists.\n *                   If it exists, the absolute path is returned (no network\n *                   activity takes place )\n *                   If it doesn't exist, the file is downloaded as usual\n *         @property {number} timeout\n *                   Request timeout in millionseconds, by default it's 60000ms.\n *         @property {boolean} followRedirect\n *                   Follow redirects automatically, default true\n *         @property {boolean} trusty\n *                   Trust all certificates\n *         @property {boolean} wifiOnly\n *                   Only do requests through WiFi. Android SDK 21 or above only.\n *\n * @return {function} This method returns a `fetch` method instance.\n */\nexport function config(options: ReactNativeBlobUtilConfig) {\n    return {fetch: fetch.bind(options)};\n}\n\n/**\n * Fetch from file system, use the same interface as RNFB.fetch\n * @param  {ReactNativeBlobUtilConfig} [options={}] Fetch configurations\n * @param  {string} method     Should be one of `get`, `post`, `put`\n * @param  {string} url        A file URI string\n * @param  {string} headers    Arguments of file system API\n * @param  {any}    body       Data to put or post to file systen.\n * @return {Promise}\n */\nfunction fetchFile(options = {}, method, url, headers = {}, body): Promise {\n\n    if (!URIUtil.isFileURI(url)) {\n        throw `could not fetch file from an invalid URI : ${url}`;\n    }\n\n    url = URIUtil.unwrapFileURI(url);\n\n    let promise = null,\n        cursor = 0,\n        total = -1,\n        cacheData = '',\n        info = null,\n        _progress, _uploadProgress, _stateChange;\n\n    switch (method.toLowerCase()) {\n\n        case 'post':\n            break;\n\n        case 'put':\n            break;\n\n        // read data from file system\n        default:\n            promise = fs.stat(url)\n                .then((stat) => {\n                    total = stat.size;\n                    return fs.readStream(url,\n                        headers.encoding || 'utf8',\n                        Math.floor(headers.bufferSize) || 409600,\n                        Math.floor(headers.interval) || 100\n                    );\n                })\n                .then((stream) => new Promise((resolve, reject) => {\n                    stream.open();\n                    info = {\n                        state: '2',\n                        headers: {'source': 'system-fs'},\n                        status: 200,\n                        respType: 'text',\n                        rnfbEncode: headers.encoding || 'utf8'\n                    };\n                    _stateChange(info);\n                    stream.onData((chunk) => {\n                        _progress && _progress(cursor, total, chunk);\n                        if (headers.noCache)\n                            return;\n                        cacheData += chunk;\n                    });\n                    stream.onError((err) => {\n                        reject(err);\n                    });\n                    stream.onEnd(() => {\n                        resolve(new FetchBlobResponse(null, info, cacheData));\n                    });\n                }));\n            break;\n    }\n\n    promise.progress = (fn) => {\n        _progress = fn;\n        return promise;\n    };\n    promise.stateChange = (fn) => {\n        _stateChange = fn;\n        return promise;\n    };\n    promise.uploadProgress = (fn) => {\n        _uploadProgress = fn;\n        return promise;\n    };\n\n    return promise;\n}\n\n/**\n * Create a HTTP request by settings, the `this` context is a `ReactNativeBlobUtilConfig` object.\n * @param  {string} method HTTP method, should be `GET`, `POST`, `PUT`, `DELETE`\n * @param  {string} url Request target url string.\n * @param  {object} headers HTTP request headers.\n * @param  {string} body\n *         Request body, can be either a BASE64 encoded data string,\n *         or a file path with prefix `ReactNativeBlobUtil-file://` (can be changed)\n * @return {Promise}\n *         This promise instance also contains a Customized method `progress`for\n *         register progress event handler.\n */\nexport function fetch(...args: any): Promise {\n\n    // create task ID for receiving progress event\n    let taskId = getUUID();\n    let options = this || {};\n    let subscription, subscriptionUpload, stateEvent, partEvent;\n    let respInfo = {'uninit': true};\n    let [method, url, headers, body] = [...args];\n\n    // # 241 normalize null or undefined headers, in case nil or null string\n    // pass to native context\n    headers = headers && Object.keys(headers).reduce((result, key) => {\n        result[key] = headers[key] || '';\n        return result;\n    }, {});\n\n    // fetch from file system\n    if (URIUtil.isFileURI(url)) {\n        return fetchFile(options, method, url, headers, body);\n    }\n\n    let promiseResolve;\n    let promiseReject;\n\n    // from remote HTTP(S)\n    let promise = new Promise((resolve, reject) => {\n        promiseResolve = resolve;\n        promiseReject = reject;\n\n        let nativeMethodName = Array.isArray(body) ? 'fetchBlobForm' : 'fetchBlob';\n\n        // on progress event listener\n        subscription = eventEmitter.addListener('ReactNativeBlobUtilProgress', (e) => {\n            if (typeof e === 'string') e = JSON.parse(e);\n            if (e.taskId === taskId && promise.onProgress) {\n                promise.onProgress(e.written, e.total, e.chunk);\n            }\n        });\n\n        subscriptionUpload = eventEmitter.addListener('ReactNativeBlobUtilProgress-upload', (e) => {\n            if (typeof e === 'string') e = JSON.parse(e);\n            if (e.taskId === taskId && promise.onUploadProgress) {\n                promise.onUploadProgress(e.written, e.total);\n            }\n        });\n\n        stateEvent = eventEmitter.addListener('ReactNativeBlobUtilState', (e) => {\n            if (typeof e === 'string') e = JSON.parse(e);\n            if (e.taskId === taskId)\n                respInfo = e;\n            promise.onStateChange && promise.onStateChange(e);\n        });\n\n        subscription = eventEmitter.addListener('ReactNativeBlobUtilExpire', (e) => {\n            if (typeof e === 'string') e = JSON.parse(e);\n            if (e.taskId === taskId && promise.onExpire) {\n                promise.onExpire(e);\n            }\n        });\n\n        partEvent = eventEmitter.addListener('ReactNativeBlobUtilServerPush', (e) => {\n            if (typeof e === 'string') e = JSON.parse(e);\n            if (e.taskId === taskId && promise.onPartData) {\n                promise.onPartData(e.chunk);\n            }\n        });\n\n        // When the request body comes from Blob polyfill, we should use special its ref\n        // as the request body\n        if (body instanceof Blob && body.isReactNativeBlobUtilPolyfill) {\n            body = body.getReactNativeBlobUtilRef();\n        }\n\n        let req = ReactNativeBlobUtil[nativeMethodName];\n\n        /**\n         * Send request via native module, the response callback accepts three arguments\n         * @callback\n            * @param err {any} Error message or object, when the request success, this\n         *                  parameter should be `null`.\n         * @param rawType { 'utf8' | 'base64' | 'path'} RNFB request will be stored\n         *                  as UTF8 string, BASE64 string, or a file path reference\n         *                  in JS context, and this parameter indicates which one\n         *                  dose the response data presents.\n         * @param data {string} Response data or its reference.\n         * @param responseInfo {Object.<>}\n         */\n        req(options, taskId, method, url, headers || {}, body, (err, rawType, data, responseInfo) => {\n\n            // task done, remove event listeners\n            subscription.remove();\n            subscriptionUpload.remove();\n            stateEvent.remove();\n            partEvent.remove();\n            delete promise.progress;\n            delete promise.uploadProgress;\n            delete promise.stateChange;\n            delete promise.part;\n            delete promise.cancel;\n            // delete promise['expire']\n            promise.cancel = () => {\n            };\n\n            if(!responseInfo) responseInfo = {}; // should not be null / undefined\n\n            if (err)\n                reject(new Error(err, respInfo));\n            else {\n                // response data is saved to storage, create a session for it\n                if (options.path || options.fileCache || options.addAndroidDownloads\n                    || options.key || options.auto && respInfo.respType === 'blob') {\n                    if (options.session)\n                        fs.session(options.session).add(data);\n                }\n                if ('uninit' in respInfo && respInfo.uninit) // event didn't fire yet so we override it here\n                    respInfo = responseInfo;\n\n                respInfo.rnfbEncode = rawType;\n                resolve(new FetchBlobResponse(taskId, respInfo, data));\n            }\n\n        });\n\n    });\n\n    // extend Promise object, add `progress`, `uploadProgress`, and `cancel`\n    // method for register progress event handler and cancel request.\n    // Add second parameter for performance purpose #140\n    // When there's only one argument pass to this method, use default `interval`\n    // and `count`, otherwise use the given on.\n    // TODO : code refactor, move `uploadProgress` and `progress` to StatefulPromise\n    promise.progress = (...args) => {\n        let interval = 250;\n        let count = -1;\n        let fn = () => {\n        };\n        if (args.length === 2) {\n            interval = args[0].interval || interval;\n            count = args[0].count || count;\n            fn = args[1];\n        }\n        else {\n            fn = args[0];\n        }\n        promise.onProgress = fn;\n        ReactNativeBlobUtil.enableProgressReport(taskId, interval, count);\n        return promise;\n    };\n    promise.uploadProgress = (...args) => {\n        let interval = 250;\n        let count = -1;\n        let fn = () => {\n        };\n        if (args.length === 2) {\n            interval = args[0].interval || interval;\n            count = args[0].count || count;\n            fn = args[1];\n        }\n        else {\n            fn = args[0];\n        }\n        promise.onUploadProgress = fn;\n        ReactNativeBlobUtil.enableUploadProgressReport(taskId, interval, count);\n        return promise;\n    };\n    promise.part = (fn) => {\n        promise.onPartData = fn;\n        return promise;\n    };\n    promise.stateChange = (fn) => {\n        promise.onStateChange = fn;\n        return promise;\n    };\n    promise.expire = (fn) => {\n        promise.onExpire = fn;\n        return promise;\n    };\n    promise.cancel = (fn) => {\n        fn = fn || function () {\n        };\n        subscription.remove();\n        subscriptionUpload.remove();\n        stateEvent.remove();\n        ReactNativeBlobUtil.cancelRequest(taskId, fn);\n        promiseReject(new CanceledFetchError('canceled'));\n    };\n    promise.taskId = taskId;\n\n    return promise;\n\n}\n","// Copyright 2016 wkh237@github. All rights reserved.\n// Use of this source code is governed by a MIT-style license that can be\n// found in the LICENSE file.\n\n// import type {ReactNativeBlobUtilConfig, ReactNativeBlobUtilNative, ReactNativeBlobUtilStream} from './types'\n\nimport {Platform} from 'react-native';\nimport ReactNativeBlobUtilSession from './class/ReactNativeBlobUtilSession';\nimport ReactNativeBlobUtilWriteStream from './class/ReactNativeBlobUtilWriteStream';\nimport ReactNativeBlobUtilReadStream from './class/ReactNativeBlobUtilReadStream';\nimport ReactNativeBlobUtilFile from './class/ReactNativeBlobUtilFile';\nimport ReactNativeBlobUtil from './codegenSpecs/NativeBlobUtils';\n\nconst constants = ReactNativeBlobUtil.getConstants();\n\nconst dirs = {\n    DocumentDir: constants.DocumentDir,\n    CacheDir: constants.CacheDir,\n    PictureDir: constants.PictureDir,\n    MusicDir: constants.MusicDir,\n    MovieDir: constants.MovieDir,\n    DownloadDir: constants.DownloadDir,\n    DCIMDir: constants.DCIMDir,\n    SDCardDir: constants.SDCardDir, // Depracated\n    SDCardApplicationDir: constants.SDCardApplicationDir, // Deprecated\n    MainBundleDir: constants.MainBundleDir,\n    LibraryDir: constants.LibraryDir,\n    ApplicationSupportDir: constants.ApplicationSupportDir,\n\n    LegacyPictureDir: constants.LegacyPictureDir,\n    LegacyMusicDir: constants.LegacyMusicDir,\n    LegacyMovieDir: constants.LegacyMovieDir,\n    LegacyDownloadDir: constants.LegacyDownloadDir,\n    LegacyDCIMDir: constants.LegacyDCIMDir,\n    LegacySDCardDir: constants.LegacySDCardDir, // Depracated\n};\n\nfunction addCode(code: string, error: Error): Error {\n    error.code = code;\n    return error;\n}\n\n/**\n * Get a file cache session\n * @param  {string} name Stream ID\n * @return {ReactNativeBlobUtilSession}\n */\nfunction session(name: string): ReactNativeBlobUtilSession {\n    let s = ReactNativeBlobUtilSession.getSession(name);\n    if (s)\n        return new ReactNativeBlobUtilSession(name);\n    else {\n        ReactNativeBlobUtilSession.setSession(name, []);\n        return new ReactNativeBlobUtilSession(name, []);\n    }\n}\n\nfunction asset(path: string): string {\n    if (Platform.OS === 'ios') {\n        // path from camera roll\n        if (/^assets-library\\:\\/\\//.test(path))\n            return path;\n    }\n    return 'bundle-assets://' + path;\n}\n\nfunction createFile(path: string, data: string, encoding: 'base64' | 'ascii' | 'utf8' = 'utf8'): Promise<string> {\n    if (encoding.toLowerCase() === 'ascii') {\n        return Array.isArray(data) ?\n            ReactNativeBlobUtil.createFileASCII(path, data) :\n            Promise.reject(addCode('EINVAL', new TypeError('`data` of ASCII file must be an array with 0..255 numbers')));\n    }\n    else {\n        return ReactNativeBlobUtil.createFile(path, data, encoding);\n    }\n}\n\n/**\n * Create write stream to a file.\n * @param  {string} path Target path of file stream.\n * @param  {string} encoding Encoding of input data.\n * @param  {boolean} [append]  A flag represent if data append to existing ones.\n * @return {Promise<ReactNativeBlobUtilWriteStream>} A promise resolves a `WriteStream` object.\n */\nfunction writeStream(\n    path: string,\n    encoding?: 'utf8' | 'ascii' | 'base64' = 'utf8',\n    append?: boolean = false,\n): Promise<ReactNativeBlobUtilWriteStream> {\n    if (typeof path !== 'string') {\n        return Promise.reject(addCode('EINVAL', new TypeError('Missing argument \"path\" ')));\n    }\n    return new Promise((resolve, reject) => {\n        ReactNativeBlobUtil.writeStream(path, encoding, append, (errCode, errMsg, streamId: string) => {\n            if (errMsg) {\n                const err = new Error(errMsg);\n                err.code = errCode;\n                reject(err);\n            }\n            else\n                resolve(new ReactNativeBlobUtilWriteStream(streamId, encoding));\n        });\n    });\n}\n\n/**\n * Create file stream from file at `path`.\n * @param  {string} path   The file path.\n * @param  {string} encoding Data encoding, should be one of `base64`, `utf8`, `ascii`\n * @param  {boolean} bufferSize Size of stream buffer.\n * @param  {number} [tick=10] Interval in milliseconds between reading chunks of data\n * @return {ReactNativeBlobUtilStream} ReactNativeBlobUtilStream stream instance.\n */\nfunction readStream(\n    path: string,\n    encoding: 'utf8' | 'ascii' | 'base64' = 'utf8',\n    bufferSize?: number,\n    tick?: number = 10\n): Promise<ReactNativeBlobUtilReadStream> {\n    if (typeof path !== 'string') {\n        return Promise.reject(addCode('EINVAL', new TypeError('Missing argument \"path\" ')));\n    }\n    return Promise.resolve(new ReactNativeBlobUtilReadStream(path, encoding, bufferSize, tick));\n}\n\n/**\n * Create a directory.\n * @param  {string} path Path of directory to be created\n * @return {Promise}\n */\nfunction mkdir(path: string): Promise {\n    if (typeof path !== 'string') {\n        return Promise.reject(addCode('EINVAL', new TypeError('Missing argument \"path\" ')));\n    }\n    return ReactNativeBlobUtil.mkdir(path);\n}\n\n/**\n * Returns the path for the app group.\n * @param  {string} groupName Name of app group\n * @return {Promise}\n */\nfunction pathForAppGroup(groupName: string): Promise {\n    return ReactNativeBlobUtil.pathForAppGroup(groupName);\n}\n\n/**\n * Returns the path for the app group synchronous.\n * @param  {string} groupName Name of app group\n * @return {string} Path of App Group dir\n */\nfunction syncPathAppGroup(groupName: string): string {\n    if (Platform.OS === 'ios') {\n        return ReactNativeBlobUtil.syncPathAppGroup(groupName);\n    }\n    else {\n        return '';\n    }\n}\n\n/**\n * Wrapper method of readStream.\n * @param  {string} path Path of the file.\n * @param  {'base64' | 'utf8' | 'ascii'} encoding Encoding of read stream.\n * @return {Promise<Array<number> | string>}\n */\nfunction readFile(path: string, encoding: string = 'utf8'): Promise<any> {\n    if (typeof path !== 'string') {\n        return Promise.reject(addCode('EINVAL', new TypeError('Missing argument \"path\" ')));\n    }\n    return ReactNativeBlobUtil.readFile(path, encoding, false);\n}\n\n/**\n * Reads the file, then transforms it before returning the content\n * @param  {string} path Path of the file.\n * @param  {'base64' | 'utf8' | 'ascii'} encoding Encoding of read stream.\n * @return {Promise<Array<number> | string>}\n */\nfunction readFileWithTransform(path: string, encoding: string = 'utf8'): Promise<any> {\n    if (typeof path !== 'string') {\n        return Promise.reject(addCode('EINVAL', new TypeError('Missing argument \"path\" ')))\n    }\n    return ReactNativeBlobUtil.readFile(path, encoding, true);\n}\n\n/**\n * Write data to file.\n * @param  {string} path  Path of the file.\n * @param  {string | number[]} data Data to write to the file.\n * @param  {string} encoding Encoding of data (Optional).\n * @return {Promise}\n */\nfunction writeFile(path: string, data: string | Array<number>, encoding: ?string = 'utf8'): Promise {\n    if (typeof path !== 'string') {\n        return Promise.reject(addCode('EINVAL', new TypeError('Missing argument \"path\" ')));\n    }\n    if (encoding.toLocaleLowerCase() === 'ascii') {\n        if (!Array.isArray(data)) {\n            return Promise.reject(addCode('EINVAL', new TypeError('\"data\" must be an Array when encoding is \"ascii\"')));\n        }\n        else\n            return ReactNativeBlobUtil.writeFileArray(path, data, false);\n    }\n    else {\n        if (typeof data !== 'string') {\n            return Promise.reject(addCode('EINVAL', new TypeError(`\"data\" must be a String when encoding is \"utf8\" or \"base64\", but it is \"${typeof data}\"`)));\n        }\n        else\n            return ReactNativeBlobUtil.writeFile(path, encoding, data, false, false);\n    }\n}\n\n/**\n * Transforms the data and then writes to the file.\n * @param  {string} path  Path of the file.\n * @param  {string | number[]} data Data to write to the file.\n * @param  {string} encoding Encoding of data (Optional).\n * @return {Promise}\n */\nfunction writeFileWithTransform(path: string, data: string | Array<number>, encoding: ?string = 'utf8'): Promise {\n    if (typeof path !== 'string') {\n        return Promise.reject(addCode('EINVAL', new TypeError('Missing argument \"path\" ')))\n    }\n    if (encoding.toLocaleLowerCase() === 'ascii') {\n        return Promise.reject(addCode('EINVAL', new TypeError('ascii is not supported for converted files')))\n    }\n    else {\n        if (typeof data !== 'string') {\n            return Promise.reject(addCode('EINVAL', new TypeError(`\"data\" must be a String when encoding is \"utf8\" or \"base64\", but it is \"${typeof data}\"`)))\n        }\n\n        else\n            return ReactNativeBlobUtil.writeFile(path, encoding, data, true, false)\n    }\n}\n\nfunction appendFile(path: string, data: string | Array<number>, encoding?: string = 'utf8'): Promise<number> {\n    if (typeof path !== 'string') {\n        return Promise.reject(addCode('EINVAL', new TypeError('Missing argument \"path\" ')));\n    }\n    if (encoding.toLocaleLowerCase() === 'ascii') {\n        if (!Array.isArray(data)) {\n            return Promise.reject(addCode('EINVAL', new TypeError('`data` of ASCII file must be an array with 0..255 numbers')));\n        }\n        else\n            return ReactNativeBlobUtil.writeFileArray(path, data, true);\n    }\n    else {\n        if (typeof data !== 'string') {\n            return Promise.reject(addCode('EINVAL'), new TypeError(`\"data\" must be a String when encoding is \"utf8\" or \"base64\", but it is \"${typeof data}\"`));\n        }\n        else\n            return ReactNativeBlobUtil.writeFile(path, encoding, data, false, true);\n    }\n}\n\n/**\n * Show statistic data of a path.\n * @param  {string} path Target path\n * @return {ReactNativeBlobUtilFile}\n */\nfunction stat(path: string): Promise<ReactNativeBlobUtilFile> {\n    return new Promise((resolve, reject) => {\n        if (typeof path !== 'string') {\n            return reject(addCode('EINVAL', new TypeError('Missing argument \"path\" ')));\n        }\n        ReactNativeBlobUtil.stat(path, (err, stat) => {\n            if (err)\n                reject(new Error(err));\n            else {\n                if (stat) {\n                    stat.size = parseInt(stat.size);\n                    stat.lastModified = parseInt(stat.lastModified);\n                }\n                resolve(stat);\n            }\n        });\n    });\n}\n\n/**\n * Android only method, request media scanner to scan the file.\n * @param  {Array<Object<string, string>>} pairs Array contains Key value pairs with key `path` and `mime`.\n * @return {Promise}\n */\nfunction scanFile(pairs: any): Promise {\n    return new Promise((resolve, reject) => {\n        if (pairs === undefined) {\n            return reject(addCode('EINVAL', new TypeError('Missing argument')));\n        }\n        ReactNativeBlobUtil.scanFile(pairs, (err) => {\n            if (err)\n                reject(addCode('EUNSPECIFIED', new Error(err)));\n            else\n                resolve();\n        });\n    });\n}\n\nfunction hash(path: string, algorithm: string): Promise<string> {\n    if (typeof path !== 'string' || typeof algorithm !== 'string') {\n        return Promise.reject(addCode('EINVAL', new TypeError('Missing argument \"path\" and/or \"algorithm\"')));\n    }\n    return ReactNativeBlobUtil.hash(path, algorithm);\n}\n\nfunction cp(path: string, dest: string): Promise<boolean> {\n    return new Promise((resolve, reject) => {\n        if (typeof path !== 'string' || typeof dest !== 'string') {\n            return reject(addCode('EINVAL', new TypeError('Missing argument \"path\" and/or \"destination\"')));\n        }\n        ReactNativeBlobUtil.cp(path, dest, (err, res) => {\n            if (err)\n                reject(addCode('EUNSPECIFIED', new Error(err)));\n            else\n                resolve(res);\n        });\n    });\n}\n\nfunction mv(path: string, dest: string): Promise<boolean> {\n    return new Promise((resolve, reject) => {\n        if (typeof path !== 'string' || typeof dest !== 'string') {\n            return reject(addCode('EINVAL', new TypeError('Missing argument \"path\" and/or \"destination\"')));\n        }\n        ReactNativeBlobUtil.mv(path, dest, (err, res) => {\n            if (err)\n                reject(addCode('EUNSPECIFIED', new Error(err)));\n            else\n                resolve(res);\n        });\n    });\n}\n\nfunction lstat(path: string): Promise<Array<ReactNativeBlobUtilFile>> {\n    return new Promise((resolve, reject) => {\n        if (typeof path !== 'string') {\n            return reject(addCode('EINVAL', new TypeError('Missing argument \"path\" ')));\n        }\n        ReactNativeBlobUtil.lstat(path, (err, stat) => {\n            if (err)\n                reject(addCode('EUNSPECIFIED', new Error(err)));\n            else\n                resolve(stat);\n        });\n    });\n}\n\nfunction ls(path: string): Promise<Array<String>> {\n    if (typeof path !== 'string') {\n        return Promise.reject(addCode('EINVAL', new TypeError('Missing argument \"path\" ')));\n    }\n    return ReactNativeBlobUtil.ls(path);\n}\n\n/**\n * Remove file at path.\n * @param  {string}   path:string Path of target file.\n * @return {Promise}\n */\nfunction unlink(path: string): Promise {\n    return new Promise((resolve, reject) => {\n        if (typeof path !== 'string') {\n            return reject(addCode('EINVAL', new TypeError('Missing argument \"path\" ')));\n        }\n        ReactNativeBlobUtil.unlink(path, (err) => {\n            if (err) {\n                reject(addCode('EUNSPECIFIED', new Error(err)));\n            }\n            else\n                resolve();\n        });\n    });\n}\n\n/**\n * Check if file exists and if it is a folder.\n * @param  {string} path Path to check\n * @return {Promise<boolean>}\n */\nfunction exists(path: string): Promise<boolean> {\n    return new Promise((resolve, reject) => {\n        if (typeof path !== 'string') {\n            return reject(addCode('EINVAL', new TypeError('Missing argument \"path\" ')));\n        }\n        try {\n            ReactNativeBlobUtil.exists(path, (exist) => {\n                resolve(exist);\n            });\n        } catch (err) {\n            reject(addCode('EUNSPECIFIED', new Error(err)));\n        }\n    });\n\n}\n\nfunction slice(src: string, dest: string, start: number, end: number): Promise {\n    if (typeof src !== 'string' || typeof dest !== 'string') {\n        return reject(addCode('EINVAL', new TypeError('Missing argument \"src\" and/or \"destination\"')));\n    }\n\n    let p = Promise.resolve();\n    let size = 0;\n\n    function normalize(num, size) {\n        if (num < 0)\n            return Math.max(0, size + num);\n        if (!num && num !== 0)\n            return size;\n        return num;\n    }\n\n    if (start < 0 || end < 0 || !start || !end) {\n        p = p.then(() => stat(src))\n            .then((stat) => {\n                size = Math.floor(stat.size);\n                start = normalize(start || 0, size);\n                end = normalize(end, size);\n            });\n    }\n    return p.then(() => ReactNativeBlobUtil.slice(src, dest, start, end));\n}\n\nfunction isDir(path: string): Promise<bool> {\n    return new Promise((resolve, reject) => {\n        if (typeof path !== 'string') {\n            return reject(addCode('EINVAL', new TypeError('Missing argument \"path\" ')));\n        }\n        try {\n            ReactNativeBlobUtil.exists(path, (exist, isDir) => {\n                resolve(isDir);\n            });\n        } catch (err) {\n            reject(addCode('EUNSPECIFIED', new Error(err)));\n        }\n    });\n\n}\n\nfunction df(): Promise<{ free: number, total: number }> {\n    return new Promise((resolve, reject) => {\n        ReactNativeBlobUtil.df((err, stat) => {\n            if (err)\n                reject(addCode('EUNSPECIFIED', new Error(err)));\n            else\n                resolve(stat);\n        });\n    });\n}\n\nexport default {\n    ReactNativeBlobUtilSession,\n    unlink,\n    mkdir,\n    session,\n    ls,\n    readStream,\n    mv,\n    cp,\n    writeStream,\n    writeFile,\n    writeFileWithTransform,\n    readFileWithTransform,\n    appendFile,\n    pathForAppGroup,\n    syncPathAppGroup,\n    readFile,\n    hash,\n    exists,\n    createFile,\n    isDir,\n    stat,\n    lstat,\n    scanFile,\n    dirs,\n    slice,\n    asset,\n    df\n};\n","// Copyright 2016 wkh237@github. All rights reserved.\n// Use of this source code is governed by a MIT-style license that can be\n// found in the LICENSE file.\n\nimport ReactNativeBlobUtil from './codegenSpecs/NativeBlobUtils';\n\n//import StatefulPromise from './class/StatefulPromise.js'\nimport fs from './fs';\nimport MediaCollection from './mediacollection';\nimport base64 from 'base-64';\nimport polyfill from './polyfill';\nimport android from './android';\nimport ios from './ios';\nimport JSONStream from './json-stream';\nimport {config, fetch} from './fetch';\nimport URIUtil from './utils/uri';\nimport CanceledFetchError from './class/ReactNativeBlobUtilCanceledFetchError';\n\nconst {\n    ReactNativeBlobUtilSession,\n    readStream,\n    createFile,\n    unlink,\n    exists,\n    mkdir,\n    session,\n    writeStream,\n    readFile,\n    ls,\n    isDir,\n    mv,\n    cp\n} = fs;\n\nconst Blob = polyfill.Blob;\nconst wrap = URIUtil.wrap;\n\n// Show warning if native module not detected\nif (!ReactNativeBlobUtil || !ReactNativeBlobUtil.fetchBlobForm || !ReactNativeBlobUtil.fetchBlob) {\n    console.warn(\n        'react-native-blob-util could not find valid native module.',\n        'please make sure you have linked native modules using `rnpm link`,',\n        'and restart RN packager or manually compile IOS/Android project.'\n    );\n}\n\nexport {ReactNativeBlobUtilConfig, ReactNativeBlobUtilResponseInfo, ReactNativeBlobUtilStream} from './types';\nexport { URIUtil } from './utils/uri';\nexport {FetchBlobResponse} from './class/ReactNativeBlobUtilBlobResponse';\nexport { getUUID } from './utils/uuid';\nexport default {\n    fetch,\n    base64,\n    android,\n    ios,\n    config,\n    session,\n    fs,\n    wrap,\n    polyfill,\n    JSONStream,\n    MediaCollection,\n    CanceledFetchError\n};\n","// Copyright 2016 wkh237@github. All rights reserved.\n// Use of this source code is governed by a MIT-style license that can be\n// found in the LICENSE file.\n\nimport { Platform } from \"react-native\";\nimport ReactNativeBlobUtil from \"./codegenSpecs/NativeBlobUtils\";\n\n/**\n * Displays an options menu using UIDocumentInteractionController.presentOptionsMenu\n * @param  {string} path Path of the file to be open.\n * @param  {string} scheme URI scheme that needs to support, optional\n * @return {Promise}\n */\nfunction presentOptionsMenu(path: string, scheme: string) {\n  if (Platform.OS === \"ios\")\n    return ReactNativeBlobUtil.presentOptionsMenu(\"file://\" + path, scheme);\n  else return Promise.reject(\"ReactNativeBlobUtil.openDocument only supports IOS.\");\n}\n\n/**\n * Displays a menu for opening the document using UIDocumentInteractionController.presentOpenInMenu\n * @param  {string} path Path of the file to be open.\n * @param  {string} scheme URI scheme that needs to support, optional\n * @return {Promise}\n */\nfunction presentOpenInMenu(path: string, scheme: string) {\n  if (Platform.OS === \"ios\")\n    return ReactNativeBlobUtil.presentOpenInMenu(\"file://\" + path, scheme);\n  else return Promise.reject(\"ReactNativeBlobUtil.openDocument only supports IOS.\");\n}\n\n/**\n * Displays a full-screen preview of the target document using UIDocumentInteractionController.presentPreview\n * @param  {string} path Path of the file to be open.\n * @param  {string} scheme URI scheme that needs to support, optional\n * @return {Promise}\n */\nfunction presentPreview(path: string, scheme: string) {\n  if (Platform.OS === \"ios\")\n    return ReactNativeBlobUtil.presentPreview(\"file://\" + path, scheme);\n  else return Promise.reject(\"ReactNativeBlobUtil.previewDocument only supports IOS.\");\n}\n\n/**\n * Set excludeFromBackupKey to a URL to prevent the resource to be backuped to\n * iCloud.\n * @param  {string} url URL of the resource, only file URL is supported\n * @return {Promise}\n */\nfunction excludeFromBackupKey(path: string) {\n  return ReactNativeBlobUtil.excludeFromBackupKey(\"file://\" + path);\n}\n\nexport default {\n  presentPreview,\n  openDocument: presentPreview, // legacy alias\n  presentOptionsMenu,\n  previewDocument: presentOptionsMenu, // legacy alias\n  presentOpenInMenu,\n  excludeFromBackupKey\n};\n","import Oboe from './lib/oboe-browser.min.js';\nimport XMLHttpRequest from './polyfill/XMLHttpRequest';\nimport URIUtil from './utils/uri';\n\nconst OboeExtended = (arg: string | Object) => {\n\n\n    window.location = '';\n\n    if (!window.XMLHttpRequest.isRNFBPolyfill) {\n        window.XMLHttpRequest = XMLHttpRequest;\n        console.warn(\n            'Use JSONStream will automatically replace window.XMLHttpRequest with ReactNativeBlobUtil.polyfill.XMLHttpRequest. ' +\n            'You are seeing this warning because you did not replace it manually.'\n        );\n    }\n\n    if (typeof arg === 'string') {\n        if (URIUtil.isFileURI(arg)) {\n            arg = {\n                url: 'JSONStream://' + arg,\n                headers: {noCache: true}\n            };\n        }\n        else\n            arg = 'JSONStream://' + arg;\n\n    }\n    else if (typeof arg === 'object') {\n        let headers = arg.headers || {};\n        if (URIUtil.isFileURI(arg.url)) {\n            headers.noCache = true;\n        }\n        arg = Object.assign(arg, {\n            url: 'JSONStream://' + arg.url,\n            headers\n        });\n    }\n    return Oboe(arg);\n};\n\nexport default OboeExtended;\n","!function(a,b,c,d,e,f){function g(a,b){return function(){return a.call(this,b.apply(this,arguments));};}function h(a){return function(b){return b[a];};}function i(a,b){return b.apply(f,a);}function j(a){var b=a.length-1,d=c.prototype.slice; if(0==b)return function(){return a.call(this,d.call(arguments));}; if(1==b)return function(){return a.call(this,arguments[0],d.call(arguments,1));}; var e=c(a.length); return function(){for(var c=0; b>c; c++)e[c]=arguments[c]; return e[b]=d.call(arguments,b),a.apply(this,e);};}function k(a){return function(b,c){return a(c,b);};}function l(a,b){return function(c){return a(c)&&b(c);};}function m(){}function n(){return!0;}function o(a){return function(){return a;};}function p(a,b){return b&&b.constructor===a;}function q(a){return a!==f;}function r(a,c){return c instanceof b&&y(function(a){return a in c;},a);}function s(a,b){return[a,b];}function t(a){return A(a.reduce(k(s),X));}function u(a){return w(function(a,b){return a.unshift(b),a;},[],a);}function v(a,b){return b?s(a(Y(b)),v(a,Z(b))):X;}function w(a,b,c){return c?a(w(a,b,Z(c)),Y(c)):b;}function x(a,b,c){function d(a,c){return a?b(Y(a))?(c(Y(a)),Z(a)):s(Y(a),d(Z(a),c)):X;}return d(a,c||m);}function y(a,b){return!b||a(Y(b))&&y(a,Z(b));}function z(a,b){a&&(Y(a).apply(null,b),z(Z(a),b));}function A(a){function b(a,c){return a?b(Z(a),s(Y(a),c)):c;}return b(a,X);}function B(a,b){return b&&(a(Y(b))?Y(b):B(a,Z(b)));}function C(a){\"use strict\"; function b(){var a=0; P.length>p&&(c(\"Max buffer length exceeded: textNode\"),a=Math.max(a,P.length)),Q.length>p&&(c(\"Max buffer length exceeded: numberNode\"),a=Math.max(a,Q.length)),O=p-a+Y;}function c(a){P&&(m(P),n(),P=\"\"),i=d(a+\"\\nLn: \"+$+\"\\nCol: \"+Z+\"\\nChr: \"+j),o(N(f,f,i));}function e(){return T==s?(m({}),n(),void(S=!0)):((T!==t||0!==X)&&c(\"Unexpected end\"),P&&(m(P),n(),P=\"\"),void(S=!0));}function g(a){return\"\\r\"==a||\"\\n\"==a||\" \"==a||\"\t\"==a;}function h(a){if(!i){if(S)return c(\"Cannot write after close\"); var d=0; for(j=a[0]; j&&(k=j,j=a[d++]);)switch(Y++,\"\\n\"==j?($++,Z=0):Z++,T){case s:if(\"{\"===j)T=u; else if(\"[\"===j)T=w; else if(!g(j))return c(\"Non-whitespace before {[.\"); continue; case z:case u:if(g(j))continue; if(T===z)U.push(A); else{if(\"}\"===j){m({}),n(),T=U.pop()||t; continue;}U.push(v);}if('\"'!==j)return c('Malformed object key should start with \" '); T=y; continue; case A:case v:if(g(j))continue; if(\":\"===j)T===v?(U.push(v),P&&(m({}),l(P),P=\"\"),X++):P&&(l(P),P=\"\"),T=t; else if(\"}\"===j)P&&(m(P),n(),P=\"\"),n(),X--,T=U.pop()||t; else{if(\",\"!==j)return c(\"Bad object\"); T===v&&U.push(v),P&&(m(P),n(),P=\"\"),T=z;}continue; case w:case t:if(g(j))continue; if(T===w){if(m([]),X++,T=t,\"]\"===j){n(),X--,T=U.pop()||t; continue;}U.push(x);}if('\"'===j)T=y; else if(\"{\"===j)T=u; else if(\"[\"===j)T=w; else if(\"t\"===j)T=B; else if(\"f\"===j)T=E; else if(\"n\"===j)T=I; else if(\"-\"===j)Q+=j; else if(\"0\"===j)Q+=j,T=M; else{if(-1===\"123456789\".indexOf(j))return c(\"Bad value\"); Q+=j,T=M;}continue; case x:if(\",\"===j)U.push(x),P&&(m(P),n(),P=\"\"),T=t; else{if(\"]\"!==j){if(g(j))continue; return c(\"Bad array\");}P&&(m(P),n(),P=\"\"),n(),X--,T=U.pop()||t;}continue; case y:var e=d-1; a:for(;;){for(;W>0;)if(V+=j,j=a.charAt(d++),4===W?(P+=String.fromCharCode(parseInt(V,16)),W=0,e=d-1):W++,!j)break a; if('\"'===j&&!R){T=U.pop()||t,P+=a.substring(e,d-1),P||(m(\"\"),n()); break;}if(\"\\\\\"===j&&!R&&(R=!0,P+=a.substring(e,d-1),j=a.charAt(d++),!j))break; if(R){if(R=!1,\"n\"===j?P+=\"\\n\":\"r\"===j?P+=\"\\r\":\"t\"===j?P+=\"\t\":\"f\"===j?P+=\"\\f\":\"b\"===j?P+=\"\\b\":\"u\"===j?(W=1,V=\"\"):P+=j,j=a.charAt(d++),e=d-1,j)continue; break;}q.lastIndex=d; var f=q.exec(a); if(!f){d=a.length+1,P+=a.substring(e,d-1); break;}if(d=f.index+1,j=a.charAt(f.index),!j){P+=a.substring(e,d-1); break;}}continue; case B:if(!j)continue; if(\"r\"!==j)return c(\"Invalid true started with t\"+j); T=C; continue; case C:if(!j)continue; if(\"u\"!==j)return c(\"Invalid true started with tr\"+j); T=D; continue; case D:if(!j)continue; if(\"e\"!==j)return c(\"Invalid true started with tru\"+j); m(!0),n(),T=U.pop()||t; continue; case E:if(!j)continue; if(\"a\"!==j)return c(\"Invalid false started with f\"+j); T=F; continue; case F:if(!j)continue; if(\"l\"!==j)return c(\"Invalid false started with fa\"+j); T=G; continue; case G:if(!j)continue; if(\"s\"!==j)return c(\"Invalid false started with fal\"+j); T=H; continue; case H:if(!j)continue; if(\"e\"!==j)return c(\"Invalid false started with fals\"+j); m(!1),n(),T=U.pop()||t; continue; case I:if(!j)continue; if(\"u\"!==j)return c(\"Invalid null started with n\"+j); T=J; continue; case J:if(!j)continue; if(\"l\"!==j)return c(\"Invalid null started with nu\"+j); T=K; continue; case K:if(!j)continue; if(\"l\"!==j)return c(\"Invalid null started with nul\"+j); m(null),n(),T=U.pop()||t; continue; case L:if(\".\"!==j)return c(\"Leading zero not followed by .\"); Q+=j,T=M; continue; case M:if(-1!==\"0123456789\".indexOf(j))Q+=j; else if(\".\"===j){if(-1!==Q.indexOf(\".\"))return c(\"Invalid number has two dots\"); Q+=j;}else if(\"e\"===j||\"E\"===j){if(-1!==Q.indexOf(\"e\")||-1!==Q.indexOf(\"E\"))return c(\"Invalid number has two exponential\"); Q+=j;}else if(\"+\"===j||\"-\"===j){if(\"e\"!==k&&\"E\"!==k)return c(\"Invalid symbol in number\"); Q+=j;}else Q&&(m(parseFloat(Q)),n(),Q=\"\"),d--,T=U.pop()||t; continue; default:return c(\"Unknown state: \"+T);}Y>=O&&b();}}var i,j,k,l=a(qb).emit,m=a(rb).emit,n=a(sb).emit,o=a(jb).emit,p=65536,q=/[\\\\\"\\n]/g,r=0,s=r++,t=r++,u=r++,v=r++,w=r++,x=r++,y=r++,z=r++,A=r++,B=r++,C=r++,D=r++,E=r++,F=r++,G=r++,H=r++,I=r++,J=r++,K=r++,L=r++,M=r,O=p,P=\"\",Q=\"\",R=!1,S=!1,T=s,U=[],V=null,W=0,X=0,Y=0,Z=0,$=1; a(nb).on(h),a(ob).on(e);}function D(a,b){\"use strict\"; function c(a){return function(b){d=a(d,b);};}var d,e={}; for(var f in b)a(f).on(c(b[f]),e); a(hb).on(function(a){var b,c=Y(d),e=ab(c),f=Z(d); f&&(b=bb(Y(f)),b[e]=a);}),a(ib).on(function(){var a,b=Y(d),c=ab(b),e=Z(d); e&&(a=bb(Y(e)),delete a[c]);}),a(pb).on(function(){for(var c in b)a(c).un(e);});}function E(a){var b={}; return a&&a.split(\"\\r\\n\").forEach(function(a){var c=a.indexOf(\": \"); b[a.substring(0,c)]=a.substring(c+2);}),b;}function F(a,b){function c(a){return{\"http:\":80,\"https:\":443}[a];}function d(b){return b.port||c(b.protocol||a.protocol);}return!!(b.protocol&&b.protocol!=a.protocol||b.host&&b.host!=a.host||b.host&&d(b)!=d(a));}function G(a){var b=/(\\w+:)?(?:\\/\\/)([\\w.-]+)?(?::(\\d+))?\\/?/,c=b.exec(a)||[]; return{protocol:c[1]||\"\",host:c[2]||\"\",port:c[3]||\"\"};}function H(){return new XMLHttpRequest;}function I(b,c,d,e,g,h,i){\"use strict\"; function j(){var a=c.responseText,b=a.substr(m); b&&k(b),m=V(a);}var k=b(nb).emit,l=b(jb).emit,m=0,n=!0; b(pb).on(function(){c.onreadystatechange=null,c.abort();}),\"onprogress\"in c&&(c.onprogress=j),c.onreadystatechange=function(){function a(){try{n&&b(mb).emit(c.status,E(c.getAllResponseHeaders())),n=!1;}catch(a){}}switch(c.readyState){case 2:case 3:return a(); case 4:a(); var d=2==String(c.status)[0]; d?(j(),b(ob).emit()):l(N(c.status,c.responseText));}}; try{c.open(d,e,!0); for(var o in h)c.setRequestHeader(o,h[o]); F(a.location,G(e))||c.setRequestHeader(\"X-Requested-With\",\"XMLHttpRequest\"),c.withCredentials=i,c.send(g);}catch(p){a.setTimeout(T(l,N(f,f,p)),0);}}function J(a,b){return{key:a,node:b};}function K(a){function b(a,b){var d=bb(Y(a)); return p(c,d)?f(a,V(d),b):a;}function d(a,c){if(!a)return j(c),f(a,cb,c); var d=b(a,c),g=Z(d),h=ab(Y(d)); return e(g,h,c),s(J(h,c),g);}function e(a,b,c){bb(Y(a))[b]=c;}function f(a,b,c){a&&e(a,b,c); var d=s(J(b,c),a); return h(d),d;}function g(a){return i(a),Z(a)||k(bb(Y(a)));}var h=a(fb).emit,i=a(gb).emit,j=a(lb).emit,k=a(kb).emit,l={}; return l[rb]=d,l[sb]=g,l[qb]=f,l;}function L(a,b,c){function d(a){return function(b){return b.id==a;};}var e,f; return{on:function(c,d){var g={listener:c,id:d||c}; return b&&b.emit(a,c,g.id),e=s(g,e),f=s(c,f),this;},emit:function(){z(f,arguments);},un:function(b){var g; e=x(e,d(b),function(a){g=a;}),g&&(f=x(f,function(a){return a==g.listener;}),c&&c.emit(a,g.listener,g.id));},listeners:function(){return f;},hasListener:function(a){var b=a?d(a):n; return q(B(b,e));}};}function M(){function a(a){return c[a]=L(a,d,e);}function b(b){return c[b]||a(b);}var c={},d=a(\"newListener\"),e=a(\"removeListener\"); return[\"emit\",\"on\",\"un\"].forEach(function(a){b[a]=j(function(c,d){i(d,b(c)[a]);});}),b;}function N(a,b,c){try{var d=e.parse(b);}catch(f){}return{statusCode:a,body:b,jsonBody:d,thrown:c};}function O(a,b){function c(a,b,c){var d=A(c); a(b,u(Z(v(ab,d))),u(v(bb,d)));}function d(b,d,e){var f=a(b).emit; d.on(function(a){var b=e(a); b!==!1&&c(f,bb(b),a);},b),a(\"removeListener\").on(function(c){c==b&&(a(c).listeners()||d.un(b));});}var e={node:a(gb),path:a(fb)}; a(\"newListener\").on(function(a){var c=/(node|path):(.*)/.exec(a); if(c){var f=e[c[1]]; f.hasListener(a)||d(a,f,b(c[2]));}});}function P(a,b){function c(b,c){return a(b).on(e(c),c),p;}function d(a,b,c){c=c||b; var d=e(b); return a.on(function(){var b=!1; p.forget=function(){b=!0;},i(arguments,d),delete p.forget,b&&a.un(c);},c),p;}function e(b){return function(){try{return b.apply(p,arguments);}catch(c){a(jb).emit(N(f,f,c));}};}function g(b,c){return a(b+\":\"+c);}function h(a){return function(){var b=a.apply(this,arguments); q(b)&&(b==S.drop?t():u(b));};}function k(a,b,c){var e; e=\"node\"==a?h(c):c,d(g(a,b),e,c);}function l(a,b){for(var c in b)k(a,c,b[c]);}function n(a,b,c){return W(b)?k(a,b,c):l(a,b),p;}var p,r=/^(node|path):./,s=a(kb),t=a(ib).emit,u=a(hb).emit,v=j(function(b,c){if(p[b])i(c,p[b]); else{var e=a(b),f=c[0]; r.test(b)?d(e,f):e.on(f);}return p;}),w=function(b,c,d){if(\"done\"==b)s.un(c); else if(\"node\"==b||\"path\"==b)a.un(b+\":\"+c,d); else{var e=c; a(b).un(e);}return p;}; return a(lb).on(function(a){p.root=o(a);}),a(mb).on(function(a,b){p.header=function(a){return a?b[a]:b;};}),p={on:v,addListener:v,removeListener:w,emit:a.emit,node:T(n,\"node\"),path:T(n,\"path\"),done:T(d,s),start:T(c,mb),fail:a(jb).on,abort:a(pb).emit,header:m,root:m,source:b};}function Q(a,b,c,d,e){var f=M(); return b&&I(f,H(),a,b,c,d,e),C(f),D(f,K(f)),O(f,db),P(f,b);}function R(a,b,c,d,f,g,h){function i(a,b){return b===!1&&(a+=-1==a.indexOf(\"?\")?\"?\":\"&\",a+=\"_=\"+(new Date).getTime()),a;}return f=f?e.parse(e.stringify(f)):{},d?W(d)||(d=e.stringify(d),f[\"Content-Type\"]=f[\"Content-Type\"]||\"application/json\"):d=null,a(c||\"GET\",i(b,h),d,f,g||!1);}function S(a){var b=$(\"resume\",\"pause\",\"pipe\"),c=T(r,b); return a?c(a)||W(a)?R(Q,a):R(Q,a.url,a.method,a.body,a.headers,a.withCredentials,a.cached):Q();}var T=j(function(a,b){var c=b.length; return j(function(d){for(var e=0; e<d.length; e++)b[c+e]=d[e]; return b.length=c+d.length,a.apply(this,b);});}),U=(j(function(a){function b(a,b){return[i(a,b)];}var c=t(a); return j(function(a){return w(b,a,c)[0];});}),j(function(a){return j(function(b){for(var c,d=0; d<V(a); d++)if(c=i(b,a[d]))return c;});})),V=h(\"length\"),W=T(p,String),X=null,Y=h(0),Z=h(1),$=j(t),_=function(){var a=function(a){return a.exec.bind(a);},b=j(function(b){return b.unshift(/^/),a(RegExp(b.map(h(\"source\")).join(\"\")));}),c=/(\\$?)/,d=/([\\w-_]+|\\*)/,e=/()/,f=/\\[\"([^\"]+)\"\\]/,g=/\\[(\\d+|\\*)\\]/,i=/{([\\w ]*?)}/,k=/(?:{([\\w ]*?)})?/,l=b(c,d,k),m=b(c,f,k),n=b(c,g,k),o=b(c,e,i),p=b(/\\.\\./),q=b(/\\./),r=b(c,/!/),s=b(/$/); return function(a){return a(U(l,m,n,o),p,q,r,s);};}(),ab=h(\"key\"),bb=h(\"node\"),cb={},db=_(function(a,b,c,e,f){function h(a,b){var c=b[z],d=c&&\"*\"!=c?function(a){return B(a)==c;}:n; return l(d,a);}function i(a,b){var c=b[A]; if(!c)return a; var d=T(r,t(c.split(/\\W+/))),e=g(d,C); return l(e,a);}function j(a,b){var c=!!b[y]; return c?l(a,Y):a;}function k(a){function b(a){return B(a)!=cb;}return a==n?n:l(b,g(a,Z));}function m(a){if(a==n)return n; var b=o(),c=a,d=k(function(a){return e(a);}),e=U(b,c,d); return e;}function o(){return function(a){return B(a)==cb;};}function p(a){return function(b){var c=a(b); return c===!0?Y(b):c;};}function q(a,b,c){return w(function(a,b){return b(a,c);},b,a);}function s(a,b,c,d,e){var f=a(c); if(f){var g=q(b,d,f),h=c.substr(V(f[0])); return e(h,g);}}function u(a,b){return T(s,a,b);}function v(a,b){return b;}function x(a,b){var c=a?x:v; return D(a,b,c);}var y=1,z=2,A=3,B=g(ab,Y),C=g(bb,Y),D=U(u(a,$(j,i,h,k)),u(b,$(m)),u(c,$()),u(e,$(j,o)),u(f,$(p)),function(a){throw d('\"'+a+'\" could not be tokenised');}); return function(a){try{return x(a,n);}catch(b){throw d('Could not compile \"'+a+'\" because '+b.message);}};}),eb=1,fb=eb++,gb=eb++,hb=eb++,ib=eb++,jb=\"fail\",kb=eb++,lb=eb++,mb=\"start\",nb=\"data\",ob=\"end\",pb=eb++,qb=eb++,rb=eb++,sb=eb++; S.drop=function(){return S.drop;},\"function\"===typeof define&&define.amd?define(\"oboe\",[],function(){return S;}):\"object\"===typeof exports?module.exports=S:a.oboe=S;}(function(){try{return window;}catch(a){return self;}}(),Object,Array,Error,JSON);","import type {ReactNativeBlobUtilNative, filedescriptor} from \"./types\";\nimport ReactNativeBlobUtil from \"./codegenSpecs/NativeBlobUtils\";\n\nfunction createMediafile(fd: filedescriptor, mediatype: string): Promise {\n    if ((!'parentFolder' in fd)) fd['parentFolder'] = '';\n    return ReactNativeBlobUtil.createMediaFile(fd, mediatype);\n}\n\nfunction writeToMediafile(uri: string, path: string) {\n    return ReactNativeBlobUtil.writeToMediaFile(uri, path, false);\n}\n\nfunction writeToMediafileWithTransform(uri: string, path: string) {\n    return ReactNativeBlobUtil.writeToMediaFile(uri, path, true);\n}\n\nfunction copyToInternal(contenturi: string, destpath: string) {\n    return ReactNativeBlobUtil.copyToInternal(contenturi, destpath);\n}\n\nfunction getBlob(contenturi: string, encoding: string) {\n    return ReactNativeBlobUtil.getBlob(contenturi, encoding);\n}\n\nfunction copyToMediaStore(fd: filedescriptor, mediatype: string, path: string) {\n    return ReactNativeBlobUtil.copyToMediaStore(fd, mediatype, path);\n}\n\nexport default {\n    createMediafile,\n    writeToMediafile,\n    writeToMediafileWithTransform,\n    copyToInternal,\n    getBlob,\n    copyToMediaStore\n};\n","// Copyright 2016 wkh237@github. All rights reserved.\n// Use of this source code is governed by a MIT-style license that can be\n// found in the LICENSE file.\n\nimport fs from '../fs.js';\nimport getUUID from '../utils/uuid';\nimport Log from '../utils/log.js';\nimport URIUtil from \"../utils/uri\";\nimport EventTarget from './EventTarget';\n\nconst log = new Log('Blob');\nconst blobCacheDir = fs.dirs.DocumentDir + '/ReactNativeBlobUtil-blobs/';\n\nlog.disable();\n// log.level(3)\n\n/**\n * A ReactNativeBlobUtil style Blob polyfill class, this is a Blob which compatible to\n * Response object attain fron ReactNativeBlobUtil.fetch.\n */\nexport default class Blob extends EventTarget {\n\n    cacheName: string;\n    type: string;\n    size: number;\n    isReactNativeBlobUtilPolyfill: boolean = true;\n    multipartBoundary: string = null;\n\n    _ref: string = null;\n    _blobCreated: boolean = false;\n    _onCreated: Array<any> = [];\n    _closed: boolean = false;\n\n    /**\n     * Static method that remove all files in Blob cache folder.\n     * @nonstandard\n     * @return {Promise}\n     */\n    static clearCache() {\n        return fs.unlink(blobCacheDir).then(() => fs.mkdir(blobCacheDir));\n    }\n\n    static build(data: any, cType: any): Promise<Blob> {\n        return new Promise((resolve, reject) => {\n            new Blob(data, cType).onCreated(resolve);\n        });\n    }\n\n    get blobPath() {\n        return this._ref;\n    }\n\n    static setLog(level: number) {\n        if (level === -1)\n            log.disable();\n        else\n            log.level(level);\n    }\n\n    /**\n     * ReactNativeBlobUtil Blob polyfill, create a Blob directly from file path, BASE64\n     * encoded data, and string. The conversion is done implicitly according to\n     * given `mime`. However, the blob creation is asynchronously, to register\n     * event `onCreated` is need to ensure the Blob is creadted.\n     * @param  {any} data Content of Blob object\n     * @param  {any} mime Content type settings of Blob object, `text/plain`\n     *                    by default\n     * @param  {boolean} defer When this argument set to `true`, blob constructor\n     *                         will not invoke blob created event automatically.\n     */\n    constructor(data: any, cType: any, defer: boolean) {\n        super();\n        cType = cType || {};\n        this.cacheName = getBlobName();\n        this.isReactNativeBlobUtilPolyfill = true;\n        this.isDerived = defer;\n        this.type = cType.type || 'text/plain';\n        log.verbose('Blob constructor called', 'mime', this.type, 'type', typeof data, 'length', data ? data.length : 0);\n        this._ref = blobCacheDir + this.cacheName;\n        let p = null;\n        if (!data)\n            data = '';\n        if (data.isReactNativeBlobUtilPolyfill) {\n            log.verbose('create Blob cache file from Blob object');\n            let size = 0;\n            this._ref = String(data.getReactNativeBlobUtilRef());\n            let orgPath = this._ref;\n\n            p = fs.exists(orgPath)\n                .then((exist) => {\n                    if (exist)\n                        return fs.writeFile(orgPath, data, 'uri')\n                            .then((size) => Promise.resolve(size))\n                            .catch((err) => {\n                                throw `ReactNativeBlobUtil Blob file creation error, ${err}`;\n                            });\n                    else\n                        throw `could not create Blob from path ${orgPath}, file not exists`;\n                });\n        }\n        // process FormData\n        else if (data instanceof FormData) {\n            log.verbose('create Blob cache file from FormData', data);\n            let boundary = `ReactNativeBlobUtil-${this.cacheName}-${Date.now()}`;\n            this.multipartBoundary = boundary;\n            let parts = data.getParts();\n            let formArray = [];\n            if (!parts) {\n                p = fs.writeFile(this._ref, '', 'utf8');\n            }\n            else {\n                for (let i in parts) {\n                    formArray.push('\\r\\n--' + boundary + '\\r\\n');\n                    let part = parts[i];\n                    for (let j in part.headers) {\n                        formArray.push(j + ': ' + part.headers[j] + '\\r\\n');\n                    }\n                    formArray.push('\\r\\n');\n                    if (part.isReactNativeBlobUtilPolyfill)\n                        formArray.push(part);\n                    else\n                        formArray.push(part.string);\n                }\n                log.verbose('FormData array', formArray);\n                formArray.push('\\r\\n--' + boundary + '--\\r\\n');\n                p = createMixedBlobData(this._ref, formArray);\n            }\n        }\n            // if the data is a string starts with `ReactNativeBlobUtil-file://`, append the\n        // Blob data from file path\n        else if (typeof data === 'string' && data.startsWith('ReactNativeBlobUtil-file://')) {\n            log.verbose('create Blob cache file from file path', data);\n            // set this flag so that we know this blob is a wrapper of an existing file\n            this._isReference = true;\n            this._ref = String(data).replace('ReactNativeBlobUtil-file://', '');\n            let orgPath = this._ref;\n            if (defer)\n                return;\n            else {\n                p = fs.stat(orgPath)\n                    .then((stat) => {\n                        return Promise.resolve(stat.size);\n                    });\n            }\n        }\n        // content from variable need create file\n        else if (typeof data === 'string') {\n            let encoding = 'utf8';\n            let mime = String(this.type);\n            // when content type contains application/octet* or *;base64, ReactNativeBlobUtil\n            // fs will treat it as BASE64 encoded string binary data\n            if (/(application\\/octet|\\;base64)/i.test(mime))\n                encoding = 'base64';\n            else\n                data = data.toString();\n            // create cache file\n            this.type = String(this.type).replace(/;base64/ig, '');\n            log.verbose('create Blob cache file from string', 'encode', encoding);\n            p = fs.writeFile(this._ref, data, encoding)\n                .then((size) => {\n                    return Promise.resolve(size);\n                });\n\n        }\n            // TODO : ArrayBuffer support\n            // else if (data instanceof ArrayBuffer ) {\n            //\n            // }\n        // when input is an array of mixed data types, create a file cache\n        else if (Array.isArray(data)) {\n            log.verbose('create Blob cache file from mixed array', data);\n            p = createMixedBlobData(this._ref, data);\n        }\n        else {\n            data = data.toString();\n            p = fs.writeFile(this._ref, data, 'utf8')\n                .then((size) => Promise.resolve(size));\n        }\n        p && p.then((size) => {\n            this.size = size;\n            this._invokeOnCreateEvent();\n        })\n            .catch((err) => {\n                log.error('ReactNativeBlobUtil could not create Blob : ' + this._ref, err);\n            });\n\n    }\n\n    /**\n     * Since Blob content will asynchronously write to a file during creation,\n     * use this method to register an event handler for Blob initialized event.\n     * @nonstandard\n     * @param  {(b:Blob) => void} An event handler invoked when Blob created\n     * @return {Blob} The Blob object instance itself\n     */\n    onCreated(fn: () => void): Blob {\n        log.verbose('#register blob onCreated', this._blobCreated);\n        if (!this._blobCreated)\n            this._onCreated.push(fn);\n        else {\n            fn(this);\n        }\n        return this;\n    }\n\n    markAsDerived() {\n        this._isDerived = true;\n    }\n\n    get isDerived() {\n        return this._isDerived || false;\n    }\n\n    /**\n     * Get file reference of the Blob object.\n     * @nonstandard\n     * @return {string} Blob file reference which can be consumed by ReactNativeBlobUtil fs\n     */\n    getReactNativeBlobUtilRef() {\n        return this._ref;\n    }\n\n    /**\n     * Create a Blob object which is sliced from current object\n     * @param  {number} start    Start byte number\n     * @param  {number} end      End byte number\n     * @param  {string} contentType Optional, content type of new Blob object\n     * @return {Blob}\n     */\n    slice(start: ?number, end: ?number, contentType: ?string = ''): Blob {\n        if (this._closed)\n            throw 'Blob has been released.';\n        log.verbose('slice called', start, end, contentType);\n\n\n        let resPath = blobCacheDir + getBlobName();\n        let pass = false;\n        log.debug('fs.slice new blob will at', resPath);\n        let result = new Blob(URIUtil.wrap(resPath), {type: contentType}, true);\n        fs.exists(blobCacheDir)\n            .then((exist) => {\n                if (exist)\n                    return Promise.resolve();\n                return fs.mkdir(blobCacheDir);\n            })\n            .then(() => fs.slice(this._ref, resPath, start, end))\n            .then((dest) => {\n                log.debug('fs.slice done', dest);\n                result._invokeOnCreateEvent();\n                pass = true;\n            })\n            .catch((err) => {\n                console.warn('Blob.slice failed:', err);\n                pass = true;\n            });\n        log.debug('slice returning new Blob');\n\n        return result;\n    }\n\n    /**\n     * Read data of the Blob object, this is not standard method.\n     * @nonstandard\n     * @param  {string} encoding Read data with encoding\n     * @return {Promise}\n     */\n    readBlob(encoding: string): Promise<any> {\n        if (this._closed)\n            throw 'Blob has been released.';\n        return fs.readFile(this._ref, encoding || 'utf8');\n    }\n\n    /**\n     * Release the resource of the Blob object.\n     * @nonstandard\n     * @return {Promise}\n     */\n    close() {\n        if (this._closed)\n            return Promise.reject('Blob has been released.');\n        this._closed = true;\n        return fs.unlink(this._ref).catch((err) => {\n            console.warn(err);\n        });\n    }\n\n    safeClose() {\n        if (this._closed)\n            return Promise.reject('Blob has been released.');\n        this._closed = true;\n        if (!this._isReference) {\n            return fs.unlink(this._ref).catch((err) => {\n                console.warn(err);\n            });\n        }\n        else {\n            return Promise.resolve();\n        }\n    }\n\n    _invokeOnCreateEvent() {\n        log.verbose('invoke create event', this._onCreated);\n        this._blobCreated = true;\n        let fns = this._onCreated;\n        for (let i in fns) {\n            if (typeof fns[i] === 'function') {\n                fns[i](this);\n            }\n        }\n        delete this._onCreated;\n    }\n\n}\n\n/**\n * Get a temp filename for Blob object\n * @return {string} Temporary filename\n */\nfunction getBlobName() {\n    return 'blob-' + getUUID();\n}\n\n/**\n * Create a file according to given array. The element in array can be a number,\n * Blob, String, Array.\n * @param  {string} ref File path reference\n * @param  {Array} dataArray An array contains different types of data.\n * @return {Promise}\n */\nfunction createMixedBlobData(ref, dataArray) {\n    // create an empty file for store blob data\n    let p = fs.writeFile(ref, '');\n    let args = [];\n    let size = 0;\n    for (let i in dataArray) {\n        let part = dataArray[i];\n        if (!part)\n            continue;\n        if (part.isReactNativeBlobUtilPolyfill) {\n            args.push([ref, part._ref, 'uri']);\n        }\n        else if (typeof part === 'string')\n            args.push([ref, part, 'utf8']);\n            // TODO : ArrayBuffer\n            // else if (part instanceof ArrayBuffer) {\n            //\n        // }\n        else if (Array.isArray(part))\n            args.push([ref, part, 'ascii']);\n    }\n    // start write blob data\n    for (let i in args) {\n        p = p.then(function (written) {\n            let arg = this;\n            if (written)\n                size += written;\n            log.verbose('mixed blob write', args[i], written);\n            return fs.appendFile(...arg);\n        }.bind(args[i]));\n    }\n    return p.then(() => Promise.resolve(size));\n}\n","// Copyright 2016 wkh237@github. All rights reserved.\n// Use of this source code is governed by a MIT-style license that can be\n// found in the LICENSE file.\n\nexport default class Event {\n\n    constructor() {\n\n    }\n\n}\n","// Copyright 2016 wkh237@github. All rights reserved.\n// Use of this source code is governed by a MIT-style license that can be\n// found in the LICENSE file.\n\nimport Log from '../utils/log.js';\n\nconst log = new Log('EventTarget');\n\nlog.disable();\n\nexport default class EventTarget {\n\n    listeners: any;\n\n    constructor() {\n        log.info('constructor called');\n        this.listeners = {};\n    }\n\n    /**\n     * Add an event listener to given event type\n     * @param {string} type Event type string\n     * @param {(Event) => void} cb   Event handler function\n     */\n    addEventListener(type: string, cb: () => void) {\n        log.info('add event listener', type, cb);\n        if (!(type in this.listeners)) {\n            this.listeners[type] = [];\n        }\n        this.listeners[type].push(cb);\n    }\n\n    /**\n     * Remove an event listener\n     * @param  {string} type Type of the event listener\n     * @param  {()=>void} cb Event listener function.\n     * @return {[type]}             [description]\n     */\n    removeEventListener(type: string, cb: () => void) {\n        log.info('remove event listener', type, cb);\n        if (!(type in this.listeners))\n            return;\n        let handlers = this.listeners[type];\n        for (let i in handlers) {\n            if (cb === handlers[i]) {\n                handlers.splice(i, 1);\n                return this.removeEventListener(type, cb);\n            }\n        }\n    }\n\n    /**\n     * Dispatch an event\n     * @param {string} type Event type.\n     * @param {Event} event Event data payload.\n     */\n    dispatchEvent(type: string, event: Event) {\n        log.info('dispatch event', event);\n        if (!(type in this.listeners))\n            return;\n        let handlers = this.listeners[type];\n        for (let i in handlers) {\n            handlers[i].call(this, event);\n        }\n\n    }\n\n    /**\n     * Remove all registered listeners from this object.\n     * @nonstandard\n     * @return {[type]} [description]\n     */\n    clearEventListeners() {\n        for (let i in this.listeners) {\n            delete this.listeners[i];\n        }\n    }\n\n}","import Log from '../utils/log.js';\nimport Blob from './Blob';\nimport {config as RNconfig} from \"../fetch\";\nimport type {ReactNativeBlobUtilConfig} from \"../types\";\nimport URIUtil from \"../utils/uri\";\nimport {FetchBlobResponse} from \"../class/ReactNativeBlobUtilBlobResponse\";\n\nconst log = new Log('FetchPolyfill');\n\nlog.disable();\n// log.level(3)\n\nexport default class Fetch {\n\n    constructor(config: ReactNativeBlobUtilConfig) {\n        Object.assign(this, new ReactNativeBlobUtilFetchPolyfill(config));\n    }\n\n}\n\nclass ReactNativeBlobUtilFetchPolyfill {\n\n    constructor(config: ReactNativeBlobUtilConfig) {\n        this.build = () => (url, options = {}) => {\n\n            let body = options.body;\n            let promise = Promise.resolve();\n            let blobCache = null;\n\n            options.headers = options.headers || {};\n            let ctype = options['Content-Type'] || options['content-type'];\n            let ctypeH = options.headers['Content-Type'] || options.headers['content-type'];\n            options.headers['Content-Type'] = ctype || ctypeH;\n            options.headers['content-type'] = ctype || ctypeH;\n            options.method = options.method || 'GET';\n            if (body) {\n                // When the request body is an instance of FormData, create a Blob cache\n                // to upload the body.\n                if (body instanceof FormData) {\n                    log.verbose('convert FormData to blob body');\n                    promise = Blob.build(body).then((b) => {\n                        blobCache = b;\n\n                        const contentType = 'multipart/form-data;boundary=' + b.multipartBoundary\n                        options.headers['Content-Type'] = contentType;\n                        options.headers['content-type'] = contentType;\n                        return Promise.resolve(URIUtil.wrap(b._ref));\n                    });\n                }\n                // When request body is a Blob, use file URI of the Blob as request body.\n                else if (body.isReactNativeBlobUtilPolyfill)\n                    promise = Promise.resolve(URIUtil.wrap(body.blobPath));\n                else if (typeof body !== 'object' && options.headers['Content-Type'] !== 'application/json')\n                    promise = Promise.resolve(JSON.stringify(body));\n                else if (typeof body !== 'string')\n                    promise = Promise.resolve(body.toString());\n                // send it as-is, leave the native module decide how to send the body.\n                else\n                    promise = Promise.resolve(body);\n            }\n            // task is a progress reportable and cancellable Promise, however,\n            // task.then is not, so we have to extend task.then with progress and\n            // cancel function\n            let progressHandler, uploadHandler, cancelHandler;\n            let scopedTask = null;\n            let statefulPromise = promise\n                .then((body) => {\n                    let task = RNconfig(config)\n                        .fetch(options.method, url, options.headers, body);\n                    scopedTask = task;\n                    if (progressHandler)\n                        task.progress(progressHandler);\n                    if (uploadHandler)\n                        task.uploadProgress(uploadHandler);\n                    if (cancelHandler)\n                        task.cancel();\n                    return task.then((resp) => {\n                        log.verbose('response', resp);\n                        // release blob cache created when sending request\n                        if (blobCache !== null && blobCache instanceof Blob)\n                            blobCache.close();\n                        return Promise.resolve(new ReactNativeBlobUtilFetchResponse(resp));\n                    });\n                });\n\n            // extend task.then progress with report and cancelling functions\n            statefulPromise.progress = (fn) => {\n                progressHandler = fn;\n            };\n            statefulPromise.uploadProgress = (fn) => {\n                uploadHandler = fn;\n            };\n            statefulPromise.cancel = () => {\n                cancelHandler = true;\n                if (scopedTask && scopedTask.cancel)\n                    scopedTask.cancel();\n            };\n\n            return statefulPromise;\n\n        };\n    }\n\n}\n\nclass ReactNativeBlobUtilFetchResponse {\n\n    constructor(resp: FetchBlobResponse) {\n        let info = resp.info();\n        this.headers = info.headers;\n        this.ok = info.status >= 200 && info.status <= 299,\n            this.status = info.status;\n        this.type = 'basic';\n        this.bodyUsed = false;\n        this.resp = resp;\n        this.rnfbRespInfo = info;\n        this.rnfbResp = resp;\n    }\n\n    rawResp() {\n        return Promise.resolve(this.rnfbResp);\n    }\n\n    arrayBuffer() {\n        log.verbose('to arrayBuffer', this.rnfbRespInfo);\n        this.bodyUsed = true;\n        return readArrayBuffer(this.rnfbResp, this.rnfbRespInfo);\n    }\n\n    text() {\n        log.verbose('to text', this.rnfbResp, this.rnfbRespInfo);\n        this.bodyUsed = true;\n        return readText(this.rnfbResp, this.rnfbRespInfo);\n    }\n\n    json() {\n        log.verbose('to json', this.rnfbResp, this.rnfbRespInfo);\n        this.bodyUsed = true;\n        return readJSON(this.rnfbResp, this.rnfbRespInfo);\n    }\n\n    blob() {\n        log.verbose('to blob', this.rnfbResp, this.rnfbRespInfo);\n        this.bodyUsed = true;\n        return readBlob(this.rnfbResp, this.rnfbRespInfo);\n    }\n}\n\n/**\n * Get response data as array.\n * @param  {FetchBlobResponse} resp Response data object from RNFB fetch call.\n * @param  {ReactNativeBlobUtilResponseInfo} info Response informations.\n * @return {Promise<Array>}\n */\nfunction readArrayBuffer(resp, info): Promise<Array> {\n    switch (info.rnfbEncode) {\n        case 'path':\n            return resp.readFile('ascii');\n            break;\n        default:\n            let buffer = [];\n            let str = resp.text();\n            for (let i in str) {\n                buffer[i] = str.charCodeAt(i);\n            }\n            return Promise.resolve(buffer);\n            break;\n    }\n}\n\n/**\n * Get response data as string.\n * @param  {FetchBlobResponse} resp Response data object from RNFB fetch call.\n * @param  {ReactNativeBlobUtilResponseInfo} info Response informations.\n * @return {Promise<string>}\n */\nfunction readText(resp, info): Promise<string> {\n    switch (info.rnfbEncode) {\n        case 'base64':\n            return Promise.resolve(resp.text());\n            break;\n        case 'path':\n            return resp.text();\n            break;\n        default:\n            return Promise.resolve(resp.text());\n            break;\n    }\n}\n\n\n/**\n * Get response data as ReactNativeBlobUtil Blob polyfill object.\n * @param  {FetchBlobResponse} resp Response data object from RNFB fetch call.\n * @param  {ReactNativeBlobUtilResponseInfo} info Response informations.\n * @return {Promise<Blob>}\n */\nfunction readBlob(resp, info): Promise<Blob> {\n    log.verbose('readBlob', resp, info);\n    return resp.blob();\n}\n\n/**\n * Get response data as JSON object.\n * @param  {FetchBlobResponse} resp Response data object from RNFB fetch call.\n * @param  {ReactNativeBlobUtilResponseInfo} info Response informations.\n * @return {Promise<object>}\n */\nfunction readJSON(resp, info): Promise<object> {\n    log.verbose('readJSON', resp, info);\n    switch (info.rnfbEncode) {\n        case 'base64':\n            return Promise.resolve(resp.json());\n        case 'path':\n            return resp.json();\n        default:\n            return Promise.resolve(resp.json());\n    }\n}\n","// Copyright 2016 wkh237@github. All rights reserved.\n// Use of this source code is governed by a MIT-style license that can be\n// found in the LICENSE file.\n\nimport Blob from './Blob.js';\n\nexport default class File extends Blob {\n\n    name: string = '';\n\n    static build(name: string, data: any, cType: string): Promise<File> {\n        return new Promise((resolve, reject) => {\n            if (data === undefined) {\n                reject(new TypeError('data is undefined'));\n            }\n            new File(data, cType).onCreated((f) => {\n                f.name = name;\n                resolve(f);\n            });\n        });\n    }\n\n    constructor(data: any, cType: string) {\n        super(data, cType);\n    }\n\n}\n","// Copyright 2016 wkh237@github. All rights reserved.\n// Use of this source code is governed by a MIT-style license that can be\n// found in the LICENSE file.\n\nimport EventTarget from './EventTarget';\nimport Blob from './Blob';\nimport Log from '../utils/log.js';\n\nconst log = new Log('FileReader');\n\nlog.level(3);\n\nexport default class FileReader extends EventTarget {\n\n    static get EMPTY() {\n        return 0;\n    }\n\n    static get LOADING() {\n        return 1;\n    }\n\n    static get DONE() {\n        return 2;\n    }\n\n    // properties\n    _readState: number = 0;\n    _result: any;\n    _error: any;\n\n    get isRNFBPolyFill() {\n        return true;\n    }\n\n    // event handlers\n    onloadstart: (e: Event) => void;\n    onprogress: (e: Event) => void;\n    onload: (e: Event) => void;\n    onabort: (e: Event) => void;\n    onerror: (e: Event) => void;\n    onloadend: (e: Event) => void;\n\n    constructor() {\n        super();\n        log.verbose('file reader const');\n        this._result = null;\n    }\n\n    abort() {\n        log.verbose('abort');\n    }\n\n    readAsArrayBuffer(b: Blob) {\n        log.verbose('readAsArrayBuffer', b);\n    }\n\n    readAsBinaryString(b: Blob) {\n        log.verbose('readAsBinaryString', b);\n    }\n\n    readAsText(b: Blob, label: ?string) {\n        log.verbose('readAsText', b, label);\n    }\n\n    readAsDataURL(b: Blob) {\n        log.verbose('readAsDataURL', b);\n    }\n\n    dispatchEvent(event, e) {\n        log.verbose('dispatch event', event, e);\n        super.dispatchEvent(event, e);\n        if (typeof this[`on${event}`] === 'function') {\n            this[`on${event}`](e);\n        }\n    }\n\n    // private methods\n\n    // getters and setters\n\n    get readyState() {\n        return this._readyState;\n    }\n\n    get result() {\n        return this._result;\n    }\n\n\n}\n","// Copyright 2016 wkh237@github. All rights reserved.\n// Use of this source code is governed by a MIT-style license that can be\n// found in the LICENSE file.\n\nimport Event from './Event';\n\nexport default class ProgressEvent extends Event {\n\n    _lengthComputable: boolean = false;\n    _loaded: number = -1;\n    _total: numver = -1;\n\n    constructor(lengthComputable, loaded, total) {\n        super();\n        this._lengthComputable = lengthComputable;\n        this._loaded = loaded;\n        this._total = total;\n    }\n\n    get lengthComputable() {\n        return this._lengthComputable;\n    }\n\n    get loaded() {\n        return this._loaded;\n    }\n\n    get total() {\n        return this._total;\n    }\n\n}\n","// Copyright 2016 wkh237@github. All rights reserved.\n// Use of this source code is governed by a MIT-style license that can be\n// found in the LICENSE file.\n\nimport XMLHttpRequestEventTarget from './XMLHttpRequestEventTarget.js';\nimport Log from '../utils/log.js';\nimport Blob from './Blob.js';\nimport ProgressEvent from './ProgressEvent.js';\nimport URIUtil from \"../utils/uri\";\nimport {config} from \"../fetch\";\n\nconst log = new Log('XMLHttpRequest');\n\n\nlog.disable();\n// log.level(3)\n\nconst UNSENT = 0;\nconst OPENED = 1;\nconst HEADERS_RECEIVED = 2;\nconst LOADING = 3;\nconst DONE = 4;\n\nexport default class XMLHttpRequest extends XMLHttpRequestEventTarget {\n\n    _onreadystatechange: () => void;\n\n    upload: XMLHttpRequestEventTarget = new XMLHttpRequestEventTarget();\n    static binaryContentTypes: Array<string> = [\n        'image/', 'video/', 'audio/'\n    ];\n\n    // readonly\n    _readyState: number = UNSENT;\n    _uriType: 'net' | 'file' = 'net';\n    _response: any = '';\n    _responseText: any = '';\n    _responseHeaders: any = {};\n    _responseType: '' | 'arraybuffer' | 'blob' | 'json' | 'text' = '';\n    // TODO : not suppoted ATM\n    _responseURL: null = '';\n    _responseXML: null = '';\n    _status: number = 0;\n    _statusText: string = '';\n    _timeout: number = 60000;\n    _sendFlag: boolean = false;\n    _uploadStarted: boolean = false;\n    _increment: boolean = false;\n\n    // ReactNativeBlobUtil compatible data structure\n    _config: ReactNativeBlobUtilConfig = {};\n    _url: any;\n    _method: string;\n    _headers: any = {\n        'Content-Type': 'text/plain'\n    };\n    _cleanUp: () => void = null;\n    _body: any;\n\n    // ReactNativeBlobUtil promise object, which has `progress`, `uploadProgress`, and\n    // `cancel` methods.\n    _task: any;\n\n    // constants\n    get UNSENT() {\n        return UNSENT;\n    }\n\n    get OPENED() {\n        return OPENED;\n    }\n\n    get HEADERS_RECEIVED() {\n        return HEADERS_RECEIVED;\n    }\n\n    get LOADING() {\n        return LOADING;\n    }\n\n    get DONE() {\n        return DONE;\n    }\n\n    static get UNSENT() {\n        return UNSENT;\n    }\n\n    static get OPENED() {\n        return OPENED;\n    }\n\n    static get HEADERS_RECEIVED() {\n        return HEADERS_RECEIVED;\n    }\n\n    static get LOADING() {\n        return LOADING;\n    }\n\n    static get DONE() {\n        return DONE;\n    }\n\n    static setLog(level: number) {\n        if (level === -1)\n            log.disable();\n        else\n            log.level(level);\n    }\n\n    static addBinaryContentType(substr: string) {\n        for (let i in XMLHttpRequest.binaryContentTypes) {\n            if (new RegExp(substr, 'i').test(XMLHttpRequest.binaryContentTypes[i])) {\n                return;\n            }\n        }\n        XMLHttpRequest.binaryContentTypes.push(substr);\n\n    }\n\n    static removeBinaryContentType(val) {\n        for (let i in XMLHttpRequest.binaryContentTypes) {\n            if (new RegExp(substr, 'i').test(XMLHttpRequest.binaryContentTypes[i])) {\n                XMLHttpRequest.binaryContentTypes.splice(i, 1);\n                return;\n            }\n        }\n    }\n\n    constructor() {\n        log.verbose('XMLHttpRequest constructor called');\n        super();\n    }\n\n\n    /**\n     * XMLHttpRequest.open, always async, user and password not supported. When\n     * this method invoked, headers should becomes empty again.\n     * @param  {string} method Request method\n     * @param  {string} url Request URL\n     * @param  {true} async Always async\n     * @param  {any} user NOT SUPPORTED\n     * @param  {any} password NOT SUPPORTED\n     */\n    open(method: string, url: string, async: true, user: any, password: any) {\n        log.verbose('XMLHttpRequest open ', method, url, async, user, password);\n        this._method = method;\n        this._url = url;\n        this._headers = {};\n        this._increment = URIUtil.isJSONStreamURI(this._url);\n        this._url = this._url.replace(/^JSONStream\\:\\/\\//, '');\n        this._dispatchReadStateChange(XMLHttpRequest.OPENED);\n    }\n\n    /**\n     * Invoke this function to send HTTP request, and set body.\n     * @param  {any} body Body in ReactNativeBlobUtil flavor\n     */\n    send(body) {\n\n        this._body = body;\n\n        if (this._readyState !== XMLHttpRequest.OPENED)\n            throw 'InvalidStateError : XMLHttpRequest is not opened yet.';\n        let promise = Promise.resolve();\n        this._sendFlag = true;\n        log.verbose('XMLHttpRequest send ', body);\n        let {_method, _url, _headers} = this;\n        log.verbose('sending request with args', _method, _url, _headers, body);\n        log.verbose(typeof body, body instanceof FormData);\n\n        if (body instanceof FormData) {\n            log.debug('creating blob and setting header from FormData instance');\n            body = new Blob(body);\n            this._headers['Content-Type'] = `multipart/form-data; boundary=${body.multipartBoundary}`;\n        }\n\n        if (body instanceof Blob) {\n            log.debug('sending blob body', body._blobCreated);\n            promise = new Promise((resolve, reject) => {\n                body.onCreated((blob) => {\n                    // when the blob is derived (not created by RN developer), the blob\n                    // will be released after XMLHttpRequest sent\n                    if (blob.isDerived) {\n                        this._cleanUp = () => {\n                            blob.close();\n                        };\n                    }\n                    log.debug('body created send request');\n                    body = URIUtil.wrap(blob.getReactNativeBlobUtilRef());\n                    resolve();\n                });\n            });\n        }\n        else if (typeof body === 'object') {\n            body = JSON.stringify(body);\n            promise = Promise.resolve();\n        }\n        else {\n            body = body ? body.toString() : body;\n            promise = Promise.resolve();\n        }\n\n        promise.then(() => {\n            log.debug('send request invoke', body);\n            for (let h in _headers) {\n                _headers[h] = _headers[h].toString();\n            }\n\n            this._task = config({\n                auto: true,\n                timeout: this._timeout,\n                increment: this._increment,\n                binaryContentTypes: XMLHttpRequest.binaryContentTypes\n            })\n                .fetch(_method, _url, _headers, body);\n            this._task\n                .stateChange(this._headerReceived)\n                .uploadProgress(this._uploadProgressEvent)\n                .progress(this._progressEvent)\n                .catch(this._onError)\n                .then(this._onDone);\n\n        });\n    }\n\n    overrideMimeType(mime: string) {\n        log.verbose('XMLHttpRequest overrideMimeType', mime);\n        this._headers['Content-Type'] = mime;\n    }\n\n    setRequestHeader(name, value) {\n        log.verbose('XMLHttpRequest set header', name, value);\n        if (this._readyState !== OPENED || this._sendFlag) {\n            throw `InvalidStateError : Calling setRequestHeader in wrong state  ${this._readyState}`;\n        }\n        // UNICODE SHOULD NOT PASS\n        if (typeof name !== 'string' || /[^\\u0000-\\u00ff]/.test(name)) {\n            throw 'TypeError : header field name should be a string';\n        }\n        //\n        let invalidPatterns = [\n            /[\\(\\)\\>\\<\\@\\,\\:\\\\\\/\\[\\]\\?\\=\\}\\{\\s\\ \\u007f\\;\\t\\0\\v\\r]/,\n            /tt/\n        ];\n        for (let pattern of invalidPatterns) {\n            if (pattern.test(name) || typeof name !== 'string') {\n                throw `SyntaxError : Invalid header field name ${name}`;\n            }\n        }\n        this._headers[name] = value;\n    }\n\n    abort() {\n        log.verbose('XMLHttpRequest abort ');\n        if (!this._task)\n            return;\n        this._task.cancel((err) => {\n            let e = {\n                timeStamp: Date.now(),\n            };\n            if (this.onabort)\n                this.onabort();\n            if (err) {\n                e.detail = err;\n                e.type = 'error';\n                this.dispatchEvent('error', e);\n            }\n            else {\n                e.type = 'abort';\n                this.dispatchEvent('abort', e);\n            }\n        });\n    }\n\n    getResponseHeader(field: string): string | null {\n        log.verbose('XMLHttpRequest get header', field, this._responseHeaders);\n        if (!this._responseHeaders)\n            return null;\n        return this._responseHeaders[field] || this._responseHeaders[field.toLowerCase()] || null;\n\n    }\n\n    getAllResponseHeaders(): string | null {\n        log.verbose('XMLHttpRequest get all headers', this._responseHeaders);\n        if (!this._responseHeaders)\n            return '';\n        let result = '';\n        let respHeaders = this.responseHeaders;\n        for (let i in respHeaders) {\n            result += `${i}: ${respHeaders[i]}${String.fromCharCode(0x0D, 0x0A)}`;\n        }\n        return result.substr(0, result.length - 2);\n    }\n\n    _headerReceived = (e) => {\n        log.debug('header received ', this._task.taskId, e);\n        this.responseURL = this._url;\n        if (e.state === \"2\" && e.taskId === this._task.taskId) {\n            this._responseHeaders = e.headers;\n            this._statusText = e.status;\n            this._status = Math.floor(e.status);\n            this._dispatchReadStateChange(XMLHttpRequest.HEADERS_RECEIVED);\n        }\n    }\n\n    _uploadProgressEvent = (send: number, total: number) => {\n        if (!this._uploadStarted) {\n            this.upload.dispatchEvent('loadstart');\n            this._uploadStarted = true;\n        }\n        if (send >= total)\n            this.upload.dispatchEvent('load');\n        this.upload.dispatchEvent('progress', new ProgressEvent(true, send, total));\n    }\n\n    _progressEvent = (send: number, total: number, chunk: string) => {\n        log.verbose(this.readyState);\n        if (this._readyState === XMLHttpRequest.HEADERS_RECEIVED)\n            this._dispatchReadStateChange(XMLHttpRequest.LOADING);\n        let lengthComputable = false;\n        if (total && total >= 0)\n            lengthComputable = true;\n        let e = new ProgressEvent(lengthComputable, send, total);\n\n        if (this._increment) {\n            this._responseText += chunk;\n        }\n        this.dispatchEvent('progress', e);\n    }\n\n    _onError = (err) => {\n        let statusCode = Math.floor(this.status);\n        if (statusCode >= 100 && statusCode !== 408) {\n            return;\n        }\n        log.debug('XMLHttpRequest error', err);\n        this._statusText = err;\n        this._status = String(err).match(/\\d+/);\n        this._status = this._status ? Math.floor(this.status) : 404;\n        this._dispatchReadStateChange(XMLHttpRequest.DONE);\n        if (err && String(err.message).match(/(timed\\sout|timedout)/) || this._status == 408) {\n            this.dispatchEvent('timeout');\n        }\n        this.dispatchEvent('loadend');\n        this.dispatchEvent('error', {\n            type: 'error',\n            detail: err\n        });\n        this.clearEventListeners();\n    }\n\n    _onDone = (resp) => {\n        log.debug('XMLHttpRequest done', this._url, resp, this);\n        this._statusText = this._status;\n        let responseDataReady = () => {\n            log.debug('request done state = 4');\n            this.dispatchEvent('load');\n            this.dispatchEvent('loadend');\n            this._dispatchReadStateChange(XMLHttpRequest.DONE);\n            this.clearEventListeners();\n        };\n        if (resp) {\n            let info = resp.respInfo || {};\n            log.debug(this._url, info, info.respType);\n            switch (this._responseType) {\n                case 'blob' :\n                    resp.blob().then((b) => {\n                        this._responseText = resp.text();\n                        this._response = b;\n                        responseDataReady();\n                    });\n                    break;\n                case 'arraybuffer':\n                    // TODO : to array buffer\n                    break;\n                case 'json':\n                    this._response = resp.json();\n                    this._responseText = resp.text();\n                    break;\n                default :\n                    this._responseText = resp.text();\n                    this._response = this.responseText;\n                    responseDataReady();\n                    break;\n            }\n        }\n\n    }\n\n    _dispatchReadStateChange(state) {\n        this._readyState = state;\n        if (typeof this._onreadystatechange === 'function')\n            this._onreadystatechange();\n    }\n\n    set onreadystatechange(fn: () => void) {\n        log.verbose('XMLHttpRequest set onreadystatechange', fn);\n        this._onreadystatechange = fn;\n    }\n\n    get onreadystatechange() {\n        return this._onreadystatechange;\n    }\n\n    get readyState() {\n        log.verbose('get readyState', this._readyState);\n        return this._readyState;\n    }\n\n    get status() {\n        log.verbose('get status', this._status);\n        return this._status;\n    }\n\n    get statusText() {\n        log.verbose('get statusText', this._statusText);\n        return this._statusText;\n    }\n\n    get response() {\n        log.verbose('get response', this._response);\n        return this._response;\n    }\n\n    get responseText() {\n        log.verbose('get responseText', this._responseText);\n        return this._responseText;\n    }\n\n    get responseURL() {\n        log.verbose('get responseURL', this._responseURL);\n        return this._responseURL;\n    }\n\n    get responseHeaders() {\n        log.verbose('get responseHeaders', this._responseHeaders);\n        return this._responseHeaders;\n    }\n\n    set timeout(val) {\n        this._timeout = val * 1000;\n        log.verbose('set timeout', this._timeout);\n    }\n\n    get timeout() {\n        log.verbose('get timeout', this._timeout);\n        return this._timeout;\n    }\n\n    set responseType(val) {\n        log.verbose('set response type', this._responseType);\n        this._responseType = val;\n    }\n\n    get responseType() {\n        log.verbose('get response type', this._responseType);\n        return this._responseType;\n    }\n\n    static get isRNFBPolyfill() {\n        return true;\n    }\n\n}\n","// Copyright 2016 wkh237@github. All rights reserved.\n// Use of this source code is governed by a MIT-style license that can be\n// found in the LICENSE file.\n\nimport EventTarget from './EventTarget.js';\nimport Log from '../utils/log.js';\n\nconst log = new Log('XMLHttpRequestEventTarget');\n\nlog.disable();\n// log.level(3)\n\nexport default class XMLHttpRequestEventTarget extends EventTarget {\n\n    _onabort: (e: Event) => void = () => {\n    };\n    _onerror: (e: Event) => void = () => {\n    };\n    _onload: (e: Event) => void = () => {\n    };\n    _onloadstart: (e: Event) => void = () => {\n    };\n    _onprogress: (e: Event) => void = () => {\n    };\n    _ontimeout: (e: Event) => void = () => {\n    };\n    _onloadend: (e: Event) => void = () => {\n    };\n\n    constructor() {\n        super();\n        log.info('constructor called');\n    }\n\n    dispatchEvent(event: string, e: Event) {\n        log.debug('dispatch event', event, e);\n        super.dispatchEvent(event, e);\n        switch (event) {\n            case 'abort' :\n                this._onabort(e);\n                break;\n            case 'error' :\n                this._onerror(e);\n                break;\n            case 'load' :\n                this._onload(e);\n                break;\n            case 'loadstart' :\n                this._onloadstart(e);\n                break;\n            case 'loadend' :\n                this._onloadend(e);\n                break;\n            case 'progress' :\n                this._onprogress(e);\n                break;\n            case 'timeout' :\n                this._ontimeout(e);\n                break;\n        }\n    }\n\n    set onabort(fn: (e: Event) => void) {\n        log.info('set onabort');\n        this._onabort = fn;\n    }\n\n    get onabort() {\n        return this._onabort;\n    }\n\n    set onerror(fn: (e: Event) => void) {\n        log.info('set onerror');\n        this._onerror = fn;\n    }\n\n    get onerror() {\n        return this._onerror;\n    }\n\n    set onload(fn: (e: Event) => void) {\n        log.info('set onload', fn);\n        this._onload = fn;\n    }\n\n    get onload() {\n        return this._onload;\n    }\n\n    set onloadstart(fn: (e: Event) => void) {\n        log.info('set onloadstart');\n        this._onloadstart = fn;\n    }\n\n    get onloadstart() {\n        return this._onloadstart;\n    }\n\n    set onprogress(fn: (e: Event) => void) {\n        log.info('set onprogress');\n        this._onprogress = fn;\n    }\n\n    get onprogress() {\n        return this._onprogress;\n    }\n\n    set ontimeout(fn: (e: Event) => void) {\n        log.info('set ontimeout');\n        this._ontimeout = fn;\n    }\n\n    get ontimeout() {\n        return this._ontimeout;\n    }\n\n    set onloadend(fn: (e: Event) => void) {\n        log.info('set onloadend');\n        this._onloadend = fn;\n    }\n\n    get onloadend() {\n        return this._onloadend;\n    }\n\n}\n","import Blob from './Blob.js';\nimport File from './File.js';\nimport XMLHttpRequest from './XMLHttpRequest.js';\nimport ProgressEvent from './ProgressEvent';\nimport Event from './Event';\nimport FileReader from './FileReader';\nimport Fetch from './Fetch';\n\nexport default {\n    Blob, File, XMLHttpRequest, ProgressEvent, Event, FileReader, Fetch\n};\n","export default class Log {\n\n  _name:string;\n  _isEnable:boolean = true\n  _level:number = 0\n\n  constructor(name:string) {\n    this._name = name;\n  }\n\n  level(val:number) {\n    this._isEnable = true;\n    this._level = val;\n  }\n\n  enable() {\n    this._isEnable = true;\n  }\n\n  disable() {\n    this._isEnable = false;\n  }\n\n  verbose(...args) {\n    this._isEnable && this._level > 2 && console.log(this._name, 'verbose:', ...args);\n  }\n\n  debug(...args) {\n    this._isEnable && this._level > 1 && console.log(this._name, 'debug:', ...args);\n  }\n\n  info(...args) {\n    this._isEnable && this._level > 0 && console.log(this._name, 'info:', ...args);\n  }\n\n  error(...args) {\n    this._isEnable && this._level > -1 && console.warn(this._name, 'error:', ...args);\n  }\n\n}\n","export default {\n\n    isFileURI: (uri: string): boolean => {\n        if (typeof uri !== 'string')\n            return false;\n        return /^ReactNativeBlobUtil-file\\:\\/\\//.test(uri);\n    },\n\n    isJSONStreamURI: (uri: string): boolean => {\n        if (typeof uri !== 'string')\n            return false;\n        return /^JSONStream\\:\\/\\//.test(uri);\n    },\n\n    removeURIScheme: (uri: string, iterations: number): string => {\n        iterations = iterations || 1;\n        let result = uri;\n        for (let i = 0; i < iterations; i++) {\n            result = String(result).replace(/^[^\\:]+\\:\\/\\//, '');\n        }\n        return String(result);\n    },\n\n    unwrapFileURI: (uri: string): string => {\n        return String(uri).replace(/^ReactNativeBlobUtil-file\\:\\/\\//, '');\n    },\n\n    wrap: (path: string): string => {\n        const prefix = path.startsWith('content://') ? 'ReactNativeBlobUtil-content://' : 'ReactNativeBlobUtil-file://';\n        return prefix + path;\n    }\n\n};\n","export default function getUUID() {\n  return Math.random().toString(36).substring(2, 15) +\n        Math.random().toString(36).substring(2, 15);\n}\n","import type { TurboModule } from 'react-native'\nimport { TurboModuleRegistry } from 'react-native'\n\nexport type DocumentPickerResponse = {\n  uri: string\n  name: string\n  copyError?: string\n  fileCopyUri: string | null\n  type: string | null\n  size: number | null\n}\n\nexport type DirectoryPickerResponse = {\n  uri: string\n}\n\nexport interface Spec extends TurboModule {\n  readonly getConstants: () => {}\n\n  // we use \"Object\" to still have backwards compability with already\n  // present methods on iOS, which use NSDictionary\n  pick(options: Object): Promise<DocumentPickerResponse[]>\n  releaseSecureAccess(uris: string[]): Promise<void>\n  pickDirectory(): Promise<DirectoryPickerResponse>\n}\n\nexport const NativeDocumentPicker = TurboModuleRegistry.getEnforcing<Spec>('RNDocumentPicker')\n","const mimeTypes = Object.freeze({\n  allFiles: '*/*',\n  audio: 'audio/*',\n  csv: 'text/csv',\n  doc: 'application/msword',\n  docx: 'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n  images: 'image/*',\n  json: 'application/json',\n  pdf: 'application/pdf',\n  plainText: 'text/plain',\n  ppt: 'application/vnd.ms-powerpoint',\n  pptx: 'application/vnd.openxmlformats-officedocument.presentationml.presentation',\n  video: 'video/*',\n  xls: 'application/vnd.ms-excel',\n  xlsx: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n  zip: 'application/zip',\n} as const)\n\nconst utis = Object.freeze({\n  allFiles: 'public.item',\n  audio: 'public.audio',\n  csv: 'public.comma-separated-values-text',\n  doc: 'com.microsoft.word.doc',\n  docx: 'org.openxmlformats.wordprocessingml.document',\n  images: 'public.image',\n  json: 'public.json',\n  pdf: 'com.adobe.pdf',\n  plainText: 'public.plain-text',\n  ppt: 'com.microsoft.powerpoint.ppt',\n  pptx: 'org.openxmlformats.presentationml.presentation',\n  video: 'public.movie',\n  xls: 'com.microsoft.excel.xls',\n  xlsx: 'org.openxmlformats.spreadsheetml.sheet',\n  zip: 'public.zip-archive',\n} as const)\n\nconst extensions = Object.freeze({\n  allFiles: '*',\n  audio:\n    '.3g2 .3gp .aac .adt .adts .aif .aifc .aiff .asf .au .m3u .m4a .m4b .mid .midi .mp2 .mp3 .mp4 .rmi .snd .wav .wax .wma',\n  csv: '.csv',\n  doc: '.doc',\n  docx: '.docx',\n  images: '.jpeg .jpg .png',\n  json: '.json',\n  pdf: '.pdf',\n  plainText: '.txt',\n  ppt: '.ppt',\n  pptx: '.pptx',\n  video: '.mp4',\n  xls: '.xls',\n  xlsx: '.xlsx',\n  zip: '.zip .gz',\n} as const)\n\nexport type PlatformTypes = typeof mimeTypes | typeof utis | typeof extensions\n\nexport const perPlatformTypes = {\n  android: mimeTypes,\n  ios: utis,\n  windows: extensions,\n  // unsupported, but added to make TS happy\n  macos: extensions,\n  web: extensions,\n}\n\n// ensure shapes of platformTypes are the same: https://stackoverflow.com/a/67027347/2070942\n// let me know if there's a nicer way\n\ntype AssertEqualKeys<T1 extends object, T2 extends object> = [\n  keyof T1 extends keyof T2 ? 1 : 0,\n  keyof T2 extends keyof T1 ? 1 : 0,\n] extends [1, 1]\n  ? true\n  : false\n\nconst mimesAndUtisAreEqual: AssertEqualKeys<typeof mimeTypes, typeof utis> = true\nconst mimesAndExtensionsAreEqual: AssertEqualKeys<typeof mimeTypes, typeof extensions> = true\nexport const typesAreEqual = mimesAndUtisAreEqual && mimesAndExtensionsAreEqual\n","import { Platform, ModalPropsIOS } from 'react-native'\nimport invariant from 'invariant'\nimport type { PlatformTypes } from './fileTypes'\nimport { perPlatformTypes } from './fileTypes'\nimport { NativeDocumentPicker } from './NativeDocumentPicker'\n\nexport type DocumentPickerResponse = {\n  uri: string\n  name: string | null\n  copyError?: string\n  fileCopyUri: string | null\n  type: string | null\n  size: number | null\n}\n\nexport const types = perPlatformTypes[Platform.OS]\n\nexport type DirectoryPickerResponse = {\n  uri: string\n}\n\nexport type TransitionStyle = 'coverVertical' | 'flipHorizontal' | 'crossDissolve' | 'partialCurl'\n\nexport type DocumentPickerOptions = {\n  type?: string | Array<PlatformTypes | string>\n  mode?: 'import' | 'open'\n  copyTo?: 'cachesDirectory' | 'documentDirectory'\n  allowMultiSelection?: boolean\n  transitionStyle?: TransitionStyle\n} & Pick<ModalPropsIOS, 'presentationStyle'>\n\nexport async function pickDirectory(\n  params?: Pick<DocumentPickerOptions, 'presentationStyle' | 'transitionStyle'>,\n): Promise<DirectoryPickerResponse | null> {\n  if (Platform.OS === 'ios') {\n    const result = await pick({\n      ...params,\n      mode: 'open',\n      allowMultiSelection: false,\n      type: ['public.folder'],\n    })\n    return { uri: result[0].uri }\n  } else {\n    return NativeDocumentPicker.pickDirectory()\n  }\n}\n\nexport function pickSingle(opts?: DocumentPickerOptions): Promise<DocumentPickerResponse> {\n  const options = {\n    ...opts,\n    allowMultiSelection: false,\n  }\n  return pick(options).then((results) => results[0])\n}\n\nexport function pick(opts?: DocumentPickerOptions): Promise<DocumentPickerResponse[]> {\n  const options = {\n    // must be false to maintain old (v5) behavior\n    allowMultiSelection: false,\n    type: [types.allFiles],\n    ...opts,\n  }\n\n  const newOpts: DoPickParams = {\n    presentationStyle: 'formSheet',\n    transitionStyle: 'coverVertical',\n    ...options,\n    type: Array.isArray(options.type) ? options.type : [options.type],\n  }\n\n  return doPick(newOpts)\n}\n\ntype DoPickParams = DocumentPickerOptions & {\n  type: Array<PlatformTypes | string>\n  allowMultiSelection: boolean\n  presentationStyle: NonNullable<ModalPropsIOS['presentationStyle']>\n  transitionStyle: TransitionStyle\n}\n\nfunction doPick(options: DoPickParams): Promise<DocumentPickerResponse[]> {\n  invariant(\n    !('filetype' in options),\n    'A `filetype` option was passed to DocumentPicker.pick, the correct option is `type`',\n  )\n  invariant(\n    !('types' in options),\n    'A `types` option was passed to DocumentPicker.pick, the correct option is `type`',\n  )\n\n  invariant(\n    options.type.every((type: unknown) => typeof type === 'string'),\n    `Unexpected type option in ${options.type}, did you try using a DocumentPicker.types.* that does not exist?`,\n  )\n  invariant(\n    options.type.length > 0,\n    '`type` option should not be an empty array, at least one type must be passed if the `type` option is not omitted',\n  )\n\n  invariant(\n    !options.type.includes('folder'),\n    'RN document picker: \"folder\" option was removed, use \"pickDirectory()\"',\n  )\n\n  if ('mode' in options && !['import', 'open'].includes(options.mode ?? '')) {\n    throw new TypeError('Invalid mode option: ' + options.mode)\n  }\n\n  if (\n    'copyTo' in options &&\n    !['cachesDirectory', 'documentDirectory'].includes(options.copyTo ?? '')\n  ) {\n    throw new TypeError('Invalid copyTo option: ' + options.copyTo)\n  }\n\n  return NativeDocumentPicker.pick(options)\n}\n\nexport function releaseSecureAccess(uris: Array<string>): Promise<void> {\n  if (Platform.OS !== 'ios') {\n    return Promise.resolve()\n  }\n\n  invariant(\n    Array.isArray(uris) && uris.every((uri) => typeof uri === 'string'),\n    `\"uris\" should be an array of strings, was ${uris}`,\n  )\n\n  return NativeDocumentPicker.releaseSecureAccess(uris)\n}\n\nconst E_DOCUMENT_PICKER_CANCELED = 'DOCUMENT_PICKER_CANCELED'\nconst E_DOCUMENT_PICKER_IN_PROGRESS = 'ASYNC_OP_IN_PROGRESS'\n\nexport type NativeModuleErrorShape = Error & { code?: string }\n\nexport function isCancel(err: unknown): boolean {\n  return isErrorWithCode(err, E_DOCUMENT_PICKER_CANCELED)\n}\n\nexport function isInProgress(err: unknown): boolean {\n  return isErrorWithCode(err, E_DOCUMENT_PICKER_IN_PROGRESS)\n}\n\nfunction isErrorWithCode(err: unknown, errorCode: string): boolean {\n  if (err && typeof err === 'object' && 'code' in err) {\n    const nativeModuleErrorInstance = err as NativeModuleErrorShape\n    return nativeModuleErrorInstance?.code === errorCode\n  }\n  return false\n}\n\nexport default {\n  isCancel,\n  isInProgress,\n  releaseSecureAccess,\n  pickDirectory,\n  pick,\n  pickSingle,\n  types,\n  perPlatformTypes,\n}\n","/**\n * React Native FS\n * @flow\n */\n\n'use strict';\n\n// This file supports both iOS and Android\n\nvar RNFSManager = require('react-native').NativeModules.RNFSManager;\n\nvar NativeEventEmitter = require('react-native').NativeEventEmitter;\n\nvar RNFS_NativeEventEmitter = new NativeEventEmitter(RNFSManager);\n\nvar base64 = require('base-64');\nvar utf8 = require('utf8');\nvar isIOS = require('react-native').Platform.OS === 'ios';\n\nvar RNFSFileTypeRegular = RNFSManager.RNFSFileTypeRegular;\nvar RNFSFileTypeDirectory = RNFSManager.RNFSFileTypeDirectory;\n\nvar jobId = 0;\n\nvar getJobId = () => {\n  jobId += 1;\n  return jobId;\n};\n\nvar normalizeFilePath = (path: string) => (path.startsWith('file://') ? path.slice(7) : path);\n\ntype MkdirOptions = {\n  NSURLIsExcludedFromBackupKey?: boolean; // iOS only\n  NSFileProtectionKey?: string; // IOS only\n};\n\ntype FileOptions = {\n  NSFileProtectionKey?: string; // IOS only\n};\n\ntype ReadDirItem = {\n  ctime: ?Date;    // The creation date of the file (iOS only)\n  mtime: ?Date;    // The last modified date of the file\n  name: string;     // The name of the item\n  path: string;     // The absolute path to the item\n  size: string;     // Size in bytes\n  isFile: () => boolean;        // Is the file just a file?\n  isDirectory: () => boolean;   // Is the file a directory?\n};\n\ntype StatResult = {\n  name: ?string;     // The name of the item TODO: why is this not documented?\n  path: string;     // The absolute path to the item\n  size: string;     // Size in bytes\n  mode: number;     // UNIX file mode\n  ctime: number;    // Created date\n  mtime: number;    // Last modified date\n  originalFilepath: string;    // In case of content uri this is the pointed file path, otherwise is the same as path\n  isFile: () => boolean;        // Is the file just a file?\n  isDirectory: () => boolean;   // Is the file a directory?\n};\n\ntype Headers = { [name: string]: string };\ntype Fields = { [name: string]: string };\n\ntype DownloadFileOptions = {\n  fromUrl: string;          // URL to download file from\n  toFile: string;           // Local filesystem path to save the file to\n  headers?: Headers;        // An object of headers to be passed to the server\n  background?: boolean;     // Continue the download in the background after the app terminates (iOS only)\n  discretionary?: boolean;  // Allow the OS to control the timing and speed of the download to improve perceived performance  (iOS only)\n  cacheable?: boolean;      // Whether the download can be stored in the shared NSURLCache (iOS only)\n  progressInterval?: number;\n  progressDivider?: number;\n  begin?: (res: DownloadBeginCallbackResult) => void;\n  progress?: (res: DownloadProgressCallbackResult) => void;\n  resumable?: () => void;    // only supported on iOS yet\n  connectionTimeout?: number; // only supported on Android yet\n  readTimeout?: number;       // supported on Android and iOS\n  backgroundTimeout?: number; // Maximum time (in milliseconds) to download an entire resource (iOS only, useful for timing out background downloads)\n};\n\ntype DownloadBeginCallbackResult = {\n  jobId: number;          // The download job ID, required if one wishes to cancel the download. See `stopDownload`.\n  statusCode: number;     // The HTTP status code\n  contentLength: number;  // The total size in bytes of the download resource\n  headers: Headers;       // The HTTP response headers from the server\n};\n\ntype DownloadProgressCallbackResult = {\n  jobId: number;          // The download job ID, required if one wishes to cancel the download. See `stopDownload`.\n  contentLength: number;  // The total size in bytes of the download resource\n  bytesWritten: number;   // The number of bytes written to the file so far\n};\n\ntype DownloadResult = {\n  jobId: number;          // The download job ID, required if one wishes to cancel the download. See `stopDownload`.\n  statusCode: number;     // The HTTP status code\n  bytesWritten: number;   // The number of bytes written to the file\n};\n\ntype UploadFileOptions = {\n  toUrl: string;            // URL to upload file to\n  binaryStreamOnly?: boolean; // Allow for binary data stream for file to be uploaded without extra headers, Default is 'false'\n  files: UploadFileItem[];  // An array of objects with the file information to be uploaded.\n  headers?: Headers;        // An object of headers to be passed to the server\n  fields?: Fields;          // An object of fields to be passed to the server\n  method?: string;          // Default is 'POST', supports 'POST' and 'PUT'\n  beginCallback?: (res: UploadBeginCallbackResult) => void; // deprecated\n  progressCallback?: (res: UploadProgressCallbackResult) => void; // deprecated\n  begin?: (res: UploadBeginCallbackResult) => void;\n  progress?: (res: UploadProgressCallbackResult) => void;\n};\n\ntype UploadFileItem = {\n  name: string;       // Name of the file, if not defined then filename is used\n  filename: string;   // Name of file\n  filepath: string;   // Path to file\n  filetype: string;   // The mimetype of the file to be uploaded, if not defined it will get mimetype from `filepath` extension\n};\n\ntype UploadBeginCallbackResult = {\n  jobId: number;        // The upload job ID, required if one wishes to cancel the upload. See `stopUpload`.\n};\n\ntype UploadProgressCallbackResult = {\n  jobId: number;                      // The upload job ID, required if one wishes to cancel the upload. See `stopUpload`.\n  totalBytesExpectedToSend: number;   // The total number of bytes that will be sent to the server\n  totalBytesSent: number;             // The number of bytes sent to the server\n};\n\ntype UploadResult = {\n  jobId: number;        // The upload job ID, required if one wishes to cancel the upload. See `stopUpload`.\n  statusCode: number;   // The HTTP status code\n  headers: Headers;     // The HTTP response headers from the server\n  body: string;         // The HTTP response body\n};\n\ntype FSInfoResult = {\n  totalSpace: number;   // The total amount of storage space on the device (in bytes).\n  freeSpace: number;    // The amount of available storage space on the device (in bytes).\n};\n\n/**\n * Generic function used by readFile and readFileAssets\n */\nfunction readFileGeneric(filepath: string, encodingOrOptions: ?string, command: Function) {\n  var options = {\n    encoding: 'utf8'\n  };\n\n  if (encodingOrOptions) {\n    if (typeof encodingOrOptions === 'string') {\n      options.encoding = encodingOrOptions;\n    } else if (typeof encodingOrOptions === 'object') {\n      options = encodingOrOptions;\n    }\n  }\n\n  return command(normalizeFilePath(filepath)).then((b64) => {\n    var contents;\n\n    if (options.encoding === 'utf8') {\n      contents = utf8.decode(base64.decode(b64));\n    } else if (options.encoding === 'ascii') {\n      contents = base64.decode(b64);\n    } else if (options.encoding === 'base64') {\n      contents = b64;\n    } else {\n      throw new Error('Invalid encoding type \"' + String(options.encoding) + '\"');\n    }\n\n    return contents;\n  });\n}\n\n/**\n * Generic function used by readDir and readDirAssets\n */\nfunction readDirGeneric(dirpath: string, command: Function) {\n  return command(normalizeFilePath(dirpath)).then(files => {\n    return files.map(file => ({\n      ctime: file.ctime && new Date(file.ctime * 1000) || null,\n      mtime: file.mtime && new Date(file.mtime * 1000) || null,\n      name: file.name,\n      path: file.path,\n      size: file.size,\n      isFile: () => file.type === RNFSFileTypeRegular,\n      isDirectory: () => file.type === RNFSFileTypeDirectory,\n    }));\n  });\n}\n\nvar RNFS = {\n\n  mkdir(filepath: string, options: MkdirOptions = {}): Promise<void> {\n    return RNFSManager.mkdir(normalizeFilePath(filepath), options).then(() => void 0);\n  },\n\n  moveFile(filepath: string, destPath: string, options: FileOptions = {}): Promise<void> {\n    return RNFSManager.moveFile(normalizeFilePath(filepath), normalizeFilePath(destPath), options).then(() => void 0);\n  },\n\n  copyFile(filepath: string, destPath: string, options: FileOptions = {}): Promise<void> {\n    return RNFSManager.copyFile(normalizeFilePath(filepath), normalizeFilePath(destPath), options).then(() => void 0);\n  },\n\n  pathForBundle(bundleNamed: string): Promise<string> {\n    return RNFSManager.pathForBundle(bundleNamed);\n  },\n\n  pathForGroup(groupName: string): Promise<string> {\n    return RNFSManager.pathForGroup(groupName);\n  },\n\n  getFSInfo(): Promise<FSInfoResult> {\n    return RNFSManager.getFSInfo();\n  },\n\n  getAllExternalFilesDirs(): Promise<string> {\n    return RNFSManager.getAllExternalFilesDirs();\n  },\n\n  unlink(filepath: string): Promise<void> {\n    return RNFSManager.unlink(normalizeFilePath(filepath)).then(() => void 0);\n  },\n\n  exists(filepath: string): Promise<boolean> {\n    return RNFSManager.exists(normalizeFilePath(filepath));\n  },\n\n  stopDownload(jobId: number): void {\n    RNFSManager.stopDownload(jobId);\n  },\n\n  resumeDownload(jobId: number): void {\n    RNFSManager.resumeDownload(jobId);\n  },\n\n  isResumable(jobId: number): Promise<bool> {\n    return RNFSManager.isResumable(jobId);\n  },\n\n  stopUpload(jobId: number): void {\n    RNFSManager.stopUpload(jobId);\n  },\n\n  completeHandlerIOS(jobId: number): void {\n    return RNFSManager.completeHandlerIOS(jobId);\n  },\n\n  readDir(dirpath: string): Promise<ReadDirItem[]> {\n    return readDirGeneric(dirpath, RNFSManager.readDir);\n  },\n\n  // Android-only\n  readDirAssets(dirpath: string): Promise<ReadDirItem[]> {\n    if (!RNFSManager.readDirAssets) {\n      throw new Error('readDirAssets is not available on this platform');\n    }\n    return readDirGeneric(dirpath, RNFSManager.readDirAssets);\n  },\n\n  // Android-only\n  existsAssets(filepath: string) {\n    if (!RNFSManager.existsAssets) {\n      throw new Error('existsAssets is not available on this platform');\n    }\n    return RNFSManager.existsAssets(filepath);\n  },\n\n  // Android-only\n  existsRes(filename: string) {\n    if (!RNFSManager.existsRes) {\n      throw new Error('existsRes is not available on this platform');\n    }\n    return RNFSManager.existsRes(filename);\n  },\n\n  // Node style version (lowercase d). Returns just the names\n  readdir(dirpath: string): Promise<string[]> {\n    return RNFS.readDir(normalizeFilePath(dirpath)).then(files => {\n      return files.map(file => file.name);\n    });\n  },\n\n  // setReadable for Android\n  setReadable(filepath: string, readable: boolean, ownerOnly: boolean): Promise<boolean> {\n    return RNFSManager.setReadable(filepath, readable, ownerOnly).then((result) => {\n      return result;\n    })\n  },\n\n  stat(filepath: string): Promise<StatResult> {\n    return RNFSManager.stat(normalizeFilePath(filepath)).then((result) => {\n      return {\n        'path': filepath,\n        'ctime': new Date(result.ctime * 1000),\n        'mtime': new Date(result.mtime * 1000),\n        'size': result.size,\n        'mode': result.mode,\n        'originalFilepath': result.originalFilepath,\n        isFile: () => result.type === RNFSFileTypeRegular,\n        isDirectory: () => result.type === RNFSFileTypeDirectory,\n      };\n    });\n  },\n\n  readFile(filepath: string, encodingOrOptions?: any): Promise<string> {\n    return readFileGeneric(filepath, encodingOrOptions, RNFSManager.readFile);\n  },\n\n  read(filepath: string, length: number = 0, position: number = 0, encodingOrOptions?: any): Promise<string> {\n    var options = {\n      encoding: 'utf8'\n    };\n\n    if (encodingOrOptions) {\n      if (typeof encodingOrOptions === 'string') {\n        options.encoding = encodingOrOptions;\n      } else if (typeof encodingOrOptions === 'object') {\n        options = encodingOrOptions;\n      }\n    }\n\n    return RNFSManager.read(normalizeFilePath(filepath), length, position).then((b64) => {\n      var contents;\n\n      if (options.encoding === 'utf8') {\n        contents = utf8.decode(base64.decode(b64));\n      } else if (options.encoding === 'ascii') {\n        contents = base64.decode(b64);\n      } else if (options.encoding === 'base64') {\n        contents = b64;\n      } else {\n        throw new Error('Invalid encoding type \"' + String(options.encoding) + '\"');\n      }\n\n      return contents;\n    });\n  },\n\n  // Android only\n  readFileAssets(filepath: string, encodingOrOptions?: any): Promise<string> {\n    if (!RNFSManager.readFileAssets) {\n      throw new Error('readFileAssets is not available on this platform');\n    }\n    return readFileGeneric(filepath, encodingOrOptions, RNFSManager.readFileAssets);\n  },\n\n  // Android only\n  readFileRes(filename: string, encodingOrOptions?: any): Promise<string> {\n    if (!RNFSManager.readFileRes) {\n      throw new Error('readFileRes is not available on this platform');\n    }\n    return readFileGeneric(filename, encodingOrOptions, RNFSManager.readFileRes);\n  },\n\n  hash(filepath: string, algorithm: string): Promise<string> {\n    return RNFSManager.hash(normalizeFilePath(filepath), algorithm);\n  },\n\n  // Android only\n  copyFileAssets(filepath: string, destPath: string) {\n    if (!RNFSManager.copyFileAssets) {\n      throw new Error('copyFileAssets is not available on this platform');\n    }\n    return RNFSManager.copyFileAssets(normalizeFilePath(filepath), normalizeFilePath(destPath)).then(() => void 0);\n  },\n\n  // Android only\n  copyFileRes(filename: string, destPath: string) {\n    if (!RNFSManager.copyFileRes) {\n      throw new Error('copyFileRes is not available on this platform');\n    }\n    return RNFSManager.copyFileRes(filename, normalizeFilePath(destPath)).then(() => void 0);\n  },\n\n  // iOS only\n  // Copies fotos from asset-library (camera-roll) to a specific location\n  // with a given width or height\n  // @see: https://developer.apple.com/reference/photos/phimagemanager/1616964-requestimageforasset\n  copyAssetsFileIOS(imageUri: string, destPath: string, width: number, height: number,\n    scale: number = 1.0, compression: number = 1.0, resizeMode: string = 'contain'): Promise<string> {\n    return RNFSManager.copyAssetsFileIOS(imageUri, destPath, width, height, scale, compression, resizeMode);\n  },\n\n  // iOS only\n  // Copies fotos from asset-library (camera-roll) to a specific location\n  // with a given width or height\n  // @see: https://developer.apple.com/reference/photos/phimagemanager/1616964-requestimageforasset\n  copyAssetsVideoIOS(imageUri: string, destPath: string): Promise<string> {\n    return RNFSManager.copyAssetsVideoIOS(imageUri, destPath);\n  },\n\n  writeFile(filepath: string, contents: string, encodingOrOptions?: any): Promise<void> {\n    var b64;\n\n    var options = {\n      encoding: 'utf8'\n    };\n\n    if (encodingOrOptions) {\n      if (typeof encodingOrOptions === 'string') {\n        options.encoding = encodingOrOptions;\n      } else if (typeof encodingOrOptions === 'object') {\n        options = {\n          ...options,\n          ...encodingOrOptions\n        };\n      }\n    }\n\n    if (options.encoding === 'utf8') {\n      b64 = base64.encode(utf8.encode(contents));\n    } else if (options.encoding === 'ascii') {\n      b64 = base64.encode(contents);\n    } else if (options.encoding === 'base64') {\n      b64 = contents;\n    } else {\n      throw new Error('Invalid encoding type \"' + options.encoding + '\"');\n    }\n\n    return RNFSManager.writeFile(normalizeFilePath(filepath), b64, options).then(() => void 0);\n  },\n\n  appendFile(filepath: string, contents: string, encodingOrOptions?: any): Promise<void> {\n    var b64;\n\n    var options = {\n      encoding: 'utf8'\n    };\n\n    if (encodingOrOptions) {\n      if (typeof encodingOrOptions === 'string') {\n        options.encoding = encodingOrOptions;\n      } else if (typeof encodingOrOptions === 'object') {\n        options = encodingOrOptions;\n      }\n    }\n\n    if (options.encoding === 'utf8') {\n      b64 = base64.encode(utf8.encode(contents));\n    } else if (options.encoding === 'ascii') {\n      b64 = base64.encode(contents);\n    } else if (options.encoding === 'base64') {\n      b64 = contents;\n    } else {\n      throw new Error('Invalid encoding type \"' + options.encoding + '\"');\n    }\n\n    return RNFSManager.appendFile(normalizeFilePath(filepath), b64);\n  },\n\n  write(filepath: string, contents: string, position?: number, encodingOrOptions?: any): Promise<void> {\n    var b64;\n\n    var options = {\n      encoding: 'utf8'\n    };\n\n    if (encodingOrOptions) {\n      if (typeof encodingOrOptions === 'string') {\n        options.encoding = encodingOrOptions;\n      } else if (typeof encodingOrOptions === 'object') {\n        options = encodingOrOptions;\n      }\n    }\n\n    if (options.encoding === 'utf8') {\n      b64 = base64.encode(utf8.encode(contents));\n    } else if (options.encoding === 'ascii') {\n      b64 = base64.encode(contents);\n    } else if (options.encoding === 'base64') {\n      b64 = contents;\n    } else {\n      throw new Error('Invalid encoding type \"' + options.encoding + '\"');\n    }\n\n    if (position === undefined) {\n      position = -1;\n    }\n\n    return RNFSManager.write(normalizeFilePath(filepath), b64, position).then(() => void 0);\n  },\n\n  downloadFile(options: DownloadFileOptions): { jobId: number, promise: Promise<DownloadResult> } {\n    if (typeof options !== 'object') throw new Error('downloadFile: Invalid value for argument `options`');\n    if (typeof options.fromUrl !== 'string') throw new Error('downloadFile: Invalid value for property `fromUrl`');\n    if (typeof options.toFile !== 'string') throw new Error('downloadFile: Invalid value for property `toFile`');\n    if (options.headers && typeof options.headers !== 'object') throw new Error('downloadFile: Invalid value for property `headers`');\n    if (options.background && typeof options.background !== 'boolean') throw new Error('downloadFile: Invalid value for property `background`');\n    if (options.progressDivider && typeof options.progressDivider !== 'number') throw new Error('downloadFile: Invalid value for property `progressDivider`');\n    if (options.progressInterval && typeof options.progressInterval !== 'number') throw new Error('downloadFile: Invalid value for property `progressInterval`');\n    if (options.readTimeout && typeof options.readTimeout !== 'number') throw new Error('downloadFile: Invalid value for property `readTimeout`');\n    if (options.connectionTimeout && typeof options.connectionTimeout !== 'number') throw new Error('downloadFile: Invalid value for property `connectionTimeout`');\n    if (options.backgroundTimeout && typeof options.backgroundTimeout !== 'number') throw new Error('downloadFile: Invalid value for property `backgroundTimeout`');\n\n    var jobId = getJobId();\n    var subscriptions = [];\n\n    if (options.begin) {\n      subscriptions.push(RNFS_NativeEventEmitter.addListener('DownloadBegin', (res) => {\n        if (res.jobId === jobId) options.begin(res);\n      }));\n    }\n\n    if (options.progress) {\n      subscriptions.push(RNFS_NativeEventEmitter.addListener('DownloadProgress', (res) => {\n        if (res.jobId === jobId) options.progress(res);\n      }));\n    }\n\n    if (options.resumable) {\n      subscriptions.push(RNFS_NativeEventEmitter.addListener('DownloadResumable', (res) => {\n        if (res.jobId === jobId) options.resumable(res);\n      }));\n    }\n\n    var bridgeOptions = {\n      jobId: jobId,\n      fromUrl: options.fromUrl,\n      toFile: normalizeFilePath(options.toFile),\n      headers: options.headers || {},\n      background: !!options.background,\n      progressDivider: options.progressDivider || 0,\n      progressInterval: options.progressInterval || 0,\n      readTimeout: options.readTimeout || 15000,\n      connectionTimeout: options.connectionTimeout || 5000,\n      backgroundTimeout: options.backgroundTimeout || 3600000, // 1 hour\n      hasBeginCallback: options.begin instanceof Function,\n      hasProgressCallback: options.progress instanceof Function,\n      hasResumableCallback: options.resumable instanceof Function,\n    };\n\n    return {\n      jobId,\n      promise: RNFSManager.downloadFile(bridgeOptions).then(res => {\n        subscriptions.forEach(sub => sub.remove());\n        return res;\n      })\n        .catch(e => {\n          return Promise.reject(e);\n        })\n    };\n  },\n\n  uploadFiles(options: UploadFileOptions): { jobId: number, promise: Promise<UploadResult> } {\n    if (!RNFSManager.uploadFiles) {\n      return {\n        jobId: -1,\n        promise: Promise.reject(new Error('`uploadFiles` is unsupported on this platform'))\n      };\n    }\n\n    var jobId = getJobId();\n    var subscriptions = [];\n\n    if (typeof options !== 'object') throw new Error('uploadFiles: Invalid value for argument `options`');\n    if (typeof options.toUrl !== 'string') throw new Error('uploadFiles: Invalid value for property `toUrl`');\n    if (!Array.isArray(options.files)) throw new Error('uploadFiles: Invalid value for property `files`');\n    if (options.headers && typeof options.headers !== 'object') throw new Error('uploadFiles: Invalid value for property `headers`');\n    if (options.fields && typeof options.fields !== 'object') throw new Error('uploadFiles: Invalid value for property `fields`');\n    if (options.method && typeof options.method !== 'string') throw new Error('uploadFiles: Invalid value for property `method`');\n\n    if (options.begin) {\n      subscriptions.push(RNFS_NativeEventEmitter.addListener('UploadBegin', options.begin));\n    } else if (options.beginCallback) {\n      // Deprecated\n      subscriptions.push(RNFS_NativeEventEmitter.addListener('UploadBegin', options.beginCallback));\n    }\n\n    if (options.progress) {\n      subscriptions.push(RNFS_NativeEventEmitter.addListener('UploadProgress', options.progress));\n    } else if (options.progressCallback) {\n      // Deprecated\n      subscriptions.push(RNFS_NativeEventEmitter.addListener('UploadProgress', options.progressCallback));\n    }\n\n    var bridgeOptions = {\n      jobId: jobId,\n      toUrl: options.toUrl,\n      files: options.files,\n      binaryStreamOnly: options.binaryStreamOnly || false,\n      headers: options.headers || {},\n      fields: options.fields || {},\n      method: options.method || 'POST',\n      hasBeginCallback: options.begin instanceof Function || options.beginCallback instanceof Function,\n      hasProgressCallback: options.progress instanceof Function || options.progressCallback instanceof Function,\n    };\n\n    return {\n      jobId,\n      promise: RNFSManager.uploadFiles(bridgeOptions).then(res => {\n        subscriptions.forEach(sub => sub.remove());\n        return res;\n      })\n    };\n  },\n\n  touch(filepath: string, mtime?: Date, ctime?: Date): Promise<void> {\n    if (ctime && !(ctime instanceof Date)) throw new Error('touch: Invalid value for argument `ctime`');\n    if (mtime && !(mtime instanceof Date)) throw new Error('touch: Invalid value for argument `mtime`');\n    var ctimeTime = 0;\n    if (isIOS) {\n      ctimeTime = ctime && ctime.getTime();\n    }\n    return RNFSManager.touch(\n      normalizeFilePath(filepath),\n      mtime && mtime.getTime(),\n      ctimeTime\n    );\n  },\n\n  scanFile(path: string): Promise<ReadDirItem[]> {\n    return RNFSManager.scanFile(path);\n  },\n\n  MainBundlePath: RNFSManager.RNFSMainBundlePath,\n  CachesDirectoryPath: RNFSManager.RNFSCachesDirectoryPath,\n  ExternalCachesDirectoryPath: RNFSManager.RNFSExternalCachesDirectoryPath,\n  DocumentDirectoryPath: RNFSManager.RNFSDocumentDirectoryPath,\n  DownloadDirectoryPath: RNFSManager.RNFSDownloadDirectoryPath,\n  ExternalDirectoryPath: RNFSManager.RNFSExternalDirectoryPath,\n  ExternalStorageDirectoryPath: RNFSManager.RNFSExternalStorageDirectoryPath,\n  TemporaryDirectoryPath: RNFSManager.RNFSTemporaryDirectoryPath,\n  LibraryDirectoryPath: RNFSManager.RNFSLibraryDirectoryPath,\n  PicturesDirectoryPath: RNFSManager.RNFSPicturesDirectoryPath,\n  FileProtectionKeys: RNFSManager.RNFSFileProtectionKeys\n};\n\nmodule.exports = RNFS;\n"],"names":["_reactNative","require","_NativeBlobUtils","_interopRequireDefault","exports","actionViewIntent","path","mime","chooserTitle","Platform","OS","ReactNativeBlobUtil","Promise","reject","getContentIntent","addCompleteDownload","config","getSDCardDir","getSDCardApplicationDir","_fs","_Blob","_uri","_base","_createClass2","default","FetchBlobResponse","taskId","info","data","_this","_classCallCheck2","this","type","rnfbEncode","respInfo","array","headers","resolve","fs","readFile","then","blob","cType","Blob","build","URIUtil","wrap","text","base64","decode","b64","json","JSON","parse","encode","flush","unlink","session","name","add","console","warn","readStream","encoding","CanceledFetchError","_Error","message","_callSuper","_inherits2","_wrapNativeSuper2","Error","ReactNativeBlobUtilFile","_uuid","emitter","NativeEventEmitter","ReactNativeBlobUtilReadStream","bufferSize","tick","closed","_onData","_onEnd","_onError","streamId","UUID","subscription","addListener","e","_e","event","code","detail","err","remove","key","value","fn","sessions","ReactNativeBlobUtilSession","list","Array","isArray","push","i","splice","removeSession","val","ReactNativeBlobUtilWriteStream","append","id","method","toLocaleLowerCase","error","_this2","closeStream","TurboModuleRegistry","get","options","fetch","bind","_ReactNativeBlobUtilBlobResponse","_ReactNativeBlobUtilCanceledFetchError","eventEmitter","subscriptionUpload","stateEvent","partEvent","getUUID","_len","arguments","length","args","_key","promiseReject","_ref","concat","url","body","Object","keys","reduce","result","isFileURI","undefined","unwrapFileURI","_progress","_stateChange","promise","total","cacheData","toLowerCase","stat","size","Math","floor","interval","stream","open","state","status","respType","onData","chunk","noCache","onError","onEnd","progress","stateChange","uploadProgress","fetchFile","nativeMethodName","onProgress","written","onUploadProgress","onStateChange","onExpire","onPartData","isReactNativeBlobUtilPolyfill","getReactNativeBlobUtilRef","req","rawType","responseInfo","part","cancel","fileCache","addAndroidDownloads","auto","uninit","count","_len2","_key2","enableProgressReport","_len3","_key3","enableUploadProgressReport","expire","cancelRequest","log","_ReactNativeBlobUtilSession","_ReactNativeBlobUtilWriteStream","_ReactNativeBlobUtilReadStream","constants","getConstants","dirs","DocumentDir","CacheDir","PictureDir","MusicDir","MovieDir","DownloadDir","DCIMDir","SDCardDir","SDCardApplicationDir","MainBundleDir","LibraryDir","ApplicationSupportDir","LegacyPictureDir","LegacyMusicDir","LegacyMovieDir","LegacyDownloadDir","LegacyDCIMDir","LegacySDCardDir","addCode","TypeError","parseInt","lastModified","mkdir","getSession","setSession","ls","mv","dest","res","cp","writeStream","errCode","errMsg","writeFile","writeFileArray","writeFileWithTransform","readFileWithTransform","appendFile","pathForAppGroup","groupName","syncPathAppGroup","hash","algorithm","exists","exist","createFile","createFileASCII","isDir","lstat","scanFile","pairs","slice","src","start","end","p","normalize","num","max","asset","test","df","_mediacollection","_polyfill","_android","_ios","_jsonStream","_fetch","r","__esModule","t","_getRequireWildcardCache","has","n","__proto__","a","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","set","_interopRequireWildcard","_types","WeakMap","polyfill","fetchBlobForm","fetchBlob","android","ios","JSONStream","MediaCollection","presentOptionsMenu","scheme","presentPreview","openDocument","previewDocument","presentOpenInMenu","excludeFromBackupKey","_oboeBrowserMin","_XMLHttpRequest","arg","window","location","XMLHttpRequest","isRNFBPolyfill","assign","Oboe","b","c","d","f","g","apply","h","j","prototype","l","m","constructor","q","y","s","A","k","X","w","unshift","v","Y","Z","x","z","B","C","P","$","o","N","qb","emit","rb","sb","jb","D","E","F","G","H","I","J","K","L","M","O","Q","R","S","T","U","V","W","nb","on","pop","indexOf","charAt","String","fromCharCode","substring","lastIndex","exec","index","parseFloat","ob","responseText","substr","pb","onreadystatechange","abort","onprogress","mb","split","forEach","getAllResponseHeaders","readyState","setRequestHeader","port","protocol","host","withCredentials","send","setTimeout","node","bb","fb","gb","lb","kb","cb","ab","listener","un","listeners","hasListener","statusCode","jsonBody","thrown","forget","drop","ib","hb","root","header","removeListener","done","fail","source","db","stringify","Date","getTime","cached","_","RegExp","map","join","eb","self","createMediafile","fd","mediatype","createMediaFile","writeToMediafile","uri","writeToMediaFile","writeToMediafileWithTransform","copyToInternal","contenturi","destpath","getBlob","copyToMediaStore","_log","_EventTarget2","_getPrototypeOf2","_possibleConstructorReturn2","_isNativeReflectConstruct","Reflect","construct","Boolean","valueOf","Log","blobCacheDir","disable","_EventTarget","defer","multipartBoundary","_blobCreated","_onCreated","_closed","cacheName","getBlobName","isDerived","verbose","orgPath","catch","FormData","boundary","now","parts","getParts","formArray","string","createMixedBlobData","startsWith","_isReference","replace","toString","_invokeOnCreateEvent","_isDerived","contentType","resPath","debug","fns","onCreated","level","EventTarget","ref","dataArray","_loop","_i","_toConsumableArray2","Event","handlers","removeEventListener","Fetch","ReactNativeBlobUtilFetchPolyfill","blobCache","progressHandler","uploadHandler","cancelHandler","ctype","ctypeH","blobPath","scopedTask","statefulPromise","task","RNconfig","resp","close","ReactNativeBlobUtilFetchResponse","ok","bodyUsed","rnfbRespInfo","rnfbResp","buffer","str","charCodeAt","readArrayBuffer","readText","readJSON","_Blob2","File","FileReader","_readState","_result","label","_get2","_readyState","_Event2","_Event","ProgressEvent","lengthComputable","loaded","_lengthComputable","_loaded","_total","_XMLHttpRequestEventTarget","_ProgressEvent","_XMLHttpRequestEventT","upload","XMLHttpRequestEventTarget","_uriType","_response","_responseText","_responseHeaders","_responseType","_responseURL","_responseXML","_status","_statusText","_timeout","_sendFlag","_uploadStarted","_increment","_config","_headers","_cleanUp","_headerReceived","_task","responseURL","_url","_dispatchReadStateChange","HEADERS_RECEIVED","_uploadProgressEvent","dispatchEvent","_progressEvent","LOADING","match","DONE","clearEventListeners","_onDone","responseDataReady","async","user","password","_method","isJSONStreamURI","OPENED","_body","timeout","increment","binaryContentTypes","pattern","_this3","timeStamp","onabort","field","respHeaders","responseHeaders","_onreadystatechange","_onabort","_onerror","_onload","_onloadstart","_onprogress","_ontimeout","_onloadend","_File","_FileReader","_Fetch","_isEnable","_level","_name","_console","_console2","_console3","_console4","_len4","_key4","removeURIScheme","iterations","random","getEnforcing","mimeTypes","freeze","allFiles","audio","csv","doc","docx","images","pdf","plainText","ppt","pptx","video","xls","xlsx","zip","utis","extensions","windows","macos","web","_invariant","_fileTypes","_NativeDocumentPicker","types","perPlatformTypes","pickDirectory","_x","_pickDirectory","_asyncToGenerator2","params","pick","mode","allowMultiSelection","NativeDocumentPicker","pickSingle","opts","results","_options$mode","_options$copyTo","invariant","every","includes","copyTo","doPick","presentationStyle","transitionStyle","releaseSecureAccess","uris","E_DOCUMENT_PICKER_CANCELED","E_DOCUMENT_PICKER_IN_PROGRESS","isCancel","isErrorWithCode","isInProgress","errorCode","RNFSManager","RNFS_NativeEventEmitter","utf8","isIOS","RNFSFileTypeRegular","RNFSFileTypeDirectory","jobId","getJobId","normalizeFilePath","readFileGeneric","filepath","encodingOrOptions","command","contents","readDirGeneric","dirpath","files","file","ctime","mtime","isFile","isDirectory","RNFS","moveFile","destPath","copyFile","pathForBundle","bundleNamed","pathForGroup","getFSInfo","getAllExternalFilesDirs","stopDownload","resumeDownload","isResumable","stopUpload","completeHandlerIOS","readDir","readDirAssets","existsAssets","existsRes","filename","readdir","setReadable","readable","ownerOnly","originalFilepath","read","position","readFileAssets","readFileRes","copyFileAssets","copyFileRes","copyAssetsFileIOS","imageUri","width","height","scale","compression","resizeMode","copyAssetsVideoIOS","write","downloadFile","fromUrl","toFile","background","progressDivider","progressInterval","readTimeout","connectionTimeout","backgroundTimeout","subscriptions","begin","resumable","bridgeOptions","hasBeginCallback","Function","hasProgressCallback","hasResumableCallback","sub","uploadFiles","toUrl","fields","beginCallback","progressCallback","binaryStreamOnly","touch","ctimeTime","MainBundlePath","RNFSMainBundlePath","CachesDirectoryPath","RNFSCachesDirectoryPath","ExternalCachesDirectoryPath","RNFSExternalCachesDirectoryPath","DocumentDirectoryPath","RNFSDocumentDirectoryPath","DownloadDirectoryPath","RNFSDownloadDirectoryPath","ExternalDirectoryPath","RNFSExternalDirectoryPath","ExternalStorageDirectoryPath","RNFSExternalStorageDirectoryPath","TemporaryDirectoryPath","RNFSTemporaryDirectoryPath","LibraryDirectoryPath","RNFSLibraryDirectoryPath","PicturesDirectoryPath","RNFSPicturesDirectoryPath","FileProtectionKeys","RNFSFileProtectionKeys","module"],"sourceRoot":""}