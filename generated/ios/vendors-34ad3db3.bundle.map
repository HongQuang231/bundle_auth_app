{"version":3,"file":"vendors-34ad3db3.bundle","mappings":"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","sources":["webpack:///./node_modules/@react-native/assets-registry/path-support.js","webpack:///./node_modules/@react-native/assets-registry/registry.js","webpack:///./node_modules/react-native/Libraries/TurboModule/TurboModuleRegistry.js","webpack:///./node_modules/react-native/Libraries/UTFSequence.js","webpack:///./node_modules/react-native/Libraries/Utilities/Appearance.js","webpack:///./node_modules/react-native/Libraries/Utilities/BackHandler.ios.js","webpack:///./node_modules/react-native/Libraries/Utilities/DebugEnvironment.js","webpack:///./node_modules/react-native/Libraries/Utilities/DevSettings.js","webpack:///./node_modules/react-native/Libraries/Utilities/DeviceInfo.js","webpack:///./node_modules/react-native/Libraries/Utilities/Dimensions.js","webpack:///./node_modules/react-native/Libraries/Utilities/FeatureDetection.js","webpack:///./node_modules/react-native/Libraries/Utilities/GlobalPerformanceLogger.js","webpack:///./node_modules/react-native/Libraries/Utilities/HMRClientProdShim.js","webpack:///./node_modules/react-native/Libraries/Utilities/NativeAppearance.js","webpack:///./node_modules/react-native/Libraries/Utilities/NativeDeviceInfo.js","webpack:///./node_modules/react-native/Libraries/Utilities/NativePlatformConstantsIOS.js","webpack:///./node_modules/react-native/Libraries/Utilities/PerformanceLoggerContext.js","webpack:///./node_modules/react-native/Libraries/Utilities/PixelRatio.js","webpack:///./node_modules/react-native/Libraries/Utilities/Platform.ios.js","webpack:///./node_modules/react-native/Libraries/Utilities/PolyfillFunctions.js","webpack:///./node_modules/react-native/Libraries/Utilities/RCTLog.js","webpack:///./node_modules/react-native/Libraries/Utilities/SceneTracker.js","webpack:///./node_modules/react-native/Libraries/Utilities/binaryToBase64.js","webpack:///./node_modules/react-native/Libraries/Utilities/codegenNativeCommands.js","webpack:///./node_modules/react-native/Libraries/Utilities/codegenNativeComponent.js","webpack:///./node_modules/react-native/Libraries/Utilities/createPerformanceLogger.js","webpack:///./node_modules/react-native/Libraries/Utilities/deepFreezeAndThrowOnMutationInDev.js","webpack:///./node_modules/react-native/Libraries/Utilities/defineLazyObjectProperty.js","webpack:///./node_modules/react-native/Libraries/Utilities/differ/deepDiffer.js","webpack:///./node_modules/react-native/Libraries/Utilities/differ/insetsDiffer.js","webpack:///./node_modules/react-native/Libraries/Utilities/differ/matricesDiffer.js","webpack:///./node_modules/react-native/Libraries/Utilities/differ/pointsDiffer.js","webpack:///./node_modules/react-native/Libraries/Utilities/differ/sizesDiffer.js","webpack:///./node_modules/react-native/Libraries/Utilities/dismissKeyboard.js","webpack:///./node_modules/react-native/Libraries/Utilities/infoLog.js","webpack:///./node_modules/react-native/Libraries/Utilities/logError.js","webpack:///./node_modules/react-native/Libraries/Utilities/stringifySafe.js","webpack:///./node_modules/react-native/Libraries/Utilities/useColorScheme.js","webpack:///./node_modules/react-native/Libraries/Utilities/useMergeRefs.js","webpack:///./node_modules/react-native/Libraries/Utilities/useRefEffect.js","webpack:///./node_modules/react-native/Libraries/Utilities/useWindowDimensions.js","webpack:///./node_modules/react-native/Libraries/Utilities/verifyComponentAttributeEquivalence.js","webpack:///./node_modules/react-native/Libraries/Utilities/warnOnce.js","webpack:///./node_modules/react-native/Libraries/Vibration/NativeVibration.js","webpack:///./node_modules/react-native/Libraries/Vibration/Vibration.js","webpack:///./node_modules/react-native/Libraries/WebSocket/NativeWebSocketModule.js","webpack:///./node_modules/react-native/Libraries/WebSocket/WebSocket.js","webpack:///./node_modules/react-native/Libraries/WebSocket/WebSocketEvent.js","webpack:///./node_modules/react-native/Libraries/YellowBox/YellowBoxDeprecated.js","webpack:///./node_modules/react-native/Libraries/vendor/core/ErrorUtils.js","webpack:///./node_modules/react-native/Libraries/vendor/emitter/EventEmitter.js","webpack:///./node_modules/react-native/index.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict\n */\n\n'use strict';\n\nimport type {PackagerAsset} from './registry.js';\n\nconst androidScaleSuffix = {\n  '0.75': 'ldpi',\n  '1': 'mdpi',\n  '1.5': 'hdpi',\n  '2': 'xhdpi',\n  '3': 'xxhdpi',\n  '4': 'xxxhdpi',\n};\n\nconst ANDROID_BASE_DENSITY = 160;\n\n/**\n * FIXME: using number to represent discrete scale numbers is fragile in essence because of\n * floating point numbers imprecision.\n */\nfunction getAndroidAssetSuffix(scale: number): string {\n  if (scale.toString() in androidScaleSuffix) {\n    return androidScaleSuffix[scale.toString()];\n  }\n  // NOTE: Android Gradle Plugin does not fully support the nnndpi format.\n  // See https://issuetracker.google.com/issues/72884435\n  if (Number.isFinite(scale) && scale > 0) {\n    return Math.round(scale * ANDROID_BASE_DENSITY) + 'dpi';\n  }\n  throw new Error('no such scale ' + scale.toString());\n}\n\n// See https://developer.android.com/guide/topics/resources/drawable-resource.html\nconst drawableFileTypes = new Set([\n  'gif',\n  'jpeg',\n  'jpg',\n  'ktx',\n  'png',\n  'svg',\n  'webp',\n  'xml',\n]);\n\nfunction getAndroidResourceFolderName(\n  asset: PackagerAsset,\n  scale: number,\n): string | $TEMPORARY$string<'raw'> {\n  if (!drawableFileTypes.has(asset.type)) {\n    return 'raw';\n  }\n  const suffix = getAndroidAssetSuffix(scale);\n  if (!suffix) {\n    throw new Error(\n      \"Don't know which android drawable suffix to use for scale: \" +\n        scale +\n        '\\nAsset: ' +\n        JSON.stringify(asset, null, '\\t') +\n        '\\nPossible scales are:' +\n        JSON.stringify(androidScaleSuffix, null, '\\t'),\n    );\n  }\n  return 'drawable-' + suffix;\n}\n\nfunction getAndroidResourceIdentifier(asset: PackagerAsset): string {\n  return (getBasePath(asset) + '/' + asset.name)\n    .toLowerCase()\n    .replace(/\\//g, '_') // Encode folder structure in file name\n    .replace(/([^a-z0-9_])/g, '') // Remove illegal chars\n    .replace(/^assets_/, ''); // Remove \"assets_\" prefix\n}\n\nfunction getBasePath(asset: PackagerAsset): string {\n  const basePath = asset.httpServerLocation;\n  return basePath.startsWith('/') ? basePath.slice(1) : basePath;\n}\n\nmodule.exports = {\n  getAndroidResourceFolderName,\n  getAndroidResourceIdentifier,\n  getBasePath,\n};\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\n'use strict';\n\nexport type PackagerAsset = {\n  +__packager_asset: boolean,\n  +fileSystemLocation: string,\n  +httpServerLocation: string,\n  +width: ?number,\n  +height: ?number,\n  +scales: Array<number>,\n  +hash: string,\n  +name: string,\n  +type: string,\n  ...\n};\n\nconst assets: Array<PackagerAsset> = [];\n\nfunction registerAsset(asset: PackagerAsset): number {\n  // `push` returns new array length, so the first asset will\n  // get id 1 (not 0) to make the value truthy\n  return assets.push(asset);\n}\n\nfunction getAssetByID(assetId: number): PackagerAsset {\n  return assets[assetId - 1];\n}\n\nmodule.exports = {registerAsset, getAssetByID};\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nimport type {TurboModule} from './RCTExport';\n\nimport invariant from 'invariant';\n\nconst NativeModules = require('../BatchedBridge/NativeModules');\n\nconst turboModuleProxy = global.__turboModuleProxy;\n\nconst moduleLoadHistory = {\n  NativeModules: ([]: Array<string>),\n  TurboModules: ([]: Array<string>),\n  NotFound: ([]: Array<string>),\n};\n\nfunction isBridgeless() {\n  return global.RN$Bridgeless === true;\n}\n\nfunction isTurboModuleInteropEnabled() {\n  return global.RN$TurboInterop === true;\n}\n\n// TODO(154308585): Remove \"module not found\" debug info logging\nfunction shouldReportDebugInfo() {\n  return true;\n}\n\n// TODO(148943970): Consider reversing the lookup here:\n// Lookup on __turboModuleProxy, then lookup on nativeModuleProxy\nfunction requireModule<T: TurboModule>(name: string): ?T {\n  if (!isBridgeless() || isTurboModuleInteropEnabled()) {\n    // Backward compatibility layer during migration.\n    const legacyModule = NativeModules[name];\n    if (legacyModule != null) {\n      if (shouldReportDebugInfo()) {\n        moduleLoadHistory.NativeModules.push(name);\n      }\n      return ((legacyModule: $FlowFixMe): T);\n    }\n  }\n\n  if (turboModuleProxy != null) {\n    const module: ?T = turboModuleProxy(name);\n    if (module != null) {\n      if (shouldReportDebugInfo()) {\n        moduleLoadHistory.TurboModules.push(name);\n      }\n      return module;\n    }\n  }\n\n  if (shouldReportDebugInfo() && !moduleLoadHistory.NotFound.includes(name)) {\n    moduleLoadHistory.NotFound.push(name);\n  }\n  return null;\n}\n\nexport function get<T: TurboModule>(name: string): ?T {\n  return requireModule<T>(name);\n}\n\nexport function getEnforcing<T: TurboModule>(name: string): T {\n  const module = requireModule<T>(name);\n  let message =\n    `TurboModuleRegistry.getEnforcing(...): '${name}' could not be found. ` +\n    'Verify that a module by this name is registered in the native binary.';\n\n  if (shouldReportDebugInfo()) {\n    message += 'Bridgeless mode: ' + (isBridgeless() ? 'true' : 'false') + '. ';\n    message +=\n      'TurboModule interop: ' +\n      (isTurboModuleInteropEnabled() ? 'true' : 'false') +\n      '. ';\n    message += 'Modules loaded: ' + JSON.stringify(moduleLoadHistory);\n  }\n\n  invariant(module != null, message);\n  return module;\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\n'use strict';\n\nconst deepFreezeAndThrowOnMutationInDev = require('./Utilities/deepFreezeAndThrowOnMutationInDev');\n\n/**\n * A collection of Unicode sequences for various characters and emoji.\n *\n *  - More explicit than using the sequences directly in code.\n *  - Source code should be limited to ASCII.\n *  - Less chance of typos.\n */\nconst UTFSequence: {|\n  BOM: string,\n  BULLET: string,\n  BULLET_SP: string,\n  MDASH: string,\n  MDASH_SP: string,\n  MIDDOT: string,\n  MIDDOT_KATAKANA: string,\n  MIDDOT_SP: string,\n  NBSP: string,\n  NDASH: string,\n  NDASH_SP: string,\n  NEWLINE: string,\n  PIZZA: string,\n  TRIANGLE_LEFT: string,\n  TRIANGLE_RIGHT: string,\n|} = deepFreezeAndThrowOnMutationInDev({\n  BOM: '\\ufeff', // byte order mark\n  BULLET: '\\u2022', // bullet: &#8226;\n  BULLET_SP: '\\u00A0\\u2022\\u00A0', // &nbsp;&#8226;&nbsp;\n  MIDDOT: '\\u00B7', // normal middle dot: &middot;\n  MIDDOT_SP: '\\u00A0\\u00B7\\u00A0', // &nbsp;&middot;&nbsp;\n  MIDDOT_KATAKANA: '\\u30FB', // katakana middle dot\n  MDASH: '\\u2014', // em dash: &mdash;\n  MDASH_SP: '\\u00A0\\u2014\\u00A0', // &nbsp;&mdash;&nbsp;\n  NDASH: '\\u2013', // en dash: &ndash;\n  NDASH_SP: '\\u00A0\\u2013\\u00A0', // &nbsp;&ndash;&nbsp;\n  NEWLINE: '\\u000A',\n  NBSP: '\\u00A0', // non-breaking space: &nbsp;\n  PIZZA: '\\uD83C\\uDF55',\n  TRIANGLE_LEFT: '\\u25c0', // black left-pointing triangle\n  TRIANGLE_RIGHT: '\\u25b6', // black right-pointing triangle\n});\n\nexport default UTFSequence;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\nimport NativeEventEmitter from '../EventEmitter/NativeEventEmitter';\nimport Platform from '../Utilities/Platform';\nimport EventEmitter, {\n  type EventSubscription,\n} from '../vendor/emitter/EventEmitter';\nimport {isAsyncDebugging} from './DebugEnvironment';\nimport NativeAppearance, {\n  type AppearancePreferences,\n  type ColorSchemeName,\n} from './NativeAppearance';\nimport invariant from 'invariant';\n\ntype AppearanceListener = (preferences: AppearancePreferences) => void;\nconst eventEmitter = new EventEmitter<{\n  change: [AppearancePreferences],\n}>();\n\ntype NativeAppearanceEventDefinitions = {\n  appearanceChanged: [AppearancePreferences],\n};\n\nif (NativeAppearance) {\n  const nativeEventEmitter =\n    new NativeEventEmitter<NativeAppearanceEventDefinitions>(\n      // T88715063: NativeEventEmitter only used this parameter on iOS. Now it uses it on all platforms, so this code was modified automatically to preserve its behavior\n      // If you want to use the native module on other platforms, please remove this condition and test its behavior\n      Platform.OS !== 'ios' ? null : NativeAppearance,\n    );\n  nativeEventEmitter.addListener(\n    'appearanceChanged',\n    (newAppearance: AppearancePreferences) => {\n      const {colorScheme} = newAppearance;\n      invariant(\n        colorScheme === 'dark' ||\n          colorScheme === 'light' ||\n          colorScheme == null,\n        \"Unrecognized color scheme. Did you mean 'dark' or 'light'?\",\n      );\n      eventEmitter.emit('change', {colorScheme});\n    },\n  );\n}\n\nmodule.exports = {\n  /**\n   * Note: Although color scheme is available immediately, it may change at any\n   * time. Any rendering logic or styles that depend on this should try to call\n   * this function on every render, rather than caching the value (for example,\n   * using inline styles rather than setting a value in a `StyleSheet`).\n   *\n   * Example: `const colorScheme = Appearance.getColorScheme();`\n   *\n   * @returns {?ColorSchemeName} Value for the color scheme preference.\n   */\n  getColorScheme(): ?ColorSchemeName {\n    if (__DEV__) {\n      if (isAsyncDebugging) {\n        // Hard code light theme when using the async debugger as\n        // sync calls aren't supported\n        return 'light';\n      }\n    }\n\n    // TODO: (hramos) T52919652 Use ?ColorSchemeName once codegen supports union\n    const nativeColorScheme: ?string =\n      NativeAppearance == null\n        ? null\n        : NativeAppearance.getColorScheme() || null;\n    invariant(\n      nativeColorScheme === 'dark' ||\n        nativeColorScheme === 'light' ||\n        nativeColorScheme == null,\n      \"Unrecognized color scheme. Did you mean 'dark' or 'light'?\",\n    );\n    return nativeColorScheme;\n  },\n\n  setColorScheme(colorScheme: ?ColorSchemeName): void {\n    const nativeColorScheme = colorScheme == null ? 'unspecified' : colorScheme;\n\n    invariant(\n      colorScheme === 'dark' || colorScheme === 'light' || colorScheme == null,\n      \"Unrecognized color scheme. Did you mean 'dark', 'light' or null?\",\n    );\n\n    if (NativeAppearance != null && NativeAppearance.setColorScheme != null) {\n      NativeAppearance.setColorScheme(nativeColorScheme);\n    }\n  },\n\n  /**\n   * Add an event handler that is fired when appearance preferences change.\n   */\n  addChangeListener(listener: AppearanceListener): EventSubscription {\n    return eventEmitter.addListener('change', listener);\n  },\n};\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\nmodule.exports = require('../Components/UnimplementedViews/UnimplementedView');\n\ntype BackPressEventName = 'backPress' | 'hardwareBackPress';\n\nfunction emptyFunction(): void {}\n\ntype TBackHandler = {|\n  +exitApp: () => void,\n  +addEventListener: (\n    eventName: BackPressEventName,\n    handler: () => ?boolean,\n  ) => {remove: () => void, ...},\n  +removeEventListener: (\n    eventName: BackPressEventName,\n    handler: () => ?boolean,\n  ) => void,\n|};\n\nlet BackHandler: TBackHandler = {\n  exitApp: emptyFunction,\n  addEventListener(_eventName: BackPressEventName, _handler: Function) {\n    return {\n      remove: emptyFunction,\n    };\n  },\n  removeEventListener(_eventName: BackPressEventName, _handler: Function) {},\n};\n\nmodule.exports = BackHandler;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict\n */\n\nexport let isAsyncDebugging: boolean = false;\n\nif (__DEV__) {\n  // These native interfaces don't exist in asynchronous debugging environments.\n  isAsyncDebugging = !global.nativeCallSyncHook && !global.RN$Bridgeless;\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport type {EventSubscription} from '../vendor/emitter/EventEmitter';\n\nimport NativeEventEmitter from '../EventEmitter/NativeEventEmitter';\nimport NativeDevSettings from '../NativeModules/specs/NativeDevSettings';\nimport Platform from '../Utilities/Platform';\n\nlet DevSettings: {\n  addMenuItem(title: string, handler: () => mixed): void,\n  reload(reason?: string): void,\n  onFastRefresh(): void,\n} = {\n  addMenuItem(title: string, handler: () => mixed): void {},\n  reload(reason?: string): void {},\n  onFastRefresh(): void {},\n};\n\ntype DevSettingsEventDefinitions = {\n  didPressMenuItem: [{title: string}],\n};\n\nif (__DEV__) {\n  const emitter = new NativeEventEmitter<DevSettingsEventDefinitions>(\n    // T88715063: NativeEventEmitter only used this parameter on iOS. Now it uses it on all platforms, so this code was modified automatically to preserve its behavior\n    // If you want to use the native module on other platforms, please remove this condition and test its behavior\n    Platform.OS !== 'ios' ? null : NativeDevSettings,\n  );\n  const subscriptions = new Map<string, EventSubscription>();\n\n  DevSettings = {\n    addMenuItem(title: string, handler: () => mixed): void {\n      // Make sure items are not added multiple times. This can\n      // happen when hot reloading the module that registers the\n      // menu items. The title is used as the id which means we\n      // don't support multiple items with the same name.\n      let subscription = subscriptions.get(title);\n      if (subscription != null) {\n        subscription.remove();\n      } else {\n        NativeDevSettings.addMenuItem(title);\n      }\n\n      subscription = emitter.addListener('didPressMenuItem', event => {\n        if (event.title === title) {\n          handler();\n        }\n      });\n      subscriptions.set(title, subscription);\n    },\n    reload(reason?: string): void {\n      if (NativeDevSettings.reloadWithReason != null) {\n        NativeDevSettings.reloadWithReason(reason ?? 'Uncategorized from JS');\n      } else {\n        NativeDevSettings.reload();\n      }\n    },\n    onFastRefresh(): void {\n      NativeDevSettings.onFastRefresh?.();\n    },\n  };\n}\n\nmodule.exports = DevSettings;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\nimport NativeDeviceInfo from './NativeDeviceInfo';\n\nmodule.exports = NativeDeviceInfo;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\nimport RCTDeviceEventEmitter from '../EventEmitter/RCTDeviceEventEmitter';\nimport EventEmitter, {\n  type EventSubscription,\n} from '../vendor/emitter/EventEmitter';\nimport NativeDeviceInfo, {\n  type DimensionsPayload,\n  type DisplayMetrics,\n  type DisplayMetricsAndroid,\n} from './NativeDeviceInfo';\nimport invariant from 'invariant';\n\nconst eventEmitter = new EventEmitter<{\n  change: [DimensionsPayload],\n}>();\nlet dimensionsInitialized = false;\nlet dimensions: DimensionsPayload;\n\nclass Dimensions {\n  /**\n   * NOTE: `useWindowDimensions` is the preferred API for React components.\n   *\n   * Initial dimensions are set before `runApplication` is called so they should\n   * be available before any other require's are run, but may be updated later.\n   *\n   * Note: Although dimensions are available immediately, they may change (e.g\n   * due to device rotation) so any rendering logic or styles that depend on\n   * these constants should try to call this function on every render, rather\n   * than caching the value (for example, using inline styles rather than\n   * setting a value in a `StyleSheet`).\n   *\n   * Example: `const {height, width} = Dimensions.get('window');`\n   *\n   * @param {string} dim Name of dimension as defined when calling `set`.\n   * @returns {DisplayMetrics? | DisplayMetricsAndroid?} Value for the dimension.\n   */\n  static get(dim: string): DisplayMetrics | DisplayMetricsAndroid {\n    invariant(dimensions[dim], 'No dimension set for key ' + dim);\n    return dimensions[dim];\n  }\n\n  /**\n   * This should only be called from native code by sending the\n   * didUpdateDimensions event.\n   *\n   * @param {DimensionsPayload} dims Simple string-keyed object of dimensions to set\n   */\n  static set(dims: $ReadOnly<DimensionsPayload>): void {\n    // We calculate the window dimensions in JS so that we don't encounter loss of\n    // precision in transferring the dimensions (which could be non-integers) over\n    // the bridge.\n    let {screen, window} = dims;\n    const {windowPhysicalPixels} = dims;\n    if (windowPhysicalPixels) {\n      window = {\n        width: windowPhysicalPixels.width / windowPhysicalPixels.scale,\n        height: windowPhysicalPixels.height / windowPhysicalPixels.scale,\n        scale: windowPhysicalPixels.scale,\n        fontScale: windowPhysicalPixels.fontScale,\n      };\n    }\n    const {screenPhysicalPixels} = dims;\n    if (screenPhysicalPixels) {\n      screen = {\n        width: screenPhysicalPixels.width / screenPhysicalPixels.scale,\n        height: screenPhysicalPixels.height / screenPhysicalPixels.scale,\n        scale: screenPhysicalPixels.scale,\n        fontScale: screenPhysicalPixels.fontScale,\n      };\n    } else if (screen == null) {\n      screen = window;\n    }\n\n    dimensions = {window, screen};\n    if (dimensionsInitialized) {\n      // Don't fire 'change' the first time the dimensions are set.\n      eventEmitter.emit('change', dimensions);\n    } else {\n      dimensionsInitialized = true;\n    }\n  }\n\n  /**\n   * Add an event handler. Supported events:\n   *\n   * - `change`: Fires when a property within the `Dimensions` object changes. The argument\n   *   to the event handler is an object with `window` and `screen` properties whose values\n   *   are the same as the return values of `Dimensions.get('window')` and\n   *   `Dimensions.get('screen')`, respectively.\n   */\n  static addEventListener(\n    type: 'change',\n    handler: Function,\n  ): EventSubscription {\n    invariant(\n      type === 'change',\n      'Trying to subscribe to unknown event: \"%s\"',\n      type,\n    );\n    return eventEmitter.addListener(type, handler);\n  }\n}\n\n// Subscribe before calling getConstants to make sure we don't miss any updates in between.\nRCTDeviceEventEmitter.addListener(\n  'didUpdateDimensions',\n  (update: DimensionsPayload) => {\n    Dimensions.set(update);\n  },\n);\nDimensions.set(NativeDeviceInfo.getConstants().Dimensions);\n\nexport default Dimensions;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\n/**\n * @return whether or not a @param {function} f is provided natively by calling\n * `toString` and check if the result includes `[native code]` in it.\n *\n * Note that a polyfill can technically fake this behavior but few does it.\n * Therefore, this is usually good enough for our purpose.\n */\nfunction isNativeFunction(f: Function): boolean {\n  return typeof f === 'function' && f.toString().indexOf('[native code]') > -1;\n}\n\n/**\n * @return whether or not the constructor of @param {object} o is an native\n * function named with @param {string} expectedName.\n */\nfunction hasNativeConstructor(o: Object, expectedName: string): boolean {\n  const con = Object.getPrototypeOf(o).constructor;\n  return con.name === expectedName && isNativeFunction(con);\n}\n\nmodule.exports = {isNativeFunction, hasNativeConstructor};\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nimport type {IPerformanceLogger} from './createPerformanceLogger';\n\nimport createPerformanceLogger from './createPerformanceLogger';\n\n/**\n * This is a global shared instance of IPerformanceLogger that is created with\n * createPerformanceLogger().\n * This logger should be used only for global performance metrics like the ones\n * that are logged during loading bundle. If you want to log something from your\n * React component you should use PerformanceLoggerContext instead.\n */\nconst GlobalPerformanceLogger: IPerformanceLogger = createPerformanceLogger();\n\nmodule.exports = GlobalPerformanceLogger;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\n'use strict';\n\nimport type {HMRClientNativeInterface} from './HMRClient';\n\n// This shim ensures DEV binary builds don't crash in JS\n// when they're combined with a PROD JavaScript build.\nconst HMRClientProdShim: HMRClientNativeInterface = {\n  setup() {},\n  enable() {\n    console.error(\n      'Fast Refresh is disabled in JavaScript bundles built in production mode. ' +\n        'Did you forget to run Metro?',\n    );\n  },\n  disable() {},\n  registerBundle() {},\n  log() {},\n};\n\nmodule.exports = HMRClientProdShim;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nexport type * from '../../src/private/specs/modules/NativeAppearance';\nimport NativeAppearance from '../../src/private/specs/modules/NativeAppearance';\nexport default NativeAppearance;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nexport * from '../../src/private/specs/modules/NativeDeviceInfo';\nimport NativeDeviceInfo from '../../src/private/specs/modules/NativeDeviceInfo';\nexport default NativeDeviceInfo;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nexport * from '../../src/private/specs/modules/NativePlatformConstantsIOS';\nimport NativePlatformConstantsIOS from '../../src/private/specs/modules/NativePlatformConstantsIOS';\nexport default NativePlatformConstantsIOS;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nimport type {IPerformanceLogger} from './createPerformanceLogger';\n\nimport GlobalPerformanceLogger from './GlobalPerformanceLogger';\nimport * as React from 'react';\nimport {useContext} from 'react';\n\n/**\n * This is a React Context that provides a scoped instance of IPerformanceLogger.\n * We wrap every <AppContainer /> with a Provider for this context so the logger\n * should be available in every component.\n * See React docs about using Context: https://react.dev/docs/context.html\n */\nconst PerformanceLoggerContext: React.Context<IPerformanceLogger> =\n  React.createContext(GlobalPerformanceLogger);\nif (__DEV__) {\n  PerformanceLoggerContext.displayName = 'PerformanceLoggerContext';\n}\n\nexport function usePerformanceLogger(): IPerformanceLogger {\n  return useContext(PerformanceLoggerContext);\n}\n\nexport default PerformanceLoggerContext;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\n'use strict';\n\nconst Dimensions = require('./Dimensions').default;\n\n/**\n * PixelRatio class gives access to the device pixel density.\n *\n * ## Fetching a correctly sized image\n *\n * You should get a higher resolution image if you are on a high pixel density\n * device. A good rule of thumb is to multiply the size of the image you display\n * by the pixel ratio.\n *\n * ```\n * var image = getImage({\n *   width: PixelRatio.getPixelSizeForLayoutSize(200),\n *   height: PixelRatio.getPixelSizeForLayoutSize(100),\n * });\n * <Image source={image} style={{width: 200, height: 100}} />\n * ```\n *\n * ## Pixel grid snapping\n *\n * In iOS, you can specify positions and dimensions for elements with arbitrary\n * precision, for example 29.674825. But, ultimately the physical display only\n * have a fixed number of pixels, for example 640×960 for iPhone 4 or 750×1334\n * for iPhone 6. iOS tries to be as faithful as possible to the user value by\n * spreading one original pixel into multiple ones to trick the eye. The\n * downside of this technique is that it makes the resulting element look\n * blurry.\n *\n * In practice, we found out that developers do not want this feature and they\n * have to work around it by doing manual rounding in order to avoid having\n * blurry elements. In React Native, we are rounding all the pixels\n * automatically.\n *\n * We have to be careful when to do this rounding. You never want to work with\n * rounded and unrounded values at the same time as you're going to accumulate\n * rounding errors. Having even one rounding error is deadly because a one\n * pixel border may vanish or be twice as big.\n *\n * In React Native, everything in JavaScript and within the layout engine works\n * with arbitrary precision numbers. It's only when we set the position and\n * dimensions of the native element on the main thread that we round. Also,\n * rounding is done relative to the root rather than the parent, again to avoid\n * accumulating rounding errors.\n *\n */\nclass PixelRatio {\n  /**\n   * Returns the device pixel density. Some examples:\n   *\n   *   - PixelRatio.get() === 1\n   *     - mdpi Android devices (160 dpi)\n   *   - PixelRatio.get() === 1.5\n   *     - hdpi Android devices (240 dpi)\n   *   - PixelRatio.get() === 2\n   *     - iPhone 4, 4S\n   *     - iPhone 5, 5c, 5s\n   *     - iPhone 6\n   *     - iPhone 7\n   *     - iPhone 8\n   *     - iPhone SE\n   *     - xhdpi Android devices (320 dpi)\n   *   - PixelRatio.get() === 3\n   *     - iPhone 6 Plus\n   *     - iPhone 7 Plus\n   *     - iPhone 8 Plus\n   *     - iPhone X\n   *     - xxhdpi Android devices (480 dpi)\n   *   - PixelRatio.get() === 3.5\n   *     - Nexus 6\n   */\n  static get(): number {\n    return Dimensions.get('window').scale;\n  }\n\n  /**\n   * Returns the scaling factor for font sizes. This is the ratio that is used to calculate the\n   * absolute font size, so any elements that heavily depend on that should use this to do\n   * calculations.\n   *\n   * If a font scale is not set, this returns the device pixel ratio.\n   *\n   * This reflects the user preference set in:\n   *  - Settings > Display > Font size on Android,\n   *  - Settings > Display & Brightness > Text Size on iOS.\n   */\n  static getFontScale(): number {\n    return Dimensions.get('window').fontScale || PixelRatio.get();\n  }\n\n  /**\n   * Converts a layout size (dp) to pixel size (px).\n   *\n   * Guaranteed to return an integer number.\n   */\n  static getPixelSizeForLayoutSize(layoutSize: number): number {\n    return Math.round(layoutSize * PixelRatio.get());\n  }\n\n  /**\n   * Rounds a layout size (dp) to the nearest layout size that corresponds to\n   * an integer number of pixels. For example, on a device with a PixelRatio\n   * of 3, `PixelRatio.roundToNearestPixel(8.4) = 8.33`, which corresponds to\n   * exactly (8.33 * 3) = 25 pixels.\n   */\n  static roundToNearestPixel(layoutSize: number): number {\n    const ratio = PixelRatio.get();\n    return Math.round(layoutSize * ratio) / ratio;\n  }\n\n  // No-op for iOS, but used on the web. Should not be documented.\n  static startDetecting() {}\n}\n\nexport default PixelRatio;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict\n */\n\nimport type {\n  Platform as PlatformType,\n  PlatformSelectSpec,\n} from './Platform.flow';\n\nimport NativePlatformConstantsIOS from './NativePlatformConstantsIOS';\n\nconst Platform: PlatformType = {\n  __constants: null,\n  OS: 'ios',\n  // $FlowFixMe[unsafe-getters-setters]\n  get Version(): string {\n    // $FlowFixMe[object-this-reference]\n    return this.constants.osVersion;\n  },\n  // $FlowFixMe[unsafe-getters-setters]\n  get constants(): {|\n    forceTouchAvailable: boolean,\n    interfaceIdiom: string,\n    isTesting: boolean,\n    isDisableAnimations?: boolean,\n    osVersion: string,\n    reactNativeVersion: {|\n      major: number,\n      minor: number,\n      patch: number,\n      prerelease: ?number,\n    |},\n    systemName: string,\n    isMacCatalyst?: boolean,\n  |} {\n    // $FlowFixMe[object-this-reference]\n    if (this.__constants == null) {\n      // $FlowFixMe[object-this-reference]\n      this.__constants = NativePlatformConstantsIOS.getConstants();\n    }\n    // $FlowFixMe[object-this-reference]\n    return this.__constants;\n  },\n  // $FlowFixMe[unsafe-getters-setters]\n  get isPad(): boolean {\n    // $FlowFixMe[object-this-reference]\n    return this.constants.interfaceIdiom === 'pad';\n  },\n  // $FlowFixMe[unsafe-getters-setters]\n  get isTV(): boolean {\n    // $FlowFixMe[object-this-reference]\n    return this.constants.interfaceIdiom === 'tv';\n  },\n  // $FlowFixMe[unsafe-getters-setters]\n  get isVision(): boolean {\n    // $FlowFixMe[object-this-reference]\n    return this.constants.interfaceIdiom === 'vision';\n  },\n  // $FlowFixMe[unsafe-getters-setters]\n  get isTesting(): boolean {\n    if (__DEV__) {\n      // $FlowFixMe[object-this-reference]\n      return this.constants.isTesting;\n    }\n    return false;\n  },\n  // $FlowFixMe[unsafe-getters-setters]\n  get isDisableAnimations(): boolean {\n    // $FlowFixMe[object-this-reference]\n    return this.constants.isDisableAnimations ?? this.isTesting;\n  },\n  // $FlowFixMe[unsafe-getters-setters]\n  get isMacCatalyst(): boolean {\n    // $FlowFixMe[object-this-reference]\n    return this.constants.isMacCatalyst ?? false;\n  },\n  select: <T>(spec: PlatformSelectSpec<T>): T =>\n    // $FlowFixMe[incompatible-return]\n    'ios' in spec ? spec.ios : 'native' in spec ? spec.native : spec.default,\n};\n\nmodule.exports = Platform;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\n'use strict';\n\nconst defineLazyObjectProperty = require('./defineLazyObjectProperty');\n\n/**\n * Sets an object's property. If a property with the same name exists, this will\n * replace it but maintain its descriptor configuration. The property will be\n * replaced with a lazy getter.\n *\n * In DEV mode the original property value will be preserved as `original[PropertyName]`\n * so that, if necessary, it can be restored. For example, if you want to route\n * network requests through DevTools (to trace them):\n *\n *   global.XMLHttpRequest = global.originalXMLHttpRequest;\n *\n * @see https://github.com/facebook/react-native/issues/934\n */\nfunction polyfillObjectProperty<T>(\n  object: {...},\n  name: string,\n  getValue: () => T,\n): void {\n  const descriptor = Object.getOwnPropertyDescriptor<$FlowFixMe>(object, name);\n  if (__DEV__ && descriptor) {\n    const backupName = `original${name[0].toUpperCase()}${name.slice(1)}`;\n    Object.defineProperty(object, backupName, descriptor);\n  }\n\n  const {enumerable, writable, configurable = false} = descriptor || {};\n  if (descriptor && !configurable) {\n    console.error('Failed to set polyfill. ' + name + ' is not configurable.');\n    return;\n  }\n\n  defineLazyObjectProperty(object, name, {\n    get: getValue,\n    enumerable: enumerable !== false,\n    writable: writable !== false,\n  });\n}\n\nfunction polyfillGlobal<T>(name: string, getValue: () => T): void {\n  polyfillObjectProperty(global, name, getValue);\n}\n\nmodule.exports = {polyfillObjectProperty, polyfillGlobal};\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict\n */\n\n'use strict';\n\nconst invariant = require('invariant');\n\nconst levelsMap = {\n  log: 'log',\n  info: 'info',\n  warn: 'warn',\n  error: 'error',\n  fatal: 'error',\n};\n\nlet warningHandler: ?(...Array<mixed>) => void = null;\n\nconst RCTLog = {\n  // level one of log, info, warn, error, mustfix\n  logIfNoNativeHook(level: string, ...args: Array<mixed>): void {\n    // We already printed in the native console, so only log here if using a js debugger\n    if (typeof global.nativeLoggingHook === 'undefined') {\n      RCTLog.logToConsole(level, ...args);\n    } else {\n      // Report native warnings to LogBox\n      if (warningHandler && level === 'warn') {\n        warningHandler(...args);\n      }\n    }\n  },\n\n  // Log to console regardless of nativeLoggingHook\n  logToConsole(level: string, ...args: Array<mixed>): void {\n    const logFn = levelsMap[level];\n    invariant(\n      logFn,\n      'Level \"' + level + '\" not one of ' + Object.keys(levelsMap).toString(),\n    );\n\n    console[logFn](...args);\n  },\n\n  setWarningHandler(handler: typeof warningHandler): void {\n    warningHandler = handler;\n  },\n};\n\nmodule.exports = RCTLog;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict\n */\n\n'use strict';\n\nexport type Scene = {name: string, [string]: mixed, ...};\n\nlet _listeners: Array<(scene: Scene) => void> = [];\n\nlet _activeScene = {name: 'default'};\n\nconst SceneTracker = {\n  setActiveScene(scene: Scene) {\n    _activeScene = scene;\n    _listeners.forEach(listener => listener(_activeScene));\n  },\n\n  getActiveScene(): Scene {\n    return _activeScene;\n  },\n\n  addActiveSceneChangedListener(callback: (scene: Scene) => void): {\n    remove: () => void,\n    ...\n  } {\n    _listeners.push(callback);\n    return {\n      remove: () => {\n        _listeners = _listeners.filter(listener => callback !== listener);\n      },\n    };\n  },\n};\n\nmodule.exports = SceneTracker;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict\n */\n\n'use strict';\n\nconst base64 = require('base64-js');\n\nfunction binaryToBase64(data: ArrayBuffer | $ArrayBufferView): string {\n  if (data instanceof ArrayBuffer) {\n    // $FlowFixMe[reassign-const]\n    data = new Uint8Array(data);\n  }\n  if (data instanceof Uint8Array) {\n    return base64.fromByteArray(data);\n  }\n  if (!ArrayBuffer.isView(data)) {\n    throw new Error('data must be ArrayBuffer or typed array');\n  }\n  // Already checked that `data` is `DataView` in `ArrayBuffer.isView(data)`\n  const {buffer, byteOffset, byteLength}: DataView = (data: $FlowFixMe);\n  return base64.fromByteArray(new Uint8Array(buffer, byteOffset, byteLength));\n}\n\nmodule.exports = binaryToBase64;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\nconst {dispatchCommand} = require('../ReactNative/RendererProxy');\n\ntype Options<T = string> = $ReadOnly<{|\n  supportedCommands: $ReadOnlyArray<T>,\n|}>;\n\nfunction codegenNativeCommands<T: interface {}>(options: Options<$Keys<T>>): T {\n  const commandObj: {[$Keys<T>]: (...$ReadOnlyArray<mixed>) => void} = {};\n\n  options.supportedCommands.forEach(command => {\n    // $FlowFixMe[missing-local-annot]\n    commandObj[command] = (ref, ...args) => {\n      // $FlowFixMe[incompatible-call]\n      dispatchCommand(ref, command, args);\n    };\n  });\n\n  return ((commandObj: any): T);\n}\n\nexport default codegenNativeCommands;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\n// TODO: move this file to shims/ReactNative (requires React update and sync)\n\nimport type {HostComponent} from '../../Libraries/Renderer/shims/ReactNativeTypes';\n\nimport requireNativeComponent from '../../Libraries/ReactNative/requireNativeComponent';\nimport UIManager from '../ReactNative/UIManager';\n\n// TODO: import from CodegenSchema once workspaces are enabled\ntype Options = $ReadOnly<{|\n  interfaceOnly?: boolean,\n  paperComponentName?: string,\n  paperComponentNameDeprecated?: string,\n  excludedPlatforms?: $ReadOnlyArray<'iOS' | 'android'>,\n|}>;\n\nexport type NativeComponentType<T> = HostComponent<T>;\n\n// If this function runs then that means the view configs were not\n// generated at build time using `GenerateViewConfigJs.js`. Thus\n// we need to `requireNativeComponent` to get the view configs from view managers.\n// `requireNativeComponent` is not available in Bridgeless mode.\n// e.g. This function runs at runtime if `codegenNativeComponent` was not called\n// from a file suffixed with NativeComponent.js.\nfunction codegenNativeComponent<Props>(\n  componentName: string,\n  options?: Options,\n): NativeComponentType<Props> {\n  if (global.RN$Bridgeless === true && __DEV__) {\n    console.warn(\n      `Codegen didn't run for ${componentName}. This will be an error in the future. Make sure you are using @react-native/babel-preset when building your JavaScript code.`,\n    );\n  }\n\n  let componentNameInUse =\n    options && options.paperComponentName != null\n      ? options.paperComponentName\n      : componentName;\n\n  if (options != null && options.paperComponentNameDeprecated != null) {\n    if (UIManager.hasViewManagerConfig(componentName)) {\n      componentNameInUse = componentName;\n    } else if (\n      options.paperComponentNameDeprecated != null &&\n      UIManager.hasViewManagerConfig(options.paperComponentNameDeprecated)\n    ) {\n      // $FlowFixMe[incompatible-type]\n      componentNameInUse = options.paperComponentNameDeprecated;\n    } else {\n      throw new Error(\n        `Failed to find native component for either ${componentName} or ${\n          options.paperComponentNameDeprecated ?? '(unknown)'\n        }`,\n      );\n    }\n  }\n\n  return (requireNativeComponent<Props>(\n    // $FlowFixMe[incompatible-call]\n    componentNameInUse,\n  ): HostComponent<Props>);\n}\n\nexport default codegenNativeComponent;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nimport type {\n  Extras,\n  ExtraValue,\n  IPerformanceLogger,\n  Timespan,\n} from './IPerformanceLogger';\n\nimport * as Systrace from '../Performance/Systrace';\nimport infoLog from './infoLog';\n\nconst _cookies: {[key: string]: number, ...} = {};\n\nconst PRINT_TO_CONSOLE: false = false; // Type as false to prevent accidentally committing `true`;\n\nexport const getCurrentTimestamp: () => number =\n  global.nativeQPLTimestamp ?? (() => global.performance.now());\n\nclass PerformanceLogger implements IPerformanceLogger {\n  _timespans: {[key: string]: ?Timespan} = {};\n  _extras: {[key: string]: ?ExtraValue} = {};\n  _points: {[key: string]: ?number} = {};\n  _pointExtras: {[key: string]: ?Extras, ...} = {};\n  _closed: boolean = false;\n\n  addTimespan(\n    key: string,\n    startTime: number,\n    endTime: number,\n    startExtras?: Extras,\n    endExtras?: Extras,\n  ) {\n    if (this._closed) {\n      if (PRINT_TO_CONSOLE && __DEV__) {\n        infoLog('PerformanceLogger: addTimespan - has closed ignoring: ', key);\n      }\n      return;\n    }\n    if (this._timespans[key]) {\n      if (PRINT_TO_CONSOLE && __DEV__) {\n        infoLog(\n          'PerformanceLogger: Attempting to add a timespan that already exists ',\n          key,\n        );\n      }\n      return;\n    }\n\n    this._timespans[key] = {\n      startTime,\n      endTime,\n      totalTime: endTime - (startTime || 0),\n      startExtras,\n      endExtras,\n    };\n  }\n\n  append(performanceLogger: IPerformanceLogger) {\n    this._timespans = {\n      ...performanceLogger.getTimespans(),\n      ...this._timespans,\n    };\n    this._extras = {...performanceLogger.getExtras(), ...this._extras};\n    this._points = {...performanceLogger.getPoints(), ...this._points};\n    this._pointExtras = {\n      ...performanceLogger.getPointExtras(),\n      ...this._pointExtras,\n    };\n  }\n\n  clear() {\n    this._timespans = {};\n    this._extras = {};\n    this._points = {};\n    if (PRINT_TO_CONSOLE) {\n      infoLog('PerformanceLogger.js', 'clear');\n    }\n  }\n\n  clearCompleted() {\n    for (const key in this._timespans) {\n      if (this._timespans[key]?.totalTime != null) {\n        delete this._timespans[key];\n      }\n    }\n    this._extras = {};\n    this._points = {};\n    if (PRINT_TO_CONSOLE) {\n      infoLog('PerformanceLogger.js', 'clearCompleted');\n    }\n  }\n\n  close() {\n    this._closed = true;\n  }\n\n  currentTimestamp(): number {\n    return getCurrentTimestamp();\n  }\n\n  getExtras(): {[key: string]: ?ExtraValue} {\n    return this._extras;\n  }\n\n  getPoints(): {[key: string]: ?number} {\n    return this._points;\n  }\n\n  getPointExtras(): {[key: string]: ?Extras} {\n    return this._pointExtras;\n  }\n\n  getTimespans(): {[key: string]: ?Timespan} {\n    return this._timespans;\n  }\n\n  hasTimespan(key: string): boolean {\n    return !!this._timespans[key];\n  }\n\n  isClosed(): boolean {\n    return this._closed;\n  }\n\n  logEverything() {\n    if (PRINT_TO_CONSOLE) {\n      // log timespans\n      for (const key in this._timespans) {\n        if (this._timespans[key]?.totalTime != null) {\n          infoLog(key + ': ' + this._timespans[key].totalTime + 'ms');\n        }\n      }\n\n      // log extras\n      infoLog(this._extras);\n\n      // log points\n      for (const key in this._points) {\n        if (this._points[key] != null) {\n          infoLog(key + ': ' + this._points[key] + 'ms');\n        }\n      }\n    }\n  }\n\n  markPoint(\n    key: string,\n    timestamp?: number = getCurrentTimestamp(),\n    extras?: Extras,\n  ) {\n    if (this._closed) {\n      if (PRINT_TO_CONSOLE && __DEV__) {\n        infoLog('PerformanceLogger: markPoint - has closed ignoring: ', key);\n      }\n      return;\n    }\n    if (this._points[key] != null) {\n      if (PRINT_TO_CONSOLE && __DEV__) {\n        infoLog(\n          'PerformanceLogger: Attempting to mark a point that has been already logged ',\n          key,\n        );\n      }\n      return;\n    }\n    this._points[key] = timestamp;\n    if (extras) {\n      this._pointExtras[key] = extras;\n    }\n  }\n\n  removeExtra(key: string): ?ExtraValue {\n    const value = this._extras[key];\n    delete this._extras[key];\n    return value;\n  }\n\n  setExtra(key: string, value: ExtraValue) {\n    if (this._closed) {\n      if (PRINT_TO_CONSOLE && __DEV__) {\n        infoLog('PerformanceLogger: setExtra - has closed ignoring: ', key);\n      }\n      return;\n    }\n\n    if (this._extras.hasOwnProperty(key)) {\n      if (PRINT_TO_CONSOLE && __DEV__) {\n        infoLog(\n          'PerformanceLogger: Attempting to set an extra that already exists ',\n          {key, currentValue: this._extras[key], attemptedValue: value},\n        );\n      }\n      return;\n    }\n    this._extras[key] = value;\n  }\n\n  startTimespan(\n    key: string,\n    timestamp?: number = getCurrentTimestamp(),\n    extras?: Extras,\n  ) {\n    if (this._closed) {\n      if (PRINT_TO_CONSOLE && __DEV__) {\n        infoLog(\n          'PerformanceLogger: startTimespan - has closed ignoring: ',\n          key,\n        );\n      }\n      return;\n    }\n\n    if (this._timespans[key]) {\n      if (PRINT_TO_CONSOLE && __DEV__) {\n        infoLog(\n          'PerformanceLogger: Attempting to start a timespan that already exists ',\n          key,\n        );\n      }\n      return;\n    }\n\n    this._timespans[key] = {\n      startTime: timestamp,\n      startExtras: extras,\n    };\n    _cookies[key] = Systrace.beginAsyncEvent(key);\n    if (PRINT_TO_CONSOLE) {\n      infoLog('PerformanceLogger.js', 'start: ' + key);\n    }\n  }\n\n  stopTimespan(\n    key: string,\n    timestamp?: number = getCurrentTimestamp(),\n    extras?: Extras,\n  ) {\n    if (this._closed) {\n      if (PRINT_TO_CONSOLE && __DEV__) {\n        infoLog('PerformanceLogger: stopTimespan - has closed ignoring: ', key);\n      }\n      return;\n    }\n\n    const timespan = this._timespans[key];\n    if (!timespan || timespan.startTime == null) {\n      if (PRINT_TO_CONSOLE && __DEV__) {\n        infoLog(\n          'PerformanceLogger: Attempting to end a timespan that has not started ',\n          key,\n        );\n      }\n      return;\n    }\n    if (timespan.endTime != null) {\n      if (PRINT_TO_CONSOLE && __DEV__) {\n        infoLog(\n          'PerformanceLogger: Attempting to end a timespan that has already ended ',\n          key,\n        );\n      }\n      return;\n    }\n\n    timespan.endExtras = extras;\n    timespan.endTime = timestamp;\n    timespan.totalTime = timespan.endTime - (timespan.startTime || 0);\n    if (PRINT_TO_CONSOLE) {\n      infoLog('PerformanceLogger.js', 'end: ' + key);\n    }\n\n    if (_cookies[key] != null) {\n      Systrace.endAsyncEvent(key, _cookies[key]);\n      delete _cookies[key];\n    }\n  }\n}\n\n// Re-exporting for backwards compatibility with all the clients that\n// may still import it from this module.\nexport type {Extras, ExtraValue, IPerformanceLogger, Timespan};\n\n/**\n * This function creates performance loggers that can be used to collect and log\n * various performance data such as timespans, points and extras.\n * The loggers need to have minimal overhead since they're used in production.\n */\nexport default function createPerformanceLogger(): IPerformanceLogger {\n  return new PerformanceLogger();\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict\n */\n\n'use strict';\n\n/**\n * If your application is accepting different values for the same field over\n * time and is doing a diff on them, you can either (1) create a copy or\n * (2) ensure that those values are not mutated behind two passes.\n * This function helps you with (2) by freezing the object and throwing if\n * the user subsequently modifies the value.\n *\n * There are two caveats with this function:\n *   - If the call site is not in strict mode, it will only throw when\n *     mutating existing fields, adding a new one\n *     will unfortunately fail silently :(\n *   - If the object is already frozen or sealed, it will not continue the\n *     deep traversal and will leave leaf nodes unfrozen.\n *\n * Freezing the object and adding the throw mechanism is expensive and will\n * only be used in DEV.\n */\nfunction deepFreezeAndThrowOnMutationInDev<T: {...} | Array<mixed>>(\n  object: T,\n): T {\n  if (__DEV__) {\n    if (\n      typeof object !== 'object' ||\n      object === null ||\n      Object.isFrozen(object) ||\n      Object.isSealed(object)\n    ) {\n      return object;\n    }\n\n    // $FlowFixMe[not-an-object] `object` can be an array, but Object.keys works with arrays too\n    const keys = Object.keys((object: {...} | Array<mixed>));\n    // $FlowFixMe[method-unbinding] added when improving typing for this parameters\n    const hasOwnProperty = Object.prototype.hasOwnProperty;\n\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i];\n      if (hasOwnProperty.call(object, key)) {\n        Object.defineProperty(object, key, {\n          get: identity.bind(null, object[key]),\n        });\n        Object.defineProperty(object, key, {\n          set: throwOnImmutableMutation.bind(null, key),\n        });\n      }\n    }\n\n    Object.freeze(object);\n    Object.seal(object);\n\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i];\n      if (hasOwnProperty.call(object, key)) {\n        deepFreezeAndThrowOnMutationInDev(object[key]);\n      }\n    }\n  }\n  return object;\n}\n\n/* $FlowFixMe[missing-local-annot] The type annotation(s) required by Flow's\n * LTI update could not be added via codemod */\nfunction throwOnImmutableMutation(key: empty, value) {\n  throw Error(\n    'You attempted to set the key `' +\n      key +\n      '` with the value `' +\n      JSON.stringify(value) +\n      '` on an object that is meant to be immutable ' +\n      'and has been frozen.',\n  );\n}\n\nfunction identity(value: mixed) {\n  return value;\n}\n\nmodule.exports = deepFreezeAndThrowOnMutationInDev;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict\n */\n\n'use strict';\n\n/**\n * Defines a lazily evaluated property on the supplied `object`.\n */\nfunction defineLazyObjectProperty<T>(\n  object: interface {},\n  name: string,\n  descriptor: {\n    get: () => T,\n    enumerable?: boolean,\n    writable?: boolean,\n    ...\n  },\n): void {\n  const {get} = descriptor;\n  const enumerable = descriptor.enumerable !== false;\n  const writable = descriptor.writable !== false;\n\n  let value;\n  let valueSet = false;\n  function getValue(): T {\n    // WORKAROUND: A weird infinite loop occurs where calling `getValue` calls\n    // `setValue` which calls `Object.defineProperty` which somehow triggers\n    // `getValue` again. Adding `valueSet` breaks this loop.\n    if (!valueSet) {\n      // Calling `get()` here can trigger an infinite loop if it fails to\n      // remove the getter on the property, which can happen when executing\n      // JS in a V8 context.  `valueSet = true` will break this loop, and\n      // sets the value of the property to undefined, until the code in `get()`\n      // finishes, at which point the property is set to the correct value.\n      valueSet = true;\n      setValue(get());\n    }\n    return value;\n  }\n  function setValue(newValue: T): void {\n    value = newValue;\n    valueSet = true;\n    Object.defineProperty(object, name, {\n      value: newValue,\n      configurable: true,\n      enumerable,\n      writable,\n    });\n  }\n\n  Object.defineProperty(object, name, {\n    get: getValue,\n    set: setValue,\n    configurable: true,\n    enumerable,\n  });\n}\n\nmodule.exports = defineLazyObjectProperty;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\nlet logListeners;\n\ntype LogListeners = {|\n  +onDifferentFunctionsIgnored: (nameOne: ?string, nameTwo: ?string) => void,\n|};\n\ntype Options = {|+unsafelyIgnoreFunctions?: boolean|};\n\nfunction unstable_setLogListeners(listeners: ?LogListeners) {\n  logListeners = listeners;\n}\n\n/*\n * @returns {bool} true if different, false if equal\n */\nconst deepDiffer = function (\n  one: any,\n  two: any,\n  maxDepthOrOptions: Options | number = -1,\n  maybeOptions?: Options,\n): boolean {\n  const options =\n    typeof maxDepthOrOptions === 'number' ? maybeOptions : maxDepthOrOptions;\n  const maxDepth =\n    typeof maxDepthOrOptions === 'number' ? maxDepthOrOptions : -1;\n  if (maxDepth === 0) {\n    return true;\n  }\n  if (one === two) {\n    // Short circuit on identical object references instead of traversing them.\n    return false;\n  }\n  if (typeof one === 'function' && typeof two === 'function') {\n    // We consider all functions equal unless explicitly configured otherwise\n    let unsafelyIgnoreFunctions = options?.unsafelyIgnoreFunctions;\n    if (unsafelyIgnoreFunctions == null) {\n      if (\n        logListeners &&\n        logListeners.onDifferentFunctionsIgnored &&\n        (!options || !('unsafelyIgnoreFunctions' in options))\n      ) {\n        logListeners.onDifferentFunctionsIgnored(one.name, two.name);\n      }\n      unsafelyIgnoreFunctions = true;\n    }\n    return !unsafelyIgnoreFunctions;\n  }\n  if (typeof one !== 'object' || one === null) {\n    // Primitives can be directly compared\n    return one !== two;\n  }\n  if (typeof two !== 'object' || two === null) {\n    // We know they are different because the previous case would have triggered\n    // otherwise.\n    return true;\n  }\n  if (one.constructor !== two.constructor) {\n    return true;\n  }\n  if (Array.isArray(one)) {\n    // We know two is also an array because the constructors are equal\n    const len = one.length;\n    if (two.length !== len) {\n      return true;\n    }\n    for (let ii = 0; ii < len; ii++) {\n      if (deepDiffer(one[ii], two[ii], maxDepth - 1, options)) {\n        return true;\n      }\n    }\n  } else {\n    for (const key in one) {\n      if (deepDiffer(one[key], two[key], maxDepth - 1, options)) {\n        return true;\n      }\n    }\n    for (const twoKey in two) {\n      // The only case we haven't checked yet is keys that are in two but aren't\n      // in one, which means they are different.\n      if (one[twoKey] === undefined && two[twoKey] !== undefined) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\ndeepDiffer.unstable_setLogListeners = unstable_setLogListeners;\nmodule.exports = deepDiffer;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\ntype Inset = {\n  top: ?number,\n  left: ?number,\n  right: ?number,\n  bottom: ?number,\n  ...\n};\n\nconst dummyInsets = {\n  top: undefined,\n  left: undefined,\n  right: undefined,\n  bottom: undefined,\n};\n\nconst insetsDiffer = function (one: Inset, two: Inset): boolean {\n  one = one || dummyInsets;\n  two = two || dummyInsets;\n  return (\n    one !== two &&\n    (one.top !== two.top ||\n      one.left !== two.left ||\n      one.right !== two.right ||\n      one.bottom !== two.bottom)\n  );\n};\n\nmodule.exports = insetsDiffer;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict\n */\n\n'use strict';\n\n/**\n * Unrolls an array comparison specially for matrices. Prioritizes\n * checking of indices that are most likely to change so that the comparison\n * bails as early as possible.\n *\n * @param {MatrixMath.Matrix} one First matrix.\n * @param {MatrixMath.Matrix} two Second matrix.\n * @return {boolean} Whether or not the two matrices differ.\n */\nconst matricesDiffer = function (\n  one: ?Array<number>,\n  two: ?Array<number>,\n): boolean {\n  if (one === two) {\n    return false;\n  }\n  return (\n    !one ||\n    !two ||\n    one[12] !== two[12] ||\n    one[13] !== two[13] ||\n    one[14] !== two[14] ||\n    one[5] !== two[5] ||\n    one[10] !== two[10] ||\n    one[0] !== two[0] ||\n    one[1] !== two[1] ||\n    one[2] !== two[2] ||\n    one[3] !== two[3] ||\n    one[4] !== two[4] ||\n    one[6] !== two[6] ||\n    one[7] !== two[7] ||\n    one[8] !== two[8] ||\n    one[9] !== two[9] ||\n    one[11] !== two[11] ||\n    one[15] !== two[15]\n  );\n};\n\nmodule.exports = matricesDiffer;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\ntype Point = {\n  x: ?number,\n  y: ?number,\n  ...\n};\n\nconst dummyPoint = {x: undefined, y: undefined};\n\nconst pointsDiffer = function (one: ?Point, two: ?Point): boolean {\n  one = one || dummyPoint;\n  two = two || dummyPoint;\n  return one !== two && (one.x !== two.x || one.y !== two.y);\n};\n\nmodule.exports = pointsDiffer;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\n'use strict';\n\nconst dummySize = {width: undefined, height: undefined};\ntype Size = {width: ?number, height: ?number};\n\nconst sizesDiffer = function (one: Size, two: Size): boolean {\n  const defaultedOne = one || dummySize;\n  const defaultedTwo = two || dummySize;\n  return (\n    defaultedOne !== defaultedTwo &&\n    (defaultedOne.width !== defaultedTwo.width ||\n      defaultedOne.height !== defaultedTwo.height)\n  );\n};\n\nmodule.exports = sizesDiffer;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n// This function dismisses the currently-open keyboard, if any.\n\n'use strict';\n\nconst TextInputState = require('../Components/TextInput/TextInputState');\n\nfunction dismissKeyboard() {\n  TextInputState.blurTextInput(TextInputState.currentlyFocusedInput());\n}\n\nmodule.exports = dismissKeyboard;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict\n */\n\n'use strict';\n\n/**\n * Intentional info-level logging for clear separation from ad-hoc console debug logging.\n */\nfunction infoLog(...args: Array<mixed>): void {\n  return console.log(...args);\n}\n\nmodule.exports = infoLog;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict\n */\n\n'use strict';\n\n/**\n * Small utility that can be used as an error handler. You cannot just pass\n * `console.error` as a failure callback - it's not properly bound.  If passes an\n * `Error` object, it will print the message and stack.\n */\nconst logError = function (...args: $ReadOnlyArray<mixed>) {\n  if (args.length === 1 && args[0] instanceof Error) {\n    const err = args[0];\n    console.error('Error: \"' + err.message + '\".  Stack:\\n' + err.stack);\n  } else {\n    console.error.apply(console, args);\n  }\n};\n\nmodule.exports = logError;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict\n */\n\nimport invariant from 'invariant';\n\n/**\n * Tries to stringify with JSON.stringify and toString, but catches exceptions\n * (e.g. from circular objects) and always returns a string and never throws.\n */\nexport function createStringifySafeWithLimits(limits: {|\n  maxDepth?: number,\n  maxStringLimit?: number,\n  maxArrayLimit?: number,\n  maxObjectKeysLimit?: number,\n|}): mixed => string {\n  const {\n    maxDepth = Number.POSITIVE_INFINITY,\n    maxStringLimit = Number.POSITIVE_INFINITY,\n    maxArrayLimit = Number.POSITIVE_INFINITY,\n    maxObjectKeysLimit = Number.POSITIVE_INFINITY,\n  } = limits;\n  const stack: Array<mixed> = [];\n  /* $FlowFixMe[missing-this-annot] The 'this' type annotation(s) required by\n   * Flow's LTI update could not be added via codemod */\n  function replacer(key: string, value: mixed): mixed {\n    while (stack.length && this !== stack[0]) {\n      stack.shift();\n    }\n\n    if (typeof value === 'string') {\n      const truncatedString = '...(truncated)...';\n      if (value.length > maxStringLimit + truncatedString.length) {\n        return value.substring(0, maxStringLimit) + truncatedString;\n      }\n      return value;\n    }\n    if (typeof value !== 'object' || value === null) {\n      return value;\n    }\n\n    let retval: mixed = value;\n    if (Array.isArray(value)) {\n      if (stack.length >= maxDepth) {\n        retval = `[ ... array with ${value.length} values ... ]`;\n      } else if (value.length > maxArrayLimit) {\n        retval = value\n          .slice(0, maxArrayLimit)\n          .concat([\n            `... extra ${value.length - maxArrayLimit} values truncated ...`,\n          ]);\n      }\n    } else {\n      // Add refinement after Array.isArray call.\n      invariant(typeof value === 'object', 'This was already found earlier');\n      let keys = Object.keys(value);\n      if (stack.length >= maxDepth) {\n        retval = `{ ... object with ${keys.length} keys ... }`;\n      } else if (keys.length > maxObjectKeysLimit) {\n        // Return a sample of the keys.\n        retval = ({}: {[string]: mixed});\n        for (let k of keys.slice(0, maxObjectKeysLimit)) {\n          retval[k] = value[k];\n        }\n        const truncatedKey = '...(truncated keys)...';\n        retval[truncatedKey] = keys.length - maxObjectKeysLimit;\n      }\n    }\n    stack.unshift(retval);\n    return retval;\n  }\n\n  return function stringifySafe(arg: mixed): string {\n    if (arg === undefined) {\n      return 'undefined';\n    } else if (arg === null) {\n      return 'null';\n    } else if (typeof arg === 'function') {\n      try {\n        return arg.toString();\n      } catch (e) {\n        return '[function unknown]';\n      }\n    } else if (arg instanceof Error) {\n      return arg.name + ': ' + arg.message;\n    } else {\n      // Perform a try catch, just in case the object has a circular\n      // reference or stringify throws for some other reason.\n      try {\n        const ret = JSON.stringify(arg, replacer);\n        if (ret === undefined) {\n          return '[\"' + typeof arg + '\" failed to stringify]';\n        }\n        return ret;\n      } catch (e) {\n        if (typeof arg.toString === 'function') {\n          try {\n            // $FlowFixMe[incompatible-use] : toString shouldn't take any arguments in general.\n            return arg.toString();\n          } catch (E) {}\n        }\n      }\n    }\n    return '[\"' + typeof arg + '\" failed to stringify]';\n  };\n}\n\nconst stringifySafe: mixed => string = createStringifySafeWithLimits({\n  maxDepth: 10,\n  maxStringLimit: 100,\n  maxArrayLimit: 50,\n  maxObjectKeysLimit: 50,\n});\n\nexport default stringifySafe;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\n'use strict';\n\nimport type {ColorSchemeName} from './NativeAppearance';\n\nimport Appearance from './Appearance';\nimport {useSyncExternalStore} from 'react';\n\nconst subscribe = (onStoreChange: () => void) => {\n  const appearanceSubscription = Appearance.addChangeListener(onStoreChange);\n  return () => appearanceSubscription.remove();\n};\n\nexport default function useColorScheme(): ?ColorSchemeName {\n  return useSyncExternalStore(subscribe, Appearance.getColorScheme);\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nimport * as React from 'react';\nimport {useCallback} from 'react';\n\n/**\n * Constructs a new ref that forwards new values to each of the given refs. The\n * given refs will always be invoked in the order that they are supplied.\n *\n * WARNING: A known problem of merging refs using this approach is that if any\n * of the given refs change, the returned callback ref will also be changed. If\n * the returned callback ref is supplied as a `ref` to a React element, this may\n * lead to problems with the given refs being invoked more times than desired.\n */\nexport default function useMergeRefs<Instance>(\n  ...refs: $ReadOnlyArray<?React.RefSetter<Instance>>\n): (Instance | null) => void {\n  return useCallback(\n    (current: Instance | null) => {\n      for (const ref of refs) {\n        if (ref != null) {\n          if (typeof ref === 'function') {\n            ref(current);\n          } else {\n            ref.current = current;\n          }\n        }\n      }\n    },\n    [...refs], // eslint-disable-line react-hooks/exhaustive-deps\n  );\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nimport {useCallback, useRef} from 'react';\n\ntype CallbackRef<T> = T => mixed;\n\n/**\n * Constructs a callback ref that provides similar semantics as `useEffect`. The\n * supplied `effect` callback will be called with non-null component instances.\n * The `effect` callback can also optionally return a cleanup function.\n *\n * When a component is updated or unmounted, the cleanup function is called. The\n * `effect` callback will then be called again, if applicable.\n *\n * When a new `effect` callback is supplied, the previously returned cleanup\n * function will be called before the new `effect` callback is called with the\n * same instance.\n *\n * WARNING: The `effect` callback should be stable (e.g. using `useCallback`).\n */\nexport default function useRefEffect<TInstance>(\n  effect: TInstance => (() => void) | void,\n): CallbackRef<TInstance | null> {\n  const cleanupRef = useRef<(() => void) | void>(undefined);\n  return useCallback(\n    (instance: null | TInstance) => {\n      if (cleanupRef.current) {\n        cleanupRef.current();\n        cleanupRef.current = undefined;\n      }\n      if (instance != null) {\n        cleanupRef.current = effect(instance);\n      }\n    },\n    [effect],\n  );\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\nimport Dimensions from './Dimensions';\nimport {\n  type DisplayMetrics,\n  type DisplayMetricsAndroid,\n} from './NativeDeviceInfo';\nimport {useEffect, useState} from 'react';\n\nexport default function useWindowDimensions():\n  | DisplayMetrics\n  | DisplayMetricsAndroid {\n  const [dimensions, setDimensions] = useState(() => Dimensions.get('window'));\n  useEffect(() => {\n    function handleChange({\n      window,\n    }: {\n      window: DisplayMetrics | DisplayMetricsAndroid,\n    }) {\n      if (\n        dimensions.width !== window.width ||\n        dimensions.height !== window.height ||\n        dimensions.scale !== window.scale ||\n        dimensions.fontScale !== window.fontScale\n      ) {\n        setDimensions(window);\n      }\n    }\n    const subscription = Dimensions.addEventListener('change', handleChange);\n    // We might have missed an update between calling `get` in render and\n    // `addEventListener` in this handler, so we set it here. If there was\n    // no change, React will filter out this update as a no-op.\n    handleChange({window: Dimensions.get('window')});\n    return () => {\n      subscription.remove();\n    };\n  }, [dimensions]);\n  return dimensions;\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\nimport PlatformBaseViewConfig from '../NativeComponent/PlatformBaseViewConfig';\nimport {type ViewConfig} from '../Renderer/shims/ReactNativeTypes';\n\nconst IGNORED_KEYS = ['transform', 'hitSlop'];\n\n/**\n * The purpose of this function is to validate that the view config that\n * native exposes for a given view manager is the same as the view config\n * that is specified for that view manager in JS.\n *\n * In order to improve perf, we want to avoid calling into native to get\n * the view config when each view manager is used. To do this, we are moving\n * the configs to JS. In the future we will use these JS based view configs\n * to codegen the view manager on native to ensure they stay in sync without\n * this runtime check.\n *\n * If this function fails, that likely means a change was made to the native\n * view manager without updating the JS config as well. Ideally you can make\n * that direct change to the JS config. If you don't know what the differences\n * are, the best approach I've found is to create a view that prints\n * the return value of getNativeComponentAttributes, and then copying that\n * text and pasting it back into JS:\n * <Text selectable={true}>{JSON.stringify(getNativeComponentAttributes('RCTView'))}</Text>\n *\n * This is meant to be a stopgap until the time comes when we only have a\n * single source of truth. I wonder if this message will still be here two\n * years from now...\n */\nexport default function verifyComponentAttributeEquivalence(\n  nativeViewConfig: ViewConfig,\n  staticViewConfig: ViewConfig,\n) {\n  for (const prop of [\n    'validAttributes',\n    'bubblingEventTypes',\n    'directEventTypes',\n  ]) {\n    const diff = Object.keys(\n      lefthandObjectDiff(nativeViewConfig[prop], staticViewConfig[prop]),\n    );\n\n    if (diff.length > 0) {\n      const name =\n        staticViewConfig.uiViewClassName ?? nativeViewConfig.uiViewClassName;\n      console.error(\n        `'${name}' has a view config that does not match native. ` +\n          `'${prop}' is missing: ${diff.join(', ')}`,\n      );\n    }\n  }\n}\n\n// Return the different key-value pairs of the right object, by iterating through the keys in the left object\n// Note it won't return a difference where a key is missing in the left but exists the right.\nfunction lefthandObjectDiff(leftObj: Object, rightObj: Object): Object {\n  const differentKeys: {[string]: any | {...}} = {};\n\n  function compare(leftItem: any, rightItem: any, key: string) {\n    if (typeof leftItem !== typeof rightItem && leftItem != null) {\n      differentKeys[key] = rightItem;\n      return;\n    }\n\n    if (typeof leftItem === 'object') {\n      const objDiff = lefthandObjectDiff(leftItem, rightItem);\n      if (Object.keys(objDiff).length > 1) {\n        differentKeys[key] = objDiff;\n      }\n      return;\n    }\n\n    if (leftItem !== rightItem) {\n      differentKeys[key] = rightItem;\n      return;\n    }\n  }\n\n  for (const key in leftObj) {\n    if (IGNORED_KEYS.includes(key)) {\n      continue;\n    }\n\n    if (!rightObj) {\n      differentKeys[key] = {};\n    } else if (leftObj.hasOwnProperty(key)) {\n      compare(leftObj[key], rightObj[key], key);\n    }\n  }\n\n  return differentKeys;\n}\n\nexport function getConfigWithoutViewProps(\n  viewConfig: ViewConfig,\n  propName: string,\n): {...} {\n  if (!viewConfig[propName]) {\n    return {};\n  }\n\n  return Object.keys(viewConfig[propName])\n    .filter(prop => !PlatformBaseViewConfig[propName][prop])\n    .reduce<{[string]: any}>((obj, prop) => {\n      obj[prop] = viewConfig[propName][prop];\n      return obj;\n    }, {});\n}\n\nexport function stringifyViewConfig(viewConfig: any): string {\n  return JSON.stringify(\n    viewConfig,\n    (key, val) => {\n      if (typeof val === 'function') {\n        return `ƒ ${val.name}`;\n      }\n      return val;\n    },\n    2,\n  );\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict\n */\n\n'use strict';\n\nconst warnedKeys: {[string]: boolean, ...} = {};\n\n/**\n * A simple function that prints a warning message once per session.\n *\n * @param {string} key - The key used to ensure the message is printed once.\n *                       This should be unique to the callsite.\n * @param {string} message - The message to print\n */\nfunction warnOnce(key: string, message: string) {\n  if (warnedKeys[key]) {\n    return;\n  }\n\n  console.warn(message);\n\n  warnedKeys[key] = true;\n}\n\nmodule.exports = warnOnce;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nexport * from '../../src/private/specs/modules/NativeVibration';\nimport NativeVibration from '../../src/private/specs/modules/NativeVibration';\nexport default NativeVibration;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict\n * @jsdoc\n */\n\nimport NativeVibration from './NativeVibration';\n\nconst Platform = require('../Utilities/Platform');\n\n/**\n * Vibration API\n *\n * See https://reactnative.dev/docs/vibration\n */\n\nlet _vibrating: boolean = false;\nlet _id: number = 0; // _id is necessary to prevent race condition.\nconst _default_vibration_length = 400;\n\nfunction vibrateByPattern(pattern: Array<number>, repeat: boolean = false) {\n  if (_vibrating) {\n    return;\n  }\n  _vibrating = true;\n  if (pattern[0] === 0) {\n    NativeVibration.vibrate(_default_vibration_length);\n    // $FlowFixMe[reassign-const]\n    pattern = pattern.slice(1);\n  }\n  if (pattern.length === 0) {\n    _vibrating = false;\n    return;\n  }\n  setTimeout(() => vibrateScheduler(++_id, pattern, repeat, 1), pattern[0]);\n}\n\nfunction vibrateScheduler(\n  id: number,\n  pattern: Array<number>,\n  repeat: boolean,\n  nextIndex: number,\n) {\n  if (!_vibrating || id !== _id) {\n    return;\n  }\n  NativeVibration.vibrate(_default_vibration_length);\n  if (nextIndex >= pattern.length) {\n    if (repeat) {\n      // $FlowFixMe[reassign-const]\n      nextIndex = 0;\n    } else {\n      _vibrating = false;\n      return;\n    }\n  }\n  setTimeout(\n    () => vibrateScheduler(id, pattern, repeat, nextIndex + 1),\n    pattern[nextIndex],\n  );\n}\n\nconst Vibration = {\n  /**\n   * Trigger a vibration with specified `pattern`.\n   *\n   * See https://reactnative.dev/docs/vibration#vibrate\n   */\n  vibrate: function (\n    pattern: number | Array<number> = _default_vibration_length,\n    repeat: boolean = false,\n  ) {\n    if (Platform.OS === 'android') {\n      if (typeof pattern === 'number') {\n        NativeVibration.vibrate(pattern);\n      } else if (Array.isArray(pattern)) {\n        NativeVibration.vibrateByPattern(pattern, repeat ? 0 : -1);\n      } else {\n        throw new Error('Vibration pattern should be a number or array');\n      }\n    } else {\n      if (_vibrating) {\n        return;\n      }\n      if (typeof pattern === 'number') {\n        NativeVibration.vibrate(pattern);\n      } else if (Array.isArray(pattern)) {\n        vibrateByPattern(pattern, repeat);\n      } else {\n        throw new Error('Vibration pattern should be a number or array');\n      }\n    }\n  },\n  /**\n   * Stop vibration\n   *\n   * See https://reactnative.dev/docs/vibration#cancel\n   */\n  cancel: function () {\n    if (Platform.OS === 'ios') {\n      _vibrating = false;\n    } else {\n      NativeVibration.cancel();\n    }\n  },\n};\n\nmodule.exports = Vibration;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nexport * from '../../src/private/specs/modules/NativeWebSocketModule';\nimport NativeWebSocketModule from '../../src/private/specs/modules/NativeWebSocketModule';\nexport default NativeWebSocketModule;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\nimport type {BlobData} from '../Blob/BlobTypes';\nimport type {EventSubscription} from '../vendor/emitter/EventEmitter';\n\nimport Blob from '../Blob/Blob';\nimport BlobManager from '../Blob/BlobManager';\nimport NativeEventEmitter from '../EventEmitter/NativeEventEmitter';\nimport binaryToBase64 from '../Utilities/binaryToBase64';\nimport Platform from '../Utilities/Platform';\nimport NativeWebSocketModule from './NativeWebSocketModule';\nimport WebSocketEvent from './WebSocketEvent';\nimport base64 from 'base64-js';\nimport EventTarget from 'event-target-shim';\nimport invariant from 'invariant';\n\ntype ArrayBufferView =\n  | Int8Array\n  | Uint8Array\n  | Uint8ClampedArray\n  | Int16Array\n  | Uint16Array\n  | Int32Array\n  | Uint32Array\n  | Float32Array\n  | Float64Array\n  | DataView;\n\ntype BinaryType = 'blob' | 'arraybuffer';\n\nconst CONNECTING = 0;\nconst OPEN = 1;\nconst CLOSING = 2;\nconst CLOSED = 3;\n\nconst CLOSE_NORMAL = 1000;\n\n// Abnormal closure where no code is provided in a control frame\n// https://www.rfc-editor.org/rfc/rfc6455.html#section-7.1.5\nconst CLOSE_ABNORMAL = 1006;\n\nconst WEBSOCKET_EVENTS = ['close', 'error', 'message', 'open'];\n\nlet nextWebSocketId = 0;\n\ntype WebSocketEventDefinitions = {\n  websocketOpen: [{id: number, protocol: string}],\n  websocketClosed: [{id: number, code: number, reason: string}],\n  websocketMessage: [\n    | {type: 'binary', id: number, data: string}\n    | {type: 'text', id: number, data: string}\n    | {type: 'blob', id: number, data: BlobData},\n  ],\n  websocketFailed: [{id: number, message: string}],\n};\n\n/**\n * Browser-compatible WebSockets implementation.\n *\n * See https://developer.mozilla.org/en-US/docs/Web/API/WebSocket\n * See https://github.com/websockets/ws\n */\nclass WebSocket extends (EventTarget(...WEBSOCKET_EVENTS): any) {\n  static CONNECTING: number = CONNECTING;\n  static OPEN: number = OPEN;\n  static CLOSING: number = CLOSING;\n  static CLOSED: number = CLOSED;\n\n  CONNECTING: number = CONNECTING;\n  OPEN: number = OPEN;\n  CLOSING: number = CLOSING;\n  CLOSED: number = CLOSED;\n\n  _socketId: number;\n  _eventEmitter: NativeEventEmitter<WebSocketEventDefinitions>;\n  _subscriptions: Array<EventSubscription>;\n  _binaryType: ?BinaryType;\n\n  onclose: ?Function;\n  onerror: ?Function;\n  onmessage: ?Function;\n  onopen: ?Function;\n\n  bufferedAmount: number;\n  extension: ?string;\n  protocol: ?string;\n  readyState: number = CONNECTING;\n  url: ?string;\n\n  constructor(\n    url: string,\n    protocols: ?string | ?Array<string>,\n    options: ?{headers?: {origin?: string, ...}, ...},\n  ) {\n    super();\n    this.url = url;\n    if (typeof protocols === 'string') {\n      protocols = [protocols];\n    }\n\n    const {headers = {}, ...unrecognized} = options || {};\n\n    // Preserve deprecated backwards compatibility for the 'origin' option\n    // $FlowFixMe[prop-missing]\n    if (unrecognized && typeof unrecognized.origin === 'string') {\n      console.warn(\n        'Specifying `origin` as a WebSocket connection option is deprecated. Include it under `headers` instead.',\n      );\n      /* $FlowFixMe[prop-missing] (>=0.54.0 site=react_native_fb,react_native_\n       * oss) This comment suppresses an error found when Flow v0.54 was\n       * deployed. To see the error delete this comment and run Flow. */\n      headers.origin = unrecognized.origin;\n      /* $FlowFixMe[prop-missing] (>=0.54.0 site=react_native_fb,react_native_\n       * oss) This comment suppresses an error found when Flow v0.54 was\n       * deployed. To see the error delete this comment and run Flow. */\n      delete unrecognized.origin;\n    }\n\n    // Warn about and discard anything else\n    if (Object.keys(unrecognized).length > 0) {\n      console.warn(\n        'Unrecognized WebSocket connection option(s) `' +\n          Object.keys(unrecognized).join('`, `') +\n          '`. ' +\n          'Did you mean to put these under `headers`?',\n      );\n    }\n\n    if (!Array.isArray(protocols)) {\n      protocols = null;\n    }\n\n    this._eventEmitter = new NativeEventEmitter(\n      // T88715063: NativeEventEmitter only used this parameter on iOS. Now it uses it on all platforms, so this code was modified automatically to preserve its behavior\n      // If you want to use the native module on other platforms, please remove this condition and test its behavior\n      Platform.OS !== 'ios' ? null : NativeWebSocketModule,\n    );\n    this._socketId = nextWebSocketId++;\n    this._registerEvents();\n    NativeWebSocketModule.connect(url, protocols, {headers}, this._socketId);\n  }\n\n  get binaryType(): ?BinaryType {\n    return this._binaryType;\n  }\n\n  set binaryType(binaryType: BinaryType): void {\n    if (binaryType !== 'blob' && binaryType !== 'arraybuffer') {\n      throw new Error(\"binaryType must be either 'blob' or 'arraybuffer'\");\n    }\n    if (this._binaryType === 'blob' || binaryType === 'blob') {\n      invariant(\n        BlobManager.isAvailable,\n        'Native module BlobModule is required for blob support',\n      );\n      if (binaryType === 'blob') {\n        BlobManager.addWebSocketHandler(this._socketId);\n      } else {\n        BlobManager.removeWebSocketHandler(this._socketId);\n      }\n    }\n    this._binaryType = binaryType;\n  }\n\n  close(code?: number, reason?: string): void {\n    if (this.readyState === this.CLOSING || this.readyState === this.CLOSED) {\n      return;\n    }\n\n    this.readyState = this.CLOSING;\n    this._close(code, reason);\n  }\n\n  send(data: string | ArrayBuffer | ArrayBufferView | Blob): void {\n    if (this.readyState === this.CONNECTING) {\n      throw new Error('INVALID_STATE_ERR');\n    }\n\n    if (data instanceof Blob) {\n      invariant(\n        BlobManager.isAvailable,\n        'Native module BlobModule is required for blob support',\n      );\n      BlobManager.sendOverSocket(data, this._socketId);\n      return;\n    }\n\n    if (typeof data === 'string') {\n      NativeWebSocketModule.send(data, this._socketId);\n      return;\n    }\n\n    if (data instanceof ArrayBuffer || ArrayBuffer.isView(data)) {\n      NativeWebSocketModule.sendBinary(binaryToBase64(data), this._socketId);\n      return;\n    }\n\n    throw new Error('Unsupported data type');\n  }\n\n  ping(): void {\n    if (this.readyState === this.CONNECTING) {\n      throw new Error('INVALID_STATE_ERR');\n    }\n\n    NativeWebSocketModule.ping(this._socketId);\n  }\n\n  _close(code?: number, reason?: string): void {\n    // See https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent\n    const statusCode = typeof code === 'number' ? code : CLOSE_NORMAL;\n    const closeReason = typeof reason === 'string' ? reason : '';\n    NativeWebSocketModule.close(statusCode, closeReason, this._socketId);\n\n    if (BlobManager.isAvailable && this._binaryType === 'blob') {\n      BlobManager.removeWebSocketHandler(this._socketId);\n    }\n  }\n\n  _unregisterEvents(): void {\n    this._subscriptions.forEach(e => e.remove());\n    this._subscriptions = [];\n  }\n\n  _registerEvents(): void {\n    this._subscriptions = [\n      this._eventEmitter.addListener('websocketMessage', ev => {\n        if (ev.id !== this._socketId) {\n          return;\n        }\n        let data: Blob | BlobData | ArrayBuffer | string = ev.data;\n        switch (ev.type) {\n          case 'binary':\n            data = base64.toByteArray(ev.data).buffer;\n            break;\n          case 'blob':\n            data = BlobManager.createFromOptions(ev.data);\n            break;\n        }\n        this.dispatchEvent(new WebSocketEvent('message', {data}));\n      }),\n      this._eventEmitter.addListener('websocketOpen', ev => {\n        if (ev.id !== this._socketId) {\n          return;\n        }\n        this.readyState = this.OPEN;\n        this.protocol = ev.protocol;\n        this.dispatchEvent(new WebSocketEvent('open'));\n      }),\n      this._eventEmitter.addListener('websocketClosed', ev => {\n        if (ev.id !== this._socketId) {\n          return;\n        }\n        this.readyState = this.CLOSED;\n        this.dispatchEvent(\n          new WebSocketEvent('close', {\n            code: ev.code,\n            reason: ev.reason,\n            // TODO: missing `wasClean` (exposed on iOS as `clean` but missing on Android)\n          }),\n        );\n        this._unregisterEvents();\n        this.close();\n      }),\n      this._eventEmitter.addListener('websocketFailed', ev => {\n        if (ev.id !== this._socketId) {\n          return;\n        }\n        this.readyState = this.CLOSED;\n        this.dispatchEvent(\n          new WebSocketEvent('error', {\n            message: ev.message,\n          }),\n        );\n        this.dispatchEvent(\n          new WebSocketEvent('close', {\n            code: CLOSE_ABNORMAL,\n            reason: ev.message,\n            // TODO: Expose `wasClean`\n          }),\n        );\n        this._unregisterEvents();\n        this.close();\n      }),\n    ];\n  }\n}\n\nmodule.exports = WebSocket;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\n'use strict';\n\n/**\n * Event object passed to the `onopen`, `onclose`, `onmessage`, `onerror`\n * callbacks of `WebSocket`.\n *\n * The `type` property is \"open\", \"close\", \"message\", \"error\" respectively.\n *\n * In case of \"message\", the `data` property contains the incoming data.\n */\nclass WebSocketEvent {\n  constructor(type, eventInitDict) {\n    this.type = type.toString();\n    Object.assign(this, eventInitDict);\n  }\n}\n\nmodule.exports = WebSocketEvent;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nimport type {IgnorePattern} from '../LogBox/Data/LogBoxData';\n\nconst LogBox = require('../LogBox/LogBox').default;\nconst React = require('react');\n\ntype Props = $ReadOnly<{||}>;\n\nlet YellowBox;\nif (__DEV__) {\n  YellowBox = class extends React.Component<Props> {\n    static ignoreWarnings(patterns: $ReadOnlyArray<IgnorePattern>): void {\n      console.warn(\n        'YellowBox has been replaced with LogBox. Please call LogBox.ignoreLogs() instead.',\n      );\n\n      LogBox.ignoreLogs(patterns);\n    }\n\n    static install(): void {\n      console.warn(\n        'YellowBox has been replaced with LogBox. Please call LogBox.install() instead.',\n      );\n      LogBox.install();\n    }\n\n    static uninstall(): void {\n      console.warn(\n        'YellowBox has been replaced with LogBox. Please call LogBox.uninstall() instead.',\n      );\n      LogBox.uninstall();\n    }\n\n    render(): React.Node {\n      return null;\n    }\n  };\n} else {\n  YellowBox = class extends React.Component<Props> {\n    static ignoreWarnings(patterns: $ReadOnlyArray<IgnorePattern>): void {\n      // Do nothing.\n    }\n\n    static install(): void {\n      // Do nothing.\n    }\n\n    static uninstall(): void {\n      // Do nothing.\n    }\n\n    render(): React.Node {\n      return null;\n    }\n  };\n}\n\n// $FlowFixMe[method-unbinding]\nmodule.exports = (YellowBox: Class<React.Component<Props>> & {\n  ignoreWarnings($ReadOnlyArray<IgnorePattern>): void,\n  install(): void,\n  uninstall(): void,\n  ...\n});\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict\n */\n\nimport type {ErrorUtilsT} from '@react-native/js-polyfills/error-guard';\n\n/**\n * The particular require runtime that we are using looks for a global\n * `ErrorUtils` object and if it exists, then it requires modules with the\n * error handler specified via ErrorUtils.setGlobalHandler by calling the\n * require function with applyWithGuard. Since the require module is loaded\n * before any of the modules, this ErrorUtils must be defined (and the handler\n * set) globally before requiring anything.\n *\n * However, we still want to treat ErrorUtils as a module so that other modules\n * that use it aren't just using a global variable, so simply export the global\n * variable here. ErrorUtils is originally defined in a file named error-guard.js.\n */\nmodule.exports = (global.ErrorUtils: ErrorUtilsT);\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nexport interface EventSubscription {\n  remove(): void;\n}\n\nexport interface IEventEmitter<TEventToArgsMap: {...}> {\n  addListener<TEvent: $Keys<TEventToArgsMap>>(\n    eventType: TEvent,\n    listener: (...args: TEventToArgsMap[TEvent]) => mixed,\n    context?: mixed,\n  ): EventSubscription;\n\n  emit<TEvent: $Keys<TEventToArgsMap>>(\n    eventType: TEvent,\n    ...args: TEventToArgsMap[TEvent]\n  ): void;\n\n  removeAllListeners<TEvent: $Keys<TEventToArgsMap>>(eventType?: ?TEvent): void;\n\n  listenerCount<TEvent: $Keys<TEventToArgsMap>>(eventType: TEvent): number;\n}\n\ninterface Registration<TArgs> {\n  +context: mixed;\n  +listener: (...args: TArgs) => mixed;\n  +remove: () => void;\n}\n\n// $FlowFixMe[deprecated-type]\ntype Registry<TEventToArgsMap: {...}> = $ObjMap<\n  TEventToArgsMap,\n  <TArgs>(TArgs) => Set<Registration<TArgs>>,\n>;\n\n/**\n * EventEmitter manages listeners and publishes events to them.\n *\n * EventEmitter accepts a single type parameter that defines the valid events\n * and associated listener argument(s).\n *\n * @example\n *\n *   const emitter = new EventEmitter<{\n *     success: [number, string],\n *     error: [Error],\n *   }>();\n *\n *   emitter.on('success', (statusCode, responseText) => {...});\n *   emitter.emit('success', 200, '...');\n *\n *   emitter.on('error', error => {...});\n *   emitter.emit('error', new Error('Resource not found'));\n *\n */\nexport default class EventEmitter<TEventToArgsMap: {...}>\n  implements IEventEmitter<TEventToArgsMap>\n{\n  #registry: Registry<TEventToArgsMap> = {};\n\n  /**\n   * Registers a listener that is called when the supplied event is emitted.\n   * Returns a subscription that has a `remove` method to undo registration.\n   */\n  addListener<TEvent: $Keys<TEventToArgsMap>>(\n    eventType: TEvent,\n    listener: (...args: TEventToArgsMap[TEvent]) => mixed,\n    context: mixed,\n  ): EventSubscription {\n    if (typeof listener !== 'function') {\n      throw new TypeError(\n        'EventEmitter.addListener(...): 2nd argument must be a function.',\n      );\n    }\n    const registrations = allocate<\n      TEventToArgsMap,\n      TEvent,\n      TEventToArgsMap[TEvent],\n    >(this.#registry, eventType);\n    const registration: Registration<TEventToArgsMap[TEvent]> = {\n      context,\n      listener,\n      remove(): void {\n        registrations.delete(registration);\n      },\n    };\n    registrations.add(registration);\n    return registration;\n  }\n\n  /**\n   * Emits the supplied event. Additional arguments supplied to `emit` will be\n   * passed through to each of the registered listeners.\n   *\n   * If a listener modifies the listeners registered for the same event, those\n   * changes will not be reflected in the current invocation of `emit`.\n   */\n  emit<TEvent: $Keys<TEventToArgsMap>>(\n    eventType: TEvent,\n    ...args: TEventToArgsMap[TEvent]\n  ): void {\n    const registrations: ?Set<Registration<TEventToArgsMap[TEvent]>> =\n      this.#registry[eventType];\n    if (registrations != null) {\n      // Copy `registrations` to take a snapshot when we invoke `emit`, in case\n      // registrations are added or removed when listeners are invoked.\n      for (const registration of Array.from(registrations)) {\n        registration.listener.apply(registration.context, args);\n      }\n    }\n  }\n\n  /**\n   * Removes all registered listeners.\n   */\n  removeAllListeners<TEvent: $Keys<TEventToArgsMap>>(\n    eventType?: ?TEvent,\n  ): void {\n    if (eventType == null) {\n      this.#registry = {};\n    } else {\n      delete this.#registry[eventType];\n    }\n  }\n\n  /**\n   * Returns the number of registered listeners for the supplied event.\n   */\n  listenerCount<TEvent: $Keys<TEventToArgsMap>>(eventType: TEvent): number {\n    const registrations: ?Set<Registration<mixed>> = this.#registry[eventType];\n    return registrations == null ? 0 : registrations.size;\n  }\n}\n\nfunction allocate<\n  TEventToArgsMap: {...},\n  TEvent: $Keys<TEventToArgsMap>,\n  TEventArgs: TEventToArgsMap[TEvent],\n>(\n  registry: Registry<TEventToArgsMap>,\n  eventType: TEvent,\n): Set<Registration<TEventArgs>> {\n  let registrations: ?Set<Registration<TEventArgs>> = registry[eventType];\n  if (registrations == null) {\n    registrations = new Set();\n    registry[eventType] = registrations;\n  }\n  return registrations;\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\n// APIs\nimport typeof ActionSheetIOS from './Libraries/ActionSheetIOS/ActionSheetIOS';\nimport typeof Alert from './Libraries/Alert/Alert';\nimport typeof Animated from './Libraries/Animated/Animated';\nimport typeof * as AnimatedModule from './Libraries/Animated/Animated';\nimport typeof Easing from './Libraries/Animated/Easing';\nimport typeof useAnimatedValue from './Libraries/Animated/useAnimatedValue';\nimport typeof AppState from './Libraries/AppState/AppState';\nimport typeof NativeModules from './Libraries/BatchedBridge/NativeModules';\n// Components\nimport typeof AccessibilityInfo from './Libraries/Components/AccessibilityInfo/AccessibilityInfo';\nimport typeof ActivityIndicator from './Libraries/Components/ActivityIndicator/ActivityIndicator';\nimport typeof Button from './Libraries/Components/Button';\nimport typeof Clipboard from './Libraries/Components/Clipboard/Clipboard';\nimport typeof DrawerLayoutAndroid from './Libraries/Components/DrawerAndroid/DrawerLayoutAndroid';\nimport typeof Keyboard from './Libraries/Components/Keyboard/Keyboard';\nimport typeof KeyboardAvoidingView from './Libraries/Components/Keyboard/KeyboardAvoidingView';\nimport typeof Pressable from './Libraries/Components/Pressable/Pressable';\nimport typeof ProgressBarAndroid from './Libraries/Components/ProgressBarAndroid/ProgressBarAndroid';\nimport typeof RefreshControl from './Libraries/Components/RefreshControl/RefreshControl';\nimport typeof SafeAreaView from './Libraries/Components/SafeAreaView/SafeAreaView';\nimport typeof ScrollView from './Libraries/Components/ScrollView/ScrollView';\nimport typeof StatusBar from './Libraries/Components/StatusBar/StatusBar';\nimport typeof Switch from './Libraries/Components/Switch/Switch';\nimport typeof InputAccessoryView from './Libraries/Components/TextInput/InputAccessoryView';\nimport typeof TextInput from './Libraries/Components/TextInput/TextInput';\nimport typeof ToastAndroid from './Libraries/Components/ToastAndroid/ToastAndroid';\nimport typeof Touchable from './Libraries/Components/Touchable/Touchable';\nimport typeof TouchableHighlight from './Libraries/Components/Touchable/TouchableHighlight';\nimport typeof TouchableNativeFeedback from './Libraries/Components/Touchable/TouchableNativeFeedback';\nimport typeof TouchableOpacity from './Libraries/Components/Touchable/TouchableOpacity';\nimport typeof TouchableWithoutFeedback from './Libraries/Components/Touchable/TouchableWithoutFeedback';\nimport typeof View from './Libraries/Components/View/View';\nimport typeof RegisterCallableModule from './Libraries/Core/registerCallableModule';\nimport typeof NativeEventEmitter from './Libraries/EventEmitter/NativeEventEmitter';\nimport typeof RCTDeviceEventEmitter from './Libraries/EventEmitter/RCTDeviceEventEmitter';\nimport typeof RCTNativeAppEventEmitter from './Libraries/EventEmitter/RCTNativeAppEventEmitter';\nimport typeof Image from './Libraries/Image/Image';\nimport typeof ImageBackground from './Libraries/Image/ImageBackground';\nimport typeof InteractionManager from './Libraries/Interaction/InteractionManager';\nimport typeof PanResponder from './Libraries/Interaction/PanResponder';\nimport typeof LayoutAnimation from './Libraries/LayoutAnimation/LayoutAnimation';\nimport typeof Linking from './Libraries/Linking/Linking';\nimport typeof FlatList from './Libraries/Lists/FlatList';\nimport typeof SectionList from './Libraries/Lists/SectionList';\nimport typeof VirtualizedList from './Libraries/Lists/VirtualizedList';\nimport typeof VirtualizedSectionList from './Libraries/Lists/VirtualizedSectionList';\nimport typeof LogBox from './Libraries/LogBox/LogBox';\nimport typeof Modal from './Libraries/Modal/Modal';\nimport typeof NativeDialogManagerAndroid from './Libraries/NativeModules/specs/NativeDialogManagerAndroid';\nimport typeof Networking from './Libraries/Network/RCTNetworking';\nimport typeof * as Systrace from './Libraries/Performance/Systrace';\nimport typeof PermissionsAndroid from './Libraries/PermissionsAndroid/PermissionsAndroid';\nimport typeof PushNotificationIOS from './Libraries/PushNotificationIOS/PushNotificationIOS';\nimport typeof AppRegistry from './Libraries/ReactNative/AppRegistry';\nimport typeof I18nManager from './Libraries/ReactNative/I18nManager';\nimport typeof {RootTagContext} from './Libraries/ReactNative/RootTag';\nimport typeof UIManager from './Libraries/ReactNative/UIManager';\nimport typeof ReactNative from './Libraries/Renderer/shims/ReactNative';\nimport type {HostComponent as _HostComponentInternal} from './Libraries/Renderer/shims/ReactNativeTypes';\nimport typeof Settings from './Libraries/Settings/Settings';\nimport typeof Share from './Libraries/Share/Share';\nimport typeof {PlatformColor} from './Libraries/StyleSheet/PlatformColorValueTypes';\n// Plugins\nimport typeof {DynamicColorIOS} from './Libraries/StyleSheet/PlatformColorValueTypesIOS';\nimport typeof processColor from './Libraries/StyleSheet/processColor';\nimport typeof StyleSheet from './Libraries/StyleSheet/StyleSheet';\nimport typeof Text from './Libraries/Text/Text';\nimport typeof * as TurboModuleRegistry from './Libraries/TurboModule/TurboModuleRegistry';\nimport typeof UTFSequence from './Libraries/UTFSequence';\nimport typeof Appearance from './Libraries/Utilities/Appearance';\nimport typeof BackHandler from './Libraries/Utilities/BackHandler';\nimport typeof DeviceInfo from './Libraries/Utilities/DeviceInfo';\nimport typeof DevSettings from './Libraries/Utilities/DevSettings';\nimport typeof Dimensions from './Libraries/Utilities/Dimensions';\nimport typeof PixelRatio from './Libraries/Utilities/PixelRatio';\nimport typeof Platform from './Libraries/Utilities/Platform';\nimport typeof useColorScheme from './Libraries/Utilities/useColorScheme';\nimport typeof useWindowDimensions from './Libraries/Utilities/useWindowDimensions';\nimport typeof Vibration from './Libraries/Vibration/Vibration';\nimport typeof YellowBox from './Libraries/YellowBox/YellowBoxDeprecated';\n\nconst warnOnce = require('./Libraries/Utilities/warnOnce');\nconst invariant = require('invariant');\n\nexport type HostComponent<T> = _HostComponentInternal<T>;\n\nmodule.exports = {\n  get registerCallableModule(): RegisterCallableModule {\n    return require('./Libraries/Core/registerCallableModule').default;\n  },\n  // Components\n  get AccessibilityInfo(): AccessibilityInfo {\n    return require('./Libraries/Components/AccessibilityInfo/AccessibilityInfo')\n      .default;\n  },\n  get ActivityIndicator(): ActivityIndicator {\n    return require('./Libraries/Components/ActivityIndicator/ActivityIndicator')\n      .default;\n  },\n  get Button(): Button {\n    return require('./Libraries/Components/Button').default;\n  },\n  // $FlowFixMe[value-as-type]\n  get DrawerLayoutAndroid(): DrawerLayoutAndroid {\n    return require('./Libraries/Components/DrawerAndroid/DrawerLayoutAndroid');\n  },\n  get FlatList(): FlatList {\n    return require('./Libraries/Lists/FlatList');\n  },\n  get Image(): Image {\n    return require('./Libraries/Image/Image');\n  },\n  get ImageBackground(): ImageBackground {\n    return require('./Libraries/Image/ImageBackground');\n  },\n  get InputAccessoryView(): InputAccessoryView {\n    return require('./Libraries/Components/TextInput/InputAccessoryView')\n      .default;\n  },\n  get KeyboardAvoidingView(): KeyboardAvoidingView {\n    return require('./Libraries/Components/Keyboard/KeyboardAvoidingView')\n      .default;\n  },\n  get Modal(): Modal {\n    return require('./Libraries/Modal/Modal');\n  },\n  get Pressable(): Pressable {\n    return require('./Libraries/Components/Pressable/Pressable').default;\n  },\n  // $FlowFixMe[value-as-type]\n  get ProgressBarAndroid(): ProgressBarAndroid {\n    warnOnce(\n      'progress-bar-android-moved',\n      'ProgressBarAndroid has been extracted from react-native core and will be removed in a future release. ' +\n        \"It can now be installed and imported from '@react-native-community/progress-bar-android' instead of 'react-native'. \" +\n        'See https://github.com/react-native-progress-view/progress-bar-android',\n    );\n    return require('./Libraries/Components/ProgressBarAndroid/ProgressBarAndroid');\n  },\n  get RefreshControl(): RefreshControl {\n    return require('./Libraries/Components/RefreshControl/RefreshControl');\n  },\n  get SafeAreaView(): SafeAreaView {\n    return require('./Libraries/Components/SafeAreaView/SafeAreaView').default;\n  },\n  get ScrollView(): ScrollView {\n    return require('./Libraries/Components/ScrollView/ScrollView');\n  },\n  get SectionList(): SectionList {\n    return require('./Libraries/Lists/SectionList').default;\n  },\n  get StatusBar(): StatusBar {\n    return require('./Libraries/Components/StatusBar/StatusBar');\n  },\n  get Switch(): Switch {\n    return require('./Libraries/Components/Switch/Switch').default;\n  },\n  get Text(): Text {\n    return require('./Libraries/Text/Text');\n  },\n  get TextInput(): TextInput {\n    return require('./Libraries/Components/TextInput/TextInput');\n  },\n  get Touchable(): Touchable {\n    return require('./Libraries/Components/Touchable/Touchable').default;\n  },\n  get TouchableHighlight(): TouchableHighlight {\n    return require('./Libraries/Components/Touchable/TouchableHighlight');\n  },\n  get TouchableNativeFeedback(): TouchableNativeFeedback {\n    return require('./Libraries/Components/Touchable/TouchableNativeFeedback');\n  },\n  get TouchableOpacity(): TouchableOpacity {\n    return require('./Libraries/Components/Touchable/TouchableOpacity');\n  },\n  get TouchableWithoutFeedback(): TouchableWithoutFeedback {\n    return require('./Libraries/Components/Touchable/TouchableWithoutFeedback');\n  },\n  get View(): View {\n    return require('./Libraries/Components/View/View');\n  },\n  get VirtualizedList(): VirtualizedList {\n    return require('./Libraries/Lists/VirtualizedList');\n  },\n  get VirtualizedSectionList(): VirtualizedSectionList {\n    return require('./Libraries/Lists/VirtualizedSectionList');\n  },\n\n  // APIs\n  get ActionSheetIOS(): ActionSheetIOS {\n    return require('./Libraries/ActionSheetIOS/ActionSheetIOS');\n  },\n  get Alert(): Alert {\n    return require('./Libraries/Alert/Alert');\n  },\n  // Include any types exported in the Animated module together with its default export, so\n  // you can references types such as Animated.Numeric\n  get Animated(): {...$Diff<AnimatedModule, {default: any}>, ...Animated} {\n    // $FlowExpectedError[prop-missing]: we only return the default export, all other exports are types\n    return require('./Libraries/Animated/Animated').default;\n  },\n  get Appearance(): Appearance {\n    return require('./Libraries/Utilities/Appearance');\n  },\n  get AppRegistry(): AppRegistry {\n    return require('./Libraries/ReactNative/AppRegistry');\n  },\n  get AppState(): AppState {\n    return require('./Libraries/AppState/AppState');\n  },\n  get BackHandler(): BackHandler {\n    return require('./Libraries/Utilities/BackHandler');\n  },\n  get Clipboard(): Clipboard {\n    warnOnce(\n      'clipboard-moved',\n      'Clipboard has been extracted from react-native core and will be removed in a future release. ' +\n        \"It can now be installed and imported from '@react-native-clipboard/clipboard' instead of 'react-native'. \" +\n        'See https://github.com/react-native-clipboard/clipboard',\n    );\n    return require('./Libraries/Components/Clipboard/Clipboard');\n  },\n  get DeviceInfo(): DeviceInfo {\n    return require('./Libraries/Utilities/DeviceInfo');\n  },\n  get DevSettings(): DevSettings {\n    return require('./Libraries/Utilities/DevSettings');\n  },\n  get Dimensions(): Dimensions {\n    return require('./Libraries/Utilities/Dimensions').default;\n  },\n  get Easing(): Easing {\n    return require('./Libraries/Animated/Easing').default;\n  },\n  get findNodeHandle(): $PropertyType<ReactNative, 'findNodeHandle'> {\n    return require('./Libraries/ReactNative/RendererProxy').findNodeHandle;\n  },\n  get I18nManager(): I18nManager {\n    return require('./Libraries/ReactNative/I18nManager');\n  },\n  get InteractionManager(): InteractionManager {\n    return require('./Libraries/Interaction/InteractionManager');\n  },\n  get Keyboard(): Keyboard {\n    return require('./Libraries/Components/Keyboard/Keyboard');\n  },\n  get LayoutAnimation(): LayoutAnimation {\n    return require('./Libraries/LayoutAnimation/LayoutAnimation');\n  },\n  get Linking(): Linking {\n    return require('./Libraries/Linking/Linking');\n  },\n  get LogBox(): LogBox {\n    return require('./Libraries/LogBox/LogBox').default;\n  },\n  get NativeDialogManagerAndroid(): NativeDialogManagerAndroid {\n    return require('./Libraries/NativeModules/specs/NativeDialogManagerAndroid')\n      .default;\n  },\n  get NativeEventEmitter(): NativeEventEmitter {\n    return require('./Libraries/EventEmitter/NativeEventEmitter').default;\n  },\n  get Networking(): Networking {\n    return require('./Libraries/Network/RCTNetworking').default;\n  },\n  get PanResponder(): PanResponder {\n    return require('./Libraries/Interaction/PanResponder').default;\n  },\n  get PermissionsAndroid(): PermissionsAndroid {\n    return require('./Libraries/PermissionsAndroid/PermissionsAndroid');\n  },\n  get PixelRatio(): PixelRatio {\n    return require('./Libraries/Utilities/PixelRatio').default;\n  },\n  get PushNotificationIOS(): PushNotificationIOS {\n    warnOnce(\n      'pushNotificationIOS-moved',\n      'PushNotificationIOS has been extracted from react-native core and will be removed in a future release. ' +\n        \"It can now be installed and imported from '@react-native-community/push-notification-ios' instead of 'react-native'. \" +\n        'See https://github.com/react-native-push-notification/ios',\n    );\n    return require('./Libraries/PushNotificationIOS/PushNotificationIOS');\n  },\n  get Settings(): Settings {\n    return require('./Libraries/Settings/Settings');\n  },\n  get Share(): Share {\n    return require('./Libraries/Share/Share');\n  },\n  get StyleSheet(): StyleSheet {\n    return require('./Libraries/StyleSheet/StyleSheet');\n  },\n  get Systrace(): Systrace {\n    return require('./Libraries/Performance/Systrace');\n  },\n  // $FlowFixMe[value-as-type]\n  get ToastAndroid(): ToastAndroid {\n    return require('./Libraries/Components/ToastAndroid/ToastAndroid');\n  },\n  get TurboModuleRegistry(): TurboModuleRegistry {\n    return require('./Libraries/TurboModule/TurboModuleRegistry');\n  },\n  get UIManager(): UIManager {\n    return require('./Libraries/ReactNative/UIManager');\n  },\n  get unstable_batchedUpdates(): $PropertyType<\n    ReactNative,\n    'unstable_batchedUpdates',\n  > {\n    return require('./Libraries/ReactNative/RendererProxy')\n      .unstable_batchedUpdates;\n  },\n  get useAnimatedValue(): useAnimatedValue {\n    return require('./Libraries/Animated/useAnimatedValue').default;\n  },\n  get useColorScheme(): useColorScheme {\n    return require('./Libraries/Utilities/useColorScheme').default;\n  },\n  get useWindowDimensions(): useWindowDimensions {\n    return require('./Libraries/Utilities/useWindowDimensions').default;\n  },\n  get UTFSequence(): UTFSequence {\n    return require('./Libraries/UTFSequence').default;\n  },\n  get Vibration(): Vibration {\n    return require('./Libraries/Vibration/Vibration');\n  },\n  get YellowBox(): YellowBox {\n    return require('./Libraries/YellowBox/YellowBoxDeprecated');\n  },\n\n  // Plugins\n  get DeviceEventEmitter(): RCTDeviceEventEmitter {\n    return require('./Libraries/EventEmitter/RCTDeviceEventEmitter').default;\n  },\n  get DynamicColorIOS(): DynamicColorIOS {\n    return require('./Libraries/StyleSheet/PlatformColorValueTypesIOS')\n      .DynamicColorIOS;\n  },\n  get NativeAppEventEmitter(): RCTNativeAppEventEmitter {\n    return require('./Libraries/EventEmitter/RCTNativeAppEventEmitter');\n  },\n  get NativeModules(): NativeModules {\n    return require('./Libraries/BatchedBridge/NativeModules');\n  },\n  get Platform(): Platform {\n    return require('./Libraries/Utilities/Platform');\n  },\n  get PlatformColor(): PlatformColor {\n    return require('./Libraries/StyleSheet/PlatformColorValueTypes')\n      .PlatformColor;\n  },\n  get processColor(): processColor {\n    return require('./Libraries/StyleSheet/processColor').default;\n  },\n  get requireNativeComponent(): <T>(\n    uiViewClassName: string,\n  ) => HostComponent<T> {\n    return require('./Libraries/ReactNative/requireNativeComponent').default;\n  },\n  get RootTagContext(): RootTagContext {\n    return require('./Libraries/ReactNative/RootTag').RootTagContext;\n  },\n  get unstable_enableLogBox(): () => void {\n    return () =>\n      console.warn(\n        'LogBox is enabled by default so there is no need to call unstable_enableLogBox() anymore. This is a no op and will be removed in the next version.',\n      );\n  },\n};\n\nif (__DEV__) {\n  /* $FlowFixMe[prop-missing] This is intentional: Flow will error when\n   * attempting to access ART. */\n  /* $FlowFixMe[invalid-export] This is intentional: Flow will error when\n   * attempting to access ART. */\n  Object.defineProperty(module.exports, 'ART', {\n    configurable: true,\n    get() {\n      invariant(\n        false,\n        'ART has been removed from React Native. ' +\n          \"Please upgrade to use either 'react-native-svg' or a similar package. \" +\n          \"If you cannot upgrade to a different library, please install the deprecated '@react-native-community/art' package. \" +\n          'See https://github.com/react-native-art/art',\n      );\n    },\n  });\n\n  /* $FlowFixMe[prop-missing] This is intentional: Flow will error when\n   * attempting to access ListView. */\n  /* $FlowFixMe[invalid-export] This is intentional: Flow will error when\n   * attempting to access ListView. */\n  Object.defineProperty(module.exports, 'ListView', {\n    configurable: true,\n    get() {\n      invariant(\n        false,\n        'ListView has been removed from React Native. ' +\n          'See https://fb.me/nolistview for more information or use ' +\n          '`deprecated-react-native-listview`.',\n      );\n    },\n  });\n\n  /* $FlowFixMe[prop-missing] This is intentional: Flow will error when\n   * attempting to access SwipeableListView. */\n  /* $FlowFixMe[invalid-export] This is intentional: Flow will error when\n   * attempting to access SwipeableListView. */\n  Object.defineProperty(module.exports, 'SwipeableListView', {\n    configurable: true,\n    get() {\n      invariant(\n        false,\n        'SwipeableListView has been removed from React Native. ' +\n          'See https://fb.me/nolistview for more information or use ' +\n          '`deprecated-react-native-swipeable-listview`.',\n      );\n    },\n  });\n\n  /* $FlowFixMe[prop-missing] This is intentional: Flow will error when\n   * attempting to access WebView. */\n  /* $FlowFixMe[invalid-export] This is intentional: Flow will error when\n   * attempting to access WebView. */\n  Object.defineProperty(module.exports, 'WebView', {\n    configurable: true,\n    get() {\n      invariant(\n        false,\n        'WebView has been removed from React Native. ' +\n          \"It can now be installed and imported from 'react-native-webview' instead of 'react-native'. \" +\n          'See https://github.com/react-native-webview/react-native-webview',\n      );\n    },\n  });\n\n  /* $FlowFixMe[prop-missing] This is intentional: Flow will error when\n   * attempting to access NetInfo. */\n  /* $FlowFixMe[invalid-export] This is intentional: Flow will error when\n   * attempting to access NetInfo. */\n  Object.defineProperty(module.exports, 'NetInfo', {\n    configurable: true,\n    get() {\n      invariant(\n        false,\n        'NetInfo has been removed from React Native. ' +\n          \"It can now be installed and imported from '@react-native-community/netinfo' instead of 'react-native'. \" +\n          'See https://github.com/react-native-netinfo/react-native-netinfo',\n      );\n    },\n  });\n\n  /* $FlowFixMe[prop-missing] This is intentional: Flow will error when\n   * attempting to access CameraRoll. */\n  /* $FlowFixMe[invalid-export] This is intentional: Flow will error when\n   * attempting to access CameraRoll. */\n  Object.defineProperty(module.exports, 'CameraRoll', {\n    configurable: true,\n    get() {\n      invariant(\n        false,\n        'CameraRoll has been removed from React Native. ' +\n          \"It can now be installed and imported from '@react-native-camera-roll/camera-roll' instead of 'react-native'. \" +\n          'See https://github.com/react-native-cameraroll/react-native-cameraroll',\n      );\n    },\n  });\n\n  /* $FlowFixMe[prop-missing] This is intentional: Flow will error when\n   * attempting to access ImageStore. */\n  /* $FlowFixMe[invalid-export] This is intentional: Flow will error when\n   * attempting to access ImageStore. */\n  Object.defineProperty(module.exports, 'ImageStore', {\n    configurable: true,\n    get() {\n      invariant(\n        false,\n        'ImageStore has been removed from React Native. ' +\n          'To get a base64-encoded string from a local image use either of the following third-party libraries:' +\n          \"* expo-file-system: `readAsStringAsync(filepath, 'base64')`\" +\n          \"* react-native-fs: `readFile(filepath, 'base64')`\",\n      );\n    },\n  });\n\n  /* $FlowFixMe[prop-missing] This is intentional: Flow will error when\n   * attempting to access ImageEditor. */\n  /* $FlowFixMe[invalid-export] This is intentional: Flow will error when\n   * attempting to access ImageEditor. */\n  Object.defineProperty(module.exports, 'ImageEditor', {\n    configurable: true,\n    get() {\n      invariant(\n        false,\n        'ImageEditor has been removed from React Native. ' +\n          \"It can now be installed and imported from '@react-native-community/image-editor' instead of 'react-native'. \" +\n          'See https://github.com/callstack/react-native-image-editor',\n      );\n    },\n  });\n\n  /* $FlowFixMe[prop-missing] This is intentional: Flow will error when\n   * attempting to access TimePickerAndroid. */\n  /* $FlowFixMe[invalid-export] This is intentional: Flow will error when\n   * attempting to access TimePickerAndroid. */\n  Object.defineProperty(module.exports, 'TimePickerAndroid', {\n    configurable: true,\n    get() {\n      invariant(\n        false,\n        'TimePickerAndroid has been removed from React Native. ' +\n          \"It can now be installed and imported from '@react-native-community/datetimepicker' instead of 'react-native'. \" +\n          'See https://github.com/react-native-datetimepicker/datetimepicker',\n      );\n    },\n  });\n\n  /* $FlowFixMe[prop-missing] This is intentional: Flow will error when\n   * attempting to access ToolbarAndroid. */\n  /* $FlowFixMe[invalid-export] This is intentional: Flow will error when\n   * attempting to access ToolbarAndroid. */\n  Object.defineProperty(module.exports, 'ToolbarAndroid', {\n    configurable: true,\n    get() {\n      invariant(\n        false,\n        'ToolbarAndroid has been removed from React Native. ' +\n          \"It can now be installed and imported from '@react-native-community/toolbar-android' instead of 'react-native'. \" +\n          'See https://github.com/react-native-toolbar-android/toolbar-android',\n      );\n    },\n  });\n\n  /* $FlowFixMe[prop-missing] This is intentional: Flow will error when\n   * attempting to access ViewPagerAndroid. */\n  /* $FlowFixMe[invalid-export] This is intentional: Flow will error when\n   * attempting to access ViewPagerAndroid. */\n  Object.defineProperty(module.exports, 'ViewPagerAndroid', {\n    configurable: true,\n    get() {\n      invariant(\n        false,\n        'ViewPagerAndroid has been removed from React Native. ' +\n          \"It can now be installed and imported from 'react-native-pager-view' instead of 'react-native'. \" +\n          'See https://github.com/callstack/react-native-pager-view',\n      );\n    },\n  });\n\n  /* $FlowFixMe[prop-missing] This is intentional: Flow will error when\n   * attempting to access CheckBox. */\n  /* $FlowFixMe[invalid-export] This is intentional: Flow will error when\n   * attempting to access CheckBox. */\n  Object.defineProperty(module.exports, 'CheckBox', {\n    configurable: true,\n    get() {\n      invariant(\n        false,\n        'CheckBox has been removed from React Native. ' +\n          \"It can now be installed and imported from '@react-native-community/checkbox' instead of 'react-native'. \" +\n          'See https://github.com/react-native-checkbox/react-native-checkbox',\n      );\n    },\n  });\n\n  /* $FlowFixMe[prop-missing] This is intentional: Flow will error when\n   * attempting to access SegmentedControlIOS. */\n  /* $FlowFixMe[invalid-export] This is intentional: Flow will error when\n   * attempting to access SegmentedControlIOS. */\n  Object.defineProperty(module.exports, 'SegmentedControlIOS', {\n    configurable: true,\n    get() {\n      invariant(\n        false,\n        'SegmentedControlIOS has been removed from React Native. ' +\n          \"It can now be installed and imported from '@react-native-segmented-control/segmented-control' instead of 'react-native'.\" +\n          'See https://github.com/react-native-segmented-control/segmented-control',\n      );\n    },\n  });\n\n  /* $FlowFixMe[prop-missing] This is intentional: Flow will error when\n   * attempting to access StatusBarIOS. */\n  /* $FlowFixMe[invalid-export] This is intentional: Flow will error when\n   * attempting to access StatusBarIOS. */\n  Object.defineProperty(module.exports, 'StatusBarIOS', {\n    configurable: true,\n    get() {\n      invariant(\n        false,\n        'StatusBarIOS has been removed from React Native. ' +\n          'Has been merged with StatusBar. ' +\n          'See https://reactnative.dev/docs/statusbar',\n      );\n    },\n  });\n\n  /* $FlowFixMe[prop-missing] This is intentional: Flow will error when\n   * attempting to access PickerIOS. */\n  /* $FlowFixMe[invalid-export] This is intentional: Flow will error when\n   * attempting to access PickerIOS. */\n  Object.defineProperty(module.exports, 'PickerIOS', {\n    configurable: true,\n    get() {\n      invariant(\n        false,\n        'PickerIOS has been removed from React Native. ' +\n          \"It can now be installed and imported from '@react-native-picker/picker' instead of 'react-native'. \" +\n          'See https://github.com/react-native-picker/picker',\n      );\n    },\n  });\n\n  /* $FlowFixMe[prop-missing] This is intentional: Flow will error when\n   * attempting to access Picker. */\n  /* $FlowFixMe[invalid-export] This is intentional: Flow will error when\n   * attempting to access Picker. */\n  Object.defineProperty(module.exports, 'Picker', {\n    configurable: true,\n    get() {\n      invariant(\n        false,\n        'Picker has been removed from React Native. ' +\n          \"It can now be installed and imported from '@react-native-picker/picker' instead of 'react-native'. \" +\n          'See https://github.com/react-native-picker/picker',\n      );\n    },\n  });\n  /* $FlowFixMe[prop-missing] This is intentional: Flow will error when\n   * attempting to access DatePickerAndroid. */\n  /* $FlowFixMe[invalid-export] This is intentional: Flow will error when\n   * attempting to access DatePickerAndroid. */\n  Object.defineProperty(module.exports, 'DatePickerAndroid', {\n    configurable: true,\n    get() {\n      invariant(\n        false,\n        'DatePickerAndroid has been removed from React Native. ' +\n          \"It can now be installed and imported from '@react-native-community/datetimepicker' instead of 'react-native'. \" +\n          'See https://github.com/react-native-datetimepicker/datetimepicker',\n      );\n    },\n  });\n  /* $FlowFixMe[prop-missing] This is intentional: Flow will error when\n   * attempting to access MaskedViewIOS. */\n  /* $FlowFixMe[invalid-export] This is intentional: Flow will error when\n   * attempting to access MaskedViewIOS. */\n  Object.defineProperty(module.exports, 'MaskedViewIOS', {\n    configurable: true,\n    get() {\n      invariant(\n        false,\n        'MaskedViewIOS has been removed from React Native. ' +\n          \"It can now be installed and imported from '@react-native-masked-view/masked-view' instead of 'react-native'. \" +\n          'See https://github.com/react-native-masked-view/masked-view',\n      );\n    },\n  });\n  /* $FlowFixMe[prop-missing] This is intentional: Flow will error when\n   * attempting to access AsyncStorage. */\n  /* $FlowFixMe[invalid-export] This is intentional: Flow will error when\n   * attempting to access AsyncStorage. */\n  Object.defineProperty(module.exports, 'AsyncStorage', {\n    configurable: true,\n    get() {\n      invariant(\n        false,\n        'AsyncStorage has been removed from react-native core. ' +\n          \"It can now be installed and imported from '@react-native-async-storage/async-storage' instead of 'react-native'. \" +\n          'See https://github.com/react-native-async-storage/async-storage',\n      );\n    },\n  });\n  /* $FlowFixMe[prop-missing] This is intentional: Flow will error when\n   * attempting to access ImagePickerIOS. */\n  /* $FlowFixMe[invalid-export] This is intentional: Flow will error when\n   * attempting to access ImagePickerIOS. */\n  Object.defineProperty(module.exports, 'ImagePickerIOS', {\n    configurable: true,\n    get() {\n      invariant(\n        false,\n        'ImagePickerIOS has been removed from React Native. ' +\n          \"Please upgrade to use either 'react-native-image-picker' or 'expo-image-picker'. \" +\n          \"If you cannot upgrade to a different library, please install the deprecated '@react-native-community/image-picker-ios' package. \" +\n          'See https://github.com/rnc-archive/react-native-image-picker-ios',\n      );\n    },\n  });\n  /* $FlowFixMe[prop-missing] This is intentional: Flow will error when\n   * attempting to access ProgressViewIOS. */\n  /* $FlowFixMe[invalid-export] This is intentional: Flow will error when\n   * attempting to access ProgressViewIOS. */\n  Object.defineProperty(module.exports, 'ProgressViewIOS', {\n    configurable: true,\n    get() {\n      invariant(\n        false,\n        'ProgressViewIOS has been removed from react-native core. ' +\n          \"It can now be installed and imported from '@react-native-community/progress-view' instead of 'react-native'. \" +\n          'See https://github.com/react-native-progress-view/progress-view',\n      );\n    },\n  });\n  /* $FlowFixMe[prop-missing] This is intentional: Flow will error when\n   * attempting to access DatePickerIOS. */\n  /* $FlowFixMe[invalid-export] This is intentional: Flow will error when\n   * attempting to access DatePickerIOS. */\n  Object.defineProperty(module.exports, 'DatePickerIOS', {\n    configurable: true,\n    get() {\n      invariant(\n        false,\n        'DatePickerIOS has been removed from react-native core. ' +\n          \"It can now be installed and imported from '@react-native-community/datetimepicker' instead of 'react-native'. \" +\n          'See https://github.com/react-native-datetimepicker/datetimepicker',\n      );\n    },\n  });\n  /* $FlowFixMe[prop-missing] This is intentional: Flow will error when\n   * attempting to access Slider. */\n  /* $FlowFixMe[invalid-export] This is intentional: Flow will error when\n   * attempting to access Slider. */\n  Object.defineProperty(module.exports, 'Slider', {\n    configurable: true,\n    get() {\n      invariant(\n        false,\n        'Slider has been removed from react-native core. ' +\n          \"It can now be installed and imported from '@react-native-community/slider' instead of 'react-native'. \" +\n          'See https://github.com/callstack/react-native-slider',\n      );\n    },\n  });\n}\n"],"names":["androidScaleSuffix","ANDROID_BASE_DENSITY","drawableFileTypes","Set","getBasePath","asset","basePath","httpServerLocation","startsWith","slice","module","exports","getAndroidResourceFolderName","scale","has","type","suffix","toString","Number","isFinite","Math","round","Error","getAndroidAssetSuffix","JSON","stringify","getAndroidResourceIdentifier","name","toLowerCase","replace","assets","registerAsset","push","getAssetByID","assetId","requireModule","message","isBridgeless","isTurboModuleInteropEnabled","moduleLoadHistory","invariant","_invariant","_interopRequireDefault","require","NativeModules","turboModuleProxy","global","__turboModuleProxy","TurboModules","NotFound","RN$Bridgeless","RN$TurboInterop","legacyModule","includes","UTFSequence","deepFreezeAndThrowOnMutationInDev","BOM","BULLET","BULLET_SP","MIDDOT","MIDDOT_SP","MIDDOT_KATAKANA","MDASH","MDASH_SP","NDASH","NDASH_SP","NEWLINE","NBSP","PIZZA","TRIANGLE_LEFT","TRIANGLE_RIGHT","_NativeEventEmitter","_Platform","_EventEmitter","_NativeAppearance","eventEmitter","EventEmitter","NativeAppearance","NativeEventEmitter","Platform","OS","addListener","newAppearance","colorScheme","emit","getColorScheme","nativeColorScheme","setColorScheme","addChangeListener","listener","emptyFunction","BackHandler","exitApp","addEventListener","_eventName","_handler","remove","removeEventListener","addMenuItem","title","handler","reload","reason","onFastRefresh","_NativeDeviceInfo","NativeDeviceInfo","dimensions","_RCTDeviceEventEmitter","dimensionsInitialized","Dimensions","_createClass2","default","_classCallCheck2","key","value","dim","dims","screen","window","windowPhysicalPixels","width","height","fontScale","screenPhysicalPixels","RCTDeviceEventEmitter","update","set","getConstants","isNativeFunction","f","indexOf","hasNativeConstructor","o","expectedName","con","Object","getPrototypeOf","constructor","GlobalPerformanceLogger","createPerformanceLogger","HMRClientProdShim","setup","enable","console","error","disable","registerBundle","log","e","r","__esModule","t","_getRequireWildcardCache","get","n","__proto__","a","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","_interopRequireWildcard","WeakMap","keys","forEach","prototype","_exportNames","enumerable","_NativePlatformConstantsIOS","NativePlatformConstantsIOS","useContext","PerformanceLoggerContext","_GlobalPerformanceLogger","_react","createContext","PixelRatio","layoutSize","ratio","__constants","Version","this","constants","osVersion","isPad","interfaceIdiom","isTV","isVision","isTesting","isDisableAnimations","_this$constants$isDis","isMacCatalyst","_this$constants$isMac","select","spec","ios","native","defineLazyObjectProperty","polyfillObjectProperty","object","getValue","descriptor","_ref","writable","_ref$configurable","configurable","polyfillGlobal","levelsMap","info","warn","fatal","warningHandler","RCTLog","logIfNoNativeHook","level","_len","arguments","length","args","Array","_key","nativeLoggingHook","logToConsole","apply","concat","_console","logFn","_len2","_key2","setWarningHandler","_listeners","_activeScene","SceneTracker","setActiveScene","scene","getActiveScene","addActiveSceneChangedListener","callback","filter","base64","data","ArrayBuffer","Uint8Array","fromByteArray","isView","buffer","byteOffset","byteLength","dispatchCommand","options","commandObj","supportedCommands","command","ref","_requireNativeComponent","_UIManager","componentName","componentNameInUse","paperComponentName","paperComponentNameDeprecated","UIManager","hasViewManagerConfig","_options$paperCompone","requireNativeComponent","PerformanceLogger","_global$nativeQPLTime","Systrace","_cookies","getCurrentTimestamp","nativeQPLTimestamp","performance","now","_timespans","_extras","_points","_pointExtras","_closed","startTime","endTime","startExtras","endExtras","totalTime","performanceLogger","assign","getTimespans","getExtras","getPoints","getPointExtras","_this$_timespans$_key","timestamp","undefined","extras","beginAsyncEvent","timespan","endAsyncEvent","valueSet","setValue","newValue","logListeners","deepDiffer","one","two","maxDepthOrOptions","maxDepth","unsafelyIgnoreFunctions","onDifferentFunctionsIgnored","isArray","len","ii","twoKey","unstable_setLogListeners","listeners","dummyInsets","top","left","right","bottom","dummyPoint","x","y","dummySize","defaultedOne","defaultedTwo","TextInputState","blurTextInput","currentlyFocusedInput","err","stack","createStringifySafeWithLimits","limits","_limits$maxDepth","POSITIVE_INFINITY","_limits$maxStringLimi","maxStringLimit","_limits$maxArrayLimit","maxArrayLimit","_limits$maxObjectKeys","maxObjectKeysLimit","replacer","shift","truncatedString","substring","retval","k","unshift","arg","ret","E","stringifySafe","useSyncExternalStore","subscribe","Appearance","_Appearance","onStoreChange","appearanceSubscription","refs","useCallback","current","effect","cleanupRef","useRef","instance","_useState","useState","_useState2","_slicedToArray2","setDimensions","useEffect","handleChange","subscription","_Dimensions","nativeViewConfig","staticViewConfig","prop","diff","lefthandObjectDiff","_staticViewConfig$uiV","uiViewClassName","join","viewConfig","propName","PlatformBaseViewConfig","reduce","obj","val","_PlatformBaseViewConfig","IGNORED_KEYS","leftObj","rightObj","differentKeys","compare","leftItem","rightItem","objDiff","warnedKeys","_NativeVibration","NativeVibration","_vibrating","_id","_default_vibration_length","vibrateByPattern","pattern","repeat","vibrate","setTimeout","vibrateScheduler","id","nextIndex","Vibration","cancel","_NativeWebSocketModule","NativeWebSocketModule","_Blob","_BlobManager","_binaryToBase","_WebSocketEvent","_base64Js","_eventTargetShim","_excluded","_callSuper","_getPrototypeOf2","_possibleConstructorReturn2","_isNativeReflectConstruct","Reflect","construct","Boolean","valueOf","nextWebSocketId","WebSocket","url","protocols","_this","CONNECTING","OPEN","CLOSING","CLOSED","readyState","_ref2","_ref2$headers","headers","unrecognized","_objectWithoutProperties2","origin","_eventEmitter","_socketId","_registerEvents","connect","_inherits2","_binaryType","binaryType","BlobManager","isAvailable","addWebSocketHandler","removeWebSocketHandler","code","_close","Blob","sendOverSocket","sendBinary","binaryToBase64","send","ping","statusCode","closeReason","close","_subscriptions","_this2","ev","toByteArray","createFromOptions","dispatchEvent","WebSocketEvent","protocol","_unregisterEvents","EventTarget","eventInitDict","YellowBox","_React$Component2","patterns","Component","ErrorUtils","_registry","eventType","context","TypeError","registrations","registry","allocate","_classPrivateFieldLooseBase2","registration","delete","add","from","size","warnOnce","registerCallableModule","AccessibilityInfo","ActivityIndicator","Button","DrawerLayoutAndroid","FlatList","Image","ImageBackground","InputAccessoryView","KeyboardAvoidingView","Modal","Pressable","ProgressBarAndroid","RefreshControl","SafeAreaView","ScrollView","SectionList","StatusBar","Switch","Text","TextInput","Touchable","TouchableHighlight","TouchableNativeFeedback","TouchableOpacity","TouchableWithoutFeedback","View","VirtualizedList","VirtualizedSectionList","ActionSheetIOS","Alert","Animated","AppRegistry","AppState","Clipboard","DeviceInfo","DevSettings","Easing","findNodeHandle","I18nManager","InteractionManager","Keyboard","LayoutAnimation","Linking","LogBox","NativeDialogManagerAndroid","Networking","PanResponder","PermissionsAndroid","PushNotificationIOS","Settings","Share","StyleSheet","ToastAndroid","TurboModuleRegistry","unstable_batchedUpdates","useAnimatedValue","useColorScheme","useWindowDimensions","DeviceEventEmitter","DynamicColorIOS","NativeAppEventEmitter","PlatformColor","processColor","RootTagContext","unstable_enableLogBox"],"sourceRoot":""}