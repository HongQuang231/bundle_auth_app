{"version":3,"file":"vendors-37853768.bundle","mappings":"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","sources":["webpack:///./node_modules/react-native/Libraries/PushNotificationIOS/NativePushNotificationManagerIOS.js","webpack:///./node_modules/react-native/Libraries/PushNotificationIOS/PushNotificationIOS.js","webpack:///./node_modules/react-native/Libraries/ReactNative/AppContainer-prod.js","webpack:///./node_modules/react-native/Libraries/ReactNative/AppContainer.js","webpack:///./node_modules/react-native/Libraries/ReactNative/AppRegistry.js","webpack:///./node_modules/react-native/Libraries/ReactNative/BridgelessUIManager.js","webpack:///./node_modules/react-native/Libraries/ReactNative/DisplayMode.js","webpack:///./node_modules/react-native/Libraries/ReactNative/FabricUIManager.js","webpack:///./node_modules/react-native/Libraries/ReactNative/HeadlessJsTaskError.js","webpack:///./node_modules/react-native/Libraries/ReactNative/I18nManager.js","webpack:///./node_modules/react-native/Libraries/ReactNative/NativeHeadlessJsTaskSupport.js","webpack:///./node_modules/react-native/Libraries/ReactNative/NativeI18nManager.js","webpack:///./node_modules/react-native/Libraries/ReactNative/NativeUIManager.js","webpack:///./node_modules/react-native/Libraries/ReactNative/PaperUIManager.js","webpack:///./node_modules/react-native/Libraries/ReactNative/ReactFabricPublicInstance/ReactFabricHostComponent.js","webpack:///./node_modules/react-native/Libraries/ReactNative/ReactFabricPublicInstance/ReactFabricPublicInstance.js","webpack:///./node_modules/react-native/Libraries/ReactNative/ReactFabricPublicInstance/ReactFabricPublicInstanceUtils.js","webpack:///./node_modules/react-native/Libraries/ReactNative/ReactFabricPublicInstance/ReactNativeAttributePayload.js","webpack:///./node_modules/react-native/Libraries/ReactNative/ReactFabricPublicInstance/warnForStyleProps.js","webpack:///./node_modules/react-native/Libraries/ReactNative/ReactNativeFeatureFlags.js","webpack:///./node_modules/react-native/Libraries/ReactNative/RendererImplementation.js","webpack:///./node_modules/react-native/Libraries/ReactNative/RendererProxy.js","webpack:///./node_modules/react-native/Libraries/ReactNative/RootTag.js","webpack:///./node_modules/react-native/Libraries/ReactNative/UIManager.js","webpack:///./node_modules/react-native/Libraries/ReactNative/UIManagerProperties.js","webpack:///./node_modules/react-native/Libraries/ReactNative/getCachedComponentWithDebugName.js","webpack:///./node_modules/react-native/Libraries/ReactNative/getNativeComponentAttributes.js","webpack:///./node_modules/react-native/Libraries/ReactNative/renderApplication.js","webpack:///./node_modules/react-native/Libraries/ReactNative/requireNativeComponent.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nexport * from '../../src/private/specs/modules/NativePushNotificationManagerIOS';\nimport NativePushNotificationManagerIOS from '../../src/private/specs/modules/NativePushNotificationManagerIOS';\nexport default NativePushNotificationManagerIOS;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\nimport type {EventSubscription} from '../vendor/emitter/EventEmitter';\n\nimport NativeEventEmitter from '../EventEmitter/NativeEventEmitter';\nimport Platform from '../Utilities/Platform';\nimport NativePushNotificationManagerIOS from './NativePushNotificationManagerIOS';\nimport invariant from 'invariant';\n\ntype NativePushNotificationIOSEventDefinitions = {\n  remoteNotificationReceived: [\n    {\n      notificationId: string,\n      remote: boolean,\n      ...\n    },\n  ],\n  remoteNotificationsRegistered: [\n    {\n      deviceToken?: ?string,\n      ...\n    },\n  ],\n  remoteNotificationRegistrationError: [\n    {\n      message: string,\n      code: number,\n      details: {...},\n    },\n  ],\n  localNotificationReceived: [{...}],\n};\n\nconst PushNotificationEmitter =\n  new NativeEventEmitter<NativePushNotificationIOSEventDefinitions>(\n    // T88715063: NativeEventEmitter only used this parameter on iOS. Now it uses it on all platforms, so this code was modified automatically to preserve its behavior\n    // If you want to use the native module on other platforms, please remove this condition and test its behavior\n    Platform.OS !== 'ios' ? null : NativePushNotificationManagerIOS,\n  );\n\nconst _notifHandlers = new Map<string, void | EventSubscription>();\n\nconst DEVICE_NOTIF_EVENT = 'remoteNotificationReceived';\nconst NOTIF_REGISTER_EVENT = 'remoteNotificationsRegistered';\nconst NOTIF_REGISTRATION_ERROR_EVENT = 'remoteNotificationRegistrationError';\nconst DEVICE_LOCAL_NOTIF_EVENT = 'localNotificationReceived';\n\nexport type ContentAvailable = 1 | null | void;\n\nexport type FetchResult = {\n  NewData: string,\n  NoData: string,\n  ResultFailed: string,\n  ...\n};\n\n/**\n * An event emitted by PushNotificationIOS.\n */\nexport type PushNotificationEventName = $Keys<{\n  /**\n   * Fired when a remote notification is received. The handler will be invoked\n   * with an instance of `PushNotificationIOS`. This will handle notifications\n   * that arrive in the foreground or were tapped to open the app from the\n   * background.\n   */\n  notification: string,\n  /**\n   * Fired when a local notification is received. The handler will be invoked\n   * with an instance of `PushNotificationIOS`. This will handle notifications\n   * that arrive in the foreground or were tapped to open the app from the\n   * background.\n   */\n  localNotification: string,\n  /**\n   * Fired when the user registers for remote notifications. The handler will be\n   * invoked with a hex string representing the deviceToken.\n   */\n  register: string,\n  /**\n   * Fired when the user fails to register for remote notifications. Typically\n   * occurs due to APNS issues or if the device is a simulator. The handler\n   * will be invoked with {message: string, code: number, details: any}.\n   */\n  registrationError: string,\n  ...\n}>;\n\n/**\n *\n * Handle notifications for your app, including scheduling and permissions.\n *\n * See https://reactnative.dev/docs/pushnotificationios\n */\nclass PushNotificationIOS {\n  _data: Object;\n  _alert: string | Object;\n  _sound: string;\n  _category: string;\n  _contentAvailable: ContentAvailable;\n  _badgeCount: number;\n  _notificationId: string;\n  _isRemote: boolean;\n  _remoteNotificationCompleteCallbackCalled: boolean;\n  _threadID: string;\n\n  static FetchResult: FetchResult = {\n    NewData: 'UIBackgroundFetchResultNewData',\n    NoData: 'UIBackgroundFetchResultNoData',\n    ResultFailed: 'UIBackgroundFetchResultFailed',\n  };\n\n  /**\n   * Schedules a local notification for immediate presentation.\n   *\n   * See https://reactnative.dev/docs/pushnotificationios#presentlocalnotification\n   */\n  static presentLocalNotification(details: Object): void {\n    invariant(\n      NativePushNotificationManagerIOS,\n      'PushNotificationManager is not available.',\n    );\n    NativePushNotificationManagerIOS.presentLocalNotification(details);\n  }\n\n  /**\n   * Schedules a local notification for future presentation.\n   *\n   * See https://reactnative.dev/docs/pushnotificationios#schedulelocalnotification\n   */\n  static scheduleLocalNotification(details: Object): void {\n    invariant(\n      NativePushNotificationManagerIOS,\n      'PushNotificationManager is not available.',\n    );\n    NativePushNotificationManagerIOS.scheduleLocalNotification(details);\n  }\n\n  /**\n   * Cancels all scheduled local notifications.\n   *\n   * See https://reactnative.dev/docs/pushnotificationios#cancelalllocalnotifications\n   */\n  static cancelAllLocalNotifications(): void {\n    invariant(\n      NativePushNotificationManagerIOS,\n      'PushNotificationManager is not available.',\n    );\n    NativePushNotificationManagerIOS.cancelAllLocalNotifications();\n  }\n\n  /**\n   * Removes all delivered notifications from Notification Center.\n   *\n   * See https://reactnative.dev/docs/pushnotificationios#removealldeliverednotifications\n   */\n  static removeAllDeliveredNotifications(): void {\n    invariant(\n      NativePushNotificationManagerIOS,\n      'PushNotificationManager is not available.',\n    );\n    NativePushNotificationManagerIOS.removeAllDeliveredNotifications();\n  }\n\n  /**\n   * Provides a list of the app’s notifications that are currently displayed\n   * in Notification Center.\n   *\n   * See https://reactnative.dev/docs/pushnotificationios#getdeliverednotifications\n   */\n  static getDeliveredNotifications(\n    callback: (notifications: Array<Object>) => void,\n  ): void {\n    invariant(\n      NativePushNotificationManagerIOS,\n      'PushNotificationManager is not available.',\n    );\n    NativePushNotificationManagerIOS.getDeliveredNotifications(callback);\n  }\n\n  /**\n   * Removes the specified notifications from Notification Center.\n   *\n   * See https://reactnative.dev/docs/pushnotificationios#removedeliverednotifications\n   */\n  static removeDeliveredNotifications(identifiers: Array<string>): void {\n    invariant(\n      NativePushNotificationManagerIOS,\n      'PushNotificationManager is not available.',\n    );\n    NativePushNotificationManagerIOS.removeDeliveredNotifications(identifiers);\n  }\n\n  /**\n   * Sets the badge number for the app icon on the Home Screen.\n   *\n   * See https://reactnative.dev/docs/pushnotificationios#setapplicationiconbadgenumber\n   */\n  static setApplicationIconBadgeNumber(number: number): void {\n    invariant(\n      NativePushNotificationManagerIOS,\n      'PushNotificationManager is not available.',\n    );\n    NativePushNotificationManagerIOS.setApplicationIconBadgeNumber(number);\n  }\n\n  /**\n   * Gets the current badge number for the app icon on the Home Screen.\n   *\n   * See https://reactnative.dev/docs/pushnotificationios#getapplicationiconbadgenumber\n   */\n  static getApplicationIconBadgeNumber(callback: Function): void {\n    invariant(\n      NativePushNotificationManagerIOS,\n      'PushNotificationManager is not available.',\n    );\n    NativePushNotificationManagerIOS.getApplicationIconBadgeNumber(callback);\n  }\n\n  /**\n   * Cancels any scheduled local notifications which match the fields in the\n   * provided `userInfo`.\n   *\n   * See https://reactnative.dev/docs/pushnotificationios#cancellocalnotification\n   */\n  static cancelLocalNotifications(userInfo: Object): void {\n    invariant(\n      NativePushNotificationManagerIOS,\n      'PushNotificationManager is not available.',\n    );\n    NativePushNotificationManagerIOS.cancelLocalNotifications(userInfo);\n  }\n\n  /**\n   * Gets the list of local notifications that are currently scheduled.\n   *\n   * See https://reactnative.dev/docs/pushnotificationios#getscheduledlocalnotifications\n   */\n  static getScheduledLocalNotifications(callback: Function): void {\n    invariant(\n      NativePushNotificationManagerIOS,\n      'PushNotificationManager is not available.',\n    );\n    NativePushNotificationManagerIOS.getScheduledLocalNotifications(callback);\n  }\n\n  /**\n   * Attaches a listener to notification events including local notifications,\n   * remote notifications, and notification registration results.\n   *\n   * See https://reactnative.dev/docs/pushnotificationios#addeventlistener\n   */\n  static addEventListener(\n    type: PushNotificationEventName,\n    handler: Function,\n  ): void {\n    invariant(\n      type === 'notification' ||\n        type === 'register' ||\n        type === 'registrationError' ||\n        type === 'localNotification',\n      'PushNotificationIOS only supports `notification`, `register`, `registrationError`, and `localNotification` events',\n    );\n    let listener;\n    if (type === 'notification') {\n      listener = PushNotificationEmitter.addListener(\n        DEVICE_NOTIF_EVENT,\n        notifData => {\n          handler(new PushNotificationIOS(notifData));\n        },\n      );\n    } else if (type === 'localNotification') {\n      listener = PushNotificationEmitter.addListener(\n        DEVICE_LOCAL_NOTIF_EVENT,\n        notifData => {\n          handler(new PushNotificationIOS(notifData));\n        },\n      );\n    } else if (type === 'register') {\n      listener = PushNotificationEmitter.addListener(\n        NOTIF_REGISTER_EVENT,\n        registrationInfo => {\n          handler(registrationInfo.deviceToken);\n        },\n      );\n    } else if (type === 'registrationError') {\n      listener = PushNotificationEmitter.addListener(\n        NOTIF_REGISTRATION_ERROR_EVENT,\n        errorInfo => {\n          handler(errorInfo);\n        },\n      );\n    }\n    _notifHandlers.set(type, listener);\n  }\n\n  /**\n   * Removes the event listener. Do this in `componentWillUnmount` to prevent\n   * memory leaks.\n   *\n   * See https://reactnative.dev/docs/pushnotificationios#removeeventlistener\n   */\n  static removeEventListener(type: PushNotificationEventName): void {\n    invariant(\n      type === 'notification' ||\n        type === 'register' ||\n        type === 'registrationError' ||\n        type === 'localNotification',\n      'PushNotificationIOS only supports `notification`, `register`, `registrationError`, and `localNotification` events',\n    );\n    const listener = _notifHandlers.get(type);\n    if (!listener) {\n      return;\n    }\n    listener.remove();\n    _notifHandlers.delete(type);\n  }\n\n  /**\n   * Requests notification permissions from iOS, prompting the user with a\n   * dialog box. By default, it will request all notification permissions, but\n   * you can optionally specify which permissions to request.\n   *\n   * See https://reactnative.dev/docs/pushnotificationios#requestpermissions\n   */\n  static requestPermissions(permissions?: {\n    alert?: boolean,\n    badge?: boolean,\n    sound?: boolean,\n    ...\n  }): Promise<{\n    alert: boolean,\n    badge: boolean,\n    sound: boolean,\n    ...\n  }> {\n    let requestedPermissions = {\n      alert: true,\n      badge: true,\n      sound: true,\n    };\n    if (permissions) {\n      requestedPermissions = {\n        alert: !!permissions.alert,\n        badge: !!permissions.badge,\n        sound: !!permissions.sound,\n      };\n    }\n    invariant(\n      NativePushNotificationManagerIOS,\n      'PushNotificationManager is not available.',\n    );\n    return NativePushNotificationManagerIOS.requestPermissions(\n      requestedPermissions,\n    );\n  }\n\n  /**\n   * Unregister for all remote notifications received via Apple Push Notification\n   * service. This should be called in rare circumstances only.\n   *\n   * See https://reactnative.dev/docs/pushnotificationios#abandonpermissions\n   */\n  static abandonPermissions(): void {\n    invariant(\n      NativePushNotificationManagerIOS,\n      'PushNotificationManager is not available.',\n    );\n    NativePushNotificationManagerIOS.abandonPermissions();\n  }\n\n  /**\n   * Check which push permissions are currently enabled. `callback` will be\n   * invoked with a `Permissions` object.\n   *\n   * See https://reactnative.dev/docs/pushnotificationios#checkpermissions\n   */\n  static checkPermissions(callback: Function): void {\n    invariant(typeof callback === 'function', 'Must provide a valid callback');\n    invariant(\n      NativePushNotificationManagerIOS,\n      'PushNotificationManager is not available.',\n    );\n    NativePushNotificationManagerIOS.checkPermissions(callback);\n  }\n\n  /**\n   * This method returns a promise that resolves to either the notification\n   * object if the app was launched by a push notification, or `null` otherwise.\n   *\n   * See https://reactnative.dev/docs/pushnotificationios#getinitialnotification\n   */\n  static getInitialNotification(): Promise<?PushNotificationIOS> {\n    invariant(\n      NativePushNotificationManagerIOS,\n      'PushNotificationManager is not available.',\n    );\n    return NativePushNotificationManagerIOS.getInitialNotification().then(\n      notification => {\n        return notification && new PushNotificationIOS(notification);\n      },\n    );\n  }\n\n  /**\n   * This method returns a promise that resolves to the current notification\n   * authorization status. See UNAuthorizationStatus for possible values.\n   */\n  static getAuthorizationStatus(\n    callback: (authorizationStatus: number) => void,\n  ): void {\n    invariant(\n      NativePushNotificationManagerIOS,\n      'PushNotificationManager is not available.',\n    );\n\n    NativePushNotificationManagerIOS.getAuthorizationStatus(callback);\n  }\n\n  /**\n   * You will never need to instantiate `PushNotificationIOS` yourself.\n   * Listening to the `notification` event and invoking\n   * `getInitialNotification` is sufficient.\n   *\n   */\n  constructor(nativeNotif: Object) {\n    this._data = {};\n    this._remoteNotificationCompleteCallbackCalled = false;\n    this._isRemote = nativeNotif.remote;\n    if (this._isRemote) {\n      this._notificationId = nativeNotif.notificationId;\n    }\n\n    if (nativeNotif.remote) {\n      // Extract data from Apple's `aps` dict as defined:\n      // https://developer.apple.com/library/ios/documentation/NetworkingInternet/Conceptual/RemoteNotificationsPG/Chapters/ApplePushService\n      Object.keys(nativeNotif).forEach(notifKey => {\n        const notifVal = nativeNotif[notifKey];\n        if (notifKey === 'aps') {\n          this._alert = notifVal.alert;\n          this._sound = notifVal.sound;\n          this._badgeCount = notifVal.badge;\n          this._category = notifVal.category;\n          this._contentAvailable = notifVal['content-available'];\n          this._threadID = notifVal['thread-id'];\n        } else {\n          this._data[notifKey] = notifVal;\n        }\n      });\n    } else {\n      // Local notifications aren't being sent down with `aps` dict.\n      this._badgeCount = nativeNotif.applicationIconBadgeNumber;\n      this._sound = nativeNotif.soundName;\n      this._alert = nativeNotif.alertBody;\n      this._data = nativeNotif.userInfo;\n      this._category = nativeNotif.category;\n    }\n  }\n\n  /**\n   * This method is available for remote notifications that have been received via:\n   * `application:didReceiveRemoteNotification:fetchCompletionHandler:`. See docs\n   * for more information.\n   *\n   * See https://reactnative.dev/docs/pushnotificationios#finish\n   */\n  finish(fetchResult: string): void {\n    if (\n      !this._isRemote ||\n      !this._notificationId ||\n      this._remoteNotificationCompleteCallbackCalled\n    ) {\n      return;\n    }\n    this._remoteNotificationCompleteCallbackCalled = true;\n\n    invariant(\n      NativePushNotificationManagerIOS,\n      'PushNotificationManager is not available.',\n    );\n    NativePushNotificationManagerIOS.onFinishRemoteNotification(\n      this._notificationId,\n      fetchResult,\n    );\n  }\n\n  /**\n   * An alias for `getAlert` to get the notification's main message string.\n   */\n  getMessage(): ?string | ?Object {\n    // alias because \"alert\" is an ambiguous name\n    return this._alert;\n  }\n\n  /**\n   * Gets the sound string from the `aps` object. This will be `null` for local\n   * notifications.\n   *\n   * See https://reactnative.dev/docs/pushnotificationios#getsound\n   */\n  getSound(): ?string {\n    return this._sound;\n  }\n\n  /**\n   * Gets the category string from the `aps` object.\n   *\n   * See https://reactnative.dev/docs/pushnotificationios#getcategory\n   */\n  getCategory(): ?string {\n    return this._category;\n  }\n\n  /**\n   * Gets the notification's main message from the `aps` object. Also see the\n   * alias: `getMessage()`.\n   *\n   * See https://reactnative.dev/docs/pushnotificationios#getalert\n   */\n  getAlert(): ?string | ?Object {\n    return this._alert;\n  }\n\n  /**\n   * Gets the content-available number from the `aps` object.\n   *\n   * See https://reactnative.dev/docs/pushnotificationios#getcontentavailable\n   */\n  getContentAvailable(): ContentAvailable {\n    return this._contentAvailable;\n  }\n\n  /**\n   * Gets the badge count number from the `aps` object.\n   *\n   * See https://reactnative.dev/docs/pushnotificationios#getbadgecount\n   */\n  getBadgeCount(): ?number {\n    return this._badgeCount;\n  }\n\n  /**\n   * Gets the data object on the notification.\n   *\n   * See https://reactnative.dev/docs/pushnotificationios#getdata\n   */\n  getData(): ?Object {\n    return this._data;\n  }\n\n  /**\n   * Gets the thread ID on the notification.\n   *\n   * See https://reactnative.dev/docs/pushnotificationios#getthreadid\n   */\n  getThreadID(): ?string {\n    return this._threadID;\n  }\n}\n\nmodule.exports = PushNotificationIOS;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n * @oncall react_native\n */\n\nimport type {Props} from './AppContainer';\n\nimport View from '../Components/View/View';\nimport StyleSheet from '../StyleSheet/StyleSheet';\nimport {RootTagContext, createRootTag} from './RootTag';\nimport * as React from 'react';\n\nconst AppContainer = ({\n  children,\n  fabric,\n  initialProps,\n  rootTag,\n  showArchitectureIndicator,\n  WrapperComponent,\n}: Props): React.Node => {\n  let innerView = children;\n\n  if (WrapperComponent != null) {\n    innerView = (\n      <WrapperComponent\n        initialProps={initialProps}\n        fabric={fabric === true}\n        showArchitectureIndicator={showArchitectureIndicator === true}>\n        {innerView}\n      </WrapperComponent>\n    );\n  }\n\n  return (\n    <RootTagContext.Provider value={createRootTag(rootTag)}>\n      <View style={styles.root} pointerEvents=\"box-none\">\n        {innerView}\n      </View>\n    </RootTagContext.Provider>\n  );\n};\n\nconst styles = StyleSheet.create({\n  root: {flex: 1},\n});\n\nexport default AppContainer;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\nimport type {RootTag} from './RootTag';\n\nimport * as React from 'react';\n\nexport type Props = $ReadOnly<{|\n  children?: React.Node,\n  fabric?: boolean,\n  rootTag: number | RootTag,\n  initialProps?: {...},\n  showArchitectureIndicator?: boolean,\n  WrapperComponent?: ?React.ComponentType<any>,\n  internal_excludeLogBox?: boolean,\n  internal_excludeInspector?: boolean,\n|}>;\n\nconst AppContainer: React.AbstractComponent<Props> = __DEV__\n  ? require('./AppContainer-dev').default\n  : require('./AppContainer-prod').default;\n\nmodule.exports = AppContainer;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\nimport type {RootTag} from '../Types/RootTagTypes';\nimport type {IPerformanceLogger} from '../Utilities/createPerformanceLogger';\nimport type {DisplayModeType} from './DisplayMode';\n\nimport BatchedBridge from '../BatchedBridge/BatchedBridge';\nimport BugReporting from '../BugReporting/BugReporting';\nimport createPerformanceLogger from '../Utilities/createPerformanceLogger';\nimport infoLog from '../Utilities/infoLog';\nimport SceneTracker from '../Utilities/SceneTracker';\nimport {coerceDisplayMode} from './DisplayMode';\nimport HeadlessJsTaskError from './HeadlessJsTaskError';\nimport NativeHeadlessJsTaskSupport from './NativeHeadlessJsTaskSupport';\nimport renderApplication from './renderApplication';\nimport {unmountComponentAtNodeAndRemoveContainer} from './RendererProxy';\nimport invariant from 'invariant';\n\ntype Task = (taskData: any) => Promise<void>;\nexport type TaskProvider = () => Task;\ntype TaskCanceller = () => void;\ntype TaskCancelProvider = () => TaskCanceller;\n\nexport type ComponentProvider = () => React$ComponentType<any>;\nexport type ComponentProviderInstrumentationHook = (\n  component_: ComponentProvider,\n  scopedPerformanceLogger: IPerformanceLogger,\n) => React$ComponentType<any>;\nexport type AppConfig = {\n  appKey: string,\n  component?: ComponentProvider,\n  run?: Runnable,\n  section?: boolean,\n  ...\n};\ntype AppParameters = {\n  initialProps: $ReadOnly<{[string]: mixed, ...}>,\n  rootTag: RootTag,\n  fabric?: boolean,\n  concurrentRoot?: boolean,\n};\nexport type Runnable = (\n  appParameters: AppParameters,\n  displayMode: DisplayModeType,\n) => void;\nexport type Runnables = {[appKey: string]: Runnable};\nexport type Registry = {\n  sections: $ReadOnlyArray<string>,\n  runnables: Runnables,\n  ...\n};\nexport type WrapperComponentProvider = (\n  appParameters: Object,\n) => React$ComponentType<any>;\n\nconst runnables: Runnables = {};\nlet runCount = 1;\nconst sections: Runnables = {};\nconst taskProviders: Map<string, TaskProvider> = new Map();\nconst taskCancelProviders: Map<string, TaskCancelProvider> = new Map();\nlet componentProviderInstrumentationHook: ComponentProviderInstrumentationHook =\n  (component: ComponentProvider) => component();\n\nlet wrapperComponentProvider: ?WrapperComponentProvider;\nlet showArchitectureIndicator = false;\n\n/**\n * `AppRegistry` is the JavaScript entry point to running all React Native apps.\n *\n * See https://reactnative.dev/docs/appregistry\n */\nconst AppRegistry = {\n  setWrapperComponentProvider(provider: WrapperComponentProvider) {\n    wrapperComponentProvider = provider;\n  },\n\n  enableArchitectureIndicator(enabled: boolean): void {\n    showArchitectureIndicator = enabled;\n  },\n\n  registerConfig(config: Array<AppConfig>): void {\n    config.forEach(appConfig => {\n      if (appConfig.run) {\n        AppRegistry.registerRunnable(appConfig.appKey, appConfig.run);\n      } else {\n        invariant(\n          appConfig.component != null,\n          'AppRegistry.registerConfig(...): Every config is expected to set ' +\n            'either `run` or `component`, but `%s` has neither.',\n          appConfig.appKey,\n        );\n        AppRegistry.registerComponent(\n          appConfig.appKey,\n          appConfig.component,\n          appConfig.section,\n        );\n      }\n    });\n  },\n\n  /**\n   * Registers an app's root component.\n   *\n   * See https://reactnative.dev/docs/appregistry#registercomponent\n   */\n  registerComponent(\n    appKey: string,\n    componentProvider: ComponentProvider,\n    section?: boolean,\n  ): string {\n    const scopedPerformanceLogger = createPerformanceLogger();\n    runnables[appKey] = (appParameters, displayMode) => {\n      const concurrentRootEnabled = Boolean(\n        appParameters.initialProps?.concurrentRoot ||\n          appParameters.concurrentRoot,\n      );\n      renderApplication(\n        componentProviderInstrumentationHook(\n          componentProvider,\n          scopedPerformanceLogger,\n        ),\n        appParameters.initialProps,\n        appParameters.rootTag,\n        wrapperComponentProvider && wrapperComponentProvider(appParameters),\n        appParameters.fabric,\n        showArchitectureIndicator,\n        scopedPerformanceLogger,\n        appKey === 'LogBox', // is logbox\n        appKey,\n        displayMode,\n        concurrentRootEnabled,\n      );\n    };\n    if (section) {\n      sections[appKey] = runnables[appKey];\n    }\n    return appKey;\n  },\n\n  registerRunnable(appKey: string, run: Runnable): string {\n    runnables[appKey] = run;\n    return appKey;\n  },\n\n  registerSection(appKey: string, component: ComponentProvider): void {\n    AppRegistry.registerComponent(appKey, component, true);\n  },\n\n  getAppKeys(): $ReadOnlyArray<string> {\n    return Object.keys(runnables);\n  },\n\n  getSectionKeys(): $ReadOnlyArray<string> {\n    return Object.keys(sections);\n  },\n\n  getSections(): Runnables {\n    return {\n      ...sections,\n    };\n  },\n\n  getRunnable(appKey: string): ?Runnable {\n    return runnables[appKey];\n  },\n\n  getRegistry(): Registry {\n    return {\n      sections: AppRegistry.getSectionKeys(),\n      runnables: {...runnables},\n    };\n  },\n\n  setComponentProviderInstrumentationHook(\n    hook: ComponentProviderInstrumentationHook,\n  ) {\n    componentProviderInstrumentationHook = hook;\n  },\n\n  /**\n   * Loads the JavaScript bundle and runs the app.\n   *\n   * See https://reactnative.dev/docs/appregistry#runapplication\n   */\n  runApplication(\n    appKey: string,\n    appParameters: AppParameters,\n    displayMode?: number,\n  ): void {\n    if (appKey !== 'LogBox') {\n      const logParams = __DEV__\n        ? '\" with ' + JSON.stringify(appParameters)\n        : '';\n      const msg = 'Running \"' + appKey + logParams;\n      infoLog(msg);\n      BugReporting.addSource(\n        'AppRegistry.runApplication' + runCount++,\n        () => msg,\n      );\n    }\n    invariant(\n      runnables[appKey],\n      `\"${appKey}\" has not been registered. This can happen if:\\n` +\n        '* Metro (the local dev server) is run from the wrong folder. ' +\n        'Check if Metro is running, stop it and restart it in the current project.\\n' +\n        \"* A module failed to load due to an error and `AppRegistry.registerComponent` wasn't called.\",\n    );\n\n    SceneTracker.setActiveScene({name: appKey});\n    runnables[appKey](appParameters, coerceDisplayMode(displayMode));\n  },\n\n  /**\n   * Update initial props for a surface that's already rendered\n   */\n  setSurfaceProps(\n    appKey: string,\n    appParameters: Object,\n    displayMode?: number,\n  ): void {\n    if (appKey !== 'LogBox') {\n      const msg =\n        'Updating props for Surface \"' +\n        appKey +\n        '\" with ' +\n        JSON.stringify(appParameters);\n      infoLog(msg);\n      BugReporting.addSource(\n        'AppRegistry.setSurfaceProps' + runCount++,\n        () => msg,\n      );\n    }\n    invariant(\n      runnables[appKey],\n      `\"${appKey}\" has not been registered. This can happen if:\\n` +\n        '* Metro (the local dev server) is run from the wrong folder. ' +\n        'Check if Metro is running, stop it and restart it in the current project.\\n' +\n        \"* A module failed to load due to an error and `AppRegistry.registerComponent` wasn't called.\",\n    );\n\n    runnables[appKey](appParameters, coerceDisplayMode(displayMode));\n  },\n\n  /**\n   * Stops an application when a view should be destroyed.\n   *\n   * See https://reactnative.dev/docs/appregistry#unmountapplicationcomponentatroottag\n   */\n  unmountApplicationComponentAtRootTag(rootTag: RootTag): void {\n    unmountComponentAtNodeAndRemoveContainer(rootTag);\n  },\n\n  /**\n   * Register a headless task. A headless task is a bit of code that runs without a UI.\n   *\n   * See https://reactnative.dev/docs/appregistry#registerheadlesstask\n   */\n  registerHeadlessTask(taskKey: string, taskProvider: TaskProvider): void {\n    // $FlowFixMe[object-this-reference]\n    this.registerCancellableHeadlessTask(taskKey, taskProvider, () => () => {\n      /* Cancel is no-op */\n    });\n  },\n\n  /**\n   * Register a cancellable headless task. A headless task is a bit of code that runs without a UI.\n   *\n   * See https://reactnative.dev/docs/appregistry#registercancellableheadlesstask\n   */\n  registerCancellableHeadlessTask(\n    taskKey: string,\n    taskProvider: TaskProvider,\n    taskCancelProvider: TaskCancelProvider,\n  ): void {\n    if (taskProviders.has(taskKey)) {\n      console.warn(\n        `registerHeadlessTask or registerCancellableHeadlessTask called multiple times for same key '${taskKey}'`,\n      );\n    }\n    taskProviders.set(taskKey, taskProvider);\n    taskCancelProviders.set(taskKey, taskCancelProvider);\n  },\n\n  /**\n   * Only called from native code. Starts a headless task.\n   *\n   * See https://reactnative.dev/docs/appregistry#startheadlesstask\n   */\n  startHeadlessTask(taskId: number, taskKey: string, data: any): void {\n    const taskProvider = taskProviders.get(taskKey);\n    if (!taskProvider) {\n      console.warn(`No task registered for key ${taskKey}`);\n      if (NativeHeadlessJsTaskSupport) {\n        NativeHeadlessJsTaskSupport.notifyTaskFinished(taskId);\n      }\n      return;\n    }\n    taskProvider()(data)\n      .then(() => {\n        if (NativeHeadlessJsTaskSupport) {\n          NativeHeadlessJsTaskSupport.notifyTaskFinished(taskId);\n        }\n      })\n      .catch(reason => {\n        console.error(reason);\n\n        if (\n          NativeHeadlessJsTaskSupport &&\n          reason instanceof HeadlessJsTaskError\n        ) {\n          // $FlowFixMe[unused-promise]\n          NativeHeadlessJsTaskSupport.notifyTaskRetry(taskId).then(\n            retryPosted => {\n              if (!retryPosted) {\n                NativeHeadlessJsTaskSupport.notifyTaskFinished(taskId);\n              }\n            },\n          );\n        }\n      });\n  },\n\n  /**\n   * Only called from native code. Cancels a headless task.\n   *\n   * See https://reactnative.dev/docs/appregistry#cancelheadlesstask\n   */\n  cancelHeadlessTask(taskId: number, taskKey: string): void {\n    const taskCancelProvider = taskCancelProviders.get(taskKey);\n    if (!taskCancelProvider) {\n      throw new Error(`No task canceller registered for key '${taskKey}'`);\n    }\n    taskCancelProvider()();\n  },\n};\n\n// Register LogBox as a default surface\nAppRegistry.registerComponent('LogBox', () => {\n  if (__DEV__ && typeof jest === 'undefined') {\n    return require('../LogBox/LogBoxInspectorContainer').default;\n  } else {\n    return function NoOp() {\n      return null;\n    };\n  }\n});\n\nglobal.RN$AppRegistry = AppRegistry;\n\n// Backwards compat with SurfaceRegistry, remove me later\nglobal.RN$SurfaceRegistry = {\n  renderSurface: AppRegistry.runApplication,\n  setSurfaceProps: AppRegistry.setSurfaceProps,\n};\n\nif (global.RN$Bridgeless === true) {\n  console.log('Bridgeless mode is enabled');\n} else {\n  BatchedBridge.registerCallableModule('AppRegistry', AppRegistry);\n}\n\nmodule.exports = AppRegistry;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\n'use strict';\n\nimport type {RootTag} from '../Types/RootTagTypes';\nimport type {UIManagerJSInterface} from '../Types/UIManagerJSInterface';\n\nimport {unstable_hasComponent} from '../NativeComponent/NativeComponentRegistryUnstable';\nimport defineLazyObjectProperty from '../Utilities/defineLazyObjectProperty';\nimport Platform from '../Utilities/Platform';\nimport {getFabricUIManager} from './FabricUIManager';\nimport nullthrows from 'nullthrows';\n\nfunction raiseSoftError(methodName: string, details?: string): void {\n  console.error(\n    `[ReactNative Architecture][JS] '${methodName}' is not available in the new React Native architecture.` +\n      (details ? ` ${details}` : ''),\n  );\n}\n\nconst getUIManagerConstants: ?() => {[viewManagerName: string]: Object} =\n  global.RN$LegacyInterop_UIManager_getConstants;\n\nconst getUIManagerConstantsCached = (function () {\n  let wasCalledOnce = false;\n  let result = {};\n  return (): {[viewManagerName: string]: Object} => {\n    if (!wasCalledOnce) {\n      result = nullthrows(getUIManagerConstants)();\n      wasCalledOnce = true;\n    }\n    return result;\n  };\n})();\n\nconst getConstantsForViewManager: ?(viewManagerName: string) => ?Object =\n  global.RN$LegacyInterop_UIManager_getConstantsForViewManager;\n\nconst getDefaultEventTypes: ?() => Object =\n  global.RN$LegacyInterop_UIManager_getDefaultEventTypes;\n\nconst getDefaultEventTypesCached = (function () {\n  let wasCalledOnce = false;\n  let result = null;\n  return (): Object => {\n    if (!wasCalledOnce) {\n      result = nullthrows(getDefaultEventTypes)();\n      wasCalledOnce = true;\n    }\n    return result;\n  };\n})();\n\n/**\n * UIManager.js overrides these APIs.\n * Pull them out from the BridgelessUIManager implementation. So, we can ignore them.\n */\nconst UIManagerJSOverridenAPIs = {\n  measure: (\n    reactTag: number,\n    callback: (\n      left: number,\n      top: number,\n      width: number,\n      height: number,\n      pageX: number,\n      pageY: number,\n    ) => void,\n  ): void => {\n    raiseSoftError('measure');\n  },\n  measureInWindow: (\n    reactTag: number,\n    callback: (x: number, y: number, width: number, height: number) => void,\n  ): void => {\n    raiseSoftError('measureInWindow');\n  },\n  measureLayout: (\n    reactTag: number,\n    ancestorReactTag: number,\n    errorCallback: (error: Object) => void,\n    callback: (\n      left: number,\n      top: number,\n      width: number,\n      height: number,\n    ) => void,\n  ): void => {\n    raiseSoftError('measureLayout');\n  },\n  measureLayoutRelativeToParent: (\n    reactTag: number,\n    errorCallback: (error: Object) => void,\n    callback: (\n      left: number,\n      top: number,\n      width: number,\n      height: number,\n    ) => void,\n  ): void => {\n    raiseSoftError('measureLayoutRelativeToParent');\n  },\n  dispatchViewManagerCommand: (\n    reactTag: number,\n    commandID: number,\n    commandArgs: ?Array<string | number | boolean>,\n  ): void => {\n    raiseSoftError('dispatchViewManagerCommand');\n  },\n};\n\n/**\n * Leave Unimplemented: The only thing that called these methods was the paper renderer.\n * In OSS, the New Architecture will just use the Fabric renderer, which uses\n * different APIs.\n */\nconst UIManagerJSUnusedInNewArchAPIs = {\n  createView: (\n    reactTag: number,\n    viewName: string,\n    rootTag: RootTag,\n    props: Object,\n  ): void => {\n    raiseSoftError('createView');\n  },\n  updateView: (reactTag: number, viewName: string, props: Object): void => {\n    raiseSoftError('updateView');\n  },\n  setChildren: (containerTag: number, reactTags: Array<number>): void => {\n    raiseSoftError('setChildren');\n  },\n  manageChildren: (\n    containerTag: number,\n    moveFromIndices: Array<number>,\n    moveToIndices: Array<number>,\n    addChildReactTags: Array<number>,\n    addAtIndices: Array<number>,\n    removeAtIndices: Array<number>,\n  ): void => {\n    raiseSoftError('manageChildren');\n  },\n  setJSResponder: (reactTag: number, blockNativeResponder: boolean): void => {\n    raiseSoftError('setJSResponder');\n  },\n  clearJSResponder: (): void => {\n    raiseSoftError('clearJSResponder');\n  },\n};\n\n/**\n * Leave unimplemented: These APIs are deprecated in UIManager. We will eventually remove\n * them from React Native.\n */\nconst UIManagerJSDeprecatedPlatformAPIs = Platform.select({\n  android: {\n    // TODO(T175424986): Remove UIManager.showPopupMenu() in React Native v0.75.\n    showPopupMenu: (\n      reactTag: number,\n      items: Array<string>,\n      error: (error: Object) => void,\n      success: (event: string, selected?: number) => void,\n    ): void => {\n      raiseSoftError(\n        'showPopupMenu',\n        'Please use the <PopupMenuAndroid /> component instead.',\n      );\n    },\n    // TODO(T175424986): Remove UIManager.dismissPopupMenu() in React Native v0.75.\n    dismissPopupMenu: (): void => {\n      raiseSoftError(\n        'dismissPopupMenu',\n        'Please use the <PopupMenuAndroid /> component instead.',\n      );\n    },\n  },\n});\n\nconst UIManagerJSPlatformAPIs = Platform.select({\n  android: {\n    getConstantsForViewManager: (viewManagerName: string): ?Object => {\n      if (getConstantsForViewManager) {\n        return getConstantsForViewManager(viewManagerName);\n      }\n\n      raiseSoftError('getConstantsForViewManager');\n      return {};\n    },\n    getDefaultEventTypes: (): Array<string> => {\n      if (getDefaultEventTypes) {\n        return getDefaultEventTypesCached();\n      }\n\n      raiseSoftError('getDefaultEventTypes');\n      return [];\n    },\n    setLayoutAnimationEnabledExperimental: (enabled: boolean): void => {\n      /**\n       * Layout animations are always enabled in the New Architecture.\n       * They cannot be turned off.\n       */\n      if (!enabled) {\n        raiseSoftError(\n          'setLayoutAnimationEnabledExperimental(false)',\n          'Layout animations are always enabled in the New Architecture.',\n        );\n      }\n    },\n    sendAccessibilityEvent: (reactTag: number, eventType: number): void => {\n      // Keep this in sync with java:FabricUIManager.sendAccessibilityEventFromJS\n      // and legacySendAccessibilityEvent.android.js\n      const AccessibilityEvent = {\n        TYPE_VIEW_FOCUSED: 0x00000008,\n        TYPE_WINDOW_STATE_CHANGED: 0x00000020,\n        TYPE_VIEW_CLICKED: 0x00000001,\n        TYPE_VIEW_HOVER_ENTER: 0x00000080,\n      };\n\n      let eventName = null;\n      if (eventType === AccessibilityEvent.TYPE_VIEW_FOCUSED) {\n        eventName = 'focus';\n      } else if (eventType === AccessibilityEvent.TYPE_WINDOW_STATE_CHANGED) {\n        eventName = 'windowStateChange';\n      } else if (eventType === AccessibilityEvent.TYPE_VIEW_CLICKED) {\n        eventName = 'click';\n      } else if (eventType === AccessibilityEvent.TYPE_VIEW_HOVER_ENTER) {\n        eventName = 'viewHoverEnter';\n      } else {\n        console.error(\n          `sendAccessibilityEvent() dropping event: Called with unsupported eventType: ${eventType}`,\n        );\n        return;\n      }\n\n      const FabricUIManager = nullthrows(getFabricUIManager());\n      const shadowNode =\n        FabricUIManager.findShadowNodeByTag_DEPRECATED(reactTag);\n      if (!shadowNode) {\n        console.error(\n          `sendAccessibilityEvent() dropping event: Cannot find view with tag #${reactTag}`,\n        );\n        return;\n      }\n\n      FabricUIManager.sendAccessibilityEvent(shadowNode, eventName);\n    },\n  },\n  ios: {\n    /**\n     * TODO(T174674274): Implement lazy loading of legacy view managers in the new architecture.\n     *\n     * Leave this unimplemented until we implement lazy loading of legacy modules and view managers in the new architecture.\n     */\n    lazilyLoadView: (name: string): Object => {\n      raiseSoftError('lazilyLoadView');\n      return {};\n    },\n    focus: (reactTag: number): void => {\n      const FabricUIManager = nullthrows(getFabricUIManager());\n      const shadowNode =\n        FabricUIManager.findShadowNodeByTag_DEPRECATED(reactTag);\n      if (!shadowNode) {\n        console.error(`focus() noop: Cannot find view with tag #${reactTag}`);\n        return;\n      }\n      FabricUIManager.dispatchCommand(shadowNode, 'focus', []);\n    },\n    blur: (reactTag: number): void => {\n      const FabricUIManager = nullthrows(getFabricUIManager());\n      const shadowNode =\n        FabricUIManager.findShadowNodeByTag_DEPRECATED(reactTag);\n      if (!shadowNode) {\n        console.error(`blur() noop: Cannot find view with tag #${reactTag}`);\n        return;\n      }\n      FabricUIManager.dispatchCommand(shadowNode, 'blur', []);\n    },\n  },\n});\n\nconst UIManagerJS: UIManagerJSInterface & {[string]: any} = {\n  ...UIManagerJSOverridenAPIs,\n  ...UIManagerJSDeprecatedPlatformAPIs,\n  ...UIManagerJSPlatformAPIs,\n  ...UIManagerJSUnusedInNewArchAPIs,\n  getViewManagerConfig: (viewManagerName: string): mixed => {\n    if (getUIManagerConstants) {\n      const constants = getUIManagerConstantsCached();\n      if (\n        !constants[viewManagerName] &&\n        UIManagerJS.getConstantsForViewManager\n      ) {\n        constants[viewManagerName] =\n          UIManagerJS.getConstantsForViewManager(viewManagerName);\n      }\n      return constants[viewManagerName];\n    } else {\n      raiseSoftError(\n        `getViewManagerConfig('${viewManagerName}')`,\n        `If '${viewManagerName}' has a ViewManager and you want to retrieve its native ViewConfig, please turn on the native ViewConfig interop layer. If you want to see if this component is registered with React Native, please call hasViewManagerConfig('${viewManagerName}') instead.`,\n      );\n      return null;\n    }\n  },\n  hasViewManagerConfig: (viewManagerName: string): boolean => {\n    return unstable_hasComponent(viewManagerName);\n  },\n  getConstants: (): Object => {\n    if (getUIManagerConstants) {\n      return getUIManagerConstantsCached();\n    } else {\n      raiseSoftError('getConstants');\n      return null;\n    }\n  },\n  findSubviewIn: (\n    reactTag: number,\n    point: Array<number>,\n    callback: (\n      nativeViewTag: number,\n      left: number,\n      top: number,\n      width: number,\n      height: number,\n    ) => void,\n  ): void => {\n    const FabricUIManager = nullthrows(getFabricUIManager());\n    const shadowNode = FabricUIManager.findShadowNodeByTag_DEPRECATED(reactTag);\n\n    if (!shadowNode) {\n      console.error(\n        `findSubviewIn() noop: Cannot find view with reactTag ${reactTag}`,\n      );\n      return;\n    }\n\n    FabricUIManager.findNodeAtPoint(\n      shadowNode,\n      point[0],\n      point[1],\n      function (internalInstanceHandle) {\n        if (internalInstanceHandle == null) {\n          console.error('findSubviewIn(): Cannot find node at point');\n          return;\n        }\n\n        let instanceHandle: Object = internalInstanceHandle;\n        let node = instanceHandle.stateNode.node;\n\n        if (!node) {\n          console.error('findSubviewIn(): Cannot find node at point');\n          return;\n        }\n\n        let nativeViewTag: number =\n          instanceHandle.stateNode.canonical.nativeTag;\n\n        FabricUIManager.measure(\n          node,\n          function (x, y, width, height, pageX, pageY) {\n            callback(nativeViewTag, pageX, pageY, width, height);\n          },\n        );\n      },\n    );\n  },\n  viewIsDescendantOf: (\n    reactTag: number,\n    ancestorReactTag: number,\n    callback: (result: Array<boolean>) => void,\n  ): void => {\n    const FabricUIManager = nullthrows(getFabricUIManager());\n    const shadowNode = FabricUIManager.findShadowNodeByTag_DEPRECATED(reactTag);\n    if (!shadowNode) {\n      console.error(\n        `viewIsDescendantOf() noop: Cannot find view with reactTag ${reactTag}`,\n      );\n      return;\n    }\n\n    const ancestorShadowNode =\n      FabricUIManager.findShadowNodeByTag_DEPRECATED(ancestorReactTag);\n    if (!ancestorShadowNode) {\n      console.error(\n        `viewIsDescendantOf() noop: Cannot find view with ancestorReactTag ${ancestorReactTag}`,\n      );\n      return;\n    }\n\n    // Keep this in sync with ReadOnlyNode.js\n    const DOCUMENT_POSITION_CONTAINED_BY = 16;\n\n    let result = FabricUIManager.compareDocumentPosition(\n      ancestorShadowNode,\n      shadowNode,\n    );\n\n    let isAncestor = (result & DOCUMENT_POSITION_CONTAINED_BY) !== 0;\n\n    callback([isAncestor]);\n  },\n  configureNextLayoutAnimation: (\n    config: Object,\n    callback: () => void,\n    errorCallback: (error: Object) => void,\n  ): void => {\n    const FabricUIManager = nullthrows(getFabricUIManager());\n    FabricUIManager.configureNextLayoutAnimation(\n      config,\n      callback,\n      errorCallback,\n    );\n  },\n};\n\nif (getUIManagerConstants) {\n  Object.keys(getUIManagerConstantsCached()).forEach(viewConfigName => {\n    UIManagerJS[viewConfigName] = getUIManagerConstantsCached()[viewConfigName];\n  });\n\n  if (UIManagerJS.getConstants().ViewManagerNames) {\n    UIManagerJS.getConstants().ViewManagerNames.forEach(viewManagerName => {\n      defineLazyObjectProperty(UIManagerJS, viewManagerName, {\n        get: () =>\n          nullthrows(UIManagerJS.getConstantsForViewManager)(viewManagerName),\n      });\n    });\n  }\n}\n\nmodule.exports = UIManagerJS;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nexport opaque type DisplayModeType = number;\n\n/** DisplayMode should be in sync with the method displayModeToInt from\n * react/renderer/uimanager/primitives.h. */\nconst DisplayMode: {[string]: DisplayModeType} = Object.freeze({\n  VISIBLE: 1,\n  SUSPENDED: 2,\n  HIDDEN: 3,\n});\n\nexport function coerceDisplayMode(value: ?number): DisplayModeType {\n  switch (value) {\n    case DisplayMode.SUSPENDED:\n      return DisplayMode.SUSPENDED;\n    case DisplayMode.HIDDEN:\n      return DisplayMode.HIDDEN;\n    default:\n      return DisplayMode.VISIBLE;\n  }\n}\n\nexport default DisplayMode;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\n'use strict';\n\nimport type {\n  InternalInstanceHandle,\n  LayoutAnimationConfig,\n  MeasureInWindowOnSuccessCallback,\n  MeasureLayoutOnSuccessCallback,\n  MeasureOnSuccessCallback,\n  Node,\n} from '../Renderer/shims/ReactNativeTypes';\nimport type {RootTag} from '../Types/RootTagTypes';\n\nimport defineLazyObjectProperty from '../Utilities/defineLazyObjectProperty';\n\nexport type NodeSet = Array<Node>;\nexport type NodeProps = {...};\nexport interface Spec {\n  +createNode: (\n    reactTag: number,\n    viewName: string,\n    rootTag: RootTag,\n    props: NodeProps,\n    instanceHandle: InternalInstanceHandle,\n  ) => Node;\n  +cloneNode: (node: Node) => Node;\n  +cloneNodeWithNewChildren: (node: Node) => Node;\n  +cloneNodeWithNewProps: (node: Node, newProps: NodeProps) => Node;\n  +cloneNodeWithNewChildrenAndProps: (node: Node, newProps: NodeProps) => Node;\n  +createChildSet: (rootTag: RootTag) => NodeSet;\n  +appendChild: (parentNode: Node, child: Node) => Node;\n  +appendChildToSet: (childSet: NodeSet, child: Node) => void;\n  +completeRoot: (rootTag: RootTag, childSet: NodeSet) => void;\n  +measure: (node: Node, callback: MeasureOnSuccessCallback) => void;\n  +measureInWindow: (\n    node: Node,\n    callback: MeasureInWindowOnSuccessCallback,\n  ) => void;\n  +measureLayout: (\n    node: Node,\n    relativeNode: Node,\n    onFail: () => void,\n    onSuccess: MeasureLayoutOnSuccessCallback,\n  ) => void;\n  +configureNextLayoutAnimation: (\n    config: LayoutAnimationConfig,\n    callback: () => void, // check what is returned here\n    errorCallback: () => void,\n  ) => void;\n  +sendAccessibilityEvent: (node: Node, eventType: string) => void;\n  +findShadowNodeByTag_DEPRECATED: (reactTag: number) => ?Node;\n  +setNativeProps: (node: Node, newProps: NodeProps) => void;\n  +dispatchCommand: (\n    node: Node,\n    commandName: string,\n    args: Array<mixed>,\n  ) => void;\n  +findNodeAtPoint: (\n    node: Node,\n    locationX: number,\n    locationY: number,\n    callback: (instanceHandle: ?InternalInstanceHandle) => void,\n  ) => void;\n\n  /**\n   * Support methods for the DOM-compatible APIs.\n   */\n  +getParentNode: (node: Node) => ?InternalInstanceHandle;\n  +getChildNodes: (node: Node) => $ReadOnlyArray<InternalInstanceHandle>;\n  +isConnected: (node: Node) => boolean;\n  +compareDocumentPosition: (node: Node, otherNode: Node) => number;\n  +getTextContent: (node: Node) => string;\n  +getBoundingClientRect: (\n    node: Node,\n    includeTransform: boolean,\n  ) => ?[\n    /* x: */ number,\n    /* y: */ number,\n    /* width: */ number,\n    /* height: */ number,\n  ];\n  +getOffset: (\n    node: Node,\n  ) => ?[\n    /* offsetParent: */ InternalInstanceHandle,\n    /* offsetTop: */ number,\n    /* offsetLeft: */ number,\n  ];\n  +getScrollPosition: (\n    node: Node,\n  ) => ?[/* scrollLeft: */ number, /* scrollTop: */ number];\n  +getScrollSize: (\n    node: Node,\n  ) => ?[/* scrollWidth: */ number, /* scrollHeight: */ number];\n  +getInnerSize: (node: Node) => ?[/* width: */ number, /* height: */ number];\n  +getBorderSize: (\n    node: Node,\n  ) => ?[\n    /* topWidth: */ number,\n    /* rightWidth: */ number,\n    /* bottomWidth: */ number,\n    /* leftWidth: */ number,\n  ];\n  +getTagName: (node: Node) => string;\n\n  /**\n   * Support methods for the Pointer Capture APIs.\n   */\n  +hasPointerCapture: (node: Node, pointerId: number) => boolean;\n  +setPointerCapture: (node: Node, pointerId: number) => void;\n  +releasePointerCapture: (node: Node, pointerId: number) => void;\n}\n\nlet nativeFabricUIManagerProxy: ?Spec;\n\n// This is a list of all the methods in global.nativeFabricUIManager that we'll\n// cache in JavaScript, as the current implementation of the binding\n// creates a new host function every time methods are accessed.\nconst CACHED_PROPERTIES = [\n  'createNode',\n  'cloneNode',\n  'cloneNodeWithNewChildren',\n  'cloneNodeWithNewProps',\n  'cloneNodeWithNewChildrenAndProps',\n  'createChildSet',\n  'appendChild',\n  'appendChildToSet',\n  'completeRoot',\n  'measure',\n  'measureInWindow',\n  'measureLayout',\n  'configureNextLayoutAnimation',\n  'sendAccessibilityEvent',\n  'findShadowNodeByTag_DEPRECATED',\n  'setNativeProps',\n  'dispatchCommand',\n  'getParentNode',\n  'getChildNodes',\n  'isConnected',\n  'compareDocumentPosition',\n  'getTextContent',\n  'getBoundingClientRect',\n  'getOffset',\n  'getScrollPosition',\n  'getScrollSize',\n  'getInnerSize',\n  'getBorderSize',\n  'getTagName',\n  'hasPointerCapture',\n  'setPointerCapture',\n  'releasePointerCapture',\n];\n\n// This is exposed as a getter because apps using the legacy renderer AND\n// Fabric can define the binding lazily. If we evaluated the global and cached\n// it in the module we might be caching an `undefined` value before it is set.\nexport function getFabricUIManager(): ?Spec {\n  if (\n    nativeFabricUIManagerProxy == null &&\n    global.nativeFabricUIManager != null\n  ) {\n    nativeFabricUIManagerProxy = createProxyWithCachedProperties(\n      global.nativeFabricUIManager,\n      CACHED_PROPERTIES,\n    );\n  }\n  return nativeFabricUIManagerProxy;\n}\n\n/**\n *\n * Returns an object that caches the specified properties the first time they\n * are accessed, and falls back to the original object for other properties.\n */\nfunction createProxyWithCachedProperties(\n  implementation: Spec,\n  propertiesToCache: $ReadOnlyArray<string>,\n): Spec {\n  const proxy = Object.create(implementation);\n  for (const propertyName of propertiesToCache) {\n    defineLazyObjectProperty(proxy, propertyName, {\n      // $FlowExpectedError[prop-missing]\n      get: () => implementation[propertyName],\n    });\n  }\n  return proxy;\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nexport default class HeadlessJsTaskError extends Error {}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport type {I18nManagerConstants} from './NativeI18nManager';\n\nimport NativeI18nManager from './NativeI18nManager';\n\nconst i18nConstants: I18nManagerConstants = getI18nManagerConstants();\n\nfunction getI18nManagerConstants(): I18nManagerConstants {\n  if (NativeI18nManager) {\n    const {isRTL, doLeftAndRightSwapInRTL, localeIdentifier} =\n      NativeI18nManager.getConstants();\n    return {isRTL, doLeftAndRightSwapInRTL, localeIdentifier};\n  }\n\n  return {\n    isRTL: false,\n    doLeftAndRightSwapInRTL: true,\n  };\n}\n\nmodule.exports = {\n  getConstants: (): I18nManagerConstants => {\n    return i18nConstants;\n  },\n\n  allowRTL: (shouldAllow: boolean) => {\n    if (!NativeI18nManager) {\n      return;\n    }\n\n    NativeI18nManager.allowRTL(shouldAllow);\n  },\n\n  forceRTL: (shouldForce: boolean) => {\n    if (!NativeI18nManager) {\n      return;\n    }\n\n    NativeI18nManager.forceRTL(shouldForce);\n  },\n\n  swapLeftAndRightInRTL: (flipStyles: boolean) => {\n    if (!NativeI18nManager) {\n      return;\n    }\n\n    NativeI18nManager.swapLeftAndRightInRTL(flipStyles);\n  },\n\n  isRTL: i18nConstants.isRTL,\n  doLeftAndRightSwapInRTL: i18nConstants.doLeftAndRightSwapInRTL,\n};\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nexport * from '../../src/private/specs/modules/NativeHeadlessJsTaskSupport';\nimport NativeHeadlessJsTaskSupport from '../../src/private/specs/modules/NativeHeadlessJsTaskSupport';\nexport default NativeHeadlessJsTaskSupport;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nexport * from '../../src/private/specs/modules/NativeI18nManager';\nimport NativeI18nManager from '../../src/private/specs/modules/NativeI18nManager';\nexport default NativeI18nManager;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nexport * from '../../src/private/specs/modules/NativeUIManager';\nimport NativeUIManager from '../../src/private/specs/modules/NativeUIManager';\nexport default NativeUIManager;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\nimport type {RootTag} from '../Types/RootTagTypes';\nimport type {UIManagerJSInterface} from '../Types/UIManagerJSInterface';\n\nimport NativeUIManager from './NativeUIManager';\nimport nullthrows from 'nullthrows';\n\nconst NativeModules = require('../BatchedBridge/NativeModules');\nconst defineLazyObjectProperty = require('../Utilities/defineLazyObjectProperty');\nconst Platform = require('../Utilities/Platform');\nconst UIManagerProperties = require('./UIManagerProperties');\n\nconst viewManagerConfigs: {[string]: any | null} = {};\n\nconst triedLoadingConfig = new Set<string>();\n\nlet NativeUIManagerConstants = {};\nlet isNativeUIManagerConstantsSet = false;\nfunction getConstants(): Object {\n  if (!isNativeUIManagerConstantsSet) {\n    NativeUIManagerConstants = NativeUIManager.getConstants();\n    isNativeUIManagerConstantsSet = true;\n  }\n  return NativeUIManagerConstants;\n}\n\nfunction getViewManagerConfig(viewManagerName: string): any {\n  if (\n    viewManagerConfigs[viewManagerName] === undefined &&\n    global.nativeCallSyncHook && // If we're in the Chrome Debugger, let's not even try calling the sync method\n    NativeUIManager.getConstantsForViewManager\n  ) {\n    try {\n      viewManagerConfigs[viewManagerName] =\n        NativeUIManager.getConstantsForViewManager(viewManagerName);\n    } catch (e) {\n      console.error(\n        \"NativeUIManager.getConstantsForViewManager('\" +\n          viewManagerName +\n          \"') threw an exception.\",\n        e,\n      );\n      viewManagerConfigs[viewManagerName] = null;\n    }\n  }\n\n  const config = viewManagerConfigs[viewManagerName];\n  if (config) {\n    return config;\n  }\n\n  // If we're in the Chrome Debugger, let's not even try calling the sync\n  // method.\n  if (!global.nativeCallSyncHook) {\n    return config;\n  }\n\n  if (\n    NativeUIManager.lazilyLoadView &&\n    !triedLoadingConfig.has(viewManagerName)\n  ) {\n    const result = nullthrows(NativeUIManager.lazilyLoadView)(viewManagerName);\n    triedLoadingConfig.add(viewManagerName);\n    if (result != null && result.viewConfig != null) {\n      getConstants()[viewManagerName] = result.viewConfig;\n      lazifyViewManagerConfig(viewManagerName);\n    }\n  }\n\n  return viewManagerConfigs[viewManagerName];\n}\n\n// $FlowFixMe[cannot-spread-interface]\nconst UIManagerJS: UIManagerJSInterface = {\n  ...NativeUIManager,\n  createView(\n    reactTag: number,\n    viewName: string,\n    rootTag: RootTag,\n    props: Object,\n  ): void {\n    if (Platform.OS === 'ios' && viewManagerConfigs[viewName] === undefined) {\n      // This is necessary to force the initialization of native viewManager\n      // classes in iOS when using static ViewConfigs\n      getViewManagerConfig(viewName);\n    }\n\n    NativeUIManager.createView(reactTag, viewName, rootTag, props);\n  },\n  getConstants(): Object {\n    return getConstants();\n  },\n  getViewManagerConfig(viewManagerName: string): any {\n    return getViewManagerConfig(viewManagerName);\n  },\n  hasViewManagerConfig(viewManagerName: string): boolean {\n    return getViewManagerConfig(viewManagerName) != null;\n  },\n};\n\n// TODO (T45220498): Remove this.\n// 3rd party libs may be calling `NativeModules.UIManager.getViewManagerConfig()`\n// instead of `UIManager.getViewManagerConfig()` off UIManager.js.\n// This is a workaround for now.\n// $FlowFixMe[prop-missing]\nNativeUIManager.getViewManagerConfig = UIManagerJS.getViewManagerConfig;\n\nfunction lazifyViewManagerConfig(viewName: string) {\n  const viewConfig = getConstants()[viewName];\n  viewManagerConfigs[viewName] = viewConfig;\n  if (viewConfig.Manager) {\n    defineLazyObjectProperty(viewConfig, 'Constants', {\n      get: () => {\n        const viewManager = NativeModules[viewConfig.Manager];\n        const constants: {[string]: mixed} = {};\n        viewManager &&\n          Object.keys(viewManager).forEach(key => {\n            const value = viewManager[key];\n            if (typeof value !== 'function') {\n              constants[key] = value;\n            }\n          });\n        return constants;\n      },\n    });\n    defineLazyObjectProperty(viewConfig, 'Commands', {\n      get: () => {\n        const viewManager = NativeModules[viewConfig.Manager];\n        const commands: {[string]: number} = {};\n        let index = 0;\n        viewManager &&\n          Object.keys(viewManager).forEach(key => {\n            const value = viewManager[key];\n            if (typeof value === 'function') {\n              commands[key] = index++;\n            }\n          });\n        return commands;\n      },\n    });\n  }\n}\n\n/**\n * Copies the ViewManager constants and commands into UIManager. This is\n * only needed for iOS, which puts the constants in the ViewManager\n * namespace instead of UIManager, unlike Android.\n */\nif (Platform.OS === 'ios') {\n  Object.keys(getConstants()).forEach(viewName => {\n    lazifyViewManagerConfig(viewName);\n  });\n} else if (getConstants().ViewManagerNames) {\n  NativeUIManager.getConstants().ViewManagerNames.forEach(viewManagerName => {\n    defineLazyObjectProperty(NativeUIManager, viewManagerName, {\n      get: () =>\n        nullthrows(NativeUIManager.getConstantsForViewManager)(viewManagerName),\n    });\n  });\n}\n\nif (!global.nativeCallSyncHook) {\n  Object.keys(getConstants()).forEach(viewManagerName => {\n    if (!UIManagerProperties.includes(viewManagerName)) {\n      if (!viewManagerConfigs[viewManagerName]) {\n        viewManagerConfigs[viewManagerName] = getConstants()[viewManagerName];\n      }\n      defineLazyObjectProperty(NativeUIManager, viewManagerName, {\n        get: () => {\n          console.warn(\n            `Accessing view manager configs directly off UIManager via UIManager['${viewManagerName}'] ` +\n              `is no longer supported. Use UIManager.getViewManagerConfig('${viewManagerName}') instead.`,\n          );\n\n          return UIManagerJS.getViewManagerConfig(viewManagerName);\n        },\n      });\n    }\n  });\n}\n\nmodule.exports = UIManagerJS;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\nimport type {\n  HostComponent,\n  INativeMethods,\n  InternalInstanceHandle,\n  MeasureInWindowOnSuccessCallback,\n  MeasureLayoutOnSuccessCallback,\n  MeasureOnSuccessCallback,\n  ViewConfig,\n} from '../../Renderer/shims/ReactNativeTypes';\nimport type {ElementRef} from 'react';\n\nimport TextInputState from '../../Components/TextInput/TextInputState';\nimport {getNodeFromInternalInstanceHandle} from '../../Renderer/shims/ReactFabric';\nimport {getFabricUIManager} from '../FabricUIManager';\nimport {create} from './ReactNativeAttributePayload';\nimport warnForStyleProps from './warnForStyleProps';\nimport nullthrows from 'nullthrows';\n\nconst {\n  measure: fabricMeasure,\n  measureInWindow: fabricMeasureInWindow,\n  measureLayout: fabricMeasureLayout,\n  getBoundingClientRect: fabricGetBoundingClientRect,\n  setNativeProps,\n} = nullthrows(getFabricUIManager());\n\nconst noop = () => {};\n\n/**\n * This is used for refs on host components.\n */\nexport default class ReactFabricHostComponent implements INativeMethods {\n  // These need to be accessible from `ReactFabricPublicInstanceUtils`.\n  __nativeTag: number;\n  __internalInstanceHandle: InternalInstanceHandle;\n\n  _viewConfig: ViewConfig;\n\n  constructor(\n    tag: number,\n    viewConfig: ViewConfig,\n    internalInstanceHandle: InternalInstanceHandle,\n  ) {\n    this.__nativeTag = tag;\n    this._viewConfig = viewConfig;\n    this.__internalInstanceHandle = internalInstanceHandle;\n  }\n\n  blur() {\n    // $FlowFixMe[incompatible-exact] Migrate all usages of `NativeMethods` to an interface to fix this.\n    TextInputState.blurTextInput(this);\n  }\n\n  focus() {\n    // $FlowFixMe[incompatible-exact] Migrate all usages of `NativeMethods` to an interface to fix this.\n    TextInputState.focusTextInput(this);\n  }\n\n  measure(callback: MeasureOnSuccessCallback) {\n    const node = getNodeFromInternalInstanceHandle(\n      this.__internalInstanceHandle,\n    );\n    if (node != null) {\n      fabricMeasure(node, callback);\n    }\n  }\n\n  measureInWindow(callback: MeasureInWindowOnSuccessCallback) {\n    const node = getNodeFromInternalInstanceHandle(\n      this.__internalInstanceHandle,\n    );\n    if (node != null) {\n      fabricMeasureInWindow(node, callback);\n    }\n  }\n\n  measureLayout(\n    relativeToNativeNode: number | ElementRef<HostComponent<mixed>>,\n    onSuccess: MeasureLayoutOnSuccessCallback,\n    onFail?: () => void /* currently unused */,\n  ) {\n    if (\n      typeof relativeToNativeNode === 'number' ||\n      !(relativeToNativeNode instanceof ReactFabricHostComponent)\n    ) {\n      if (__DEV__) {\n        console.error(\n          'Warning: ref.measureLayout must be called with a ref to a native component.',\n        );\n      }\n\n      return;\n    }\n\n    const toStateNode = getNodeFromInternalInstanceHandle(\n      this.__internalInstanceHandle,\n    );\n    const fromStateNode = getNodeFromInternalInstanceHandle(\n      relativeToNativeNode.__internalInstanceHandle,\n    );\n\n    if (toStateNode != null && fromStateNode != null) {\n      fabricMeasureLayout(\n        toStateNode,\n        fromStateNode,\n        onFail != null ? onFail : noop,\n        onSuccess != null ? onSuccess : noop,\n      );\n    }\n  }\n\n  unstable_getBoundingClientRect(): DOMRect {\n    const node = getNodeFromInternalInstanceHandle(\n      this.__internalInstanceHandle,\n    );\n    if (node != null) {\n      const rect = fabricGetBoundingClientRect(node, true);\n\n      if (rect) {\n        return new DOMRect(rect[0], rect[1], rect[2], rect[3]);\n      }\n    }\n\n    // Empty rect if any of the above failed\n    return new DOMRect(0, 0, 0, 0);\n  }\n\n  setNativeProps(nativeProps: {...}): void {\n    if (__DEV__) {\n      warnForStyleProps(nativeProps, this._viewConfig.validAttributes);\n    }\n    const updatePayload = create(nativeProps, this._viewConfig.validAttributes);\n\n    const node = getNodeFromInternalInstanceHandle(\n      this.__internalInstanceHandle,\n    );\n    if (node != null && updatePayload != null) {\n      setNativeProps(node, updatePayload);\n    }\n  }\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\n/**\n * This module is meant to be used by the React renderers to create public\n * instances and get some data from them (like their instance handle / fiber).\n */\n\nimport type ReactNativeElement from '../../../src/private/webapis/dom/nodes/ReactNativeElement';\nimport type ReadOnlyText from '../../../src/private/webapis/dom/nodes/ReadOnlyText';\nimport typeof ReactFabricType from '../../Renderer/shims/ReactFabric';\nimport type {\n  InternalInstanceHandle,\n  Node,\n  ViewConfig,\n} from '../../Renderer/shims/ReactNativeTypes';\nimport type ReactFabricHostComponent from './ReactFabricHostComponent';\n\nimport * as ReactNativeFeatureFlags from '../../../src/private/featureflags/ReactNativeFeatureFlags';\n\n// Lazy loaded to avoid evaluating the module when using the legacy renderer.\nlet PublicInstanceClass:\n  | Class<ReactFabricHostComponent>\n  | Class<ReactNativeElement>;\nlet ReadOnlyTextClass: Class<ReadOnlyText>;\n\n// Lazy loaded to avoid evaluating the module when using the legacy renderer.\nlet ReactFabric: ReactFabricType;\n\nexport function createPublicInstance(\n  tag: number,\n  viewConfig: ViewConfig,\n  internalInstanceHandle: InternalInstanceHandle,\n): ReactFabricHostComponent | ReactNativeElement {\n  if (PublicInstanceClass == null) {\n    // We don't use inline requires in react-native, so this forces lazy loading\n    // the right module to avoid eagerly loading both.\n    if (ReactNativeFeatureFlags.enableAccessToHostTreeInFabric()) {\n      PublicInstanceClass =\n        require('../../../src/private/webapis/dom/nodes/ReactNativeElement').default;\n    } else {\n      PublicInstanceClass = require('./ReactFabricHostComponent').default;\n    }\n  }\n\n  return new PublicInstanceClass(tag, viewConfig, internalInstanceHandle);\n}\n\nexport function createPublicTextInstance(\n  internalInstanceHandle: InternalInstanceHandle,\n): ReadOnlyText {\n  if (ReadOnlyTextClass == null) {\n    ReadOnlyTextClass =\n      require('../../../src/private/webapis/dom/nodes/ReadOnlyText').default;\n  }\n\n  return new ReadOnlyTextClass(internalInstanceHandle);\n}\n\nexport function getNativeTagFromPublicInstance(\n  publicInstance: ReactFabricHostComponent | ReactNativeElement,\n): number {\n  return publicInstance.__nativeTag;\n}\n\nexport function getNodeFromPublicInstance(\n  publicInstance: ReactFabricHostComponent | ReactNativeElement,\n): ?Node {\n  // Avoid loading ReactFabric if using an instance from the legacy renderer.\n  if (publicInstance.__internalInstanceHandle == null) {\n    return null;\n  }\n\n  if (ReactFabric == null) {\n    ReactFabric = require('../../Renderer/shims/ReactFabric');\n  }\n  return ReactFabric.getNodeFromInternalInstanceHandle(\n    publicInstance.__internalInstanceHandle,\n  );\n}\n\nexport function getInternalInstanceHandleFromPublicInstance(\n  publicInstance: ReactFabricHostComponent | ReactNativeElement,\n): InternalInstanceHandle {\n  // TODO(T174762768): Remove this once OSS versions of renderers will be synced.\n  // $FlowExpectedError[prop-missing] Keeping this for backwards-compatibility with the renderers versions in open source.\n  if (publicInstance._internalInstanceHandle != null) {\n    // $FlowExpectedError[incompatible-return] Keeping this for backwards-compatibility with the renderers versions in open source.\n    return publicInstance._internalInstanceHandle;\n  }\n\n  return publicInstance.__internalInstanceHandle;\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict\n */\n\n/**\n * IMPORTANT!!\n *\n * This module cannot import `ReactFabric` (directly or indirectly)\n * because it can be used by apps only using the legacy renderer.\n * In that case `nativeFabricUIManager` isn't defined and `ReactFabric` throws.\n */\n\nexport function isPublicInstance(maybeInstance: mixed): boolean {\n  return (\n    maybeInstance != null &&\n    // TODO: implement a better check when the instance is defined in the React Native repository.\n    (maybeInstance.__nativeTag != null ||\n      // TODO: remove this check when syncing the new version of the renderer from React to React Native.\n      isLegacyFabricInstance(maybeInstance))\n  );\n}\n\nfunction isLegacyFabricInstance(maybeInstance: mixed): boolean {\n  /* eslint-disable dot-notation */\n  return (\n    maybeInstance != null &&\n    // $FlowExpectedError[incompatible-use]\n    maybeInstance['_internalInstanceHandle'] != null &&\n    maybeInstance['_internalInstanceHandle'].stateNode != null &&\n    maybeInstance['_internalInstanceHandle'].stateNode.canonical != null\n  );\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\nimport type {AttributeConfiguration} from '../../Renderer/shims/ReactNativeTypes';\n\nimport flattenStyle from '../../StyleSheet/flattenStyle';\nimport deepDiffer from '../../Utilities/differ/deepDiffer';\n\nconst emptyObject = {};\n\n/**\n * Create a payload that contains all the updates between two sets of props.\n *\n * These helpers are all encapsulated into a single module, because they use\n * mutation as a performance optimization which leads to subtle shared\n * dependencies between the code paths. To avoid this mutable state leaking\n * across modules, I've kept them isolated to this module.\n */\n\ntype NestedNode = Array<NestedNode> | Object;\n\n// Tracks removed keys\nlet removedKeys: {[string]: boolean} | null = null;\nlet removedKeyCount = 0;\n\nconst deepDifferOptions = {\n  unsafelyIgnoreFunctions: true,\n};\n\nfunction defaultDiffer(prevProp: mixed, nextProp: mixed): boolean {\n  if (typeof nextProp !== 'object' || nextProp === null) {\n    // Scalars have already been checked for equality\n    return true;\n  } else {\n    // For objects and arrays, the default diffing algorithm is a deep compare\n    return deepDiffer(prevProp, nextProp, deepDifferOptions);\n  }\n}\n\nfunction restoreDeletedValuesInNestedArray(\n  updatePayload: Object,\n  node: NestedNode,\n  validAttributes: AttributeConfiguration,\n) {\n  if (Array.isArray(node)) {\n    let i = node.length;\n    while (i-- && removedKeyCount > 0) {\n      restoreDeletedValuesInNestedArray(\n        updatePayload,\n        node[i],\n        validAttributes,\n      );\n    }\n  } else if (node && removedKeyCount > 0) {\n    const obj = node;\n    for (const propKey in removedKeys) {\n      // $FlowFixMe[incompatible-use] found when upgrading Flow\n      if (!removedKeys[propKey]) {\n        continue;\n      }\n      let nextProp = obj[propKey];\n      if (nextProp === undefined) {\n        continue;\n      }\n\n      const attributeConfig = validAttributes[propKey];\n      if (!attributeConfig) {\n        continue; // not a valid native prop\n      }\n\n      if (typeof nextProp === 'function') {\n        // $FlowFixMe[incompatible-type] found when upgrading Flow\n        nextProp = true;\n      }\n      if (typeof nextProp === 'undefined') {\n        // $FlowFixMe[incompatible-type] found when upgrading Flow\n        nextProp = null;\n      }\n\n      if (typeof attributeConfig !== 'object') {\n        // case: !Object is the default case\n        updatePayload[propKey] = nextProp;\n      } else if (\n        typeof attributeConfig.diff === 'function' ||\n        typeof attributeConfig.process === 'function'\n      ) {\n        // case: CustomAttributeConfiguration\n        const nextValue =\n          typeof attributeConfig.process === 'function'\n            ? attributeConfig.process(nextProp)\n            : nextProp;\n        updatePayload[propKey] = nextValue;\n      }\n      // $FlowFixMe[incompatible-use] found when upgrading Flow\n      removedKeys[propKey] = false;\n      removedKeyCount--;\n    }\n  }\n}\n\nfunction diffNestedArrayProperty(\n  updatePayload: null | Object,\n  prevArray: Array<NestedNode>,\n  nextArray: Array<NestedNode>,\n  validAttributes: AttributeConfiguration,\n): null | Object {\n  const minLength =\n    prevArray.length < nextArray.length ? prevArray.length : nextArray.length;\n  let i;\n  for (i = 0; i < minLength; i++) {\n    // Diff any items in the array in the forward direction. Repeated keys\n    // will be overwritten by later values.\n    updatePayload = diffNestedProperty(\n      updatePayload,\n      prevArray[i],\n      nextArray[i],\n      validAttributes,\n    );\n  }\n  for (; i < prevArray.length; i++) {\n    // Clear out all remaining properties.\n    updatePayload = clearNestedProperty(\n      updatePayload,\n      prevArray[i],\n      validAttributes,\n    );\n  }\n  for (; i < nextArray.length; i++) {\n    // Add all remaining properties.\n    updatePayload = addNestedProperty(\n      updatePayload,\n      nextArray[i],\n      validAttributes,\n    );\n  }\n  return updatePayload;\n}\n\nfunction diffNestedProperty(\n  updatePayload: null | Object,\n  prevProp: NestedNode,\n  nextProp: NestedNode,\n  validAttributes: AttributeConfiguration,\n): null | Object {\n  if (!updatePayload && prevProp === nextProp) {\n    // If no properties have been added, then we can bail out quickly on object\n    // equality.\n    return updatePayload;\n  }\n\n  if (!prevProp || !nextProp) {\n    if (nextProp) {\n      return addNestedProperty(updatePayload, nextProp, validAttributes);\n    }\n    if (prevProp) {\n      return clearNestedProperty(updatePayload, prevProp, validAttributes);\n    }\n    return updatePayload;\n  }\n\n  if (!Array.isArray(prevProp) && !Array.isArray(nextProp)) {\n    // Both are leaves, we can diff the leaves.\n    return diffProperties(updatePayload, prevProp, nextProp, validAttributes);\n  }\n\n  if (Array.isArray(prevProp) && Array.isArray(nextProp)) {\n    // Both are arrays, we can diff the arrays.\n    return diffNestedArrayProperty(\n      updatePayload,\n      prevProp,\n      nextProp,\n      validAttributes,\n    );\n  }\n\n  if (Array.isArray(prevProp)) {\n    return diffProperties(\n      updatePayload,\n      // $FlowFixMe - We know that this is always an object when the input is.\n      flattenStyle(prevProp),\n      // $FlowFixMe - We know that this isn't an array because of above flow.\n      nextProp,\n      validAttributes,\n    );\n  }\n\n  return diffProperties(\n    updatePayload,\n    prevProp,\n    // $FlowFixMe - We know that this is always an object when the input is.\n    flattenStyle(nextProp),\n    validAttributes,\n  );\n}\n\n/**\n * addNestedProperty takes a single set of props and valid attribute\n * attribute configurations. It processes each prop and adds it to the\n * updatePayload.\n */\nfunction addNestedProperty(\n  updatePayload: null | Object,\n  nextProp: NestedNode,\n  validAttributes: AttributeConfiguration,\n): $FlowFixMe {\n  if (!nextProp) {\n    return updatePayload;\n  }\n\n  if (!Array.isArray(nextProp)) {\n    // Add each property of the leaf.\n    return addProperties(updatePayload, nextProp, validAttributes);\n  }\n\n  for (let i = 0; i < nextProp.length; i++) {\n    // Add all the properties of the array.\n    updatePayload = addNestedProperty(\n      updatePayload,\n      nextProp[i],\n      validAttributes,\n    );\n  }\n\n  return updatePayload;\n}\n\n/**\n * clearNestedProperty takes a single set of props and valid attributes. It\n * adds a null sentinel to the updatePayload, for each prop key.\n */\nfunction clearNestedProperty(\n  updatePayload: null | Object,\n  prevProp: NestedNode,\n  validAttributes: AttributeConfiguration,\n): null | Object {\n  if (!prevProp) {\n    return updatePayload;\n  }\n\n  if (!Array.isArray(prevProp)) {\n    // Add each property of the leaf.\n    return clearProperties(updatePayload, prevProp, validAttributes);\n  }\n\n  for (let i = 0; i < prevProp.length; i++) {\n    // Add all the properties of the array.\n    updatePayload = clearNestedProperty(\n      updatePayload,\n      prevProp[i],\n      validAttributes,\n    );\n  }\n  return updatePayload;\n}\n\n/**\n * diffProperties takes two sets of props and a set of valid attributes\n * and write to updatePayload the values that changed or were deleted.\n * If no updatePayload is provided, a new one is created and returned if\n * anything changed.\n */\nfunction diffProperties(\n  updatePayload: null | Object,\n  prevProps: Object,\n  nextProps: Object,\n  validAttributes: AttributeConfiguration,\n): null | Object {\n  let attributeConfig;\n  let nextProp;\n  let prevProp;\n\n  for (const propKey in nextProps) {\n    attributeConfig = validAttributes[propKey];\n    if (!attributeConfig) {\n      continue; // not a valid native prop\n    }\n\n    prevProp = prevProps[propKey];\n    nextProp = nextProps[propKey];\n\n    // functions are converted to booleans as markers that the associated\n    // events should be sent from native.\n    if (typeof nextProp === 'function') {\n      nextProp = (true: any);\n      // If nextProp is not a function, then don't bother changing prevProp\n      // since nextProp will win and go into the updatePayload regardless.\n      if (typeof prevProp === 'function') {\n        prevProp = (true: any);\n      }\n    }\n\n    // An explicit value of undefined is treated as a null because it overrides\n    // any other preceding value.\n    if (typeof nextProp === 'undefined') {\n      nextProp = (null: any);\n      if (typeof prevProp === 'undefined') {\n        prevProp = (null: any);\n      }\n    }\n\n    if (removedKeys) {\n      removedKeys[propKey] = false;\n    }\n\n    if (updatePayload && updatePayload[propKey] !== undefined) {\n      // Something else already triggered an update to this key because another\n      // value diffed. Since we're now later in the nested arrays our value is\n      // more important so we need to calculate it and override the existing\n      // value. It doesn't matter if nothing changed, we'll set it anyway.\n\n      // Pattern match on: attributeConfig\n      if (typeof attributeConfig !== 'object') {\n        // case: !Object is the default case\n        updatePayload[propKey] = nextProp;\n      } else if (\n        typeof attributeConfig.diff === 'function' ||\n        typeof attributeConfig.process === 'function'\n      ) {\n        // case: CustomAttributeConfiguration\n        const nextValue =\n          typeof attributeConfig.process === 'function'\n            ? attributeConfig.process(nextProp)\n            : nextProp;\n        updatePayload[propKey] = nextValue;\n      }\n      continue;\n    }\n\n    if (prevProp === nextProp) {\n      continue; // nothing changed\n    }\n\n    // Pattern match on: attributeConfig\n    if (typeof attributeConfig !== 'object') {\n      // case: !Object is the default case\n      if (defaultDiffer(prevProp, nextProp)) {\n        // a normal leaf has changed\n        (updatePayload || (updatePayload = ({}: {[string]: $FlowFixMe})))[\n          propKey\n        ] = nextProp;\n      }\n    } else if (\n      typeof attributeConfig.diff === 'function' ||\n      typeof attributeConfig.process === 'function'\n    ) {\n      // case: CustomAttributeConfiguration\n      const shouldUpdate =\n        prevProp === undefined ||\n        (typeof attributeConfig.diff === 'function'\n          ? attributeConfig.diff(prevProp, nextProp)\n          : defaultDiffer(prevProp, nextProp));\n      if (shouldUpdate) {\n        const nextValue =\n          typeof attributeConfig.process === 'function'\n            ? // $FlowFixMe[incompatible-use] found when upgrading Flow\n              attributeConfig.process(nextProp)\n            : nextProp;\n        (updatePayload || (updatePayload = ({}: {[string]: $FlowFixMe})))[\n          propKey\n        ] = nextValue;\n      }\n    } else {\n      // default: fallthrough case when nested properties are defined\n      removedKeys = null;\n      removedKeyCount = 0;\n      // We think that attributeConfig is not CustomAttributeConfiguration at\n      // this point so we assume it must be AttributeConfiguration.\n      updatePayload = diffNestedProperty(\n        updatePayload,\n        prevProp,\n        nextProp,\n        ((attributeConfig: any): AttributeConfiguration),\n      );\n      if (removedKeyCount > 0 && updatePayload) {\n        restoreDeletedValuesInNestedArray(\n          updatePayload,\n          nextProp,\n          ((attributeConfig: any): AttributeConfiguration),\n        );\n        removedKeys = null;\n      }\n    }\n  }\n\n  // Also iterate through all the previous props to catch any that have been\n  // removed and make sure native gets the signal so it can reset them to the\n  // default.\n  for (const propKey in prevProps) {\n    if (nextProps[propKey] !== undefined) {\n      continue; // we've already covered this key in the previous pass\n    }\n    attributeConfig = validAttributes[propKey];\n    if (!attributeConfig) {\n      continue; // not a valid native prop\n    }\n\n    if (updatePayload && updatePayload[propKey] !== undefined) {\n      // This was already updated to a diff result earlier.\n      continue;\n    }\n\n    prevProp = prevProps[propKey];\n    if (prevProp === undefined) {\n      continue; // was already empty anyway\n    }\n    // Pattern match on: attributeConfig\n    if (\n      typeof attributeConfig !== 'object' ||\n      typeof attributeConfig.diff === 'function' ||\n      typeof attributeConfig.process === 'function'\n    ) {\n      // case: CustomAttributeConfiguration | !Object\n      // Flag the leaf property for removal by sending a sentinel.\n      (updatePayload || (updatePayload = ({}: {[string]: $FlowFixMe})))[\n        propKey\n      ] = null;\n      if (!removedKeys) {\n        removedKeys = ({}: {[string]: boolean});\n      }\n      if (!removedKeys[propKey]) {\n        removedKeys[propKey] = true;\n        removedKeyCount++;\n      }\n    } else {\n      // default:\n      // This is a nested attribute configuration where all the properties\n      // were removed so we need to go through and clear out all of them.\n      updatePayload = clearNestedProperty(\n        updatePayload,\n        prevProp,\n        ((attributeConfig: any): AttributeConfiguration),\n      );\n    }\n  }\n  return updatePayload;\n}\n\n/**\n * addProperties adds all the valid props to the payload after being processed.\n */\nfunction addProperties(\n  updatePayload: null | Object,\n  props: Object,\n  validAttributes: AttributeConfiguration,\n): null | Object {\n  // TODO: Fast path\n  return diffProperties(updatePayload, emptyObject, props, validAttributes);\n}\n\n/**\n * clearProperties clears all the previous props by adding a null sentinel\n * to the payload for each valid key.\n */\nfunction clearProperties(\n  updatePayload: null | Object,\n  prevProps: Object,\n  validAttributes: AttributeConfiguration,\n): null | Object {\n  // TODO: Fast path\n  return diffProperties(updatePayload, prevProps, emptyObject, validAttributes);\n}\n\nexport function create(\n  props: Object,\n  validAttributes: AttributeConfiguration,\n): null | Object {\n  return addProperties(\n    null, // updatePayload\n    props,\n    validAttributes,\n  );\n}\n\nexport function diff(\n  prevProps: Object,\n  nextProps: Object,\n  validAttributes: AttributeConfiguration,\n): null | Object {\n  return diffProperties(\n    null, // updatePayload\n    prevProps,\n    nextProps,\n    validAttributes,\n  );\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\nimport type {AttributeConfiguration} from '../../Renderer/shims/ReactNativeTypes';\n\nexport default function warnForStyleProps(\n  props: {...},\n  validAttributes: AttributeConfiguration,\n): void {\n  if (__DEV__) {\n    for (const key in validAttributes.style) {\n      if (!(validAttributes[key] || props[key] === undefined)) {\n        console.error(\n          'You are setting the style `{ %s' +\n            ': ... }` as a prop. You ' +\n            'should nest it in a style object. ' +\n            'E.g. `{ style: { %s' +\n            ': ... } }`',\n          key,\n          key,\n        );\n      }\n    }\n  }\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nexport type FeatureFlags = {|\n  /**\n   * Function used to enable / disable W3C pointer event emitting in React Native.\n   * If enabled you must also flip the equivalent native flags on each platform:\n   * iOS -> RCTSetDispatchW3CPointerEvents\n   * Android -> ReactFeatureFlags.dispatchPointerEvents\n   */\n  shouldEmitW3CPointerEvents: () => boolean,\n  /**\n   * Function used to enable / disable Pressibility from using W3C Pointer Events\n   * for its hover callbacks\n   */\n  shouldPressibilityUseW3CPointerEventsForHover: () => boolean,\n|};\n\nconst ReactNativeFeatureFlags: FeatureFlags = {\n  shouldEmitW3CPointerEvents: () => false,\n  shouldPressibilityUseW3CPointerEventsForHover: () => false,\n};\n\nmodule.exports = ReactNativeFeatureFlags;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\nimport type {HostComponent} from '../Renderer/shims/ReactNativeTypes';\nimport type ReactFabricHostComponent from './ReactFabricPublicInstance/ReactFabricHostComponent';\nimport type {Element, ElementRef, ElementType} from 'react';\n\nimport {type RootTag} from './RootTag';\n\nexport function renderElement({\n  element,\n  rootTag,\n  useFabric,\n  useConcurrentRoot,\n}: {\n  element: Element<ElementType>,\n  rootTag: number,\n  useFabric: boolean,\n  useConcurrentRoot: boolean,\n}): void {\n  if (useFabric) {\n    require('../Renderer/shims/ReactFabric').render(\n      element,\n      rootTag,\n      null,\n      useConcurrentRoot,\n    );\n  } else {\n    require('../Renderer/shims/ReactNative').render(element, rootTag);\n  }\n}\n\nexport function findHostInstance_DEPRECATED<TElementType: ElementType>(\n  componentOrHandle: ?(ElementRef<TElementType> | number),\n): ?ElementRef<HostComponent<mixed>> {\n  return require('../Renderer/shims/ReactNative').findHostInstance_DEPRECATED(\n    componentOrHandle,\n  );\n}\n\nexport function findNodeHandle<TElementType: ElementType>(\n  componentOrHandle: ?(ElementRef<TElementType> | number),\n): ?number {\n  return require('../Renderer/shims/ReactNative').findNodeHandle(\n    componentOrHandle,\n  );\n}\n\nexport function dispatchCommand(\n  handle: ElementRef<HostComponent<mixed>>,\n  command: string,\n  args: Array<mixed>,\n): void {\n  if (global.RN$Bridgeless === true) {\n    // Note: this function has the same implementation in the legacy and new renderer.\n    // However, evaluating the old renderer comes with some side effects.\n    return require('../Renderer/shims/ReactFabric').dispatchCommand(\n      handle,\n      command,\n      args,\n    );\n  } else {\n    return require('../Renderer/shims/ReactNative').dispatchCommand(\n      handle,\n      command,\n      args,\n    );\n  }\n}\n\nexport function sendAccessibilityEvent(\n  handle: ElementRef<HostComponent<mixed>>,\n  eventType: string,\n): void {\n  return require('../Renderer/shims/ReactNative').sendAccessibilityEvent(\n    handle,\n    eventType,\n  );\n}\n\n/**\n * This method is used by AppRegistry to unmount a root when using the old\n * React Native renderer (Paper).\n */\nexport function unmountComponentAtNodeAndRemoveContainer(rootTag: RootTag) {\n  // $FlowExpectedError[incompatible-type] rootTag is an opaque type so we can't really cast it as is.\n  const rootTagAsNumber: number = rootTag;\n  require('../Renderer/shims/ReactNative').unmountComponentAtNodeAndRemoveContainer(\n    rootTagAsNumber,\n  );\n}\n\nexport function unstable_batchedUpdates<T>(\n  fn: T => void,\n  bookkeeping: T,\n): void {\n  // This doesn't actually do anything when batching updates for a Fabric root.\n  return require('../Renderer/shims/ReactNative').unstable_batchedUpdates(\n    fn,\n    bookkeeping,\n  );\n}\n\nexport function isProfilingRenderer(): boolean {\n  return Boolean(__DEV__);\n}\n\nexport function isChildPublicInstance(\n  parentInstance: ReactFabricHostComponent | HostComponent<mixed>,\n  childInstance: ReactFabricHostComponent | HostComponent<mixed>,\n): boolean {\n  return require('../Renderer/shims/ReactNative').isChildPublicInstance(\n    parentInstance,\n    childInstance,\n  );\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\n/**\n * This module exists to allow apps to select their renderer implementation\n * (e.g.: Fabric-only, Paper-only) without having to pull all the renderer\n * implementations into their app bundle, which affects app size.\n *\n * By default, the setup will be:\n *   -> RendererProxy\n *     -> RendererImplementation (which uses Fabric or Paper depending on a flag at runtime)\n *\n * But this will allow a setup like this without duplicating logic:\n *   -> RendererProxy (fork)\n *     -> RendererImplementation (which uses Fabric or Paper depending on a flag at runtime)\n *     or -> OtherImplementation (which uses Fabric only)\n */\n\nexport * from './RendererImplementation';\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nimport * as React from 'react';\n\nexport opaque type RootTag = number;\n\nexport const RootTagContext: React$Context<RootTag> =\n  React.createContext<RootTag>(0);\n\nif (__DEV__) {\n  RootTagContext.displayName = 'RootTagContext';\n}\n\n/**\n * Intended to only be used by `AppContainer`.\n */\nexport function createRootTag(rootTag: number | RootTag): RootTag {\n  return rootTag;\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\nimport type {UIManagerJSInterface} from '../Types/UIManagerJSInterface';\n\nimport {getFabricUIManager} from './FabricUIManager';\nimport nullthrows from 'nullthrows';\n\nfunction isFabricReactTag(reactTag: number): boolean {\n  // React reserves even numbers for Fabric.\n  return reactTag % 2 === 0;\n}\n\nconst UIManagerImpl: UIManagerJSInterface =\n  global.RN$Bridgeless === true\n    ? require('./BridgelessUIManager')\n    : require('./PaperUIManager');\n\n// $FlowFixMe[cannot-spread-interface]\nconst UIManager: UIManagerJSInterface = {\n  ...UIManagerImpl,\n  measure(\n    reactTag: number,\n    callback: (\n      left: number,\n      top: number,\n      width: number,\n      height: number,\n      pageX: number,\n      pageY: number,\n    ) => void,\n  ): void {\n    if (isFabricReactTag(reactTag)) {\n      const FabricUIManager = nullthrows(getFabricUIManager());\n      const shadowNode =\n        FabricUIManager.findShadowNodeByTag_DEPRECATED(reactTag);\n      if (shadowNode) {\n        FabricUIManager.measure(shadowNode, callback);\n      } else {\n        console.warn(`measure cannot find view with tag #${reactTag}`);\n        // $FlowFixMe[incompatible-call]\n        callback();\n      }\n    } else {\n      // Paper\n      UIManagerImpl.measure(reactTag, callback);\n    }\n  },\n\n  measureInWindow(\n    reactTag: number,\n    callback: (\n      left: number,\n      top: number,\n      width: number,\n      height: number,\n    ) => void,\n  ): void {\n    if (isFabricReactTag(reactTag)) {\n      const FabricUIManager = nullthrows(getFabricUIManager());\n      const shadowNode =\n        FabricUIManager.findShadowNodeByTag_DEPRECATED(reactTag);\n      if (shadowNode) {\n        FabricUIManager.measureInWindow(shadowNode, callback);\n      } else {\n        console.warn(`measure cannot find view with tag #${reactTag}`);\n        // $FlowFixMe[incompatible-call]\n        callback();\n      }\n    } else {\n      // Paper\n      UIManagerImpl.measureInWindow(reactTag, callback);\n    }\n  },\n\n  measureLayout(\n    reactTag: number,\n    ancestorReactTag: number,\n    errorCallback: (error: Object) => void,\n    callback: (\n      left: number,\n      top: number,\n      width: number,\n      height: number,\n    ) => void,\n  ): void {\n    if (isFabricReactTag(reactTag)) {\n      const FabricUIManager = nullthrows(getFabricUIManager());\n      const shadowNode =\n        FabricUIManager.findShadowNodeByTag_DEPRECATED(reactTag);\n      const ancestorShadowNode =\n        FabricUIManager.findShadowNodeByTag_DEPRECATED(ancestorReactTag);\n\n      if (!shadowNode || !ancestorShadowNode) {\n        return;\n      }\n\n      FabricUIManager.measureLayout(\n        shadowNode,\n        ancestorShadowNode,\n        errorCallback,\n        callback,\n      );\n    } else {\n      // Paper\n      UIManagerImpl.measureLayout(\n        reactTag,\n        ancestorReactTag,\n        errorCallback,\n        callback,\n      );\n    }\n  },\n\n  measureLayoutRelativeToParent(\n    reactTag: number,\n    errorCallback: (error: Object) => void,\n    callback: (\n      left: number,\n      top: number,\n      width: number,\n      height: number,\n    ) => void,\n  ): void {\n    if (isFabricReactTag(reactTag)) {\n      console.warn(\n        'RCTUIManager.measureLayoutRelativeToParent method is deprecated and it will not be implemented in newer versions of RN (Fabric) - T47686450',\n      );\n      const FabricUIManager = nullthrows(getFabricUIManager());\n      const shadowNode =\n        FabricUIManager.findShadowNodeByTag_DEPRECATED(reactTag);\n      if (shadowNode) {\n        FabricUIManager.measure(\n          shadowNode,\n          (left, top, width, height, pageX, pageY) => {\n            callback(left, top, width, height);\n          },\n        );\n      }\n    } else {\n      // Paper\n      UIManagerImpl.measureLayoutRelativeToParent(\n        reactTag,\n        errorCallback,\n        callback,\n      );\n    }\n  },\n\n  dispatchViewManagerCommand(\n    reactTag: number,\n    commandName: number | string,\n    commandArgs: any[],\n  ) {\n    // Sometimes, libraries directly pass in the output of `findNodeHandle` to\n    // this function without checking if it's null. This guards against that\n    // case. We throw early here in Javascript so we can get a JS stacktrace\n    // instead of a harder-to-debug native Java or Objective-C stacktrace.\n    if (typeof reactTag !== 'number') {\n      throw new Error('dispatchViewManagerCommand: found null reactTag');\n    }\n\n    if (isFabricReactTag(reactTag)) {\n      const FabricUIManager = nullthrows(getFabricUIManager());\n      const shadowNode =\n        FabricUIManager.findShadowNodeByTag_DEPRECATED(reactTag);\n      if (shadowNode) {\n        // Transform the accidental CommandID into a CommandName which is the stringified number.\n        // The interop layer knows how to convert this number into the right method name.\n        // Stringify a string is a no-op, so it's safe.\n        commandName = `${commandName}`;\n        FabricUIManager.dispatchCommand(shadowNode, commandName, commandArgs);\n      }\n    } else {\n      UIManagerImpl.dispatchViewManagerCommand(\n        reactTag,\n        // We have some legacy components that are actually already using strings. ¯\\_(ツ)_/¯\n        // $FlowFixMe[incompatible-call]\n        commandName,\n        commandArgs,\n      );\n    }\n  },\n};\n\nmodule.exports = UIManager;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\n'use strict';\n\n/**\n * The list of non-ViewManager related UIManager properties.\n *\n * In an effort to improve startup performance by lazily loading view managers,\n * the interface to access view managers will change from\n * UIManager['viewManagerName'] to UIManager.getViewManagerConfig('viewManagerName').\n * By using a function call instead of a property access, the UIManager will\n * be able to initialize and load the required view manager from native\n * synchronously. All of React Native's core components have been updated to\n * use getViewManagerConfig(). For the next few releases, any usage of\n * UIManager['viewManagerName'] will result in a warning. Because React Native\n * does not support Proxy objects, a view manager access is implied if any of\n * UIManager's properties that are not one of the properties below is being\n * accessed. Once UIManager property accesses for view managers has been fully\n * deprecated, this file will also be removed.\n */\nmodule.exports = [\n  'clearJSResponder',\n  'configureNextLayoutAnimation',\n  'createView',\n  'dismissPopupMenu',\n  'dispatchViewManagerCommand',\n  'findSubviewIn',\n  'getConstantsForViewManager',\n  'getDefaultEventTypes',\n  'manageChildren',\n  'measure',\n  'measureInWindow',\n  'measureLayout',\n  'measureLayoutRelativeToParent',\n  'removeRootView',\n  'sendAccessibilityEvent',\n  'setChildren',\n  'setJSResponder',\n  'setLayoutAnimationEnabledExperimental',\n  'showPopupMenu',\n  'updateView',\n  'viewIsDescendantOf',\n  'PopupMenu',\n  'LazyViewManagersEnabled',\n  'ViewManagerNames',\n  'StyleConstants',\n  'AccessibilityEventTypes',\n  'UIView',\n  'getViewManagerConfig',\n  'hasViewManagerConfig',\n  'blur',\n  'focus',\n  'genericBubblingEventTypes',\n  'genericDirectEventTypes',\n  'lazilyLoadView',\n];\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nimport type {AbstractComponent} from 'react';\n\nimport * as React from 'react';\n\ntype NoopComponent = AbstractComponent<{children: React.Node}>;\n\nconst cache: Map<\n  string, // displayName\n  NoopComponent, // ComponentWithDisplayName\n> = new Map();\n\nexport default function getCachedComponentWithDisplayName(\n  displayName: string,\n): NoopComponent {\n  let ComponentWithDisplayName = cache.get(displayName);\n\n  if (!ComponentWithDisplayName) {\n    ComponentWithDisplayName = ({children}: {children: React.Node}) => children;\n    // $FlowFixMe[prop-missing]\n    ComponentWithDisplayName.displayName = displayName;\n    cache.set(displayName, ComponentWithDisplayName);\n  }\n\n  return ComponentWithDisplayName;\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\n'use strict';\n\nconst ReactNativeStyleAttributes = require('../Components/View/ReactNativeStyleAttributes');\nconst resolveAssetSource = require('../Image/resolveAssetSource');\nconst processColor = require('../StyleSheet/processColor').default;\nconst processColorArray = require('../StyleSheet/processColorArray');\nconst insetsDiffer = require('../Utilities/differ/insetsDiffer');\nconst matricesDiffer = require('../Utilities/differ/matricesDiffer');\nconst pointsDiffer = require('../Utilities/differ/pointsDiffer');\nconst sizesDiffer = require('../Utilities/differ/sizesDiffer');\nconst UIManager = require('./UIManager');\nconst invariant = require('invariant');\nconst nullthrows = require('nullthrows');\n\nfunction getNativeComponentAttributes(uiViewClassName: string): any {\n  const viewConfig = UIManager.getViewManagerConfig(uiViewClassName);\n\n  invariant(\n    viewConfig != null && viewConfig.NativeProps != null,\n    'requireNativeComponent: \"%s\" was not found in the UIManager.',\n    uiViewClassName,\n  );\n\n  // TODO: This seems like a whole lot of runtime initialization for every\n  // native component that can be either avoided or simplified.\n  let {baseModuleName, bubblingEventTypes, directEventTypes} = viewConfig;\n  let nativeProps = viewConfig.NativeProps;\n\n  bubblingEventTypes = bubblingEventTypes ?? {};\n  directEventTypes = directEventTypes ?? {};\n\n  while (baseModuleName) {\n    const baseModule = UIManager.getViewManagerConfig(baseModuleName);\n    if (!baseModule) {\n      baseModuleName = null;\n    } else {\n      bubblingEventTypes = {\n        ...baseModule.bubblingEventTypes,\n        ...bubblingEventTypes,\n      };\n      directEventTypes = {\n        ...baseModule.directEventTypes,\n        ...directEventTypes,\n      };\n      nativeProps = {\n        ...baseModule.NativeProps,\n        ...nativeProps,\n      };\n      baseModuleName = baseModule.baseModuleName;\n    }\n  }\n\n  const validAttributes: {[string]: mixed} = {};\n\n  for (const key in nativeProps) {\n    const typeName = nativeProps[key];\n    const diff = getDifferForType(typeName);\n    const process = getProcessorForType(typeName);\n\n    // If diff or process == null, omit the corresponding property from the Attribute\n    // Why:\n    //  1. Consistency with AttributeType flow type\n    //  2. Consistency with Static View Configs, which omit the null properties\n    validAttributes[key] =\n      diff == null\n        ? process == null\n          ? true\n          : {process}\n        : process == null\n        ? {diff}\n        : {diff, process};\n  }\n\n  // Unfortunately, the current setup declares style properties as top-level\n  // props. This makes it so we allow style properties in the `style` prop.\n  // TODO: Move style properties into a `style` prop and disallow them as\n  // top-level props on the native side.\n  validAttributes.style = ReactNativeStyleAttributes;\n\n  Object.assign(viewConfig, {\n    uiViewClassName,\n    validAttributes,\n    bubblingEventTypes,\n    directEventTypes,\n  });\n\n  attachDefaultEventTypes(viewConfig);\n\n  return viewConfig;\n}\n\nfunction attachDefaultEventTypes(viewConfig: any) {\n  // This is supported on UIManager platforms (ex: Android),\n  // as lazy view managers are not implemented for all platforms.\n  // See [UIManager] for details on constants and implementations.\n  const constants = UIManager.getConstants();\n  if (constants.ViewManagerNames || constants.LazyViewManagersEnabled) {\n    // Lazy view managers enabled.\n    viewConfig = merge(\n      viewConfig,\n      nullthrows(UIManager.getDefaultEventTypes)(),\n    );\n  } else {\n    viewConfig.bubblingEventTypes = merge(\n      viewConfig.bubblingEventTypes,\n      constants.genericBubblingEventTypes,\n    );\n    viewConfig.directEventTypes = merge(\n      viewConfig.directEventTypes,\n      constants.genericDirectEventTypes,\n    );\n  }\n}\n\n// TODO: Figure out how to avoid all this runtime initialization cost.\nfunction merge(destination: ?Object, source: ?Object): ?Object {\n  if (!source) {\n    return destination;\n  }\n  if (!destination) {\n    return source;\n  }\n\n  for (const key in source) {\n    if (!source.hasOwnProperty(key)) {\n      continue;\n    }\n\n    let sourceValue = source[key];\n    if (destination.hasOwnProperty(key)) {\n      const destinationValue = destination[key];\n      if (\n        typeof sourceValue === 'object' &&\n        typeof destinationValue === 'object'\n      ) {\n        sourceValue = merge(destinationValue, sourceValue);\n      }\n    }\n    destination[key] = sourceValue;\n  }\n  return destination;\n}\n\nfunction getDifferForType(\n  typeName: string,\n): ?(prevProp: any, nextProp: any) => boolean {\n  switch (typeName) {\n    // iOS Types\n    case 'CATransform3D':\n      return matricesDiffer;\n    case 'CGPoint':\n      return pointsDiffer;\n    case 'CGSize':\n      return sizesDiffer;\n    case 'UIEdgeInsets':\n      return insetsDiffer;\n    // Android Types\n    case 'Point':\n      return pointsDiffer;\n    case 'EdgeInsets':\n      return insetsDiffer;\n  }\n  return null;\n}\n\nfunction getProcessorForType(typeName: string): ?(nextProp: any) => any {\n  switch (typeName) {\n    // iOS Types\n    case 'CGColor':\n    case 'UIColor':\n      return processColor;\n    case 'CGColorArray':\n    case 'UIColorArray':\n      return processColorArray;\n    case 'CGImage':\n    case 'UIImage':\n    case 'RCTImageSource':\n      return resolveAssetSource;\n    // Android Types\n    case 'Color':\n      return processColor;\n    case 'ColorArray':\n      return processColorArray;\n    case 'ImageSource':\n      return resolveAssetSource;\n  }\n  return null;\n}\n\nmodule.exports = getNativeComponentAttributes;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\nimport type {IPerformanceLogger} from '../Utilities/createPerformanceLogger';\n\nimport GlobalPerformanceLogger from '../Utilities/GlobalPerformanceLogger';\nimport PerformanceLoggerContext from '../Utilities/PerformanceLoggerContext';\nimport AppContainer from './AppContainer';\nimport DisplayMode, {type DisplayModeType} from './DisplayMode';\nimport getCachedComponentWithDebugName from './getCachedComponentWithDebugName';\nimport * as Renderer from './RendererProxy';\nimport invariant from 'invariant';\nimport * as React from 'react';\n\n// require BackHandler so it sets the default handler that exits the app if no listeners respond\nimport '../Utilities/BackHandler';\n\ntype ActivityType = React.AbstractComponent<{\n  mode: 'visible' | 'hidden',\n  children: React.Node,\n}>;\n\nexport default function renderApplication<Props: Object>(\n  RootComponent: React.ComponentType<Props>,\n  initialProps: Props,\n  rootTag: any,\n  WrapperComponent?: ?React.ComponentType<any>,\n  fabric?: boolean,\n  showArchitectureIndicator?: boolean,\n  scopedPerformanceLogger?: IPerformanceLogger,\n  isLogBox?: boolean,\n  debugName?: string,\n  displayMode?: ?DisplayModeType,\n  useConcurrentRoot?: boolean,\n  useOffscreen?: boolean,\n) {\n  invariant(rootTag, 'Expect to have a valid rootTag, instead got ', rootTag);\n\n  const performanceLogger = scopedPerformanceLogger ?? GlobalPerformanceLogger;\n\n  let renderable: React.MixedElement = (\n    <PerformanceLoggerContext.Provider value={performanceLogger}>\n      <AppContainer\n        rootTag={rootTag}\n        fabric={fabric}\n        showArchitectureIndicator={showArchitectureIndicator}\n        WrapperComponent={WrapperComponent}\n        initialProps={initialProps ?? Object.freeze({})}\n        internal_excludeLogBox={isLogBox}>\n        <RootComponent {...initialProps} rootTag={rootTag} />\n      </AppContainer>\n    </PerformanceLoggerContext.Provider>\n  );\n\n  if (__DEV__ && debugName) {\n    const RootComponentWithMeaningfulName = getCachedComponentWithDebugName(\n      `${debugName}(RootComponent)`,\n    );\n    renderable = (\n      <RootComponentWithMeaningfulName>\n        {renderable}\n      </RootComponentWithMeaningfulName>\n    );\n  }\n\n  if (useOffscreen && displayMode != null) {\n    // $FlowFixMe[incompatible-type]\n    // $FlowFixMe[prop-missing]\n    const Activity: ActivityType = React.unstable_Activity;\n\n    renderable = (\n      <Activity\n        mode={displayMode === DisplayMode.VISIBLE ? 'visible' : 'hidden'}>\n        {renderable}\n      </Activity>\n    );\n  }\n\n  // We want to have concurrentRoot always enabled when you're on Fabric.\n  const useConcurrentRootOverride = fabric;\n\n  performanceLogger.startTimespan('renderApplication_React_render');\n  performanceLogger.setExtra(\n    'usedReactConcurrentRoot',\n    useConcurrentRootOverride ? '1' : '0',\n  );\n  performanceLogger.setExtra('usedReactFabric', fabric ? '1' : '0');\n  performanceLogger.setExtra(\n    'usedReactProfiler',\n    Renderer.isProfilingRenderer(),\n  );\n  Renderer.renderElement({\n    element: renderable,\n    rootTag,\n    useFabric: Boolean(fabric),\n    useConcurrentRoot: Boolean(useConcurrentRootOverride),\n  });\n  performanceLogger.stopTimespan('renderApplication_React_render');\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\n'use strict';\n\nimport type {HostComponent} from '../Renderer/shims/ReactNativeTypes';\n\nconst createReactNativeComponentClass = require('../Renderer/shims/createReactNativeComponentClass');\nconst getNativeComponentAttributes = require('./getNativeComponentAttributes');\n\n/**\n * Creates values that can be used like React components which represent native\n * view managers. You should create JavaScript modules that wrap these values so\n * that the results are memoized. Example:\n *\n *   const View = requireNativeComponent('RCTView');\n *\n */\n\nconst requireNativeComponent = <T>(uiViewClassName: string): HostComponent<T> =>\n  ((createReactNativeComponentClass(uiViewClassName, () =>\n    getNativeComponentAttributes(uiViewClassName),\n  ): any): HostComponent<T>);\n\nexport default requireNativeComponent;\n"],"names":["_NativePushNotificationManagerIOS","e","r","__esModule","default","t","_getRequireWildcardCache","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","_interopRequireWildcard","require","WeakMap","keys","forEach","key","prototype","_exportNames","exports","enumerable","NativePushNotificationManagerIOS","_NativeEventEmitter","_interopRequireDefault","_Platform","_invariant","PushNotificationEmitter","NativeEventEmitter","Platform","OS","_notifHandlers","Map","PushNotificationIOS","nativeNotif","_this","_classCallCheck2","this","_data","_remoteNotificationCompleteCallbackCalled","_isRemote","remote","_notificationId","notificationId","notifKey","notifVal","_alert","alert","_sound","sound","_badgeCount","badge","_category","category","_contentAvailable","_threadID","applicationIconBadgeNumber","soundName","alertBody","userInfo","_createClass2","value","fetchResult","invariant","onFinishRemoteNotification","details","presentLocalNotification","scheduleLocalNotification","cancelAllLocalNotifications","removeAllDeliveredNotifications","callback","getDeliveredNotifications","identifiers","removeDeliveredNotifications","number","setApplicationIconBadgeNumber","getApplicationIconBadgeNumber","cancelLocalNotifications","getScheduledLocalNotifications","type","handler","listener","addListener","notifData","registrationInfo","deviceToken","errorInfo","remove","delete","permissions","requestedPermissions","requestPermissions","abandonPermissions","checkPermissions","getInitialNotification","then","notification","getAuthorizationStatus","FetchResult","NewData","NoData","ResultFailed","module","_View","_StyleSheet","_RootTag","_jsxRuntime","styles","StyleSheet","create","root","flex","_ref","children","fabric","initialProps","rootTag","showArchitectureIndicator","WrapperComponent","innerView","jsx","RootTagContext","Provider","createRootTag","style","pointerEvents","AppContainer","wrapperComponentProvider","_BatchedBridge","_BugReporting","_createPerformanceLogger","_infoLog","_SceneTracker","_DisplayMode","_HeadlessJsTaskError","_NativeHeadlessJsTaskSupport","_renderApplication","_RendererProxy","runnables","runCount","sections","taskProviders","taskCancelProviders","componentProviderInstrumentationHook","component","AppRegistry","setWrapperComponentProvider","provider","enableArchitectureIndicator","enabled","registerConfig","config","appConfig","run","registerRunnable","appKey","registerComponent","section","componentProvider","scopedPerformanceLogger","createPerformanceLogger","appParameters","displayMode","_appParameters$initia","concurrentRootEnabled","Boolean","concurrentRoot","renderApplication","registerSection","getAppKeys","getSectionKeys","getSections","assign","getRunnable","getRegistry","setComponentProviderInstrumentationHook","hook","runApplication","msg","infoLog","BugReporting","addSource","SceneTracker","setActiveScene","name","coerceDisplayMode","setSurfaceProps","JSON","stringify","unmountApplicationComponentAtRootTag","unmountComponentAtNodeAndRemoveContainer","registerHeadlessTask","taskKey","taskProvider","registerCancellableHeadlessTask","taskCancelProvider","console","warn","startHeadlessTask","taskId","data","NativeHeadlessJsTaskSupport","notifyTaskFinished","catch","reason","error","HeadlessJsTaskError","notifyTaskRetry","retryPosted","cancelHeadlessTask","Error","global","RN$AppRegistry","RN$SurfaceRegistry","renderSurface","RN$Bridgeless","log","BatchedBridge","registerCallableModule","_NativeComponentRegistryUnstable","_defineLazyObjectProperty","_FabricUIManager","_nullthrows","raiseSoftError","methodName","wasCalledOnce","result","getUIManagerConstants","RN$LegacyInterop_UIManager_getConstants","getUIManagerConstantsCached","nullthrows","getConstantsForViewManager","RN$LegacyInterop_UIManager_getConstantsForViewManager","getDefaultEventTypes","RN$LegacyInterop_UIManager_getDefaultEventTypes","getDefaultEventTypesCached","UIManagerJSOverridenAPIs","measure","reactTag","measureInWindow","measureLayout","ancestorReactTag","errorCallback","measureLayoutRelativeToParent","dispatchViewManagerCommand","commandID","commandArgs","UIManagerJSUnusedInNewArchAPIs","createView","viewName","props","updateView","setChildren","containerTag","reactTags","manageChildren","moveFromIndices","moveToIndices","addChildReactTags","addAtIndices","removeAtIndices","setJSResponder","blockNativeResponder","clearJSResponder","UIManagerJSDeprecatedPlatformAPIs","select","android","showPopupMenu","items","success","dismissPopupMenu","UIManagerJSPlatformAPIs","viewManagerName","setLayoutAnimationEnabledExperimental","sendAccessibilityEvent","eventType","eventName","FabricUIManager","getFabricUIManager","shadowNode","findShadowNodeByTag_DEPRECATED","ios","lazilyLoadView","focus","dispatchCommand","blur","UIManagerJS","getViewManagerConfig","constants","hasViewManagerConfig","unstable_hasComponent","getConstants","findSubviewIn","point","findNodeAtPoint","internalInstanceHandle","instanceHandle","node","stateNode","nativeViewTag","canonical","nativeTag","x","y","width","height","pageX","pageY","viewIsDescendantOf","ancestorShadowNode","compareDocumentPosition","configureNextLayoutAnimation","viewConfigName","ViewManagerNames","defineLazyObjectProperty","DisplayMode","SUSPENDED","HIDDEN","VISIBLE","freeze","nativeFabricUIManagerProxy","nativeFabricUIManager","implementation","propertiesToCache","proxy","_loop","propertyName","createProxyWithCachedProperties","CACHED_PROPERTIES","_Error","_callSuper","arguments","_inherits2","_wrapNativeSuper2","_NativeI18nManager","i18nConstants","NativeI18nManager","_NativeI18nManager$ge","isRTL","doLeftAndRightSwapInRTL","localeIdentifier","getI18nManagerConstants","allowRTL","shouldAllow","forceRTL","shouldForce","swapLeftAndRightInRTL","flipStyles","_NativeUIManager","NativeUIManager","NativeModules","UIManagerProperties","viewManagerConfigs","triedLoadingConfig","Set","NativeUIManagerConstants","isNativeUIManagerConstantsSet","undefined","nativeCallSyncHook","add","viewConfig","lazifyViewManagerConfig","Manager","viewManager","commands","index","includes","_TextInputState","_ReactFabric","_ReactNativeAttributePayload","fabricMeasure","fabricMeasureInWindow","fabricMeasureLayout","fabricGetBoundingClientRect","getBoundingClientRect","setNativeProps","noop","ReactFabricHostComponent","tag","__nativeTag","_viewConfig","__internalInstanceHandle","TextInputState","blurTextInput","focusTextInput","getNodeFromInternalInstanceHandle","relativeToNativeNode","onSuccess","onFail","toStateNode","fromStateNode","rect","DOMRect","nativeProps","updatePayload","validAttributes","PublicInstanceClass","ReactNativeFeatureFlags","enableAccessToHostTreeInFabric","ReadOnlyTextClass","publicInstance","_internalInstanceHandle","ReactFabric","maybeInstance","isLegacyFabricInstance","addProperties","prevProps","nextProps","diffProperties","_flattenStyle","_deepDiffer","emptyObject","removedKeys","removedKeyCount","deepDifferOptions","unsafelyIgnoreFunctions","defaultDiffer","prevProp","nextProp","deepDiffer","restoreDeletedValuesInNestedArray","Array","isArray","length","obj","propKey","attributeConfig","diff","process","nextValue","diffNestedProperty","prevArray","nextArray","minLength","clearNestedProperty","addNestedProperty","diffNestedArrayProperty","flattenStyle","clearProperties","__DEV__","shouldEmitW3CPointerEvents","shouldPressibilityUseW3CPointerEventsForHover","handle","command","args","componentOrHandle","parentInstance","childInstance","element","useFabric","useConcurrentRoot","rootTagAsNumber","fn","bookkeeping","_RendererImplementation","React","createContext","isFabricReactTag","UIManagerImpl","UIManager","left","top","commandName","displayName","ComponentWithDisplayName","cache","ReactNativeStyleAttributes","resolveAssetSource","processColor","processColorArray","insetsDiffer","matricesDiffer","pointsDiffer","sizesDiffer","merge","destination","source","sourceValue","destinationValue","getDifferForType","typeName","getProcessorForType","uiViewClassName","_bubblingEventTypes","_directEventTypes","NativeProps","baseModuleName","bubblingEventTypes","directEventTypes","baseModule","LazyViewManagersEnabled","genericBubblingEventTypes","genericDirectEventTypes","attachDefaultEventTypes","RootComponent","isLogBox","debugName","useOffscreen","performanceLogger","GlobalPerformanceLogger","renderable","_PerformanceLoggerContext","_AppContainer","internal_excludeLogBox","Activity","unstable_Activity","mode","useConcurrentRootOverride","startTimespan","setExtra","Renderer","isProfilingRenderer","renderElement","stopTimespan","_GlobalPerformanceLogger","createReactNativeComponentClass","getNativeComponentAttributes"],"sourceRoot":""}