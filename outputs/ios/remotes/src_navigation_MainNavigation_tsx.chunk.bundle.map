{"version":3,"file":"src_navigation_MainNavigation_tsx.chunk.bundle","mappings":"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","sources":["webpack:///./assets/color/color.ts","webpack:///./i18n.ts","webpack:///./locales/index.ts","webpack:///./src/api/authApi.ts","webpack:///./src/component/SplashScreen.tsx","webpack:///./src/component/ToastComponent.tsx","webpack:///./src/navigation/MainNavigation.tsx","webpack:///./src/screen/ForgetPassword.tsx","webpack:///./src/screen/LoginScreen.tsx","webpack:///./src/screen/SignUpScreen.tsx","webpack:///./src/services/AuthServices.ts"],"sourcesContent":["export const colors = {\n  primary: \"#62248F\",\n  text: \"rgba(0, 32, 77, 0.7)\",\n  background: \"#F9FAFB\",\n  colorTitie: \"rgba(0, 32, 77, 0.90)\",\n  colorText: '#00204D',\n  colorSubText: 'rgba(0, 32, 77, 0.25)'\n}","import { initReactI18next } from 'react-i18next';\nimport languageResources from './locales';\nimport i18next from 'i18next';\n\ni18next\n  .use(initReactI18next)\n  .init({\n    compatibilityJSON: \"v3\",\n    lng: \"vi\",\n    fallbackLng: 'en',\n    debug: true,\n    resources: languageResources\n  });\n\nexport default i18next;","import en from \"./en/strings.json\";\nimport vi from \"./vi/strings.json\";\nexport const languageResources = {\n  en: { translation: en },\n  vi: { translation: vi }\n\n}\n\nexport default languageResources","import { BASE_URL_EACCOUNT } from \"../contanst\"\n\nexport const loginApi = async (body: any) => {\n  const respones = await fetch(BASE_URL_EACCOUNT + 'auth/login',\n    {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    }\n  )\n    .then((res) => res.json())\n    .catch((e) => console.log(e))\n\n  return respones;\n}\n\nexport const forgetPassword = async (body: any) => {\n  const respones = await fetch(BASE_URL_EACCOUNT + '',\n    {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    }\n  )\n    .then((res) => res.json())\n    .catch((e) => console.log(e))\n\n  return respones;\n}","import React from \"react\";\nimport { LoaderScreen } from \"react-native-ui-lib\";\nimport { colors } from \"../../assets/color/color\";\n\nconst SplashScreen = ({ message }: any) => {\n  return (\n    <LoaderScreen backgroundColor=\"rgba(0, 53, 128, 0.15)\" overlay loaderColor={colors.primary} message={message} />\n  )\n}\n\nexport default SplashScreen;","import React from \"react\";\nimport { SafeAreaView } from \"react-native\";\nimport { Toast } from \"react-native-ui-lib\";\n\ninterface IToast {\n  open: boolean,\n  onOpen: Function,\n  message: string,\n  position?: string,\n}\n\nconst ToastComponent = (props: IToast) => {\n  const { position = 'top' } = props\n  return (\n    <Toast\n      visible={props.open}\n      position={position}\n      autoDismiss={2000}\n      message={props.message}\n      onDismiss={() => props.onOpen(false)}\n    ></Toast>\n  )\n}\n\nexport default ToastComponent;","import { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport React from \"react\";\nimport SignUp from \"../screen/SignUpScreen\";\n// import LoginNavigation from \"./LoginNavigation\";\n// import ForgetPasswordNavigation from \"./ForgetNavigation\";\nimport Login from \"../screen/LoginScreen\";\nimport ForgetPassword from \"../screen/ForgetPassword\";\nimport AccountScreen from \"../screen/AccountScreen\"\n\nexport type MainStackParamsList = {\n  SignIn: undefined,\n  SignUp: undefined,\n  ForgetPassword: undefined,\n  AccountScreen: undefined\n}\n\nconst Main = createNativeStackNavigator<MainStackParamsList>();\n\nconst MainNavigation = () => {\n  return (\n    <Main.Navigator\n      screenOptions={{\n        headerShown: false\n      }}\n      initialRouteName=\"SignIn\"\n    >\n      <Main.Screen name=\"SignIn\" component={Login} />\n      <Main.Screen name=\"SignUp\" component={SignUp} />\n      <Main.Screen name=\"AccountScreen\" component={AccountScreen} />\n      <Main.Screen name=\"ForgetPassword\" component={ForgetPassword} />\n    </Main.Navigator>\n  )\n}\n\nexport default MainNavigation;","import React, { useState } from \"react\";\nimport { Dimensions, Platform, SafeAreaView, StyleSheet } from \"react-native\";\nimport { Button, Card, Colors, Image, LoaderScreen, Text, TextField, View } from \"react-native-ui-lib\";\nimport { image_forgetPassword, image_imageSendEmail, image_mail } from \"../../image\";\nimport { colors } from \"../../assets/color/color\";\nimport { FontFamily } from \"../global\";\nimport i18next from \"i18next\";\nimport { useTranslation, Trans } from 'react-i18next';\n\n\nconst ForgetPassword = ({ navigation }: any) => {\n  const [email, onChangeEmail] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [statusSendEmail, setStatusSendEmail] = useState(false)\n  // const { i18n, t } = useTranslation();\n\n  const handleSendEmail = () => {\n    setLoading(true)\n    setTimeout(() => {\n      setLoading(false)\n      setStatusSendEmail(true)\n    }, 2000);\n  }\n\n  return (\n    <>\n      {!statusSendEmail ? (\n        <SafeAreaView style={{ flex: 1 }}>\n          <View style={{ flex: 0.3 }} center>\n            <Text style={{ color: colors.primary, fontSize: 24, fontWeight: \"600\", fontFamily: FontFamily.interMedium }}>{i18next.t('forgotPasswordScr.title')}</Text>\n          </View>\n          <View style={{ flex: 0.2 }} center>\n            <Image style={{ width: 179, height: 179 }} source={image_forgetPassword} />\n          </View>\n          <View style={{ flex: 0.2 }} center>\n            <Text style={{ color: colors.text, fontSize: 14, fontWeight: \"400\", fontFamily: FontFamily.interMedium, textAlign: 'center' }}>{i18next.t('forgotPasswordScr.subTitle')}</Text>\n          </View>\n          <View center style={{ position: \"relative\" }}>\n            <TextField\n              containerStyle={{ ...styles.containerTextField, marginBottom: 24 }}\n              placeholder={i18next.t('forgotPasswordScr.acc')}\n              floatingPlaceholder\n              onChangeText={(value) => onChangeEmail(value)}\n              enableErrors\n              validate={['required', 'email', (value: any) => value.length > 6]}\n              validationMessage={['Field is required', 'Email is invalid', 'Password is too short']}\n              maxLength={30}\n            />\n            <View style={{ position: \"absolute\", left: '10%', top: '18%' }}>\n              <Image style={{ width: 30, height: 30 }} source={image_mail} />\n            </View>\n          </View>\n          <View style={{ flex: 0.1, paddingHorizontal: Dimensions.get(\"screen\").width * 0.08 }}>\n            <Button onPress={() => handleSendEmail()} borderRadius={8} labelStyle={{ fontSize: 14, fontWeight: \"500\", fontFamily: FontFamily.interMedium }} label={i18next.t('forgotPasswordScr.sendRequest')} backgroundColor={colors.primary} />\n          </View>\n        </SafeAreaView>\n      ) : (\n        <SafeAreaView style={{ flex: 1 }}>\n          <View style={{ flex: 2.4 }} center>\n            <Image style={{ width: 342, height: 368 }} source={image_imageSendEmail} />\n          </View>\n          <View style={{ flex: 0.5 }} center>\n            <Text style={{ color: colors.text, fontSize: 14, fontWeight: \"400\", fontFamily: FontFamily.interMedium }}>{i18next.t('forgotPasswordScr.requestSuccess')}</Text>\n          </View>\n          <View style={{ flex: 0.8, paddingHorizontal: Dimensions.get(\"screen\").width * 0.08 }}>\n            <Button onPress={() => navigation.reset({\n              routes: [\n                { name: 'SignIn' },\n              ],\n            })} borderRadius={8} labelStyle={{ fontSize: 14, fontWeight: \"500\", fontFamily: FontFamily.interMedium }} label={i18next.t('forgotPasswordScr.login')} backgroundColor={colors.primary} />\n          </View>\n        </SafeAreaView>\n      )}\n      {loading && <LoaderScreen backgroundColor=\"rgba(0, 53, 128, 0.15)\" overlay message={''} color={colors.primary} />}\n    </>\n  )\n}\n\nconst styles = StyleSheet.create({\n  containerTextField: {\n    borderWidth: 1,\n    borderStyle: \"solid\",\n    borderRadius: 8,\n    width: \"85%\",\n    paddingHorizontal: Platform.OS === 'ios' ? 20 : 14,\n    borderColor: 'rgba(0, 53, 128, 0.15)',\n    marginBottom: 16,\n    paddingLeft: 50\n  },\n})\n\nexport default ForgetPassword;","import React, { useCallback, useState } from \"react\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport { Alert, Dimensions, ImageBackground, Platform, StyleSheet } from \"react-native\";\nimport { Button, Card, Checkbox, Colors, Icon, Image, Text, TextField, Toast, TouchableOpacity, View } from \"react-native-ui-lib\";\nimport { image_background, image_eye, image_faceId, image_logo, image_sublogo } from \"../../image\";\nimport { colors } from \"../../assets/color/color\";\nimport { FontFamily } from \"../global\";\nimport { useFocusEffect } from \"@react-navigation/native\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { storeFlag, storeUsernameAndPass } from \"../contanst\";\nimport { loginApi } from \"../api/authApi\";\nimport SplashScreen from \"../component/SplashScreen\";\nimport AuthService from \"../services/AuthServices\";\nimport ToastComponent from \"../component/ToastComponent\";\nimport TouchID from 'react-native-touch-id';\nimport * as Keychain from 'react-native-keychain';\nimport { useTranslation, Trans } from 'react-i18next';\nimport i18next from \"../../i18n\";\n\nconst optionalConfigObject = {\n  title: 'Authentication Required', // Android\n  imageColor: '#e00606', // Android\n  imageErrorColor: '#ff0000', // Android\n  sensorDescription: 'Touch sensor', // Android\n  sensorErrorDescription: 'Failed', // Android\n  cancelText: 'Cancel', // Android\n  fallbackLabel: 'Show Passcode', // iOS (if empty, then label is hidden)\n  unifiedErrors: false, // use unified error messages (default false)\n  passcodeFallback: false, // iOS - allows the device to fall back to using the passcode, if faceid/touch is not available. this does not mean that if touchid/faceid fails the first few times it will revert to passcode, rather that if the former are not enrolled, then it will use the passcode.\n};\n\nconst Login = ({ navigation }: any) => {\n  const { signIn } = useAuth();\n  const [email, onChangeEmail] = useState('');\n  const [password, onChangePass] = useState('');\n  const [secureTextEntry, setSecureTextEntry] = useState(true);\n  const [savePassword, setSavePassword] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [showToast, setShowToast] = useState(false);\n  const [message, setMessage] = useState('')\n  // const { i18n, t } = useTranslation();\n\n  useFocusEffect(useCallback(() => {\n    (async () => {\n      const dataStoreAsync = await AsyncStorage.getItem(storeUsernameAndPass);\n      if (dataStoreAsync) {\n        const data = JSON.parse(dataStoreAsync)\n        onChangeEmail(data.username);\n        onChangePass(data.password);\n        setSavePassword(data.rememberMe);\n      }\n    })()\n  }, []))\n\n  const handleSubmit = async () => {\n    setIsLoading(true)\n    const dataBody = {\n      \"username\": email,\n      \"password\": password,\n      \"rememberMe\": savePassword\n    }\n\n    console.log(dataBody);\n\n    const response = await loginApi(dataBody)\n    if (response && response.access_token) {\n      if (dataBody.rememberMe) {\n        AsyncStorage.setItem(storeUsernameAndPass, JSON.stringify(dataBody))\n      } else {\n        AsyncStorage.removeItem(storeUsernameAndPass);\n      }\n      await AuthService.shared.setCredentials(response.access_token);\n      await AuthService.shared.setInfoLogin(JSON.stringify(response.ui));\n      signIn()\n      setMessage('Đăng nhập thành công')\n      // navigation.navigate('AccountScreen', { username: email, password: password })\n      // await AsyncStorage.setItem(storeFlag, 'true');\n    } else {\n      setMessage('Đăng nhập không thành công')\n      // navigation.navigate('AccountScreen')\n    }\n    setIsLoading(false);\n    setShowToast(true);\n  }\n\n  const handleLoginWithTouchId = async () => {\n    TouchID.isSupported(optionalConfigObject)\n      .then(biometryType => {\n        if (biometryType === 'FaceID') {\n          console.log('FaceID is supported.');\n        } else {\n          console.log('TouchID is supported.');\n        }\n      })\n      .catch(error => {\n        console.log(error);\n      });\n\n    try {\n      const dataStoreAsync = await AsyncStorage.getItem(storeUsernameAndPass);\n      const checkStoreFlag = await AsyncStorage.getItem(storeFlag);\n\n      if (checkStoreFlag === 'true') {\n        if (dataStoreAsync) {\n          TouchID.authenticate('KiTa', optionalConfigObject)\n            .then(async (success: any) => {\n              console.log('Authentication success:', success);\n              // navigation.navigate('AccountScreen');\n\n              const data = JSON.parse(dataStoreAsync);\n              const accBody = {\n                \"username\": data.email,\n                \"password\": data.password,\n              }\n              const response = await loginApi(accBody)\n              await AuthService.shared.setCredentials(response.access_token);\n              await AuthService.shared.setInfoLogin(JSON.stringify(response.ui));\n            })\n            .catch(async (error: any) => {\n              console.log('Authentication error:', error);\n              Alert.alert('Authentication Failed');\n            });\n        } else {\n          Alert.alert(i18next.t('loginScr.notiFaceID'));\n        }\n      } else {\n        Alert.alert(i18next.t('loginScr.notiFaceID'));\n      }\n    } catch (error) {\n      console.log('Error accessing AsyncStorage:', error);\n      Alert.alert('Error accessing stored data');\n    }\n\n  }\n\n  return (\n    <ImageBackground\n      resizeMode=\"cover\"\n      source={image_background}\n      style={styles.imageBackground}\n    >\n      <View style={{ flex: 1 }}>\n        <Image style={styles.logo} source={image_logo} />\n      </View>\n      <View style={{ flex: 0.2 }}>\n        <Text style={styles.headerText} center>{i18next.t('loginScr.title')}</Text>\n      </View>\n      <View style={{ flex: 1.2, alignItems: \"center\", justifyContent: \"flex-start\" }}>\n        <TextField\n          containerStyle={{ ...styles.containerTextField, marginBottom: 24 }}\n          placeholder={i18next.t('loginScr.acc')}\n          floatingPlaceholder\n          onChangeText={onChangeEmail}\n          enableErrors\n          value={email}\n          validate={['required', 'email', (value: any) => value.length > 6]}\n          validationMessage={['Field is required', 'Email is invalid', 'Password is too short']}\n          maxLength={30}\n        />\n\n        <View style={{ width: \"100%\", alignItems: \"center\", justifyContent: \"center\", position: \"relative\" }}>\n          <TextField\n            containerStyle={styles.containerTextField}\n            secureTextEntry={secureTextEntry}\n            placeholder={i18next.t('loginScr.password')}\n            floatingPlaceholder\n            onChangeText={onChangePass}\n            enableErrors\n            value={password}\n            validate={['required', 'email', (value: any) => value.length > 6]}\n            validationMessage={['Field is required', 'Email is invalid', 'Password is too short']}\n            maxLength={30}\n          />\n          <TouchableOpacity onPress={() => setSecureTextEntry(!secureTextEntry)} style={{ position: \"absolute\", right: \"12%\", top: \"25%\" }}>\n            <Icon style={{ width: 20, height: 20, }} source={image_eye} />\n          </TouchableOpacity>\n        </View>\n\n        <View style={{ flexDirection: \"row\", justifyContent: \"space-between\", alignItems: \"center\", columnGap: width * 0.3 }}>\n          <TouchableOpacity onPress={() => setSavePassword(!savePassword)} style={{ flexDirection: \"row\", alignItems: \"center\", justifyContent: \"center\", columnGap: 8 }}>\n            <Checkbox containerStyle={{ borderColor: 'rgba(0, 53, 128, 0.35)' }} borderRadius={8} size={16} value={savePassword} onValueChange={() => setSavePassword(!savePassword)} />\n            <Text style={{ color: savePassword ? 'rgba(0, 53, 128, 1)' : 'rgba(0, 53, 128, 0.35)', fontWeight: \"400\", fontSize: 12, fontFamily: FontFamily.interMedium }}>{i18next.t('loginScr.remember')}</Text>\n          </TouchableOpacity>\n          <TouchableOpacity onPress={() => navigation.navigate('ForgetPassword')}>\n            <Text style={{ color: colors.primary, fontWeight: \"400\", fontSize: 12, fontFamily: FontFamily.interMedium }}>{i18next.t('loginScr.forgotPassword')}</Text>\n          </TouchableOpacity>\n        </View>\n        <View style={{ width: \"85%\", alignItems: \"center\", justifyContent: \"space-between\", flexDirection: \"row\" }}>\n          <Button onPress={handleSubmit} labelStyle={{ fontWeight: \"500\", fontSize: 14, color: \"#fff\", fontFamily: FontFamily.interMedium }} style={{ height: 40, width: \"85%\", borderRadius: 8, marginTop: 24 }} label={i18next.t('loginScr.title')} size={Button.sizes.large} backgroundColor={colors.primary} />\n          <TouchableOpacity onPress={handleLoginWithTouchId}>\n            <Image style={{ width: 40, height: 40, marginTop: 24 }} source={image_faceId} />\n          </TouchableOpacity>\n        </View>\n      </View>\n      <View style={{ flex: 0.4, alignItems: \"center\", justifyContent: \"center\" }}>\n        <Image style={{ width: 83, height: 52.52 }} source={image_sublogo} />\n      </View>\n      {isLoading && <SplashScreen />}\n      {showToast && <ToastComponent open={showToast} onOpen={setShowToast} message={message} />}\n    </ImageBackground>\n  )\n}\n\nconst { width, height } = Dimensions.get(\"screen\")\n\nconst styles = StyleSheet.create({\n  imageBackground: {\n    flex: 1\n  },\n  containerTextField: {\n    borderWidth: 1,\n    borderStyle: \"solid\",\n    borderRadius: 8,\n    width: \"85%\",\n    paddingHorizontal: Platform.OS === 'ios' ? 16 : 10,\n    borderColor: 'rgba(0, 53, 128, 0.15)',\n    marginBottom: 16\n  },\n  logo: {\n    width: 278,\n    height: 52,\n    top: height * 0.18,\n    left: width * 0.1\n  },\n  headerText: {\n    color: colors.primary,\n    fontWeight: \"600\",\n    fontSize: 24,\n    fontFamily: FontFamily.interMedium\n  }\n})\n\nexport default Login;\n\n","import React from \"react\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport { SafeAreaView } from \"react-native\";\nimport { Card, Text } from \"react-native-ui-lib\";\n\nconst SignUp = () => {\n  return (\n    <SafeAreaView>\n      \n    </SafeAreaView>\n  )\n}\n\nexport default SignUp;\n\n","import AsyncStorage from \"@react-native-async-storage/async-storage\";\n\nclass AuthService {\n  TOKEN_KEY = 'token';\n  INFO_USER = 'info_user'\n\n  getCredentials(): Promise<string | null> {\n    return AsyncStorage.getItem(this.TOKEN_KEY);\n  }\n\n  setCredentials(token: string): Promise<void> {\n    return AsyncStorage.setItem(this.TOKEN_KEY, token);\n  }\n\n  setInfoLogin(data: any): Promise<void> {\n    return AsyncStorage.setItem(this.INFO_USER, data)\n  }\n\n  getInfoLogin(): Promise<any> {\n    return AsyncStorage.getItem(this.INFO_USER)\n  }\n\n  async removeCredentials(): Promise<void> {\n    await AsyncStorage.removeItem(this.TOKEN_KEY)\n    return AsyncStorage.removeItem(this.INFO_USER);\n  }\n\n  static shared = new AuthService();\n}\n\nexport default AuthService;"],"names":["exports","primary","text","background","colorTitie","colorText","colorSubText","_reactI18next","require","_locales","_interopRequireDefault","_i18next","i18next","use","initReactI18next","init","compatibilityJSON","lng","fallbackLng","debug","resources","languageResources","_strings","_strings2","en","translation","vi","_ref","_ref2","_contanst","_asyncToGenerator2","default","body","fetch","BASE_URL_EACCOUNT","method","headers","JSON","stringify","then","res","json","catch","e","console","log","_x","apply","arguments","_x2","_reactNativeUiLib","_color","_jsxRuntime","message","jsx","LoaderScreen","backgroundColor","overlay","loaderColor","colors","props","_props$position","position","Toast","visible","open","autoDismiss","onDismiss","onOpen","_nativeStack","_SignUpScreen","_LoginScreen","_ForgetPassword","_AccountScreen","Main","createNativeStackNavigator","jsxs","Navigator","screenOptions","headerShown","initialRouteName","children","Screen","name","component","Login","SignUp","AccountScreen","ForgetPassword","_react","r","__esModule","t","_getRequireWildcardCache","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","_interopRequireWildcard","_reactNative","_image","_global","WeakMap","styles","StyleSheet","create","containerTextField","borderWidth","borderStyle","borderRadius","width","paddingHorizontal","Platform","OS","borderColor","marginBottom","paddingLeft","navigation","_useState","useState","_useState2","_slicedToArray2","onChangeEmail","_useState3","_useState4","loading","setLoading","_useState5","_useState6","statusSendEmail","setStatusSendEmail","Fragment","SafeAreaView","style","flex","View","center","Image","height","source","image_imageSendEmail","Text","color","fontSize","fontWeight","fontFamily","FontFamily","interMedium","Dimensions","Button","onPress","reset","routes","labelStyle","label","image_forgetPassword","textAlign","TextField","containerStyle","assign","placeholder","floatingPlaceholder","onChangeText","value","enableErrors","validate","length","validationMessage","maxLength","left","top","image_mail","setTimeout","_AuthContext","_native","_asyncStorage","_authApi","_SplashScreen","_AuthServices","_ToastComponent","_reactNativeTouchId","_i18n","optionalConfigObject","title","imageColor","imageErrorColor","sensorDescription","sensorErrorDescription","cancelText","fallbackLabel","unifiedErrors","passcodeFallback","_Dimensions$get","imageBackground","logo","headerText","signIn","useAuth","email","password","onChangePass","secureTextEntry","setSecureTextEntry","_useState7","_useState8","savePassword","setSavePassword","_useState9","_useState10","isLoading","setIsLoading","_useState11","_useState12","showToast","setShowToast","_useState13","_useState14","setMessage","useFocusEffect","useCallback","dataStoreAsync","AsyncStorage","getItem","storeUsernameAndPass","data","parse","username","rememberMe","_ref3","_ref4","handleSubmit","dataBody","response","loginApi","access_token","setItem","removeItem","AuthService","shared","setCredentials","setInfoLogin","ui","handleLoginWithTouchId","TouchID","isSupported","biometryType","error","storeFlag","authenticate","_ref5","success","accBody","_ref6","Alert","alert","ImageBackground","resizeMode","image_background","image_logo","alignItems","justifyContent","TouchableOpacity","right","Icon","image_eye","flexDirection","columnGap","Checkbox","size","onValueChange","navigate","marginTop","sizes","large","image_faceId","image_sublogo","_AuthService","_classCallCheck2","TOKEN_KEY","INFO_USER","_removeCredentials","_createClass2","key","this","token"],"sourceRoot":""}