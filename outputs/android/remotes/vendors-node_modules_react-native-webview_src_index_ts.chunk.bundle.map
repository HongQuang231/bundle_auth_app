{"version":3,"file":"vendors-node_modules_react-native-webview_src_index_ts.chunk.bundle","mappings":"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","sources":["webpack:///./node_modules/react-native-webview/node_modules/escape-string-regexp/index.js","webpack:///./node_modules/react-native-webview/src/NativeRNCWebView.ts","webpack:///./node_modules/react-native-webview/src/RNCWebViewNativeComponent.ts","webpack:///./node_modules/react-native-webview/src/WebView.android.tsx","webpack:///./node_modules/react-native-webview/src/WebView.styles.ts","webpack:///./node_modules/react-native-webview/src/WebViewShared.tsx","webpack:///./node_modules/react-native-webview/src/index.ts","webpack:///./node_modules/invariant/browser.js","webpack:///./node_modules/@babel/runtime/helpers/defineProperty.js"],"sourcesContent":["'use strict';\n\nconst matchOperatorsRegex = /[|\\\\{}()[\\]^$+*?.-]/g;\n\nmodule.exports = string => {\n\tif (typeof string !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\treturn string.replace(matchOperatorsRegex, '\\\\$&');\n};\n","/* eslint-disable import/no-duplicates */\nimport type { TurboModule } from 'react-native';\nimport { TurboModuleRegistry } from 'react-native';\nimport {Int32} from 'react-native/Libraries/Types/CodegenTypes';\n\nexport interface Spec extends TurboModule {\n  readonly getConstants: () => {};\n\n  // your module methods go here, for example:\n  isFileUploadSupported(): Promise<boolean>;\n  shouldStartLoadWithLockIdentifier(shouldStart: boolean, lockIdentifier: Int32): void;\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('RNCWebView');","import type { HostComponent, ViewProps } from 'react-native';\nimport codegenNativeComponent from 'react-native/Libraries/Utilities/codegenNativeComponent';\nimport {DirectEventHandler,Double, Int32, WithDefault} from 'react-native/Libraries/Types/CodegenTypes';\nimport codegenNativeCommands from 'react-native/Libraries/Utilities/codegenNativeCommands';\n\nexport type WebViewNativeEvent = Readonly<{\n  url: string;\n  loading: boolean;\n  title: string;\n  canGoBack: boolean;\n  canGoForward: boolean;\n  lockIdentifier: Double;\n}>\nexport type WebViewCustomMenuSelectionEvent = Readonly<{\n  label: string;\n  key: string;\n  selectedText: string;\n}>\nexport type WebViewMessageEvent = Readonly<{\n  url: string;\n  loading: boolean;\n  title: string;\n  canGoBack: boolean;\n  canGoForward: boolean;\n  lockIdentifier: Double;\n  data: string;\n}>\nexport type WebViewOpenWindowEvent = Readonly<{\n  targetUrl: string;\n}>\nexport type WebViewHttpErrorEvent = Readonly<{\n  url: string;\n  loading: boolean;\n  title: string;\n  canGoBack: boolean;\n  canGoForward: boolean;\n  lockIdentifier: Double;\n  description: string;\n  statusCode: Int32;\n}>\n\nexport type WebViewErrorEvent = Readonly<{\n  url: string;\n  loading: boolean;\n  title: string;\n  canGoBack: boolean;\n  canGoForward: boolean;\n  lockIdentifier: Double;\n  domain?: string;\n  code: Int32;\n  description: string;\n}>\n\nexport type WebViewNativeProgressEvent = Readonly< {\n  url: string;\n  loading: boolean;\n  title: string;\n  canGoBack: boolean;\n  canGoForward: boolean;\n  lockIdentifier: Double;\n  progress: Double;\n}>\n\nexport type WebViewNavigationEvent = Readonly< {\n  url: string;\n  loading: boolean;\n  title: string;\n  canGoBack: boolean;\n  canGoForward: boolean;\n  lockIdentifier: Double;\n  navigationType:\n    | 'click'\n    | 'formsubmit'\n    | 'backforward'\n    | 'reload'\n    | 'formresubmit'\n    | 'other';\n  mainDocumentURL?: string;\n}>\n\nexport type ShouldStartLoadRequestEvent  = Readonly<{\n  url: string;\n  loading: boolean;\n  title: string;\n  canGoBack: boolean;\n  canGoForward: boolean;\n  lockIdentifier: Double;\n  navigationType:\n    | 'click'\n    | 'formsubmit'\n    | 'backforward'\n    | 'reload'\n    | 'formresubmit'\n    | 'other';\n  mainDocumentURL?: string;\n  isTopFrame: boolean;\n}>\n\ntype ScrollEvent = Readonly<{\n  contentInset: {\n    bottom: Double,\n    left: Double,\n    right: Double,\n    top: Double,\n  },\n  contentOffset: {\n    y: Double,\n    x: Double,\n  },\n  contentSize: {\n    height: Double,\n    width: Double,\n  },\n  layoutMeasurement: {\n    height: Double,\n    width: Double,\n  },\n  targetContentOffset?: {\n    y: Double,\n    x: Double,\n  },\n  velocity?: {\n    y: Double,\n    x: Double,\n  },\n  zoomScale?: Double,\n  responderIgnoreScroll?: boolean,\n}>\n\ntype WebViewRenderProcessGoneEvent = Readonly<{\n  didCrash: boolean;\n}>\n\ntype WebViewDownloadEvent = Readonly<{\n  downloadUrl: string;\n}>\n\n// type MenuItem = Readonly<{label: string, key: string}>;\n\nexport interface NativeProps extends ViewProps {\n  // Android only\n  allowFileAccess?: boolean;\n  allowsProtectedMedia?: boolean;\n  allowsFullscreenVideo?: boolean;\n  androidLayerType?: WithDefault<'none' | 'software' | 'hardware', 'none'>;\n  cacheMode?: WithDefault<'LOAD_DEFAULT' | 'LOAD_CACHE_ELSE_NETWORK' | 'LOAD_NO_CACHE' | 'LOAD_CACHE_ONLY', 'LOAD_DEFAULT'>;\n  domStorageEnabled?: boolean;\n  downloadingMessage?: string;\n  forceDarkOn?: boolean;\n  geolocationEnabled?: boolean;\n  lackPermissionToDownloadMessage?: string;\n  messagingModuleName: string;\n  minimumFontSize?: Int32;\n  mixedContentMode?: WithDefault<'never' | 'always' | 'compatibility', 'never'>;\n  nestedScrollEnabled?: boolean;\n  onContentSizeChange?: DirectEventHandler<WebViewNativeEvent>;\n  onRenderProcessGone?: DirectEventHandler<WebViewRenderProcessGoneEvent>;\n  overScrollMode?: string;\n  saveFormDataDisabled?: boolean;\n  scalesPageToFit?: boolean;\n  setBuiltInZoomControls?: boolean;\n  setDisplayZoomControls?: boolean;\n  setSupportMultipleWindows?: boolean;\n  textZoom?: Int32;\n  thirdPartyCookiesEnabled?: boolean;\n  // Workaround to watch if listener if defined\n  hasOnScroll?: boolean;\n  // !Android only\n\n  // iOS only\n  allowingReadAccessToURL?: string;\n  allowsBackForwardNavigationGestures?: boolean;\n  allowsInlineMediaPlayback?: boolean;\n  allowsAirPlayForMediaPlayback?: boolean;\n  allowsLinkPreview?: boolean;\n  automaticallyAdjustContentInsets?: boolean;\n  autoManageStatusBarEnabled?: boolean;\n  bounces?: boolean;\n  contentInset?: Readonly<{\n    top?: Double;\n    left?: Double;\n    bottom?: Double;\n    right?: Double;\n  }>;\n  contentInsetAdjustmentBehavior?: WithDefault<'never' | 'automatic' | 'scrollableAxes' | 'always', 'never'>;\n  contentMode?: WithDefault<'recommended' | 'mobile' | 'desktop', 'recommended'>;\n  dataDetectorTypes?: WithDefault<\n    // eslint-disable-next-line @typescript-eslint/array-type\n    ReadonlyArray<'address' | 'link' | 'calendarEvent' | 'trackingNumber' | 'flightNumber' | 'lookupSuggestion' | 'phoneNumber' | 'all' | 'none'>,\n    'phoneNumber'\n  >;\n  decelerationRate?: Double;\n  directionalLockEnabled?: boolean;\n  enableApplePay?: boolean;\n  hideKeyboardAccessoryView?: boolean;\n  keyboardDisplayRequiresUserAction?: boolean;\n  limitsNavigationsToAppBoundDomains?: boolean;\n  mediaCapturePermissionGrantType?: WithDefault<'prompt' | 'grant' | 'deny' | 'grantIfSameHostElsePrompt' | 'grantIfSameHostElseDeny', 'prompt'>;\n  pagingEnabled?: boolean;\n  pullToRefreshEnabled?: boolean;\n  scrollEnabled?: boolean;\n  sharedCookiesEnabled?: boolean;\n  textInteractionEnabled?: boolean;\n  useSharedProcessPool?: boolean;\n  onContentProcessDidTerminate?: DirectEventHandler<WebViewNativeEvent>;\n  onCustomMenuSelection?: DirectEventHandler<WebViewCustomMenuSelectionEvent>;\n  onFileDownload?: DirectEventHandler<WebViewDownloadEvent>;\n  // eslint-disable-next-line @typescript-eslint/array-type\n  menuItems?: ReadonlyArray<Readonly<{label: string, key: string}>>;\n  suppressMenuItems?: Readonly<string>[];\n  // Workaround to watch if listener if defined\n  hasOnFileDownload?: boolean;\n  fraudulentWebsiteWarningEnabled?: boolean;\n  // !iOS only\n\n  allowFileAccessFromFileURLs?: boolean;\n  allowUniversalAccessFromFileURLs?: boolean;\n  applicationNameForUserAgent?: string;\n  basicAuthCredential?: Readonly<{\n    username: string;\n    password: string;\n  }>;\n  cacheEnabled?: boolean;\n  incognito?: boolean;\n  injectedJavaScript?: string;\n  injectedJavaScriptBeforeContentLoaded?: string;\n  injectedJavaScriptForMainFrameOnly?: boolean;\n  injectedJavaScriptBeforeContentLoadedForMainFrameOnly?: boolean;\n  javaScriptCanOpenWindowsAutomatically?: boolean;\n  javaScriptEnabled?: boolean;\n  webviewDebuggingEnabled?: boolean;\n  mediaPlaybackRequiresUserAction?: boolean;\n  messagingEnabled: boolean;\n  onLoadingError: DirectEventHandler<WebViewErrorEvent>;\n  onLoadingFinish: DirectEventHandler<WebViewNavigationEvent>;\n  onLoadingProgress: DirectEventHandler<WebViewNativeProgressEvent>;\n  onLoadingStart: DirectEventHandler<WebViewNavigationEvent>;\n  onHttpError: DirectEventHandler<WebViewHttpErrorEvent>;\n  onMessage: DirectEventHandler<WebViewMessageEvent>;\n  onOpenWindow?: DirectEventHandler<WebViewOpenWindowEvent>;\n  hasOnOpenWindowEvent?: boolean;\n  onScroll?: DirectEventHandler<ScrollEvent>;\n  onShouldStartLoadWithRequest: DirectEventHandler<ShouldStartLoadRequestEvent>;\n  showsHorizontalScrollIndicator?: boolean;\n  showsVerticalScrollIndicator?: boolean;\n  newSource: Readonly<{\n    uri?: string\n    method?: string;\n    body?: string;\n    // eslint-disable-next-line @typescript-eslint/array-type\n    headers?: ReadonlyArray<Readonly<{name: string, value: string}>>;\n    html?: string;\n    baseUrl?: string;\n  }>;\n  userAgent?: string;\n  injectedJavaScriptObject?: string;\n}\n\nexport interface NativeCommands {\n  goBack: (viewRef: React.ElementRef<HostComponent<NativeProps>> ) => void;\n  goForward: (viewRef: React.ElementRef<HostComponent<NativeProps>>) => void;\n  reload: (viewRef: React.ElementRef<HostComponent<NativeProps>>) => void;\n  stopLoading: (viewRef: React.ElementRef<HostComponent<NativeProps>>) => void;\n  injectJavaScript: (viewRef: React.ElementRef<HostComponent<NativeProps>>, javascript: string) => void;\n  requestFocus: (viewRef: React.ElementRef<HostComponent<NativeProps>>) => void;\n  postMessage: (viewRef: React.ElementRef<HostComponent<NativeProps>>, data: string) => void;\n  // Android Only\n  loadUrl: (viewRef: React.ElementRef<HostComponent<NativeProps>>, url: string) => void;\n  clearFormData: (viewRef: React.ElementRef<HostComponent<NativeProps>>) => void;\n  clearCache: (viewRef: React.ElementRef<HostComponent<NativeProps>>, includeDiskFiles: boolean) => void;\n  clearHistory: (viewRef: React.ElementRef<HostComponent<NativeProps>>) => void;\n  // !Android Only\n}\n\nexport const Commands = codegenNativeCommands<NativeCommands>({\n  supportedCommands: ['goBack', 'goForward', 'reload', 'stopLoading', 'injectJavaScript', 'requestFocus', 'postMessage', 'loadUrl', 'clearFormData', 'clearCache', 'clearHistory'],\n});\n\nexport default codegenNativeComponent<NativeProps>(\n  'RNCWebView'\n) as HostComponent<NativeProps>;","import React, { forwardRef, ReactElement, useCallback, useEffect, useImperativeHandle, useMemo, useRef } from 'react';\n\nimport {\n  Image,\n  View,\n  ImageSourcePropType,\n  HostComponent,\n} from 'react-native';\n\nimport BatchedBridge from 'react-native/Libraries/BatchedBridge/BatchedBridge';\n\nimport invariant from 'invariant';\n\nimport RNCWebView, {Commands, NativeProps} from \"./RNCWebViewNativeComponent\";\nimport RNCWebViewModule from \"./NativeRNCWebView\";\nimport {\n  defaultOriginWhitelist,\n  defaultRenderError,\n  defaultRenderLoading,\n  useWebViewLogic,\n} from './WebViewShared';\nimport {\n  AndroidWebViewProps, WebViewSourceUri,\n} from './WebViewTypes';\n\nimport styles from './WebView.styles';\n\nconst { resolveAssetSource } = Image;\n\n/**\n * A simple counter to uniquely identify WebView instances. Do not use this for anything else.\n */\nlet uniqueRef = 0;\n\nconst WebViewComponent = forwardRef<{}, AndroidWebViewProps>(({\n  overScrollMode = 'always',\n  javaScriptEnabled = true,\n  thirdPartyCookiesEnabled = true,\n  scalesPageToFit = true,\n  allowsFullscreenVideo = false,\n  allowFileAccess = false,\n  saveFormDataDisabled = false,\n  cacheEnabled = true,\n  androidLayerType = \"none\",\n  originWhitelist = defaultOriginWhitelist,\n  setSupportMultipleWindows = true,\n  setBuiltInZoomControls = true,\n  setDisplayZoomControls = false,\n  nestedScrollEnabled = false,\n  startInLoadingState,\n  onNavigationStateChange,\n  onLoadStart,\n  onError,\n  onLoad,\n  onLoadEnd,\n  onLoadProgress,\n  onHttpError: onHttpErrorProp,\n  onRenderProcessGone: onRenderProcessGoneProp,\n  onMessage: onMessageProp,\n  onOpenWindow: onOpenWindowProp,\n  renderLoading,\n  renderError,\n  style,\n  containerStyle,\n  source,\n  nativeConfig,\n  onShouldStartLoadWithRequest: onShouldStartLoadWithRequestProp,\n  injectedJavaScriptObject,\n  ...otherProps\n}, ref) => {\n  const messagingModuleName = useRef<string>(`WebViewMessageHandler${uniqueRef += 1}`).current;\n  const webViewRef = useRef<React.ComponentRef<HostComponent<NativeProps>> | null>(null);\n\n  const onShouldStartLoadWithRequestCallback = useCallback((shouldStart: boolean,\n    url: string,\n    lockIdentifier?: number) => {\n    if (lockIdentifier) {\n      RNCWebViewModule.shouldStartLoadWithLockIdentifier(shouldStart, lockIdentifier);\n    } else if (shouldStart && webViewRef.current) {\n      Commands.loadUrl(webViewRef.current, url);\n    }\n  }, []);\n\n  const { onLoadingStart, onShouldStartLoadWithRequest, onMessage, viewState, setViewState, lastErrorEvent, onHttpError, onLoadingError, onLoadingFinish, onLoadingProgress, onOpenWindow, onRenderProcessGone } = useWebViewLogic({\n    onNavigationStateChange,\n    onLoad,\n    onError,\n    onHttpErrorProp,\n    onLoadEnd,\n    onLoadProgress,\n    onLoadStart,\n    onRenderProcessGoneProp,\n    onMessageProp,\n    onOpenWindowProp,\n    startInLoadingState,\n    originWhitelist,\n    onShouldStartLoadWithRequestProp,\n    onShouldStartLoadWithRequestCallback,\n  })\n\n  useImperativeHandle(ref, () => ({\n    goForward: () => webViewRef.current && Commands.goForward(webViewRef.current),\n    goBack: () => webViewRef.current && Commands.goBack(webViewRef.current),\n    reload: () => {\n      setViewState(\n        'LOADING',\n      );\n      if (webViewRef.current) {\n        Commands.reload(webViewRef.current)\n      }\n    },\n    stopLoading: () => webViewRef.current && Commands.stopLoading(webViewRef.current),\n    postMessage: (data: string) => webViewRef.current && Commands.postMessage(webViewRef.current, data),\n    injectJavaScript: (data: string) => webViewRef.current && Commands.injectJavaScript(webViewRef.current, data),\n    requestFocus: () => webViewRef.current && Commands.requestFocus(webViewRef.current),\n    clearFormData: () => webViewRef.current && Commands.clearFormData(webViewRef.current),\n    clearCache: (includeDiskFiles: boolean) => webViewRef.current && Commands.clearCache(webViewRef.current, includeDiskFiles),\n    clearHistory: () => webViewRef.current && Commands.clearHistory(webViewRef.current),\n  }), [setViewState, webViewRef]);\n\n  const directEventCallbacks = useMemo(() => ({\n    onShouldStartLoadWithRequest,\n    onMessage,\n  }), [onMessage, onShouldStartLoadWithRequest]);\n\n  useEffect(() => {\n    BatchedBridge.registerCallableModule(messagingModuleName, directEventCallbacks);\n  }, [messagingModuleName, directEventCallbacks])\n\n  let otherView: ReactElement | undefined;\n  if (viewState === 'LOADING') {\n    otherView = (renderLoading || defaultRenderLoading)();\n  } else if (viewState === 'ERROR') {\n    invariant(lastErrorEvent != null, 'lastErrorEvent expected to be non-null');\n    if (lastErrorEvent) {\n      otherView = (renderError || defaultRenderError)(\n        lastErrorEvent.domain,\n        lastErrorEvent.code,\n        lastErrorEvent.description,\n      );\n    }\n  } else if (viewState !== 'IDLE') {\n    console.error(`RNCWebView invalid state encountered: ${viewState}`);\n  }\n\n  const webViewStyles = [styles.container, styles.webView, style];\n  const webViewContainerStyle = [styles.container, containerStyle];\n\n  if (typeof source !== \"number\" && source && 'method' in source) {\n    if (source.method === 'POST' && source.headers) {\n      console.warn(\n        'WebView: `source.headers` is not supported when using POST.',\n      );\n    } else if (source.method === 'GET' && source.body) {\n      console.warn('WebView: `source.body` is not supported when using GET.');\n    }\n  }\n\n  const NativeWebView\n    = (nativeConfig?.component as (typeof RNCWebView | undefined)) || RNCWebView;\n\n  const sourceResolved = resolveAssetSource(source as ImageSourcePropType)\n  const newSource = typeof sourceResolved === \"object\" ? Object.entries(sourceResolved as WebViewSourceUri).reduce((prev, [currKey, currValue]) => {\n    return {\n      ...prev,\n      [currKey]: currKey === \"headers\" && currValue && typeof currValue === \"object\" ? Object.entries(currValue).map(\n        ([key, value]) => {\n          return {\n            name: key,\n            value\n          }\n        }) : currValue\n    }\n  }, {}) : sourceResolved\n\n  const webView = <NativeWebView\n    key=\"webViewKey\"\n    {...otherProps}\n    messagingEnabled={typeof onMessageProp === 'function'}\n    messagingModuleName={messagingModuleName}\n\n    hasOnScroll={!!otherProps.onScroll}\n    onLoadingError={onLoadingError}\n    onLoadingFinish={onLoadingFinish}\n    onLoadingProgress={onLoadingProgress}\n    onLoadingStart={onLoadingStart}\n    onHttpError={onHttpError}\n    onRenderProcessGone={onRenderProcessGone}\n    onMessage={onMessage}\n    onOpenWindow={onOpenWindow}\n    hasOnOpenWindowEvent={onOpenWindowProp !== undefined}\n    onShouldStartLoadWithRequest={onShouldStartLoadWithRequest}\n    ref={webViewRef}\n    // TODO: find a better way to type this.\n    // @ts-expect-error source is old arch\n    source={sourceResolved}\n    newSource={newSource}\n    style={webViewStyles}\n    overScrollMode={overScrollMode}\n    javaScriptEnabled={javaScriptEnabled}\n    thirdPartyCookiesEnabled={thirdPartyCookiesEnabled}\n    scalesPageToFit={scalesPageToFit}\n    allowsFullscreenVideo={allowsFullscreenVideo}\n    allowFileAccess={allowFileAccess}\n    saveFormDataDisabled={saveFormDataDisabled}\n    cacheEnabled={cacheEnabled}\n    androidLayerType={androidLayerType}\n    setSupportMultipleWindows={setSupportMultipleWindows}\n    setBuiltInZoomControls={setBuiltInZoomControls}\n    setDisplayZoomControls={setDisplayZoomControls}\n    nestedScrollEnabled={nestedScrollEnabled}\n    injectedJavaScriptObject={JSON.stringify(injectedJavaScriptObject)}\n    {...nativeConfig?.props}\n  />\n\n  return (\n    <View style={webViewContainerStyle}>\n      {webView}\n      {otherView}\n    </View>\n  );\n});\n\n// native implementation should return \"true\" only for Android 5+\nconst { isFileUploadSupported } = RNCWebViewModule;\n\nconst WebView = Object.assign(WebViewComponent, { isFileUploadSupported });\n\nexport default WebView;\n","import { StyleSheet, ViewStyle, TextStyle } from 'react-native';\n\ninterface Styles {\n  container: ViewStyle;\n  errorText: TextStyle;\n  errorTextTitle: TextStyle;\n  loadingOrErrorView: ViewStyle;\n  webView: ViewStyle;\n  loadingProgressBar: ViewStyle;\n}\n\nconst styles = StyleSheet.create<Styles>({\n  container: {\n    flex: 1,\n    overflow: 'hidden',\n  },\n  loadingOrErrorView: {\n    position: 'absolute',\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '100%',\n    width: '100%',\n    backgroundColor: 'white'\n  },\n  loadingProgressBar: {\n    height: 20,\n  },\n  errorText: {\n    fontSize: 14,\n    textAlign: 'center',\n    marginBottom: 2,\n  },\n  errorTextTitle: {\n    fontSize: 15,\n    fontWeight: '500',\n    marginBottom: 10,\n  },\n  webView: {\n    backgroundColor: '#ffffff',\n  },\n});\n\nexport default styles;\n","import escapeStringRegexp from 'escape-string-regexp';\nimport React, { useCallback, useMemo, useRef, useState } from 'react';\nimport { Linking, View, ActivityIndicator, Text, Platform } from 'react-native';\nimport {\n  OnShouldStartLoadWithRequest,\n  ShouldStartLoadRequestEvent,\n  WebViewError,\n  WebViewErrorEvent,\n  WebViewHttpErrorEvent,\n  WebViewMessageEvent,\n  WebViewNavigation,\n  WebViewNavigationEvent,\n  WebViewOpenWindowEvent,\n  WebViewProgressEvent,\n  WebViewRenderProcessGoneEvent,\n  WebViewTerminatedEvent,\n} from './WebViewTypes';\nimport styles from './WebView.styles';\n\nconst defaultOriginWhitelist = ['http://*', 'https://*'] as const;\n\nconst extractOrigin = (url: string): string => {\n  const result = /^[A-Za-z][A-Za-z0-9+\\-.]+:(\\/\\/)?[^/]*/.exec(url);\n  return result === null ? '' : result[0];\n};\n\nconst originWhitelistToRegex = (originWhitelist: string): string =>\n  `^${escapeStringRegexp(originWhitelist).replace(/\\\\\\*/g, '.*')}`;\n\nconst passesWhitelist = (\n  compiledWhitelist: readonly string[],\n  url: string,\n) => {\n  const origin = extractOrigin(url);\n  return compiledWhitelist.some(x => new RegExp(x).test(origin));\n};\n\nconst compileWhitelist = (\n  originWhitelist: readonly string[],\n): readonly string[] =>\n  ['about:blank', ...(originWhitelist || [])].map(originWhitelistToRegex);\n\nconst createOnShouldStartLoadWithRequest = (\n  loadRequest: (\n    shouldStart: boolean,\n    url: string,\n    lockIdentifier: number,\n  ) => void,\n  originWhitelist: readonly string[],\n  onShouldStartLoadWithRequest?: OnShouldStartLoadWithRequest,\n) => {\n  return ({ nativeEvent }: ShouldStartLoadRequestEvent) => {\n    let shouldStart = true;\n    const { url, lockIdentifier } = nativeEvent;\n\n    if (!passesWhitelist(compileWhitelist(originWhitelist), url)) {\n      Linking.canOpenURL(url).then((supported) => {\n        if (supported) {\n          return Linking.openURL(url);\n        }\n        console.warn(`Can't open url: ${url}`);\n        return undefined;\n      }).catch(e => {\n        console.warn('Error opening URL: ', e);\n      });\n      shouldStart = false;\n    } else if (onShouldStartLoadWithRequest) {\n      shouldStart = onShouldStartLoadWithRequest(nativeEvent);\n    }\n\n    loadRequest(shouldStart, url, lockIdentifier);\n  };\n};\n\nconst defaultRenderLoading = () => (\n  <View style={styles.loadingOrErrorView}>\n    <ActivityIndicator />\n  </View>\n);\nconst defaultRenderError = (\n  errorDomain: string | undefined,\n  errorCode: number,\n  errorDesc: string,\n) => (\n  <View style={styles.loadingOrErrorView}>\n    <Text style={styles.errorTextTitle}>Error loading page</Text>\n    <Text style={styles.errorText}>{`Domain: ${errorDomain}`}</Text>\n    <Text style={styles.errorText}>{`Error Code: ${errorCode}`}</Text>\n    <Text style={styles.errorText}>{`Description: ${errorDesc}`}</Text>\n  </View>\n);\n\nexport {\n  defaultOriginWhitelist,\n  createOnShouldStartLoadWithRequest,\n  defaultRenderLoading,\n  defaultRenderError,\n};\n\nexport const useWebViewLogic = ({\n  startInLoadingState,\n  onNavigationStateChange,\n  onLoadStart,\n  onLoad,\n  onLoadProgress,\n  onLoadEnd,\n  onError,\n  onHttpErrorProp,\n  onMessageProp,\n  onOpenWindowProp,\n  onRenderProcessGoneProp,\n  onContentProcessDidTerminateProp,\n  originWhitelist,\n  onShouldStartLoadWithRequestProp,\n  onShouldStartLoadWithRequestCallback,\n}: {\n  startInLoadingState?: boolean\n  onNavigationStateChange?: (event: WebViewNavigation) => void;\n  onLoadStart?: (event: WebViewNavigationEvent) => void;\n  onLoad?: (event: WebViewNavigationEvent) => void;\n  onLoadProgress?: (event: WebViewProgressEvent) => void;\n  onLoadEnd?: (event: WebViewNavigationEvent | WebViewErrorEvent) => void;\n  onError?: (event: WebViewErrorEvent) => void;\n  onHttpErrorProp?: (event: WebViewHttpErrorEvent) => void;\n  onMessageProp?: (event: WebViewMessageEvent) => void;\n  onOpenWindowProp?: (event: WebViewOpenWindowEvent) => void;\n  onRenderProcessGoneProp?: (event: WebViewRenderProcessGoneEvent) => void;\n  onContentProcessDidTerminateProp?: (event: WebViewTerminatedEvent) => void;\n  originWhitelist: readonly string[];\n  onShouldStartLoadWithRequestProp?: OnShouldStartLoadWithRequest;\n  onShouldStartLoadWithRequestCallback: (shouldStart: boolean, url: string, lockIdentifier?: number | undefined) => void;\n}) => {\n\n  const [viewState, setViewState] = useState<'IDLE' | 'LOADING' | 'ERROR'>(startInLoadingState ? \"LOADING\" : \"IDLE\");\n  const [lastErrorEvent, setLastErrorEvent] = useState<WebViewError | null>(null);\n  const startUrl = useRef<string | null>(null)\n\n\n  const updateNavigationState = useCallback((event: WebViewNavigationEvent) => {\n    onNavigationStateChange?.(event.nativeEvent);\n  }, [onNavigationStateChange]);\n\n  const onLoadingStart = useCallback((event: WebViewNavigationEvent) => {\n    // Needed for android\n    startUrl.current = event.nativeEvent.url;\n    // !Needed for android\n\n    onLoadStart?.(event);\n    updateNavigationState(event);\n  }, [onLoadStart, updateNavigationState]);\n\n  const onLoadingError = useCallback((event: WebViewErrorEvent) => {\n    event.persist();\n    if (onError) {\n      onError(event);\n    } else {\n      console.warn('Encountered an error loading page', event.nativeEvent);\n    }\n    onLoadEnd?.(event);\n    if (event.isDefaultPrevented()) { return };\n    setViewState('ERROR');\n    setLastErrorEvent(event.nativeEvent);\n  }, [onError, onLoadEnd]);\n\n  const onHttpError = useCallback((event: WebViewHttpErrorEvent) => {\n    onHttpErrorProp?.(event);\n  }, [onHttpErrorProp]);\n\n  // Android Only\n  const onRenderProcessGone = useCallback((event: WebViewRenderProcessGoneEvent) => {\n    onRenderProcessGoneProp?.(event);\n  }, [onRenderProcessGoneProp]);\n  // !Android Only\n\n  // iOS Only\n  const onContentProcessDidTerminate = useCallback((event: WebViewTerminatedEvent) => {\n      onContentProcessDidTerminateProp?.(event);\n  }, [onContentProcessDidTerminateProp]);\n  // !iOS Only\n\n  const onLoadingFinish = useCallback((event: WebViewNavigationEvent) => {\n    onLoad?.(event);\n    onLoadEnd?.(event);\n    const { nativeEvent: { url } } = event;\n    // on Android, only if url === startUrl\n    if (Platform.OS !== \"android\" || url === startUrl.current) {\n      setViewState('IDLE');\n    }\n    // !on Android, only if url === startUrl\n    updateNavigationState(event);\n  }, [onLoad, onLoadEnd, updateNavigationState]);\n\n  const onMessage = useCallback((event: WebViewMessageEvent) => {\n    onMessageProp?.(event);\n  }, [onMessageProp]);\n\n  const onLoadingProgress = useCallback((event: WebViewProgressEvent) => {\n    const { nativeEvent: { progress } } = event;\n    // patch for Android only\n    if (Platform.OS === \"android\" && progress === 1) {\n      setViewState(prevViewState => prevViewState === 'LOADING' ? 'IDLE' : prevViewState);\n    }\n    // !patch for Android only\n    onLoadProgress?.(event);\n  }, [onLoadProgress]);\n\n  const onShouldStartLoadWithRequest = useMemo(() =>  createOnShouldStartLoadWithRequest(\n      onShouldStartLoadWithRequestCallback,\n      originWhitelist,\n      onShouldStartLoadWithRequestProp,\n    )\n  , [originWhitelist, onShouldStartLoadWithRequestProp, onShouldStartLoadWithRequestCallback])\n\n  const onOpenWindow = useCallback((event: WebViewOpenWindowEvent) => {\n    onOpenWindowProp?.(event);\n  }, [onOpenWindowProp]);\n\n  return {\n    onShouldStartLoadWithRequest,\n    onLoadingStart,\n    onLoadingProgress,\n    onLoadingError,\n    onLoadingFinish,\n    onHttpError,\n    onRenderProcessGone,\n    onContentProcessDidTerminate,\n    onMessage,\n    onOpenWindow,\n    viewState,\n    setViewState,\n    lastErrorEvent,\n  }\n};","import WebView from './WebView';\n\nexport { WebView };\nexport default WebView;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar invariant = function(condition, format, a, b, c, d, e, f) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  }\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error(\n        'Minified exception occurred; use the non-minified dev environment ' +\n        'for the full error message and additional helpful warnings.'\n      );\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(\n        format.replace(/%s/g, function() { return args[argIndex++]; })\n      );\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n};\n\nmodule.exports = invariant;\n","var toPropertyKey = require(\"./toPropertyKey.js\");\nfunction _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nmodule.exports = _defineProperty, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;"],"names":["matchOperatorsRegex","module","exports","string","TypeError","replace","_reactNative","require","TurboModuleRegistry","getEnforcing","_interopRequireDefault","NativeComponentRegistry","ConditionallyIgnoredEventHandlers","dispatchCommand","__INTERNAL_VIEW_CONFIG","uiViewClassName","directEventTypes","topContentSizeChange","registrationName","topRenderProcessGone","topContentProcessDidTerminate","topCustomMenuSelection","topFileDownload","topLoadingError","topLoadingFinish","topLoadingProgress","topLoadingStart","topHttpError","topMessage","topOpenWindow","topScroll","topShouldStartLoadWithRequest","validAttributes","Object","assign","allowFileAccess","allowsProtectedMedia","allowsFullscreenVideo","androidLayerType","cacheMode","domStorageEnabled","downloadingMessage","forceDarkOn","geolocationEnabled","lackPermissionToDownloadMessage","messagingModuleName","minimumFontSize","mixedContentMode","nestedScrollEnabled","overScrollMode","saveFormDataDisabled","scalesPageToFit","setBuiltInZoomControls","setDisplayZoomControls","setSupportMultipleWindows","textZoom","thirdPartyCookiesEnabled","hasOnScroll","allowingReadAccessToURL","allowsBackForwardNavigationGestures","allowsInlineMediaPlayback","allowsAirPlayForMediaPlayback","allowsLinkPreview","automaticallyAdjustContentInsets","autoManageStatusBarEnabled","bounces","contentInset","contentInsetAdjustmentBehavior","contentMode","dataDetectorTypes","decelerationRate","directionalLockEnabled","enableApplePay","hideKeyboardAccessoryView","keyboardDisplayRequiresUserAction","limitsNavigationsToAppBoundDomains","mediaCapturePermissionGrantType","pagingEnabled","pullToRefreshEnabled","scrollEnabled","sharedCookiesEnabled","textInteractionEnabled","useSharedProcessPool","menuItems","suppressMenuItems","hasOnFileDownload","fraudulentWebsiteWarningEnabled","allowFileAccessFromFileURLs","allowUniversalAccessFromFileURLs","applicationNameForUserAgent","basicAuthCredential","cacheEnabled","incognito","injectedJavaScript","injectedJavaScriptBeforeContentLoaded","injectedJavaScriptForMainFrameOnly","injectedJavaScriptBeforeContentLoadedForMainFrameOnly","javaScriptCanOpenWindowsAutomatically","javaScriptEnabled","webviewDebuggingEnabled","mediaPlaybackRequiresUserAction","messagingEnabled","hasOnOpenWindowEvent","showsHorizontalScrollIndicator","showsVerticalScrollIndicator","newSource","userAgent","injectedJavaScriptObject","onContentSizeChange","onRenderProcessGone","onContentProcessDidTerminate","onCustomMenuSelection","onFileDownload","onLoadingError","onLoadingFinish","onLoadingProgress","onLoadingStart","onHttpError","onMessage","onOpenWindow","onScroll","onShouldStartLoadWithRequest","get","goBack","ref","goForward","reload","stopLoading","injectJavaScript","javascript","requestFocus","postMessage","data","loadUrl","url","clearFormData","clearCache","includeDiskFiles","clearHistory","_react","_interopRequireWildcard","_BatchedBridge","_invariant","_RNCWebViewNativeComponent","_NativeRNCWebView","_WebViewShared","_WebView","_jsxRuntime","_excluded","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","n","__proto__","a","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","resolveAssetSource","Image","uniqueRef","WebViewComponent","forwardRef","_ref","_ref$overScrollMode","_ref$javaScriptEnable","_ref$thirdPartyCookie","_ref$scalesPageToFit","_ref$allowsFullscreen","_ref$allowFileAccess","_ref$saveFormDataDisa","_ref$cacheEnabled","_ref$androidLayerType","_ref$originWhitelist","originWhitelist","defaultOriginWhitelist","_ref$setSupportMultip","_ref$setBuiltInZoomCo","_ref$setDisplayZoomCo","_ref$nestedScrollEnab","startInLoadingState","onNavigationStateChange","onLoadStart","onError","onLoad","onLoadEnd","onLoadProgress","onHttpErrorProp","onRenderProcessGoneProp","onMessageProp","onOpenWindowProp","renderLoading","renderError","style","containerStyle","source","nativeConfig","onShouldStartLoadWithRequestProp","otherProps","_objectWithoutProperties2","useRef","current","webViewRef","onShouldStartLoadWithRequestCallback","useCallback","shouldStart","lockIdentifier","RNCWebViewModule","shouldStartLoadWithLockIdentifier","Commands","_useWebViewLogic","useWebViewLogic","viewState","setViewState","lastErrorEvent","useImperativeHandle","otherView","directEventCallbacks","useMemo","useEffect","BatchedBridge","registerCallableModule","defaultRenderLoading","invariant","defaultRenderError","domain","code","description","console","error","webViewStyles","styles","container","webView","webViewContainerStyle","method","headers","warn","body","NativeWebView","component","RNCWebView","sourceResolved","entries","reduce","prev","_ref2","_ref3","_slicedToArray2","currKey","currValue","_defineProperty2","map","_ref4","_ref5","name","value","jsx","undefined","JSON","stringify","props","jsxs","View","children","isFileUploadSupported","WebView","StyleSheet","create","flex","overflow","loadingOrErrorView","position","justifyContent","alignItems","height","width","backgroundColor","loadingProgressBar","errorText","fontSize","textAlign","marginBottom","errorTextTitle","fontWeight","_escapeStringRegexp","originWhitelistToRegex","escapeStringRegexp","createOnShouldStartLoadWithRequest","loadRequest","nativeEvent","compiledWhitelist","origin","result","exec","extractOrigin","some","x","RegExp","test","passesWhitelist","concat","_toConsumableArray2","compileWhitelist","Linking","canOpenURL","then","supported","openURL","catch","ActivityIndicator","errorDomain","errorCode","errorDesc","Text","onContentProcessDidTerminateProp","_useState","useState","_useState2","_useState3","_useState4","setLastErrorEvent","startUrl","updateNavigationState","event","persist","isDefaultPrevented","Platform","OS","progress","prevViewState","condition","format","b","c","d","f","Error","args","argIndex","framesToPop","toPropertyKey","obj","key","enumerable","configurable","writable"],"sourceRoot":""}